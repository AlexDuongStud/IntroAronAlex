   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"UTIL1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UTIL1_strcpy,"ax",%progbits
  21              		.align	2
  22              		.global	UTIL1_strcpy
  23              		.thumb
  24              		.thumb_func
  26              	UTIL1_strcpy:
  27              	.LFB0:
  28              		.file 1 "../Generated_Code/UTIL1.c"
   1:../Generated_Code/UTIL1.c **** /* ###################################################################
   2:../Generated_Code/UTIL1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/UTIL1.c **** **     Filename    : UTIL1.c
   4:../Generated_Code/UTIL1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/UTIL1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/UTIL1.c **** **     Component   : Utility
   7:../Generated_Code/UTIL1.c **** **     Version     : Component 01.158, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/UTIL1.c **** **     Repository  : My Components
   9:../Generated_Code/UTIL1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/UTIL1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/UTIL1.c **** **     Abstract    :
  12:../Generated_Code/UTIL1.c **** **          Contains various utility functions.
  13:../Generated_Code/UTIL1.c **** **     Settings    :
  14:../Generated_Code/UTIL1.c **** **          Component name                                 : UTIL1
  15:../Generated_Code/UTIL1.c **** **          SDK                                            : MCUC1
  16:../Generated_Code/UTIL1.c **** **     Contents    :
  17:../Generated_Code/UTIL1.c **** **         strcpy                  - void UTIL1_strcpy(uint8_t *dst, size_t dstSize, const unsigned
  18:../Generated_Code/UTIL1.c **** **         strcat                  - void UTIL1_strcat(uint8_t *dst, size_t dstSize, const unsigned
  19:../Generated_Code/UTIL1.c **** **         strcatPad               - void UTIL1_strcatPad(uint8_t *dst, size_t dstSize, const unsig
  20:../Generated_Code/UTIL1.c **** **         chcat                   - void UTIL1_chcat(uint8_t *dst, size_t dstSize, uint8_t ch);
  21:../Generated_Code/UTIL1.c **** **         Num8sToStr              - void UTIL1_Num8sToStr(uint8_t *dst, size_t dstSize, signed cha
  22:../Generated_Code/UTIL1.c **** **         Num8uToStr              - void UTIL1_Num8uToStr(uint8_t *dst, size_t dstSize, uint8_t va
  23:../Generated_Code/UTIL1.c **** **         Num16sToStr             - void UTIL1_Num16sToStr(uint8_t *dst, size_t dstSize, int16_t v
  24:../Generated_Code/UTIL1.c **** **         Num16uToStr             - void UTIL1_Num16uToStr(uint8_t *dst, size_t dstSize, uint16_t 
  25:../Generated_Code/UTIL1.c **** **         Num32uToStr             - void UTIL1_Num32uToStr(uint8_t *dst, size_t dstSize, uint32_t 
  26:../Generated_Code/UTIL1.c **** **         Num32sToStr             - void UTIL1_Num32sToStr(uint8_t *dst, size_t dstSize, int32_t v
  27:../Generated_Code/UTIL1.c **** **         NumFloatToStr           - void UTIL1_NumFloatToStr(uint8_t *dst, size_t dstSize, float v
  28:../Generated_Code/UTIL1.c **** **         Num16sToStrFormatted    - void UTIL1_Num16sToStrFormatted(uint8_t *dst, size_t dstSize, 
  29:../Generated_Code/UTIL1.c **** **         Num16uToStrFormatted    - void UTIL1_Num16uToStrFormatted(uint8_t *dst, size_t dstSize, 
  30:../Generated_Code/UTIL1.c **** **         Num32uToStrFormatted    - void UTIL1_Num32uToStrFormatted(uint8_t *dst, size_t dstSize, 
  31:../Generated_Code/UTIL1.c **** **         Num32sToStrFormatted    - void UTIL1_Num32sToStrFormatted(uint8_t *dst, size_t dstSize, 
  32:../Generated_Code/UTIL1.c **** **         strcatNum8u             - void UTIL1_strcatNum8u(uint8_t *dst, size_t dstSize, uint8_t v
  33:../Generated_Code/UTIL1.c **** **         strcatNum8s             - void UTIL1_strcatNum8s(uint8_t *dst, size_t dstSize, signed ch
  34:../Generated_Code/UTIL1.c **** **         strcatNum16u            - void UTIL1_strcatNum16u(uint8_t *dst, size_t dstSize, uint16_t
  35:../Generated_Code/UTIL1.c **** **         strcatNum16s            - void UTIL1_strcatNum16s(uint8_t *dst, size_t dstSize, int16_t 
  36:../Generated_Code/UTIL1.c **** **         strcatNum32u            - void UTIL1_strcatNum32u(uint8_t *dst, size_t dstSize, uint32_t
  37:../Generated_Code/UTIL1.c **** **         strcatNum32s            - void UTIL1_strcatNum32s(uint8_t *dst, size_t dstSize, int32_t 
  38:../Generated_Code/UTIL1.c **** **         strcatNum16uFormatted   - void UTIL1_strcatNum16uFormatted(uint8_t *dst, size_t dstSize,
  39:../Generated_Code/UTIL1.c **** **         strcatNum16sFormatted   - void UTIL1_strcatNum16sFormatted(uint8_t *dst, size_t dstSize,
  40:../Generated_Code/UTIL1.c **** **         strcatNum32uFormatted   - void UTIL1_strcatNum32uFormatted(uint8_t *dst, size_t dstSize,
  41:../Generated_Code/UTIL1.c **** **         strcatNum32sFormatted   - void UTIL1_strcatNum32sFormatted(uint8_t *dst, size_t dstSize,
  42:../Generated_Code/UTIL1.c **** **         strcatNum8Hex           - void UTIL1_strcatNum8Hex(uint8_t *dst, size_t dstSize, uint8_t
  43:../Generated_Code/UTIL1.c **** **         strcatNum16Hex          - void UTIL1_strcatNum16Hex(uint8_t *dst, size_t dstSize, uint16
  44:../Generated_Code/UTIL1.c **** **         strcatNum24Hex          - void UTIL1_strcatNum24Hex(uint8_t *dst, size_t dstSize, uint32
  45:../Generated_Code/UTIL1.c **** **         strcatNum32Hex          - void UTIL1_strcatNum32Hex(uint8_t *dst, size_t dstSize, uint32
  46:../Generated_Code/UTIL1.c **** **         strcatNum32sDotValue100 - void UTIL1_strcatNum32sDotValue100(uint8_t *dst, size_t dstSiz
  47:../Generated_Code/UTIL1.c **** **         strcatNumFloat          - void UTIL1_strcatNumFloat(uint8_t *dst, size_t dstSize, float 
  48:../Generated_Code/UTIL1.c **** **         IsLeapYear              - bool UTIL1_IsLeapYear(uint16_t year);
  49:../Generated_Code/UTIL1.c **** **         WeekDay                 - uint8_t UTIL1_WeekDay(uint16_t year, uint8_t month, uint8_t da
  50:../Generated_Code/UTIL1.c **** **         ReadEscapedName         - uint8_t UTIL1_ReadEscapedName(const unsigned char *filename, u
  51:../Generated_Code/UTIL1.c **** **         xatoi                   - uint8_t UTIL1_xatoi(const unsigned char **str, int32_t *res);
  52:../Generated_Code/UTIL1.c **** **         ScanDate                - uint8_t UTIL1_ScanDate(const unsigned char **str, uint8_t *day
  53:../Generated_Code/UTIL1.c **** **         ScanTime                - uint8_t UTIL1_ScanTime(const unsigned char **str, uint8_t *hou
  54:../Generated_Code/UTIL1.c **** **         ScanDecimal8uNumber     - uint8_t UTIL1_ScanDecimal8uNumber(const unsigned char **str, u
  55:../Generated_Code/UTIL1.c **** **         ScanDecimal8sNumber     - uint8_t UTIL1_ScanDecimal8sNumber(const unsigned char **str, s
  56:../Generated_Code/UTIL1.c **** **         ScanDecimal16uNumber    - uint8_t UTIL1_ScanDecimal16uNumber(const unsigned char **str, 
  57:../Generated_Code/UTIL1.c **** **         ScanDecimal16sNumber    - uint8_t UTIL1_ScanDecimal16sNumber(const unsigned char **str, 
  58:../Generated_Code/UTIL1.c **** **         ScanDecimal32uNumber    - uint8_t UTIL1_ScanDecimal32uNumber(const unsigned char **str, 
  59:../Generated_Code/UTIL1.c **** **         ScanDecimal32sNumber    - uint8_t UTIL1_ScanDecimal32sNumber(const unsigned char **str, 
  60:../Generated_Code/UTIL1.c **** **         ScanDecimal32sDotNumber - uint8_t UTIL1_ScanDecimal32sDotNumber(const unsigned char **st
  61:../Generated_Code/UTIL1.c **** **         ScanHex8uNumber         - uint8_t UTIL1_ScanHex8uNumber(const unsigned char **str, uint8
  62:../Generated_Code/UTIL1.c **** **         ScanHex8uNumberNoPrefix - uint8_t UTIL1_ScanHex8uNumberNoPrefix(const unsigned char **st
  63:../Generated_Code/UTIL1.c **** **         ScanHex16uNumber        - uint8_t UTIL1_ScanHex16uNumber(const unsigned char **str, uint
  64:../Generated_Code/UTIL1.c **** **         ScanHex32uNumber        - uint8_t UTIL1_ScanHex32uNumber(const unsigned char **str, uint
  65:../Generated_Code/UTIL1.c **** **         ScanSeparatedNumbers    - uint8_t UTIL1_ScanSeparatedNumbers(const unsigned char **str, 
  66:../Generated_Code/UTIL1.c **** **         ScanDoubleQuotedString  - uint8_t UTIL1_ScanDoubleQuotedString(const uint8_t **cmd, uint
  67:../Generated_Code/UTIL1.c **** **         strcmp                  - int16_t UTIL1_strcmp(const char *, const char *);
  68:../Generated_Code/UTIL1.c **** **         strncmp                 - int16_t UTIL1_strncmp(const char *, const char *, size_t size)
  69:../Generated_Code/UTIL1.c **** **         strFind                 - int16_t UTIL1_strFind(uint8_t *str, uint8_t *subStr);
  70:../Generated_Code/UTIL1.c **** **         strtailcmp              - uint8_t UTIL1_strtailcmp(const uint8_t *str, const uint8_t *ta
  71:../Generated_Code/UTIL1.c **** **         strlen                  - uint16_t UTIL1_strlen(const char *);
  72:../Generated_Code/UTIL1.c **** **         strCutTail              - uint8_t UTIL1_strCutTail(uint8_t *str, uint8_t *tail);
  73:../Generated_Code/UTIL1.c **** **         GetValue16LE            - uint16_t UTIL1_GetValue16LE(uint8_t *dataP);
  74:../Generated_Code/UTIL1.c **** **         GetValue24LE            - uint32_t UTIL1_GetValue24LE(uint8_t *dataP);
  75:../Generated_Code/UTIL1.c **** **         GetValue32LE            - uint32_t UTIL1_GetValue32LE(uint8_t *dataP);
  76:../Generated_Code/UTIL1.c **** **         SetValue16LE            - void UTIL1_SetValue16LE(uint16_t data, uint8_t *dataP);
  77:../Generated_Code/UTIL1.c **** **         SetValue24LE            - void UTIL1_SetValue24LE(uint32_t data, uint8_t *dataP);
  78:../Generated_Code/UTIL1.c **** **         SetValue32LE            - void UTIL1_SetValue32LE(uint32_t data, uint8_t *dataP);
  79:../Generated_Code/UTIL1.c **** **         map                     - int32_t UTIL1_map(int32_t x, int32_t in_min, int32_t in_max, i
  80:../Generated_Code/UTIL1.c **** **         map64                   - int64_t UTIL1_map64(int64_t x, int64_t in_min, int64_t in_max,
  81:../Generated_Code/UTIL1.c **** **         constrain               - int32_t UTIL1_constrain(int32_t val, int32_t min, int32_t max)
  82:../Generated_Code/UTIL1.c **** **         random                  - int32_t UTIL1_random(int32_t min, int32_t max);
  83:../Generated_Code/UTIL1.c **** **         randomSetSeed           - void UTIL1_randomSetSeed(unsigned int seed);
  84:../Generated_Code/UTIL1.c **** **         Deinit                  - void UTIL1_Deinit(void);
  85:../Generated_Code/UTIL1.c **** **         Init                    - void UTIL1_Init(void);
  86:../Generated_Code/UTIL1.c **** **
  87:../Generated_Code/UTIL1.c **** **     * Copyright (c) 2014-2018, Erich Styger
  88:../Generated_Code/UTIL1.c **** **      * Web:         https://mcuoneclipse.com
  89:../Generated_Code/UTIL1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  90:../Generated_Code/UTIL1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  91:../Generated_Code/UTIL1.c **** **      * All rights reserved.
  92:../Generated_Code/UTIL1.c **** **      *
  93:../Generated_Code/UTIL1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  94:../Generated_Code/UTIL1.c **** **      * are permitted provided that the following conditions are met:
  95:../Generated_Code/UTIL1.c **** **      *
  96:../Generated_Code/UTIL1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  97:../Generated_Code/UTIL1.c **** **      *   of conditions and the following disclaimer.
  98:../Generated_Code/UTIL1.c **** **      *
  99:../Generated_Code/UTIL1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
 100:../Generated_Code/UTIL1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
 101:../Generated_Code/UTIL1.c **** **      *   other materials provided with the distribution.
 102:../Generated_Code/UTIL1.c **** **      *
 103:../Generated_Code/UTIL1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 104:../Generated_Code/UTIL1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 105:../Generated_Code/UTIL1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 106:../Generated_Code/UTIL1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 107:../Generated_Code/UTIL1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 108:../Generated_Code/UTIL1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 109:../Generated_Code/UTIL1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 110:../Generated_Code/UTIL1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 111:../Generated_Code/UTIL1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 112:../Generated_Code/UTIL1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 113:../Generated_Code/UTIL1.c **** ** ###################################################################*/
 114:../Generated_Code/UTIL1.c **** /*!
 115:../Generated_Code/UTIL1.c **** ** @file UTIL1.c
 116:../Generated_Code/UTIL1.c **** ** @version 01.00
 117:../Generated_Code/UTIL1.c **** ** @brief
 118:../Generated_Code/UTIL1.c **** **          Contains various utility functions.
 119:../Generated_Code/UTIL1.c **** */         
 120:../Generated_Code/UTIL1.c **** /*!
 121:../Generated_Code/UTIL1.c **** **  @addtogroup UTIL1_module UTIL1 module documentation
 122:../Generated_Code/UTIL1.c **** **  @{
 123:../Generated_Code/UTIL1.c **** */         
 124:../Generated_Code/UTIL1.c **** 
 125:../Generated_Code/UTIL1.c **** /* MODULE UTIL1. */
 126:../Generated_Code/UTIL1.c **** 
 127:../Generated_Code/UTIL1.c **** #include "UTIL1.h"
 128:../Generated_Code/UTIL1.c **** #include <stdlib.h> /* for rand() */
 129:../Generated_Code/UTIL1.c **** 
 130:../Generated_Code/UTIL1.c **** /* Internal method prototypes */
 131:../Generated_Code/UTIL1.c **** static void ShiftRightAndFill(uint8_t *dst, uint8_t fill, uint8_t nofFill);
 132:../Generated_Code/UTIL1.c **** 
 133:../Generated_Code/UTIL1.c **** /*
 134:../Generated_Code/UTIL1.c **** ** ===================================================================
 135:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcpy (component Utility)
 136:../Generated_Code/UTIL1.c **** **     Description :
 137:../Generated_Code/UTIL1.c **** **         Same as normal strcpy, but safe as it does not write beyond
 138:../Generated_Code/UTIL1.c **** **         the buffer.
 139:../Generated_Code/UTIL1.c **** **     Parameters  :
 140:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 141:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 142:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 143:../Generated_Code/UTIL1.c **** **                           bytes).
 144:../Generated_Code/UTIL1.c **** **       * src             - Pointer to source string.
 145:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 146:../Generated_Code/UTIL1.c **** ** ===================================================================
 147:../Generated_Code/UTIL1.c **** */
 148:../Generated_Code/UTIL1.c **** /*!
 149:../Generated_Code/UTIL1.c ****   \brief copy the string src into dst. It performs the same task as strncpy, except
 150:../Generated_Code/UTIL1.c ****      - always terminates the result string.
 151:../Generated_Code/UTIL1.c ****      - does not zero out the remaining part in dst.
 152:../Generated_Code/UTIL1.c ****      Note: dstSize is the size of dst INCLUDING zero byte.
 153:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 154:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 155:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 156:../Generated_Code/UTIL1.c ****   \param[in] src The source string to copy
 157:../Generated_Code/UTIL1.c **** */
 158:../Generated_Code/UTIL1.c **** void UTIL1_strcpy(uint8_t *dst, size_t dstSize, const unsigned char *src)
 159:../Generated_Code/UTIL1.c **** {
  29              		.loc 1 159 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 B960     		str	r1, [r7, #8]
  43 000a 7A60     		str	r2, [r7, #4]
 160:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
  44              		.loc 1 160 0
  45 000c BB68     		ldr	r3, [r7, #8]
  46 000e 013B     		subs	r3, r3, #1
  47 0010 BB60     		str	r3, [r7, #8]
 161:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
  48              		.loc 1 161 0
  49 0012 0AE0     		b	.L2
  50              	.L4:
 162:../Generated_Code/UTIL1.c ****     *dst++ = *src++;
  51              		.loc 1 162 0
  52 0014 FB68     		ldr	r3, [r7, #12]
  53 0016 5A1C     		adds	r2, r3, #1
  54 0018 FA60     		str	r2, [r7, #12]
  55 001a 7A68     		ldr	r2, [r7, #4]
  56 001c 511C     		adds	r1, r2, #1
  57 001e 7960     		str	r1, [r7, #4]
  58 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  59 0022 1A70     		strb	r2, [r3]
 163:../Generated_Code/UTIL1.c ****     dstSize--;
  60              		.loc 1 163 0
  61 0024 BB68     		ldr	r3, [r7, #8]
  62 0026 013B     		subs	r3, r3, #1
  63 0028 BB60     		str	r3, [r7, #8]
  64              	.L2:
 161:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
  65              		.loc 1 161 0 discriminator 1
  66 002a BB68     		ldr	r3, [r7, #8]
  67 002c 002B     		cmp	r3, #0
  68 002e 03D0     		beq	.L3
 161:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
  69              		.loc 1 161 0 is_stmt 0 discriminator 2
  70 0030 7B68     		ldr	r3, [r7, #4]
  71 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72 0034 002B     		cmp	r3, #0
  73 0036 EDD1     		bne	.L4
  74              	.L3:
 164:../Generated_Code/UTIL1.c ****   }
 165:../Generated_Code/UTIL1.c ****   *dst = '\0';
  75              		.loc 1 165 0 is_stmt 1
  76 0038 FB68     		ldr	r3, [r7, #12]
  77 003a 0022     		movs	r2, #0
  78 003c 1A70     		strb	r2, [r3]
 166:../Generated_Code/UTIL1.c **** }
  79              		.loc 1 166 0
  80 003e 1437     		adds	r7, r7, #20
  81 0040 BD46     		mov	sp, r7
  82              		@ sp needed
  83 0042 5DF8047B 		ldr	r7, [sp], #4
  84 0046 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE0:
  88              		.section	.text.UTIL1_strcat,"ax",%progbits
  89              		.align	2
  90              		.global	UTIL1_strcat
  91              		.thumb
  92              		.thumb_func
  94              	UTIL1_strcat:
  95              	.LFB1:
 167:../Generated_Code/UTIL1.c **** 
 168:../Generated_Code/UTIL1.c **** /*
 169:../Generated_Code/UTIL1.c **** ** ===================================================================
 170:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcat (component Utility)
 171:../Generated_Code/UTIL1.c **** **     Description :
 172:../Generated_Code/UTIL1.c **** **         Same as normal strcat, but safe as it does not write beyond
 173:../Generated_Code/UTIL1.c **** **         the buffer.
 174:../Generated_Code/UTIL1.c **** **     Parameters  :
 175:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 176:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 177:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 178:../Generated_Code/UTIL1.c **** **                           bytes).
 179:../Generated_Code/UTIL1.c **** **       * src             - Pointer to source string.
 180:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 181:../Generated_Code/UTIL1.c **** ** ===================================================================
 182:../Generated_Code/UTIL1.c **** */
 183:../Generated_Code/UTIL1.c **** /*!
 184:../Generated_Code/UTIL1.c ****   \brief Concat the string src into dst. Always terminates the result string.
 185:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 186:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 187:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 188:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 189:../Generated_Code/UTIL1.c ****   \param[in] src The source string to add
 190:../Generated_Code/UTIL1.c ****   */
 191:../Generated_Code/UTIL1.c **** void UTIL1_strcat(uint8_t *dst, size_t dstSize, const unsigned char *src)
 192:../Generated_Code/UTIL1.c **** {
  96              		.loc 1 192 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 16
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 85B0     		sub	sp, sp, #20
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 108 0006 F860     		str	r0, [r7, #12]
 109 0008 B960     		str	r1, [r7, #8]
 110 000a 7A60     		str	r2, [r7, #4]
 193:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 111              		.loc 1 193 0
 112 000c BB68     		ldr	r3, [r7, #8]
 113 000e 013B     		subs	r3, r3, #1
 114 0010 BB60     		str	r3, [r7, #8]
 194:../Generated_Code/UTIL1.c ****   /* point to the end of the source */
 195:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 115              		.loc 1 195 0
 116 0012 05E0     		b	.L6
 117              	.L8:
 196:../Generated_Code/UTIL1.c ****     dst++;
 118              		.loc 1 196 0
 119 0014 FB68     		ldr	r3, [r7, #12]
 120 0016 0133     		adds	r3, r3, #1
 121 0018 FB60     		str	r3, [r7, #12]
 197:../Generated_Code/UTIL1.c ****     dstSize--;
 122              		.loc 1 197 0
 123 001a BB68     		ldr	r3, [r7, #8]
 124 001c 013B     		subs	r3, r3, #1
 125 001e BB60     		str	r3, [r7, #8]
 126              	.L6:
 195:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 127              		.loc 1 195 0 discriminator 1
 128 0020 BB68     		ldr	r3, [r7, #8]
 129 0022 002B     		cmp	r3, #0
 130 0024 03D0     		beq	.L7
 195:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 131              		.loc 1 195 0 is_stmt 0 discriminator 2
 132 0026 FB68     		ldr	r3, [r7, #12]
 133 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134 002a 002B     		cmp	r3, #0
 135 002c F2D1     		bne	.L8
 136              	.L7:
 198:../Generated_Code/UTIL1.c ****   }
 199:../Generated_Code/UTIL1.c ****   /* copy the src in the destination */
 200:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
 137              		.loc 1 200 0 is_stmt 1
 138 002e 0AE0     		b	.L9
 139              	.L11:
 201:../Generated_Code/UTIL1.c ****     *dst++ = *src++;
 140              		.loc 1 201 0
 141 0030 FB68     		ldr	r3, [r7, #12]
 142 0032 5A1C     		adds	r2, r3, #1
 143 0034 FA60     		str	r2, [r7, #12]
 144 0036 7A68     		ldr	r2, [r7, #4]
 145 0038 511C     		adds	r1, r2, #1
 146 003a 7960     		str	r1, [r7, #4]
 147 003c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 148 003e 1A70     		strb	r2, [r3]
 202:../Generated_Code/UTIL1.c ****     dstSize--;
 149              		.loc 1 202 0
 150 0040 BB68     		ldr	r3, [r7, #8]
 151 0042 013B     		subs	r3, r3, #1
 152 0044 BB60     		str	r3, [r7, #8]
 153              	.L9:
 200:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
 154              		.loc 1 200 0 discriminator 1
 155 0046 BB68     		ldr	r3, [r7, #8]
 156 0048 002B     		cmp	r3, #0
 157 004a 03D0     		beq	.L10
 200:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *src != '\0') {
 158              		.loc 1 200 0 is_stmt 0 discriminator 2
 159 004c 7B68     		ldr	r3, [r7, #4]
 160 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 161 0050 002B     		cmp	r3, #0
 162 0052 EDD1     		bne	.L11
 163              	.L10:
 203:../Generated_Code/UTIL1.c ****   }
 204:../Generated_Code/UTIL1.c ****   /* terminate the string */
 205:../Generated_Code/UTIL1.c ****   *dst = '\0';
 164              		.loc 1 205 0 is_stmt 1
 165 0054 FB68     		ldr	r3, [r7, #12]
 166 0056 0022     		movs	r2, #0
 167 0058 1A70     		strb	r2, [r3]
 206:../Generated_Code/UTIL1.c **** }
 168              		.loc 1 206 0
 169 005a 1437     		adds	r7, r7, #20
 170 005c BD46     		mov	sp, r7
 171              		@ sp needed
 172 005e 5DF8047B 		ldr	r7, [sp], #4
 173 0062 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE1:
 177              		.section	.text.UTIL1_chcat,"ax",%progbits
 178              		.align	2
 179              		.global	UTIL1_chcat
 180              		.thumb
 181              		.thumb_func
 183              	UTIL1_chcat:
 184              	.LFB2:
 207:../Generated_Code/UTIL1.c **** 
 208:../Generated_Code/UTIL1.c **** /*
 209:../Generated_Code/UTIL1.c **** ** ===================================================================
 210:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_chcat (component Utility)
 211:../Generated_Code/UTIL1.c **** **     Description :
 212:../Generated_Code/UTIL1.c **** **         Adds a single character to a zero byte terminated string
 213:../Generated_Code/UTIL1.c **** **         buffer. It cares about buffer overflow.
 214:../Generated_Code/UTIL1.c **** **     Parameters  :
 215:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 216:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 217:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 218:../Generated_Code/UTIL1.c **** **                           bytes).
 219:../Generated_Code/UTIL1.c **** **         ch              - character to append
 220:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 221:../Generated_Code/UTIL1.c **** ** ===================================================================
 222:../Generated_Code/UTIL1.c **** */
 223:../Generated_Code/UTIL1.c **** void UTIL1_chcat(uint8_t *dst, size_t dstSize, uint8_t ch)
 224:../Generated_Code/UTIL1.c **** {
 185              		.loc 1 224 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 16
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 0000 80B4     		push	{r7}
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 85B0     		sub	sp, sp, #20
 194              		.cfi_def_cfa_offset 24
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 F860     		str	r0, [r7, #12]
 198 0008 B960     		str	r1, [r7, #8]
 199 000a 1346     		mov	r3, r2
 200 000c FB71     		strb	r3, [r7, #7]
 225:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 201              		.loc 1 225 0
 202 000e BB68     		ldr	r3, [r7, #8]
 203 0010 013B     		subs	r3, r3, #1
 204 0012 BB60     		str	r3, [r7, #8]
 226:../Generated_Code/UTIL1.c ****   /* point to the end of the source */
 227:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 205              		.loc 1 227 0
 206 0014 05E0     		b	.L13
 207              	.L15:
 228:../Generated_Code/UTIL1.c ****     dst++;
 208              		.loc 1 228 0
 209 0016 FB68     		ldr	r3, [r7, #12]
 210 0018 0133     		adds	r3, r3, #1
 211 001a FB60     		str	r3, [r7, #12]
 229:../Generated_Code/UTIL1.c ****     dstSize--;
 212              		.loc 1 229 0
 213 001c BB68     		ldr	r3, [r7, #8]
 214 001e 013B     		subs	r3, r3, #1
 215 0020 BB60     		str	r3, [r7, #8]
 216              	.L13:
 227:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 217              		.loc 1 227 0 discriminator 1
 218 0022 BB68     		ldr	r3, [r7, #8]
 219 0024 002B     		cmp	r3, #0
 220 0026 03D0     		beq	.L14
 227:../Generated_Code/UTIL1.c ****   while (dstSize > 0 && *dst != '\0') {
 221              		.loc 1 227 0 is_stmt 0 discriminator 2
 222 0028 FB68     		ldr	r3, [r7, #12]
 223 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 002c 002B     		cmp	r3, #0
 225 002e F2D1     		bne	.L15
 226              	.L14:
 230:../Generated_Code/UTIL1.c ****   }
 231:../Generated_Code/UTIL1.c ****   /* copy the ch in the destination */
 232:../Generated_Code/UTIL1.c ****   if (dstSize > 0) {
 227              		.loc 1 232 0 is_stmt 1
 228 0030 BB68     		ldr	r3, [r7, #8]
 229 0032 002B     		cmp	r3, #0
 230 0034 04D0     		beq	.L16
 233:../Generated_Code/UTIL1.c ****     *dst++ = ch;
 231              		.loc 1 233 0
 232 0036 FB68     		ldr	r3, [r7, #12]
 233 0038 5A1C     		adds	r2, r3, #1
 234 003a FA60     		str	r2, [r7, #12]
 235 003c FA79     		ldrb	r2, [r7, #7]
 236 003e 1A70     		strb	r2, [r3]
 237              	.L16:
 234:../Generated_Code/UTIL1.c ****   }
 235:../Generated_Code/UTIL1.c ****   /* terminate the string */
 236:../Generated_Code/UTIL1.c ****   *dst = '\0';
 238              		.loc 1 236 0
 239 0040 FB68     		ldr	r3, [r7, #12]
 240 0042 0022     		movs	r2, #0
 241 0044 1A70     		strb	r2, [r3]
 237:../Generated_Code/UTIL1.c **** }
 242              		.loc 1 237 0
 243 0046 1437     		adds	r7, r7, #20
 244 0048 BD46     		mov	sp, r7
 245              		@ sp needed
 246 004a 5DF8047B 		ldr	r7, [sp], #4
 247 004e 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE2:
 251              		.section	.text.UTIL1_Num8uToStr,"ax",%progbits
 252              		.align	2
 253              		.global	UTIL1_Num8uToStr
 254              		.thumb
 255              		.thumb_func
 257              	UTIL1_Num8uToStr:
 258              	.LFB3:
 238:../Generated_Code/UTIL1.c **** 
 239:../Generated_Code/UTIL1.c **** /*
 240:../Generated_Code/UTIL1.c **** ** ===================================================================
 241:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num8uToStr (component Utility)
 242:../Generated_Code/UTIL1.c **** **     Description :
 243:../Generated_Code/UTIL1.c **** **         Converts an unsigned 8bit value into a string.
 244:../Generated_Code/UTIL1.c **** **     Parameters  :
 245:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 246:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 247:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 248:../Generated_Code/UTIL1.c **** **                           bytes).
 249:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
 250:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 251:../Generated_Code/UTIL1.c **** ** ===================================================================
 252:../Generated_Code/UTIL1.c **** */
 253:../Generated_Code/UTIL1.c **** /*!
 254:../Generated_Code/UTIL1.c ****   \brief Converts an 8bit unsigned number into a string.
 255:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
 256:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
 257:../Generated_Code/UTIL1.c ****   \param[in] val 8bit unsigned number to convert.
 258:../Generated_Code/UTIL1.c ****  */
 259:../Generated_Code/UTIL1.c **** void UTIL1_Num8uToStr(uint8_t *dst, size_t dstSize, uint8_t val)
 260:../Generated_Code/UTIL1.c **** {
 259              		.loc 1 260 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 16
 262              		@ frame_needed = 1, uses_anonymous_args = 0
 263 0000 80B5     		push	{r7, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 84B0     		sub	sp, sp, #16
 268              		.cfi_def_cfa_offset 24
 269 0004 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 271 0006 F860     		str	r0, [r7, #12]
 272 0008 B960     		str	r1, [r7, #8]
 273 000a 1346     		mov	r3, r2
 274 000c FB71     		strb	r3, [r7, #7]
 261:../Generated_Code/UTIL1.c ****   UTIL1_Num16uToStr(dst, dstSize, (uint16_t)val);
 275              		.loc 1 261 0
 276 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 277 0010 9BB2     		uxth	r3, r3
 278 0012 F868     		ldr	r0, [r7, #12]
 279 0014 B968     		ldr	r1, [r7, #8]
 280 0016 1A46     		mov	r2, r3
 281 0018 FFF7FEFF 		bl	UTIL1_Num16uToStr
 262:../Generated_Code/UTIL1.c **** }
 282              		.loc 1 262 0
 283 001c 1037     		adds	r7, r7, #16
 284 001e BD46     		mov	sp, r7
 285              		@ sp needed
 286 0020 80BD     		pop	{r7, pc}
 287              		.cfi_endproc
 288              	.LFE3:
 290 0022 00BF     		.section	.text.UTIL1_Num8sToStr,"ax",%progbits
 291              		.align	2
 292              		.global	UTIL1_Num8sToStr
 293              		.thumb
 294              		.thumb_func
 296              	UTIL1_Num8sToStr:
 297              	.LFB4:
 263:../Generated_Code/UTIL1.c **** 
 264:../Generated_Code/UTIL1.c **** /*
 265:../Generated_Code/UTIL1.c **** ** ===================================================================
 266:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num8sToStr (component Utility)
 267:../Generated_Code/UTIL1.c **** **     Description :
 268:../Generated_Code/UTIL1.c **** **         Converts a signed 8bit value into a string.
 269:../Generated_Code/UTIL1.c **** **     Parameters  :
 270:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 271:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 272:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 273:../Generated_Code/UTIL1.c **** **                           bytes).
 274:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
 275:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 276:../Generated_Code/UTIL1.c **** ** ===================================================================
 277:../Generated_Code/UTIL1.c **** */
 278:../Generated_Code/UTIL1.c **** /*!
 279:../Generated_Code/UTIL1.c ****   \brief Converts an 8bit signed number into a string.
 280:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
 281:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
 282:../Generated_Code/UTIL1.c ****   \param[in] val 8bit signed number to convert.
 283:../Generated_Code/UTIL1.c ****  */
 284:../Generated_Code/UTIL1.c **** void UTIL1_Num8sToStr(uint8_t *dst, size_t dstSize, signed char val)
 285:../Generated_Code/UTIL1.c **** {
 298              		.loc 1 285 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 16
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 84B0     		sub	sp, sp, #16
 307              		.cfi_def_cfa_offset 24
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 F860     		str	r0, [r7, #12]
 311 0008 B960     		str	r1, [r7, #8]
 312 000a 1346     		mov	r3, r2
 313 000c FB71     		strb	r3, [r7, #7]
 286:../Generated_Code/UTIL1.c ****   UTIL1_Num16sToStr(dst, dstSize, (int16_t)val);
 314              		.loc 1 286 0
 315 000e 97F90730 		ldrsb	r3, [r7, #7]
 316 0012 9BB2     		uxth	r3, r3
 317 0014 1BB2     		sxth	r3, r3
 318 0016 F868     		ldr	r0, [r7, #12]
 319 0018 B968     		ldr	r1, [r7, #8]
 320 001a 1A46     		mov	r2, r3
 321 001c FFF7FEFF 		bl	UTIL1_Num16sToStr
 287:../Generated_Code/UTIL1.c **** }
 322              		.loc 1 287 0
 323 0020 1037     		adds	r7, r7, #16
 324 0022 BD46     		mov	sp, r7
 325              		@ sp needed
 326 0024 80BD     		pop	{r7, pc}
 327              		.cfi_endproc
 328              	.LFE4:
 330 0026 00BF     		.section	.text.UTIL1_Num16uToStr,"ax",%progbits
 331              		.align	2
 332              		.global	UTIL1_Num16uToStr
 333              		.thumb
 334              		.thumb_func
 336              	UTIL1_Num16uToStr:
 337              	.LFB5:
 288:../Generated_Code/UTIL1.c **** 
 289:../Generated_Code/UTIL1.c **** /*
 290:../Generated_Code/UTIL1.c **** ** ===================================================================
 291:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num16uToStr (component Utility)
 292:../Generated_Code/UTIL1.c **** **     Description :
 293:../Generated_Code/UTIL1.c **** **         Converts a signed 16bit value into a string.
 294:../Generated_Code/UTIL1.c **** **     Parameters  :
 295:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 296:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 297:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 298:../Generated_Code/UTIL1.c **** **                           bytes).
 299:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
 300:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 301:../Generated_Code/UTIL1.c **** ** ===================================================================
 302:../Generated_Code/UTIL1.c **** */
 303:../Generated_Code/UTIL1.c **** /*!
 304:../Generated_Code/UTIL1.c ****   \brief Converts a 16bit unsigned number into a string.
 305:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
 306:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
 307:../Generated_Code/UTIL1.c ****   \param[in] val 16bit unsigned number to convert.
 308:../Generated_Code/UTIL1.c ****  */
 309:../Generated_Code/UTIL1.c **** void UTIL1_Num16uToStr(uint8_t *dst, size_t dstSize, uint16_t val)
 310:../Generated_Code/UTIL1.c **** {
 338              		.loc 1 310 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 32
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 89B0     		sub	sp, sp, #36
 347              		.cfi_def_cfa_offset 40
 348 0004 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 350 0006 F860     		str	r0, [r7, #12]
 351 0008 B960     		str	r1, [r7, #8]
 352 000a 1346     		mov	r3, r2
 353 000c FB80     		strh	r3, [r7, #6]	@ movhi
 311:../Generated_Code/UTIL1.c ****   unsigned char *ptr = ((unsigned char *)dst);
 354              		.loc 1 311 0
 355 000e FB68     		ldr	r3, [r7, #12]
 356 0010 BB61     		str	r3, [r7, #24]
 312:../Generated_Code/UTIL1.c ****   unsigned char i=0, j;
 357              		.loc 1 312 0
 358 0012 0023     		movs	r3, #0
 359 0014 FB77     		strb	r3, [r7, #31]
 313:../Generated_Code/UTIL1.c ****   unsigned char tmp;
 314:../Generated_Code/UTIL1.c **** 
 315:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 360              		.loc 1 315 0
 361 0016 BB68     		ldr	r3, [r7, #8]
 362 0018 013B     		subs	r3, r3, #1
 363 001a BB60     		str	r3, [r7, #8]
 316:../Generated_Code/UTIL1.c ****   if (val == 0 && dstSize > 0){
 364              		.loc 1 316 0
 365 001c FB88     		ldrh	r3, [r7, #6]
 366 001e 002B     		cmp	r3, #0
 367 0020 0DD1     		bne	.L20
 368              		.loc 1 316 0 is_stmt 0 discriminator 1
 369 0022 BB68     		ldr	r3, [r7, #8]
 370 0024 002B     		cmp	r3, #0
 371 0026 0AD0     		beq	.L20
 317:../Generated_Code/UTIL1.c ****     ptr[i++] = '0';
 372              		.loc 1 317 0 is_stmt 1
 373 0028 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 374 002a 5A1C     		adds	r2, r3, #1
 375 002c FA77     		strb	r2, [r7, #31]
 376 002e BA69     		ldr	r2, [r7, #24]
 377 0030 1344     		add	r3, r3, r2
 378 0032 3022     		movs	r2, #48
 379 0034 1A70     		strb	r2, [r3]
 318:../Generated_Code/UTIL1.c ****     dstSize--;
 380              		.loc 1 318 0
 381 0036 BB68     		ldr	r3, [r7, #8]
 382 0038 013B     		subs	r3, r3, #1
 383 003a BB60     		str	r3, [r7, #8]
 319:../Generated_Code/UTIL1.c ****   }
 320:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 384              		.loc 1 320 0
 385 003c 1DE0     		b	.L21
 386              	.L20:
 387 003e 1CE0     		b	.L21
 388              	.L23:
 321:../Generated_Code/UTIL1.c ****     ptr[i++] = (unsigned char)((val % 10) + '0');
 389              		.loc 1 321 0
 390 0040 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 391 0042 5A1C     		adds	r2, r3, #1
 392 0044 FA77     		strb	r2, [r7, #31]
 393 0046 BA69     		ldr	r2, [r7, #24]
 394 0048 D018     		adds	r0, r2, r3
 395 004a FA88     		ldrh	r2, [r7, #6]
 396 004c 254B     		ldr	r3, .L26
 397 004e A3FB0213 		umull	r1, r3, r3, r2
 398 0052 D908     		lsrs	r1, r3, #3
 399 0054 0B46     		mov	r3, r1
 400 0056 9B00     		lsls	r3, r3, #2
 401 0058 0B44     		add	r3, r3, r1
 402 005a 5B00     		lsls	r3, r3, #1
 403 005c D31A     		subs	r3, r2, r3
 404 005e 9BB2     		uxth	r3, r3
 405 0060 DBB2     		uxtb	r3, r3
 406 0062 3033     		adds	r3, r3, #48
 407 0064 DBB2     		uxtb	r3, r3
 408 0066 0370     		strb	r3, [r0]
 322:../Generated_Code/UTIL1.c ****     dstSize--;
 409              		.loc 1 322 0
 410 0068 BB68     		ldr	r3, [r7, #8]
 411 006a 013B     		subs	r3, r3, #1
 412 006c BB60     		str	r3, [r7, #8]
 323:../Generated_Code/UTIL1.c ****     val /= 10;
 413              		.loc 1 323 0
 414 006e FA88     		ldrh	r2, [r7, #6]
 415 0070 1C4B     		ldr	r3, .L26
 416 0072 A3FB0213 		umull	r1, r3, r3, r2
 417 0076 DB08     		lsrs	r3, r3, #3
 418 0078 FB80     		strh	r3, [r7, #6]	@ movhi
 419              	.L21:
 320:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 420              		.loc 1 320 0 discriminator 1
 421 007a FB88     		ldrh	r3, [r7, #6]
 422 007c 002B     		cmp	r3, #0
 423 007e 02D0     		beq	.L22
 320:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 424              		.loc 1 320 0 is_stmt 0 discriminator 2
 425 0080 BB68     		ldr	r3, [r7, #8]
 426 0082 002B     		cmp	r3, #0
 427 0084 DCD1     		bne	.L23
 428              	.L22:
 324:../Generated_Code/UTIL1.c ****   }
 325:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 429              		.loc 1 325 0 is_stmt 1
 430 0086 0023     		movs	r3, #0
 431 0088 BB77     		strb	r3, [r7, #30]
 432 008a 1AE0     		b	.L24
 433              	.L25:
 326:../Generated_Code/UTIL1.c ****     tmp = ptr[j];
 434              		.loc 1 326 0 discriminator 2
 435 008c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 436 008e BA69     		ldr	r2, [r7, #24]
 437 0090 1344     		add	r3, r3, r2
 438 0092 1B78     		ldrb	r3, [r3]
 439 0094 FB75     		strb	r3, [r7, #23]
 327:../Generated_Code/UTIL1.c ****     ptr[j] = ptr[(i-j)-1];
 440              		.loc 1 327 0 discriminator 2
 441 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 442 0098 BA69     		ldr	r2, [r7, #24]
 443 009a 1344     		add	r3, r3, r2
 444 009c F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 445 009e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 446 00a0 8A1A     		subs	r2, r1, r2
 447 00a2 013A     		subs	r2, r2, #1
 448 00a4 B969     		ldr	r1, [r7, #24]
 449 00a6 0A44     		add	r2, r2, r1
 450 00a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 451 00aa 1A70     		strb	r2, [r3]
 328:../Generated_Code/UTIL1.c ****     ptr[(i-j)-1] = tmp;
 452              		.loc 1 328 0 discriminator 2
 453 00ac FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 454 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 455 00b0 D31A     		subs	r3, r2, r3
 456 00b2 013B     		subs	r3, r3, #1
 457 00b4 BA69     		ldr	r2, [r7, #24]
 458 00b6 1344     		add	r3, r3, r2
 459 00b8 FA7D     		ldrb	r2, [r7, #23]
 460 00ba 1A70     		strb	r2, [r3]
 325:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 461              		.loc 1 325 0 discriminator 2
 462 00bc BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 463 00be 0133     		adds	r3, r3, #1
 464 00c0 BB77     		strb	r3, [r7, #30]
 465              	.L24:
 325:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 466              		.loc 1 325 0 is_stmt 0 discriminator 1
 467 00c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 468 00c4 5B08     		lsrs	r3, r3, #1
 469 00c6 DBB2     		uxtb	r3, r3
 470 00c8 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 471 00ca 9A42     		cmp	r2, r3
 472 00cc DED3     		bcc	.L25
 329:../Generated_Code/UTIL1.c ****   }
 330:../Generated_Code/UTIL1.c ****   ptr[i] = '\0';
 473              		.loc 1 330 0 is_stmt 1
 474 00ce FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 475 00d0 BA69     		ldr	r2, [r7, #24]
 476 00d2 1344     		add	r3, r3, r2
 477 00d4 0022     		movs	r2, #0
 478 00d6 1A70     		strb	r2, [r3]
 331:../Generated_Code/UTIL1.c **** }
 479              		.loc 1 331 0
 480 00d8 2437     		adds	r7, r7, #36
 481 00da BD46     		mov	sp, r7
 482              		@ sp needed
 483 00dc 5DF8047B 		ldr	r7, [sp], #4
 484 00e0 7047     		bx	lr
 485              	.L27:
 486 00e2 00BF     		.align	2
 487              	.L26:
 488 00e4 CDCCCCCC 		.word	-858993459
 489              		.cfi_endproc
 490              	.LFE5:
 492              		.section	.rodata
 493              		.align	2
 494              	.LC0:
 495 0000 2D333237 		.ascii	"-32768\000"
 495      363800
 496              		.section	.text.UTIL1_Num16sToStr,"ax",%progbits
 497              		.align	2
 498              		.global	UTIL1_Num16sToStr
 499              		.thumb
 500              		.thumb_func
 502              	UTIL1_Num16sToStr:
 503              	.LFB6:
 332:../Generated_Code/UTIL1.c **** 
 333:../Generated_Code/UTIL1.c **** /*
 334:../Generated_Code/UTIL1.c **** ** ===================================================================
 335:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num16sToStr (component Utility)
 336:../Generated_Code/UTIL1.c **** **     Description :
 337:../Generated_Code/UTIL1.c **** **         Converts a signed 16bit value into a string.
 338:../Generated_Code/UTIL1.c **** **     Parameters  :
 339:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 340:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 341:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 342:../Generated_Code/UTIL1.c **** **                           bytes).
 343:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
 344:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 345:../Generated_Code/UTIL1.c **** ** ===================================================================
 346:../Generated_Code/UTIL1.c **** */
 347:../Generated_Code/UTIL1.c **** /*!
 348:../Generated_Code/UTIL1.c ****   \brief Converts a 16bit signed number into a string.
 349:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
 350:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
 351:../Generated_Code/UTIL1.c ****   \param[in] val 16bit signed number to convert.
 352:../Generated_Code/UTIL1.c ****  */
 353:../Generated_Code/UTIL1.c **** void UTIL1_Num16sToStr(uint8_t *dst, size_t dstSize, int16_t val)
 354:../Generated_Code/UTIL1.c **** {
 504              		.loc 1 354 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 32
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508 0000 80B5     		push	{r7, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 88B0     		sub	sp, sp, #32
 513              		.cfi_def_cfa_offset 40
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 516 0006 F860     		str	r0, [r7, #12]
 517 0008 B960     		str	r1, [r7, #8]
 518 000a 1346     		mov	r3, r2
 519 000c FB80     		strh	r3, [r7, #6]	@ movhi
 355:../Generated_Code/UTIL1.c ****   unsigned char *ptr =  ((unsigned char *)dst);
 520              		.loc 1 355 0
 521 000e FB68     		ldr	r3, [r7, #12]
 522 0010 BB61     		str	r3, [r7, #24]
 356:../Generated_Code/UTIL1.c ****   unsigned char i=0, j;
 523              		.loc 1 356 0
 524 0012 0023     		movs	r3, #0
 525 0014 FB77     		strb	r3, [r7, #31]
 357:../Generated_Code/UTIL1.c ****   unsigned char tmp;
 358:../Generated_Code/UTIL1.c ****   unsigned char sign = (unsigned char)(val < 0);
 526              		.loc 1 358 0
 527 0016 FB88     		ldrh	r3, [r7, #6]
 528 0018 DB0B     		lsrs	r3, r3, #15
 529 001a DBB2     		uxtb	r3, r3
 530 001c FB75     		strb	r3, [r7, #23]
 359:../Generated_Code/UTIL1.c **** 
 360:../Generated_Code/UTIL1.c ****   if (val==(int16_t)(0x8000)) { /* special case 0x8000/-32768: prevent overflow below. */
 531              		.loc 1 360 0
 532 001e B7F90630 		ldrsh	r3, [r7, #6]
 533 0022 13F5004F 		cmn	r3, #32768
 534 0026 05D1     		bne	.L29
 361:../Generated_Code/UTIL1.c ****     UTIL1_strcpy(dst, dstSize, (unsigned char*)"-32768");
 535              		.loc 1 361 0
 536 0028 F868     		ldr	r0, [r7, #12]
 537 002a B968     		ldr	r1, [r7, #8]
 538 002c 414A     		ldr	r2, .L39
 539 002e FFF7FEFF 		bl	UTIL1_strcpy
 362:../Generated_Code/UTIL1.c ****     return;
 540              		.loc 1 362 0
 541 0032 7CE0     		b	.L28
 542              	.L29:
 363:../Generated_Code/UTIL1.c ****   }
 364:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 543              		.loc 1 364 0
 544 0034 BB68     		ldr	r3, [r7, #8]
 545 0036 013B     		subs	r3, r3, #1
 546 0038 BB60     		str	r3, [r7, #8]
 365:../Generated_Code/UTIL1.c ****   if (sign) {
 547              		.loc 1 365 0
 548 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 549 003c 002B     		cmp	r3, #0
 550 003e 03D0     		beq	.L31
 366:../Generated_Code/UTIL1.c ****     val = (int16_t)(-val);
 551              		.loc 1 366 0
 552 0040 FB88     		ldrh	r3, [r7, #6]
 553 0042 5B42     		negs	r3, r3
 554 0044 9BB2     		uxth	r3, r3
 555 0046 FB80     		strh	r3, [r7, #6]	@ movhi
 556              	.L31:
 367:../Generated_Code/UTIL1.c ****   }
 368:../Generated_Code/UTIL1.c ****   if (val == 0 && dstSize > 0){
 557              		.loc 1 368 0
 558 0048 B7F90630 		ldrsh	r3, [r7, #6]
 559 004c 002B     		cmp	r3, #0
 560 004e 0DD1     		bne	.L32
 561              		.loc 1 368 0 is_stmt 0 discriminator 1
 562 0050 BB68     		ldr	r3, [r7, #8]
 563 0052 002B     		cmp	r3, #0
 564 0054 0AD0     		beq	.L32
 369:../Generated_Code/UTIL1.c ****     ptr[i++] = '0';
 565              		.loc 1 369 0 is_stmt 1
 566 0056 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 567 0058 5A1C     		adds	r2, r3, #1
 568 005a FA77     		strb	r2, [r7, #31]
 569 005c BA69     		ldr	r2, [r7, #24]
 570 005e 1344     		add	r3, r3, r2
 571 0060 3022     		movs	r2, #48
 572 0062 1A70     		strb	r2, [r3]
 370:../Generated_Code/UTIL1.c ****     dstSize--;
 573              		.loc 1 370 0
 574 0064 BB68     		ldr	r3, [r7, #8]
 575 0066 013B     		subs	r3, r3, #1
 576 0068 BB60     		str	r3, [r7, #8]
 371:../Generated_Code/UTIL1.c ****   }
 372:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 577              		.loc 1 372 0
 578 006a 23E0     		b	.L33
 579              	.L32:
 580 006c 22E0     		b	.L33
 581              	.L35:
 373:../Generated_Code/UTIL1.c ****     ptr[i++] = (unsigned char)((val % 10) + '0');
 582              		.loc 1 373 0
 583 006e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 584 0070 5A1C     		adds	r2, r3, #1
 585 0072 FA77     		strb	r2, [r7, #31]
 586 0074 BA69     		ldr	r2, [r7, #24]
 587 0076 D018     		adds	r0, r2, r3
 588 0078 B7F90620 		ldrsh	r2, [r7, #6]
 589 007c 2E4B     		ldr	r3, .L39+4
 590 007e 83FB0213 		smull	r1, r3, r3, r2
 591 0082 9910     		asrs	r1, r3, #2
 592 0084 D317     		asrs	r3, r2, #31
 593 0086 C91A     		subs	r1, r1, r3
 594 0088 0B46     		mov	r3, r1
 595 008a 9B00     		lsls	r3, r3, #2
 596 008c 0B44     		add	r3, r3, r1
 597 008e 5B00     		lsls	r3, r3, #1
 598 0090 D31A     		subs	r3, r2, r3
 599 0092 9BB2     		uxth	r3, r3
 600 0094 DBB2     		uxtb	r3, r3
 601 0096 3033     		adds	r3, r3, #48
 602 0098 DBB2     		uxtb	r3, r3
 603 009a 0370     		strb	r3, [r0]
 374:../Generated_Code/UTIL1.c ****     dstSize--;
 604              		.loc 1 374 0
 605 009c BB68     		ldr	r3, [r7, #8]
 606 009e 013B     		subs	r3, r3, #1
 607 00a0 BB60     		str	r3, [r7, #8]
 375:../Generated_Code/UTIL1.c ****     val /= 10;
 608              		.loc 1 375 0
 609 00a2 B7F90630 		ldrsh	r3, [r7, #6]
 610 00a6 244A     		ldr	r2, .L39+4
 611 00a8 82FB0312 		smull	r1, r2, r2, r3
 612 00ac 9210     		asrs	r2, r2, #2
 613 00ae DB17     		asrs	r3, r3, #31
 614 00b0 D31A     		subs	r3, r2, r3
 615 00b2 FB80     		strh	r3, [r7, #6]	@ movhi
 616              	.L33:
 372:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 617              		.loc 1 372 0 discriminator 1
 618 00b4 B7F90630 		ldrsh	r3, [r7, #6]
 619 00b8 002B     		cmp	r3, #0
 620 00ba 02DD     		ble	.L34
 372:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 621              		.loc 1 372 0 is_stmt 0 discriminator 2
 622 00bc BB68     		ldr	r3, [r7, #8]
 623 00be 002B     		cmp	r3, #0
 624 00c0 D5D1     		bne	.L35
 625              	.L34:
 376:../Generated_Code/UTIL1.c ****   }
 377:../Generated_Code/UTIL1.c ****   if (sign && dstSize > 0){
 626              		.loc 1 377 0 is_stmt 1
 627 00c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 628 00c4 002B     		cmp	r3, #0
 629 00c6 09D0     		beq	.L36
 630              		.loc 1 377 0 is_stmt 0 discriminator 1
 631 00c8 BB68     		ldr	r3, [r7, #8]
 632 00ca 002B     		cmp	r3, #0
 633 00cc 06D0     		beq	.L36
 378:../Generated_Code/UTIL1.c ****     ptr[i++] = '-';
 634              		.loc 1 378 0 is_stmt 1
 635 00ce FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 636 00d0 5A1C     		adds	r2, r3, #1
 637 00d2 FA77     		strb	r2, [r7, #31]
 638 00d4 BA69     		ldr	r2, [r7, #24]
 639 00d6 1344     		add	r3, r3, r2
 640 00d8 2D22     		movs	r2, #45
 641 00da 1A70     		strb	r2, [r3]
 642              	.L36:
 379:../Generated_Code/UTIL1.c ****   }
 380:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 643              		.loc 1 380 0
 644 00dc 0023     		movs	r3, #0
 645 00de BB77     		strb	r3, [r7, #30]
 646 00e0 1AE0     		b	.L37
 647              	.L38:
 381:../Generated_Code/UTIL1.c ****     tmp = ptr[j];
 648              		.loc 1 381 0 discriminator 2
 649 00e2 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 650 00e4 BA69     		ldr	r2, [r7, #24]
 651 00e6 1344     		add	r3, r3, r2
 652 00e8 1B78     		ldrb	r3, [r3]
 653 00ea BB75     		strb	r3, [r7, #22]
 382:../Generated_Code/UTIL1.c ****     ptr[j] = ptr[(i-j)-1];
 654              		.loc 1 382 0 discriminator 2
 655 00ec BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 656 00ee BA69     		ldr	r2, [r7, #24]
 657 00f0 1344     		add	r3, r3, r2
 658 00f2 F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 659 00f4 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 660 00f6 8A1A     		subs	r2, r1, r2
 661 00f8 013A     		subs	r2, r2, #1
 662 00fa B969     		ldr	r1, [r7, #24]
 663 00fc 0A44     		add	r2, r2, r1
 664 00fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 665 0100 1A70     		strb	r2, [r3]
 383:../Generated_Code/UTIL1.c ****     ptr[(i-j)-1] = tmp;
 666              		.loc 1 383 0 discriminator 2
 667 0102 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 668 0104 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 669 0106 D31A     		subs	r3, r2, r3
 670 0108 013B     		subs	r3, r3, #1
 671 010a BA69     		ldr	r2, [r7, #24]
 672 010c 1344     		add	r3, r3, r2
 673 010e BA7D     		ldrb	r2, [r7, #22]
 674 0110 1A70     		strb	r2, [r3]
 380:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 675              		.loc 1 380 0 discriminator 2
 676 0112 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 677 0114 0133     		adds	r3, r3, #1
 678 0116 BB77     		strb	r3, [r7, #30]
 679              	.L37:
 380:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 680              		.loc 1 380 0 is_stmt 0 discriminator 1
 681 0118 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 682 011a 5B08     		lsrs	r3, r3, #1
 683 011c DBB2     		uxtb	r3, r3
 684 011e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 685 0120 9A42     		cmp	r2, r3
 686 0122 DED3     		bcc	.L38
 384:../Generated_Code/UTIL1.c ****   }
 385:../Generated_Code/UTIL1.c ****   ptr[i] = '\0';
 687              		.loc 1 385 0 is_stmt 1
 688 0124 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 689 0126 BA69     		ldr	r2, [r7, #24]
 690 0128 1344     		add	r3, r3, r2
 691 012a 0022     		movs	r2, #0
 692 012c 1A70     		strb	r2, [r3]
 693              	.L28:
 386:../Generated_Code/UTIL1.c **** }
 694              		.loc 1 386 0
 695 012e 2037     		adds	r7, r7, #32
 696 0130 BD46     		mov	sp, r7
 697              		@ sp needed
 698 0132 80BD     		pop	{r7, pc}
 699              	.L40:
 700              		.align	2
 701              	.L39:
 702 0134 00000000 		.word	.LC0
 703 0138 67666666 		.word	1717986919
 704              		.cfi_endproc
 705              	.LFE6:
 707              		.section	.text.ShiftRightAndFill,"ax",%progbits
 708              		.align	2
 709              		.thumb
 710              		.thumb_func
 712              	ShiftRightAndFill:
 713              	.LFB7:
 387:../Generated_Code/UTIL1.c **** 
 388:../Generated_Code/UTIL1.c **** /*
 389:../Generated_Code/UTIL1.c **** ** ===================================================================
 390:../Generated_Code/UTIL1.c **** **     Method      :  ShiftRightAndFill (component Utility)
 391:../Generated_Code/UTIL1.c **** **
 392:../Generated_Code/UTIL1.c **** **     Description :
 393:../Generated_Code/UTIL1.c **** **         Moves the content of a string to the right and fills the space 
 394:../Generated_Code/UTIL1.c **** **         on the left side with a pattern
 395:../Generated_Code/UTIL1.c **** **         This method is internal. It is used by Processor Expert only.
 396:../Generated_Code/UTIL1.c **** ** ===================================================================
 397:../Generated_Code/UTIL1.c **** */
 398:../Generated_Code/UTIL1.c **** static void ShiftRightAndFill(uint8_t *dst, uint8_t fill, uint8_t nofFill)
 399:../Generated_Code/UTIL1.c **** {
 714              		.loc 1 399 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 16
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0002 85B0     		sub	sp, sp, #20
 723              		.cfi_def_cfa_offset 24
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 726 0006 7860     		str	r0, [r7, #4]
 727 0008 1346     		mov	r3, r2
 728 000a 0A46     		mov	r2, r1
 729 000c FA70     		strb	r2, [r7, #3]
 730 000e BB70     		strb	r3, [r7, #2]
 400:../Generated_Code/UTIL1.c ****   signed char i, j;
 401:../Generated_Code/UTIL1.c **** 
 402:../Generated_Code/UTIL1.c ****   j = 0;
 731              		.loc 1 402 0
 732 0010 0023     		movs	r3, #0
 733 0012 BB73     		strb	r3, [r7, #14]
 403:../Generated_Code/UTIL1.c ****   while(dst[j] != '\0') {
 734              		.loc 1 403 0
 735 0014 02E0     		b	.L42
 736              	.L43:
 404:../Generated_Code/UTIL1.c ****     j++;
 737              		.loc 1 404 0
 738 0016 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 739 0018 0133     		adds	r3, r3, #1
 740 001a BB73     		strb	r3, [r7, #14]
 741              	.L42:
 403:../Generated_Code/UTIL1.c ****   while(dst[j] != '\0') {
 742              		.loc 1 403 0 discriminator 1
 743 001c 97F90E30 		ldrsb	r3, [r7, #14]
 744 0020 7A68     		ldr	r2, [r7, #4]
 745 0022 1344     		add	r3, r3, r2
 746 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 0026 002B     		cmp	r3, #0
 748 0028 F5D1     		bne	.L43
 405:../Generated_Code/UTIL1.c ****   }
 406:../Generated_Code/UTIL1.c ****   i = (signed char)nofFill;
 749              		.loc 1 406 0
 750 002a BB78     		ldrb	r3, [r7, #2]
 751 002c FB73     		strb	r3, [r7, #15]
 407:../Generated_Code/UTIL1.c ****   if (i==j) {
 752              		.loc 1 407 0
 753 002e 97F90F20 		ldrsb	r2, [r7, #15]
 754 0032 97F90E30 		ldrsb	r3, [r7, #14]
 755 0036 9A42     		cmp	r2, r3
 756 0038 28D0     		beq	.L41
 408:../Generated_Code/UTIL1.c ****     /* nothing to do, we are done */
 409:../Generated_Code/UTIL1.c ****   } else if (i>j) {
 757              		.loc 1 409 0
 758 003a 97F90F20 		ldrsb	r2, [r7, #15]
 759 003e 97F90E30 		ldrsb	r3, [r7, #14]
 760 0042 9A42     		cmp	r2, r3
 761 0044 22DD     		ble	.L41
 410:../Generated_Code/UTIL1.c ****     while (j>=0) {
 762              		.loc 1 410 0
 763 0046 0FE0     		b	.L45
 764              	.L46:
 411:../Generated_Code/UTIL1.c ****       dst[i] = dst[j];
 765              		.loc 1 411 0
 766 0048 97F90F30 		ldrsb	r3, [r7, #15]
 767 004c 7A68     		ldr	r2, [r7, #4]
 768 004e 1344     		add	r3, r3, r2
 769 0050 97F90E20 		ldrsb	r2, [r7, #14]
 770 0054 7968     		ldr	r1, [r7, #4]
 771 0056 0A44     		add	r2, r2, r1
 772 0058 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 773 005a 1A70     		strb	r2, [r3]
 412:../Generated_Code/UTIL1.c ****       i--; j--;
 774              		.loc 1 412 0
 775 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 776 005e 013B     		subs	r3, r3, #1
 777 0060 FB73     		strb	r3, [r7, #15]
 778 0062 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 779 0064 013B     		subs	r3, r3, #1
 780 0066 BB73     		strb	r3, [r7, #14]
 781              	.L45:
 410:../Generated_Code/UTIL1.c ****     while (j>=0) {
 782              		.loc 1 410 0 discriminator 1
 783 0068 97F90E30 		ldrsb	r3, [r7, #14]
 784 006c 002B     		cmp	r3, #0
 785 006e EBDA     		bge	.L46
 413:../Generated_Code/UTIL1.c ****     }
 414:../Generated_Code/UTIL1.c ****     while(i>=0) {
 786              		.loc 1 414 0
 787 0070 08E0     		b	.L47
 788              	.L48:
 415:../Generated_Code/UTIL1.c ****       dst[i] = fill;
 789              		.loc 1 415 0
 790 0072 97F90F30 		ldrsb	r3, [r7, #15]
 791 0076 7A68     		ldr	r2, [r7, #4]
 792 0078 1344     		add	r3, r3, r2
 793 007a FA78     		ldrb	r2, [r7, #3]
 794 007c 1A70     		strb	r2, [r3]
 416:../Generated_Code/UTIL1.c ****       i--;
 795              		.loc 1 416 0
 796 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 797 0080 013B     		subs	r3, r3, #1
 798 0082 FB73     		strb	r3, [r7, #15]
 799              	.L47:
 414:../Generated_Code/UTIL1.c ****     while(i>=0) {
 800              		.loc 1 414 0 discriminator 1
 801 0084 97F90F30 		ldrsb	r3, [r7, #15]
 802 0088 002B     		cmp	r3, #0
 803 008a F2DA     		bge	.L48
 804              	.L41:
 417:../Generated_Code/UTIL1.c ****     }
 418:../Generated_Code/UTIL1.c ****   } else {
 419:../Generated_Code/UTIL1.c ****     /* hmmm, not enough space, return what we have, do nothing */
 420:../Generated_Code/UTIL1.c ****   }
 421:../Generated_Code/UTIL1.c **** }
 805              		.loc 1 421 0
 806 008c 1437     		adds	r7, r7, #20
 807 008e BD46     		mov	sp, r7
 808              		@ sp needed
 809 0090 5DF8047B 		ldr	r7, [sp], #4
 810 0094 7047     		bx	lr
 811              		.cfi_endproc
 812              	.LFE7:
 814              		.section	.text.UTIL1_Num16sToStrFormatted,"ax",%progbits
 815              		.align	2
 816              		.global	UTIL1_Num16sToStrFormatted
 817              		.thumb
 818              		.thumb_func
 820              	UTIL1_Num16sToStrFormatted:
 821              	.LFB8:
 422:../Generated_Code/UTIL1.c **** 
 423:../Generated_Code/UTIL1.c **** /*
 424:../Generated_Code/UTIL1.c **** ** ===================================================================
 425:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num16sToStrFormatted (component Utility)
 426:../Generated_Code/UTIL1.c **** **     Description :
 427:../Generated_Code/UTIL1.c **** **         Converts a 16bit signed value to string.
 428:../Generated_Code/UTIL1.c **** **     Parameters  :
 429:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 430:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 431:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 432:../Generated_Code/UTIL1.c **** **                           bytes).
 433:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 434:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 435:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 436:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 437:../Generated_Code/UTIL1.c **** ** ===================================================================
 438:../Generated_Code/UTIL1.c **** */
 439:../Generated_Code/UTIL1.c **** /*!
 440:../Generated_Code/UTIL1.c ****   \brief Converts a 16bit signed number to a string, in a formatted way (like printf with "%0d").
 441:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 442:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 443:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 444:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 445:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer, in uint8_ts.
 446:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit signed number to add
 447:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character, typically ' ' (like for "%2d" or '0' (for "%02d")
 448:../Generated_Code/UTIL1.c ****   \param[in] nofFill Size for the format (right aligned) string, e.g. '2' for "%2d"
 449:../Generated_Code/UTIL1.c **** */
 450:../Generated_Code/UTIL1.c **** void UTIL1_Num16sToStrFormatted(uint8_t *dst, size_t dstSize, int16_t val, char fill, uint8_t nofFi
 451:../Generated_Code/UTIL1.c **** {
 822              		.loc 1 451 0
 823              		.cfi_startproc
 824              		@ args = 4, pretend = 0, frame = 16
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826 0000 80B5     		push	{r7, lr}
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 84B0     		sub	sp, sp, #16
 831              		.cfi_def_cfa_offset 24
 832 0004 00AF     		add	r7, sp, #0
 833              		.cfi_def_cfa_register 7
 834 0006 F860     		str	r0, [r7, #12]
 835 0008 B960     		str	r1, [r7, #8]
 836 000a FA80     		strh	r2, [r7, #6]	@ movhi
 837 000c 7B71     		strb	r3, [r7, #5]
 452:../Generated_Code/UTIL1.c ****   UTIL1_Num16sToStr(dst, dstSize, val);
 838              		.loc 1 452 0
 839 000e B7F90630 		ldrsh	r3, [r7, #6]
 840 0012 F868     		ldr	r0, [r7, #12]
 841 0014 B968     		ldr	r1, [r7, #8]
 842 0016 1A46     		mov	r2, r3
 843 0018 FFF7FEFF 		bl	UTIL1_Num16sToStr
 453:../Generated_Code/UTIL1.c ****   ShiftRightAndFill(dst, fill, nofFill);
 844              		.loc 1 453 0
 845 001c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 846 001e 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 847 0020 F868     		ldr	r0, [r7, #12]
 848 0022 1146     		mov	r1, r2
 849 0024 1A46     		mov	r2, r3
 850 0026 FFF7FEFF 		bl	ShiftRightAndFill
 454:../Generated_Code/UTIL1.c **** }
 851              		.loc 1 454 0
 852 002a 1037     		adds	r7, r7, #16
 853 002c BD46     		mov	sp, r7
 854              		@ sp needed
 855 002e 80BD     		pop	{r7, pc}
 856              		.cfi_endproc
 857              	.LFE8:
 859              		.section	.text.UTIL1_Num16uToStrFormatted,"ax",%progbits
 860              		.align	2
 861              		.global	UTIL1_Num16uToStrFormatted
 862              		.thumb
 863              		.thumb_func
 865              	UTIL1_Num16uToStrFormatted:
 866              	.LFB9:
 455:../Generated_Code/UTIL1.c **** 
 456:../Generated_Code/UTIL1.c **** /*
 457:../Generated_Code/UTIL1.c **** ** ===================================================================
 458:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num16uToStrFormatted (component Utility)
 459:../Generated_Code/UTIL1.c **** **     Description :
 460:../Generated_Code/UTIL1.c **** **         Converts a 16bit unsigned value to string.
 461:../Generated_Code/UTIL1.c **** **     Parameters  :
 462:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 463:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 464:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 465:../Generated_Code/UTIL1.c **** **                           bytes).
 466:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 467:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 468:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 469:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 470:../Generated_Code/UTIL1.c **** ** ===================================================================
 471:../Generated_Code/UTIL1.c **** */
 472:../Generated_Code/UTIL1.c **** /*!
 473:../Generated_Code/UTIL1.c ****   \brief Converts a 16bit unsigned number to a string, in a formatted way (like printf with "%0d").
 474:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 475:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 476:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 477:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 478:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer, in uint8_ts.
 479:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit unsigned number to add
 480:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character, typically ' ' (like for "%2d" or '0' (for "%02d")
 481:../Generated_Code/UTIL1.c ****   \param[in] nofFill Size for the format (right aligned) string, e.g. '2' for "%2d"
 482:../Generated_Code/UTIL1.c **** */
 483:../Generated_Code/UTIL1.c **** void UTIL1_Num16uToStrFormatted(uint8_t *dst, size_t dstSize, uint16_t val, char fill, uint8_t nofF
 484:../Generated_Code/UTIL1.c **** {
 867              		.loc 1 484 0
 868              		.cfi_startproc
 869              		@ args = 4, pretend = 0, frame = 16
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871 0000 80B5     		push	{r7, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 84B0     		sub	sp, sp, #16
 876              		.cfi_def_cfa_offset 24
 877 0004 00AF     		add	r7, sp, #0
 878              		.cfi_def_cfa_register 7
 879 0006 F860     		str	r0, [r7, #12]
 880 0008 B960     		str	r1, [r7, #8]
 881 000a FA80     		strh	r2, [r7, #6]	@ movhi
 882 000c 7B71     		strb	r3, [r7, #5]
 485:../Generated_Code/UTIL1.c ****   UTIL1_Num16uToStr(dst, dstSize, val);
 883              		.loc 1 485 0
 884 000e FB88     		ldrh	r3, [r7, #6]
 885 0010 F868     		ldr	r0, [r7, #12]
 886 0012 B968     		ldr	r1, [r7, #8]
 887 0014 1A46     		mov	r2, r3
 888 0016 FFF7FEFF 		bl	UTIL1_Num16uToStr
 486:../Generated_Code/UTIL1.c ****   ShiftRightAndFill(dst, fill, nofFill);
 889              		.loc 1 486 0
 890 001a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 891 001c 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 892 001e F868     		ldr	r0, [r7, #12]
 893 0020 1146     		mov	r1, r2
 894 0022 1A46     		mov	r2, r3
 895 0024 FFF7FEFF 		bl	ShiftRightAndFill
 487:../Generated_Code/UTIL1.c **** }
 896              		.loc 1 487 0
 897 0028 1037     		adds	r7, r7, #16
 898 002a BD46     		mov	sp, r7
 899              		@ sp needed
 900 002c 80BD     		pop	{r7, pc}
 901              		.cfi_endproc
 902              	.LFE9:
 904 002e 00BF     		.section	.text.UTIL1_Num32uToStrFormatted,"ax",%progbits
 905              		.align	2
 906              		.global	UTIL1_Num32uToStrFormatted
 907              		.thumb
 908              		.thumb_func
 910              	UTIL1_Num32uToStrFormatted:
 911              	.LFB10:
 488:../Generated_Code/UTIL1.c **** 
 489:../Generated_Code/UTIL1.c **** /*
 490:../Generated_Code/UTIL1.c **** ** ===================================================================
 491:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num32uToStrFormatted (component Utility)
 492:../Generated_Code/UTIL1.c **** **     Description :
 493:../Generated_Code/UTIL1.c **** **         Converts a 32bit unsigned value to string.
 494:../Generated_Code/UTIL1.c **** **     Parameters  :
 495:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 496:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 497:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 498:../Generated_Code/UTIL1.c **** **                           bytes).
 499:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 500:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 501:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 502:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 503:../Generated_Code/UTIL1.c **** ** ===================================================================
 504:../Generated_Code/UTIL1.c **** */
 505:../Generated_Code/UTIL1.c **** /*!
 506:../Generated_Code/UTIL1.c ****   \brief Converts a 32bit unsigned number to a string, in a formatted way (like printf with "%0d").
 507:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 508:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 509:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 510:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 511:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer, in uint8_ts.
 512:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit unsigned number to add
 513:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character, typically ' ' (like for "%2d" or '0' (for "%02d")
 514:../Generated_Code/UTIL1.c ****   \param[in] nofFill Size for the format (right aligned) string, e.g. '2' for "%2d"
 515:../Generated_Code/UTIL1.c **** */
 516:../Generated_Code/UTIL1.c **** void UTIL1_Num32uToStrFormatted(uint8_t *dst, size_t dstSize, uint32_t val, char fill, uint8_t nofF
 517:../Generated_Code/UTIL1.c **** {
 912              		.loc 1 517 0
 913              		.cfi_startproc
 914              		@ args = 4, pretend = 0, frame = 16
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 84B0     		sub	sp, sp, #16
 921              		.cfi_def_cfa_offset 24
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 924 0006 F860     		str	r0, [r7, #12]
 925 0008 B960     		str	r1, [r7, #8]
 926 000a 7A60     		str	r2, [r7, #4]
 927 000c FB70     		strb	r3, [r7, #3]
 518:../Generated_Code/UTIL1.c ****   UTIL1_Num32uToStr(dst, dstSize, val);
 928              		.loc 1 518 0
 929 000e F868     		ldr	r0, [r7, #12]
 930 0010 B968     		ldr	r1, [r7, #8]
 931 0012 7A68     		ldr	r2, [r7, #4]
 932 0014 FFF7FEFF 		bl	UTIL1_Num32uToStr
 519:../Generated_Code/UTIL1.c ****   ShiftRightAndFill(dst, fill, nofFill);
 933              		.loc 1 519 0
 934 0018 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 935 001a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 936 001c F868     		ldr	r0, [r7, #12]
 937 001e 1146     		mov	r1, r2
 938 0020 1A46     		mov	r2, r3
 939 0022 FFF7FEFF 		bl	ShiftRightAndFill
 520:../Generated_Code/UTIL1.c **** }
 940              		.loc 1 520 0
 941 0026 1037     		adds	r7, r7, #16
 942 0028 BD46     		mov	sp, r7
 943              		@ sp needed
 944 002a 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE10:
 948              		.section	.text.UTIL1_Num32sToStrFormatted,"ax",%progbits
 949              		.align	2
 950              		.global	UTIL1_Num32sToStrFormatted
 951              		.thumb
 952              		.thumb_func
 954              	UTIL1_Num32sToStrFormatted:
 955              	.LFB11:
 521:../Generated_Code/UTIL1.c **** 
 522:../Generated_Code/UTIL1.c **** /*
 523:../Generated_Code/UTIL1.c **** ** ===================================================================
 524:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num32sToStrFormatted (component Utility)
 525:../Generated_Code/UTIL1.c **** **     Description :
 526:../Generated_Code/UTIL1.c **** **         Converts a 32bit signed value to string.
 527:../Generated_Code/UTIL1.c **** **     Parameters  :
 528:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 529:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 530:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 531:../Generated_Code/UTIL1.c **** **                           bytes).
 532:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 533:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 534:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 535:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 536:../Generated_Code/UTIL1.c **** ** ===================================================================
 537:../Generated_Code/UTIL1.c **** */
 538:../Generated_Code/UTIL1.c **** /*!
 539:../Generated_Code/UTIL1.c ****   \brief Converts a 32bit signed number to a string, in a formatted way (like printf with "%0d").
 540:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 541:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 542:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 543:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 544:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer, in uint8_ts.
 545:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit signed number to add
 546:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character, typically ' ' (like for "%2d" or '0' (for "%02d")
 547:../Generated_Code/UTIL1.c ****   \param[in] nofFill Size for the format (right aligned) string, e.g. '2' for "%2d"
 548:../Generated_Code/UTIL1.c **** */
 549:../Generated_Code/UTIL1.c **** void UTIL1_Num32sToStrFormatted(uint8_t *dst, size_t dstSize, int32_t val, char fill, uint8_t nofFi
 550:../Generated_Code/UTIL1.c **** {
 956              		.loc 1 550 0
 957              		.cfi_startproc
 958              		@ args = 4, pretend = 0, frame = 16
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 84B0     		sub	sp, sp, #16
 965              		.cfi_def_cfa_offset 24
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 F860     		str	r0, [r7, #12]
 969 0008 B960     		str	r1, [r7, #8]
 970 000a 7A60     		str	r2, [r7, #4]
 971 000c FB70     		strb	r3, [r7, #3]
 551:../Generated_Code/UTIL1.c ****   UTIL1_Num32sToStr(dst, dstSize, val);
 972              		.loc 1 551 0
 973 000e F868     		ldr	r0, [r7, #12]
 974 0010 B968     		ldr	r1, [r7, #8]
 975 0012 7A68     		ldr	r2, [r7, #4]
 976 0014 FFF7FEFF 		bl	UTIL1_Num32sToStr
 552:../Generated_Code/UTIL1.c ****   ShiftRightAndFill(dst, fill, nofFill);
 977              		.loc 1 552 0
 978 0018 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 979 001a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 980 001c F868     		ldr	r0, [r7, #12]
 981 001e 1146     		mov	r1, r2
 982 0020 1A46     		mov	r2, r3
 983 0022 FFF7FEFF 		bl	ShiftRightAndFill
 553:../Generated_Code/UTIL1.c **** }
 984              		.loc 1 553 0
 985 0026 1037     		adds	r7, r7, #16
 986 0028 BD46     		mov	sp, r7
 987              		@ sp needed
 988 002a 80BD     		pop	{r7, pc}
 989              		.cfi_endproc
 990              	.LFE11:
 992              		.section	.text.UTIL1_strcatNum8u,"ax",%progbits
 993              		.align	2
 994              		.global	UTIL1_strcatNum8u
 995              		.thumb
 996              		.thumb_func
 998              	UTIL1_strcatNum8u:
 999              	.LFB12:
 554:../Generated_Code/UTIL1.c **** 
 555:../Generated_Code/UTIL1.c **** /*
 556:../Generated_Code/UTIL1.c **** ** ===================================================================
 557:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum8u (component Utility)
 558:../Generated_Code/UTIL1.c **** **     Description :
 559:../Generated_Code/UTIL1.c **** **         Appends a 8bit unsigned value to a string buffer.
 560:../Generated_Code/UTIL1.c **** **     Parameters  :
 561:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 562:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 563:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 564:../Generated_Code/UTIL1.c **** **                           bytes).
 565:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 566:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 567:../Generated_Code/UTIL1.c **** ** ===================================================================
 568:../Generated_Code/UTIL1.c **** */
 569:../Generated_Code/UTIL1.c **** /*!
 570:../Generated_Code/UTIL1.c ****   \brief appends a 8bit unsigned number to a string. Always terminates the result string.
 571:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 572:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 573:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 574:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 575:../Generated_Code/UTIL1.c ****   \param[in] val The 8bit unsigned number to add
 576:../Generated_Code/UTIL1.c ****   */
 577:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum8u(uint8_t *dst, size_t dstSize, uint8_t val)
 578:../Generated_Code/UTIL1.c **** {
 1000              		.loc 1 578 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 24
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 86B0     		sub	sp, sp, #24
 1009              		.cfi_def_cfa_offset 32
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 F860     		str	r0, [r7, #12]
 1013 0008 B960     		str	r1, [r7, #8]
 1014 000a 1346     		mov	r3, r2
 1015 000c FB71     		strb	r3, [r7, #7]
 579:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("256")]; /* maximum buffer size we need */
 580:../Generated_Code/UTIL1.c **** 
 581:../Generated_Code/UTIL1.c ****   UTIL1_Num8uToStr(buf, sizeof(buf), val);
 1016              		.loc 1 581 0
 1017 000e 07F11402 		add	r2, r7, #20
 1018 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1019 0014 1046     		mov	r0, r2
 1020 0016 0421     		movs	r1, #4
 1021 0018 1A46     		mov	r2, r3
 1022 001a FFF7FEFF 		bl	UTIL1_Num8uToStr
 582:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1023              		.loc 1 582 0
 1024 001e 07F11403 		add	r3, r7, #20
 1025 0022 F868     		ldr	r0, [r7, #12]
 1026 0024 B968     		ldr	r1, [r7, #8]
 1027 0026 1A46     		mov	r2, r3
 1028 0028 FFF7FEFF 		bl	UTIL1_strcat
 583:../Generated_Code/UTIL1.c **** }
 1029              		.loc 1 583 0
 1030 002c 1837     		adds	r7, r7, #24
 1031 002e BD46     		mov	sp, r7
 1032              		@ sp needed
 1033 0030 80BD     		pop	{r7, pc}
 1034              		.cfi_endproc
 1035              	.LFE12:
 1037 0032 00BF     		.section	.text.UTIL1_strcatNum8s,"ax",%progbits
 1038              		.align	2
 1039              		.global	UTIL1_strcatNum8s
 1040              		.thumb
 1041              		.thumb_func
 1043              	UTIL1_strcatNum8s:
 1044              	.LFB13:
 584:../Generated_Code/UTIL1.c **** 
 585:../Generated_Code/UTIL1.c **** /*
 586:../Generated_Code/UTIL1.c **** ** ===================================================================
 587:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum8s (component Utility)
 588:../Generated_Code/UTIL1.c **** **     Description :
 589:../Generated_Code/UTIL1.c **** **         Appends a 8bit signed value to a string buffer.
 590:../Generated_Code/UTIL1.c **** **     Parameters  :
 591:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 592:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 593:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 594:../Generated_Code/UTIL1.c **** **                           bytes).
 595:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 596:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 597:../Generated_Code/UTIL1.c **** ** ===================================================================
 598:../Generated_Code/UTIL1.c **** */
 599:../Generated_Code/UTIL1.c **** /*!
 600:../Generated_Code/UTIL1.c ****   \brief appends a 8bit signed number to a string. Always terminates the result string.
 601:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 602:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 603:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 604:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 605:../Generated_Code/UTIL1.c ****   \param[in] val The 8bit signed number to add
 606:../Generated_Code/UTIL1.c ****   */
 607:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum8s(uint8_t *dst, size_t dstSize, signed char val)
 608:../Generated_Code/UTIL1.c **** {
 1045              		.loc 1 608 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 24
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 86B0     		sub	sp, sp, #24
 1054              		.cfi_def_cfa_offset 32
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 F860     		str	r0, [r7, #12]
 1058 0008 B960     		str	r1, [r7, #8]
 1059 000a 1346     		mov	r3, r2
 1060 000c FB71     		strb	r3, [r7, #7]
 609:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("-128")]; /* maximum buffer size we need */
 610:../Generated_Code/UTIL1.c **** 
 611:../Generated_Code/UTIL1.c ****   UTIL1_Num8sToStr(buf, sizeof(buf), val);
 1061              		.loc 1 611 0
 1062 000e 07F11002 		add	r2, r7, #16
 1063 0012 97F90730 		ldrsb	r3, [r7, #7]
 1064 0016 1046     		mov	r0, r2
 1065 0018 0521     		movs	r1, #5
 1066 001a 1A46     		mov	r2, r3
 1067 001c FFF7FEFF 		bl	UTIL1_Num8sToStr
 612:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1068              		.loc 1 612 0
 1069 0020 07F11003 		add	r3, r7, #16
 1070 0024 F868     		ldr	r0, [r7, #12]
 1071 0026 B968     		ldr	r1, [r7, #8]
 1072 0028 1A46     		mov	r2, r3
 1073 002a FFF7FEFF 		bl	UTIL1_strcat
 613:../Generated_Code/UTIL1.c **** }
 1074              		.loc 1 613 0
 1075 002e 1837     		adds	r7, r7, #24
 1076 0030 BD46     		mov	sp, r7
 1077              		@ sp needed
 1078 0032 80BD     		pop	{r7, pc}
 1079              		.cfi_endproc
 1080              	.LFE13:
 1082              		.section	.text.UTIL1_strcatNum16u,"ax",%progbits
 1083              		.align	2
 1084              		.global	UTIL1_strcatNum16u
 1085              		.thumb
 1086              		.thumb_func
 1088              	UTIL1_strcatNum16u:
 1089              	.LFB14:
 614:../Generated_Code/UTIL1.c **** 
 615:../Generated_Code/UTIL1.c **** /*
 616:../Generated_Code/UTIL1.c **** ** ===================================================================
 617:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum16u (component Utility)
 618:../Generated_Code/UTIL1.c **** **     Description :
 619:../Generated_Code/UTIL1.c **** **         Appends a 16bit unsigned value to a string buffer.
 620:../Generated_Code/UTIL1.c **** **     Parameters  :
 621:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 622:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 623:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 624:../Generated_Code/UTIL1.c **** **                           bytes).
 625:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 626:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 627:../Generated_Code/UTIL1.c **** ** ===================================================================
 628:../Generated_Code/UTIL1.c **** */
 629:../Generated_Code/UTIL1.c **** /*!
 630:../Generated_Code/UTIL1.c ****   \brief appends a 16bit unsigned number to a string. Always terminates the result string.
 631:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 632:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 633:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 634:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 635:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit unsigned number to add
 636:../Generated_Code/UTIL1.c ****   */
 637:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum16u(uint8_t *dst, size_t dstSize, uint16_t val)
 638:../Generated_Code/UTIL1.c **** {
 1090              		.loc 1 638 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 24
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 86B0     		sub	sp, sp, #24
 1099              		.cfi_def_cfa_offset 32
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 F860     		str	r0, [r7, #12]
 1103 0008 B960     		str	r1, [r7, #8]
 1104 000a 1346     		mov	r3, r2
 1105 000c FB80     		strh	r3, [r7, #6]	@ movhi
 639:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("32768")]; /* maximum buffer size we need */
 640:../Generated_Code/UTIL1.c **** 
 641:../Generated_Code/UTIL1.c ****   UTIL1_Num16uToStr(buf, sizeof(buf), val);
 1106              		.loc 1 641 0
 1107 000e 07F11002 		add	r2, r7, #16
 1108 0012 FB88     		ldrh	r3, [r7, #6]
 1109 0014 1046     		mov	r0, r2
 1110 0016 0621     		movs	r1, #6
 1111 0018 1A46     		mov	r2, r3
 1112 001a FFF7FEFF 		bl	UTIL1_Num16uToStr
 642:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1113              		.loc 1 642 0
 1114 001e 07F11003 		add	r3, r7, #16
 1115 0022 F868     		ldr	r0, [r7, #12]
 1116 0024 B968     		ldr	r1, [r7, #8]
 1117 0026 1A46     		mov	r2, r3
 1118 0028 FFF7FEFF 		bl	UTIL1_strcat
 643:../Generated_Code/UTIL1.c **** }
 1119              		.loc 1 643 0
 1120 002c 1837     		adds	r7, r7, #24
 1121 002e BD46     		mov	sp, r7
 1122              		@ sp needed
 1123 0030 80BD     		pop	{r7, pc}
 1124              		.cfi_endproc
 1125              	.LFE14:
 1127 0032 00BF     		.section	.text.UTIL1_strcatNum16s,"ax",%progbits
 1128              		.align	2
 1129              		.global	UTIL1_strcatNum16s
 1130              		.thumb
 1131              		.thumb_func
 1133              	UTIL1_strcatNum16s:
 1134              	.LFB15:
 644:../Generated_Code/UTIL1.c **** 
 645:../Generated_Code/UTIL1.c **** /*
 646:../Generated_Code/UTIL1.c **** ** ===================================================================
 647:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum16s (component Utility)
 648:../Generated_Code/UTIL1.c **** **     Description :
 649:../Generated_Code/UTIL1.c **** **         Appends a 16bit signed value to a string buffer.
 650:../Generated_Code/UTIL1.c **** **     Parameters  :
 651:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 652:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 653:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 654:../Generated_Code/UTIL1.c **** **                           bytes).
 655:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 656:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 657:../Generated_Code/UTIL1.c **** ** ===================================================================
 658:../Generated_Code/UTIL1.c **** */
 659:../Generated_Code/UTIL1.c **** /*!
 660:../Generated_Code/UTIL1.c ****   \brief appends a 16bit signed number to a string. Always terminates the result string.
 661:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 662:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 663:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 664:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 665:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit signed number to add
 666:../Generated_Code/UTIL1.c ****   */
 667:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum16s(uint8_t *dst, size_t dstSize, int16_t val)
 668:../Generated_Code/UTIL1.c **** {
 1135              		.loc 1 668 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 24
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139 0000 80B5     		push	{r7, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 86B0     		sub	sp, sp, #24
 1144              		.cfi_def_cfa_offset 32
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 F860     		str	r0, [r7, #12]
 1148 0008 B960     		str	r1, [r7, #8]
 1149 000a 1346     		mov	r3, r2
 1150 000c FB80     		strh	r3, [r7, #6]	@ movhi
 669:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("-32768")]; /* maximum buffer size we need */
 670:../Generated_Code/UTIL1.c **** 
 671:../Generated_Code/UTIL1.c ****   UTIL1_Num16sToStr(buf, sizeof(buf), val);
 1151              		.loc 1 671 0
 1152 000e 07F11002 		add	r2, r7, #16
 1153 0012 B7F90630 		ldrsh	r3, [r7, #6]
 1154 0016 1046     		mov	r0, r2
 1155 0018 0721     		movs	r1, #7
 1156 001a 1A46     		mov	r2, r3
 1157 001c FFF7FEFF 		bl	UTIL1_Num16sToStr
 672:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1158              		.loc 1 672 0
 1159 0020 07F11003 		add	r3, r7, #16
 1160 0024 F868     		ldr	r0, [r7, #12]
 1161 0026 B968     		ldr	r1, [r7, #8]
 1162 0028 1A46     		mov	r2, r3
 1163 002a FFF7FEFF 		bl	UTIL1_strcat
 673:../Generated_Code/UTIL1.c **** }
 1164              		.loc 1 673 0
 1165 002e 1837     		adds	r7, r7, #24
 1166 0030 BD46     		mov	sp, r7
 1167              		@ sp needed
 1168 0032 80BD     		pop	{r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE15:
 1172              		.section	.text.UTIL1_strcatNum16uFormatted,"ax",%progbits
 1173              		.align	2
 1174              		.global	UTIL1_strcatNum16uFormatted
 1175              		.thumb
 1176              		.thumb_func
 1178              	UTIL1_strcatNum16uFormatted:
 1179              	.LFB16:
 674:../Generated_Code/UTIL1.c **** 
 675:../Generated_Code/UTIL1.c **** /*
 676:../Generated_Code/UTIL1.c **** ** ===================================================================
 677:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum16uFormatted (component Utility)
 678:../Generated_Code/UTIL1.c **** **     Description :
 679:../Generated_Code/UTIL1.c **** **         Appends a 16bit unsigned value to a string buffer in a
 680:../Generated_Code/UTIL1.c **** **         formatted way.
 681:../Generated_Code/UTIL1.c **** **     Parameters  :
 682:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 683:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 684:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 685:../Generated_Code/UTIL1.c **** **                           bytes).
 686:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 687:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 688:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 689:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 690:../Generated_Code/UTIL1.c **** ** ===================================================================
 691:../Generated_Code/UTIL1.c **** */
 692:../Generated_Code/UTIL1.c **** /*!
 693:../Generated_Code/UTIL1.c ****   \brief appends a 16bit unsigned number to a string, in a formatted way (like printf with "%0d".
 694:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 695:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 696:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 697:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 698:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 699:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit unsigned number to add
 700:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character
 701:../Generated_Code/UTIL1.c ****   \param[in] nofFill Number of fill characters
 702:../Generated_Code/UTIL1.c ****   */
 703:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum16uFormatted(uint8_t *dst, size_t dstSize, uint16_t val, char fill, uint8_t nof
 704:../Generated_Code/UTIL1.c **** {
 1180              		.loc 1 704 0
 1181              		.cfi_startproc
 1182              		@ args = 4, pretend = 0, frame = 24
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 88B0     		sub	sp, sp, #32
 1189              		.cfi_def_cfa_offset 40
 1190 0004 02AF     		add	r7, sp, #8
 1191              		.cfi_def_cfa 7, 32
 1192 0006 F860     		str	r0, [r7, #12]
 1193 0008 B960     		str	r1, [r7, #8]
 1194 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1195 000c 7B71     		strb	r3, [r7, #5]
 705:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("32768")]; /* maximum buffer size we need */
 706:../Generated_Code/UTIL1.c **** 
 707:../Generated_Code/UTIL1.c ****   UTIL1_Num16uToStrFormatted(buf, dstSize, val, fill, nofFill);
 1196              		.loc 1 707 0
 1197 000e 07F11001 		add	r1, r7, #16
 1198 0012 FA88     		ldrh	r2, [r7, #6]
 1199 0014 97F90530 		ldrsb	r3, [r7, #5]
 1200 0018 97F82000 		ldrb	r0, [r7, #32]	@ zero_extendqisi2
 1201 001c 0090     		str	r0, [sp]
 1202 001e 0846     		mov	r0, r1
 1203 0020 B968     		ldr	r1, [r7, #8]
 1204 0022 FFF7FEFF 		bl	UTIL1_Num16uToStrFormatted
 708:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1205              		.loc 1 708 0
 1206 0026 07F11003 		add	r3, r7, #16
 1207 002a F868     		ldr	r0, [r7, #12]
 1208 002c B968     		ldr	r1, [r7, #8]
 1209 002e 1A46     		mov	r2, r3
 1210 0030 FFF7FEFF 		bl	UTIL1_strcat
 709:../Generated_Code/UTIL1.c **** }
 1211              		.loc 1 709 0
 1212 0034 1837     		adds	r7, r7, #24
 1213 0036 BD46     		mov	sp, r7
 1214              		@ sp needed
 1215 0038 80BD     		pop	{r7, pc}
 1216              		.cfi_endproc
 1217              	.LFE16:
 1219 003a 00BF     		.section	.text.UTIL1_strcatNum16sFormatted,"ax",%progbits
 1220              		.align	2
 1221              		.global	UTIL1_strcatNum16sFormatted
 1222              		.thumb
 1223              		.thumb_func
 1225              	UTIL1_strcatNum16sFormatted:
 1226              	.LFB17:
 710:../Generated_Code/UTIL1.c **** 
 711:../Generated_Code/UTIL1.c **** /*
 712:../Generated_Code/UTIL1.c **** ** ===================================================================
 713:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum16sFormatted (component Utility)
 714:../Generated_Code/UTIL1.c **** **     Description :
 715:../Generated_Code/UTIL1.c **** **         Appends a 16bit signed value to a string buffer in a
 716:../Generated_Code/UTIL1.c **** **         formatted way.
 717:../Generated_Code/UTIL1.c **** **     Parameters  :
 718:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 719:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 720:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 721:../Generated_Code/UTIL1.c **** **                           bytes).
 722:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 723:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 724:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 725:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 726:../Generated_Code/UTIL1.c **** ** ===================================================================
 727:../Generated_Code/UTIL1.c **** */
 728:../Generated_Code/UTIL1.c **** /*!
 729:../Generated_Code/UTIL1.c ****   \brief appends a 16bit signed number to a string, in a formatted way (like printf with "%0d".
 730:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 731:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 732:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 733:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 734:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 735:../Generated_Code/UTIL1.c ****   \param[in] val The 16bit signed number to add
 736:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character
 737:../Generated_Code/UTIL1.c ****   \param[in] nofFill Number of fill characters
 738:../Generated_Code/UTIL1.c ****   */
 739:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum16sFormatted(uint8_t *dst, size_t dstSize, int16_t val, char fill, uint8_t nofF
 740:../Generated_Code/UTIL1.c **** {
 1227              		.loc 1 740 0
 1228              		.cfi_startproc
 1229              		@ args = 4, pretend = 0, frame = 24
 1230              		@ frame_needed = 1, uses_anonymous_args = 0
 1231 0000 80B5     		push	{r7, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 88B0     		sub	sp, sp, #32
 1236              		.cfi_def_cfa_offset 40
 1237 0004 02AF     		add	r7, sp, #8
 1238              		.cfi_def_cfa 7, 32
 1239 0006 F860     		str	r0, [r7, #12]
 1240 0008 B960     		str	r1, [r7, #8]
 1241 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1242 000c 7B71     		strb	r3, [r7, #5]
 741:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("-32768")]; /* maximum buffer size we need */
 742:../Generated_Code/UTIL1.c **** 
 743:../Generated_Code/UTIL1.c ****   UTIL1_Num16sToStrFormatted(buf, dstSize, val, fill, nofFill);
 1243              		.loc 1 743 0
 1244 000e 07F11001 		add	r1, r7, #16
 1245 0012 B7F90620 		ldrsh	r2, [r7, #6]
 1246 0016 97F90530 		ldrsb	r3, [r7, #5]
 1247 001a 97F82000 		ldrb	r0, [r7, #32]	@ zero_extendqisi2
 1248 001e 0090     		str	r0, [sp]
 1249 0020 0846     		mov	r0, r1
 1250 0022 B968     		ldr	r1, [r7, #8]
 1251 0024 FFF7FEFF 		bl	UTIL1_Num16sToStrFormatted
 744:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1252              		.loc 1 744 0
 1253 0028 07F11003 		add	r3, r7, #16
 1254 002c F868     		ldr	r0, [r7, #12]
 1255 002e B968     		ldr	r1, [r7, #8]
 1256 0030 1A46     		mov	r2, r3
 1257 0032 FFF7FEFF 		bl	UTIL1_strcat
 745:../Generated_Code/UTIL1.c **** }
 1258              		.loc 1 745 0
 1259 0036 1837     		adds	r7, r7, #24
 1260 0038 BD46     		mov	sp, r7
 1261              		@ sp needed
 1262 003a 80BD     		pop	{r7, pc}
 1263              		.cfi_endproc
 1264              	.LFE17:
 1266              		.section	.text.UTIL1_strcatNum32uFormatted,"ax",%progbits
 1267              		.align	2
 1268              		.global	UTIL1_strcatNum32uFormatted
 1269              		.thumb
 1270              		.thumb_func
 1272              	UTIL1_strcatNum32uFormatted:
 1273              	.LFB18:
 746:../Generated_Code/UTIL1.c **** 
 747:../Generated_Code/UTIL1.c **** /*
 748:../Generated_Code/UTIL1.c **** ** ===================================================================
 749:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32uFormatted (component Utility)
 750:../Generated_Code/UTIL1.c **** **     Description :
 751:../Generated_Code/UTIL1.c **** **         Appends a 32bit unsigned value to a string buffer in a
 752:../Generated_Code/UTIL1.c **** **         formatted way.
 753:../Generated_Code/UTIL1.c **** **     Parameters  :
 754:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 755:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 756:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 757:../Generated_Code/UTIL1.c **** **                           bytes).
 758:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 759:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 760:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 761:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 762:../Generated_Code/UTIL1.c **** ** ===================================================================
 763:../Generated_Code/UTIL1.c **** */
 764:../Generated_Code/UTIL1.c **** /*!
 765:../Generated_Code/UTIL1.c ****   \brief appends a 32bit unsigned number to a string, in a formatted way (like printf with "%0d".
 766:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 767:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 768:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 769:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 770:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 771:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit unsigned number to add
 772:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character
 773:../Generated_Code/UTIL1.c ****   \param[in] nofFill Number of fill characters
 774:../Generated_Code/UTIL1.c ****   */
 775:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32uFormatted(uint8_t *dst, size_t dstSize, uint32_t val, char fill, uint8_t nof
 776:../Generated_Code/UTIL1.c **** {
 1274              		.loc 1 776 0
 1275              		.cfi_startproc
 1276              		@ args = 4, pretend = 0, frame = 32
 1277              		@ frame_needed = 1, uses_anonymous_args = 0
 1278 0000 80B5     		push	{r7, lr}
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 7, -8
 1281              		.cfi_offset 14, -4
 1282 0002 8AB0     		sub	sp, sp, #40
 1283              		.cfi_def_cfa_offset 48
 1284 0004 02AF     		add	r7, sp, #8
 1285              		.cfi_def_cfa 7, 40
 1286 0006 F860     		str	r0, [r7, #12]
 1287 0008 B960     		str	r1, [r7, #8]
 1288 000a 7A60     		str	r2, [r7, #4]
 1289 000c FB70     		strb	r3, [r7, #3]
 777:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("4294967295")]; /* maximum buffer size we need */
 778:../Generated_Code/UTIL1.c **** 
 779:../Generated_Code/UTIL1.c ****   UTIL1_Num32uToStrFormatted(buf, dstSize, val, fill, nofFill);
 1290              		.loc 1 779 0
 1291 000e 07F11402 		add	r2, r7, #20
 1292 0012 97F90330 		ldrsb	r3, [r7, #3]
 1293 0016 97F82810 		ldrb	r1, [r7, #40]	@ zero_extendqisi2
 1294 001a 0091     		str	r1, [sp]
 1295 001c 1046     		mov	r0, r2
 1296 001e B968     		ldr	r1, [r7, #8]
 1297 0020 7A68     		ldr	r2, [r7, #4]
 1298 0022 FFF7FEFF 		bl	UTIL1_Num32uToStrFormatted
 780:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1299              		.loc 1 780 0
 1300 0026 07F11403 		add	r3, r7, #20
 1301 002a F868     		ldr	r0, [r7, #12]
 1302 002c B968     		ldr	r1, [r7, #8]
 1303 002e 1A46     		mov	r2, r3
 1304 0030 FFF7FEFF 		bl	UTIL1_strcat
 781:../Generated_Code/UTIL1.c **** }
 1305              		.loc 1 781 0
 1306 0034 2037     		adds	r7, r7, #32
 1307 0036 BD46     		mov	sp, r7
 1308              		@ sp needed
 1309 0038 80BD     		pop	{r7, pc}
 1310              		.cfi_endproc
 1311              	.LFE18:
 1313 003a 00BF     		.section	.text.UTIL1_strcatNum32sFormatted,"ax",%progbits
 1314              		.align	2
 1315              		.global	UTIL1_strcatNum32sFormatted
 1316              		.thumb
 1317              		.thumb_func
 1319              	UTIL1_strcatNum32sFormatted:
 1320              	.LFB19:
 782:../Generated_Code/UTIL1.c **** 
 783:../Generated_Code/UTIL1.c **** /*
 784:../Generated_Code/UTIL1.c **** ** ===================================================================
 785:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32sFormatted (component Utility)
 786:../Generated_Code/UTIL1.c **** **     Description :
 787:../Generated_Code/UTIL1.c **** **         Appends a 32bit signed value to a string buffer in a
 788:../Generated_Code/UTIL1.c **** **         formatted way.
 789:../Generated_Code/UTIL1.c **** **     Parameters  :
 790:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 791:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 792:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 793:../Generated_Code/UTIL1.c **** **                           bytes).
 794:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 795:../Generated_Code/UTIL1.c **** **         fill            - Fill character
 796:../Generated_Code/UTIL1.c **** **         nofFill         - Number of fill characters
 797:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 798:../Generated_Code/UTIL1.c **** ** ===================================================================
 799:../Generated_Code/UTIL1.c **** */
 800:../Generated_Code/UTIL1.c **** /*!
 801:../Generated_Code/UTIL1.c ****   \brief appends a 32bit signed number to a string, in a formatted way (like printf with "%0d".
 802:../Generated_Code/UTIL1.c ****      Always terminates the result string.
 803:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 804:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 805:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 806:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 807:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit signed number to add
 808:../Generated_Code/UTIL1.c ****   \param[in] fill Fill character
 809:../Generated_Code/UTIL1.c ****   \param[in] nofFill Number of fill characters
 810:../Generated_Code/UTIL1.c ****   */
 811:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32sFormatted(uint8_t *dst, size_t dstSize, int32_t val, char fill, uint8_t nofF
 812:../Generated_Code/UTIL1.c **** {
 1321              		.loc 1 812 0
 1322              		.cfi_startproc
 1323              		@ args = 4, pretend = 0, frame = 32
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325 0000 80B5     		push	{r7, lr}
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 7, -8
 1328              		.cfi_offset 14, -4
 1329 0002 8AB0     		sub	sp, sp, #40
 1330              		.cfi_def_cfa_offset 48
 1331 0004 02AF     		add	r7, sp, #8
 1332              		.cfi_def_cfa 7, 40
 1333 0006 F860     		str	r0, [r7, #12]
 1334 0008 B960     		str	r1, [r7, #8]
 1335 000a 7A60     		str	r2, [r7, #4]
 1336 000c FB70     		strb	r3, [r7, #3]
 813:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("-4294967295")]; /* maximum buffer size we need */
 814:../Generated_Code/UTIL1.c **** 
 815:../Generated_Code/UTIL1.c ****   UTIL1_Num32sToStrFormatted(buf, dstSize, val, fill, nofFill);
 1337              		.loc 1 815 0
 1338 000e 07F11402 		add	r2, r7, #20
 1339 0012 97F90330 		ldrsb	r3, [r7, #3]
 1340 0016 97F82810 		ldrb	r1, [r7, #40]	@ zero_extendqisi2
 1341 001a 0091     		str	r1, [sp]
 1342 001c 1046     		mov	r0, r2
 1343 001e B968     		ldr	r1, [r7, #8]
 1344 0020 7A68     		ldr	r2, [r7, #4]
 1345 0022 FFF7FEFF 		bl	UTIL1_Num32sToStrFormatted
 816:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1346              		.loc 1 816 0
 1347 0026 07F11403 		add	r3, r7, #20
 1348 002a F868     		ldr	r0, [r7, #12]
 1349 002c B968     		ldr	r1, [r7, #8]
 1350 002e 1A46     		mov	r2, r3
 1351 0030 FFF7FEFF 		bl	UTIL1_strcat
 817:../Generated_Code/UTIL1.c **** }
 1352              		.loc 1 817 0
 1353 0034 2037     		adds	r7, r7, #32
 1354 0036 BD46     		mov	sp, r7
 1355              		@ sp needed
 1356 0038 80BD     		pop	{r7, pc}
 1357              		.cfi_endproc
 1358              	.LFE19:
 1360 003a 00BF     		.section	.text.UTIL1_strcatNum8Hex,"ax",%progbits
 1361              		.align	2
 1362              		.global	UTIL1_strcatNum8Hex
 1363              		.thumb
 1364              		.thumb_func
 1366              	UTIL1_strcatNum8Hex:
 1367              	.LFB20:
 818:../Generated_Code/UTIL1.c **** 
 819:../Generated_Code/UTIL1.c **** /*
 820:../Generated_Code/UTIL1.c **** ** ===================================================================
 821:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum8Hex (component Utility)
 822:../Generated_Code/UTIL1.c **** **     Description :
 823:../Generated_Code/UTIL1.c **** **         Appends a 8bit unsigned value to a string buffer as hex
 824:../Generated_Code/UTIL1.c **** **         number (without a 0x prefix).
 825:../Generated_Code/UTIL1.c **** **     Parameters  :
 826:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 827:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 828:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 829:../Generated_Code/UTIL1.c **** **                           bytes).
 830:../Generated_Code/UTIL1.c **** **         num             - Value to convert.
 831:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 832:../Generated_Code/UTIL1.c **** ** ===================================================================
 833:../Generated_Code/UTIL1.c **** */
 834:../Generated_Code/UTIL1.c **** /*!
 835:../Generated_Code/UTIL1.c ****   \brief Adds a 8bit number as hex value to a string.
 836:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 837:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 838:../Generated_Code/UTIL1.c ****   \param[in] num The 8bit number to add
 839:../Generated_Code/UTIL1.c ****   */
 840:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum8Hex(uint8_t *dst, size_t dstSize, uint8_t num)
 841:../Generated_Code/UTIL1.c **** {
 1368              		.loc 1 841 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 24
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 86B0     		sub	sp, sp, #24
 1377              		.cfi_def_cfa_offset 32
 1378 0004 00AF     		add	r7, sp, #0
 1379              		.cfi_def_cfa_register 7
 1380 0006 F860     		str	r0, [r7, #12]
 1381 0008 B960     		str	r1, [r7, #8]
 1382 000a 1346     		mov	r3, r2
 1383 000c FB71     		strb	r3, [r7, #7]
 842:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("FF")]; /* maximum buffer size we need */
 843:../Generated_Code/UTIL1.c ****   unsigned char hex;
 844:../Generated_Code/UTIL1.c **** 
 845:../Generated_Code/UTIL1.c ****   buf[2] = '\0';
 1384              		.loc 1 845 0
 1385 000e 0023     		movs	r3, #0
 1386 0010 BB75     		strb	r3, [r7, #22]
 846:../Generated_Code/UTIL1.c ****   hex = (char)(num & 0x0F);
 1387              		.loc 1 846 0
 1388 0012 FB79     		ldrb	r3, [r7, #7]
 1389 0014 03F00F03 		and	r3, r3, #15
 1390 0018 FB75     		strb	r3, [r7, #23]
 847:../Generated_Code/UTIL1.c ****   buf[1] = (char)(hex + ((hex <= 9) ? '0' : ('A'-10)));
 1391              		.loc 1 847 0
 1392 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1393 001c 092B     		cmp	r3, #9
 1394 001e 01D8     		bhi	.L62
 1395              		.loc 1 847 0 is_stmt 0 discriminator 1
 1396 0020 3023     		movs	r3, #48
 1397 0022 00E0     		b	.L63
 1398              	.L62:
 1399              		.loc 1 847 0 discriminator 2
 1400 0024 3723     		movs	r3, #55
 1401              	.L63:
 1402              		.loc 1 847 0 discriminator 3
 1403 0026 FA7D     		ldrb	r2, [r7, #23]
 1404 0028 1344     		add	r3, r3, r2
 1405 002a DBB2     		uxtb	r3, r3
 1406 002c 7B75     		strb	r3, [r7, #21]
 848:../Generated_Code/UTIL1.c ****   hex = (char)((num>>4) & 0x0F);
 1407              		.loc 1 848 0 is_stmt 1 discriminator 3
 1408 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1409 0030 1B09     		lsrs	r3, r3, #4
 1410 0032 FB75     		strb	r3, [r7, #23]
 849:../Generated_Code/UTIL1.c ****   buf[0] = (char)(hex + ((hex <= 9) ? '0' : ('A'-10)));
 1411              		.loc 1 849 0 discriminator 3
 1412 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1413 0036 092B     		cmp	r3, #9
 1414 0038 01D8     		bhi	.L64
 1415              		.loc 1 849 0 is_stmt 0 discriminator 1
 1416 003a 3023     		movs	r3, #48
 1417 003c 00E0     		b	.L65
 1418              	.L64:
 1419              		.loc 1 849 0 discriminator 2
 1420 003e 3723     		movs	r3, #55
 1421              	.L65:
 1422              		.loc 1 849 0 discriminator 3
 1423 0040 FA7D     		ldrb	r2, [r7, #23]
 1424 0042 1344     		add	r3, r3, r2
 1425 0044 DBB2     		uxtb	r3, r3
 1426 0046 3B75     		strb	r3, [r7, #20]
 850:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1427              		.loc 1 850 0 is_stmt 1 discriminator 3
 1428 0048 07F11403 		add	r3, r7, #20
 1429 004c F868     		ldr	r0, [r7, #12]
 1430 004e B968     		ldr	r1, [r7, #8]
 1431 0050 1A46     		mov	r2, r3
 1432 0052 FFF7FEFF 		bl	UTIL1_strcat
 851:../Generated_Code/UTIL1.c **** }
 1433              		.loc 1 851 0 discriminator 3
 1434 0056 1837     		adds	r7, r7, #24
 1435 0058 BD46     		mov	sp, r7
 1436              		@ sp needed
 1437 005a 80BD     		pop	{r7, pc}
 1438              		.cfi_endproc
 1439              	.LFE20:
 1441              		.section	.text.UTIL1_strcatNum16Hex,"ax",%progbits
 1442              		.align	2
 1443              		.global	UTIL1_strcatNum16Hex
 1444              		.thumb
 1445              		.thumb_func
 1447              	UTIL1_strcatNum16Hex:
 1448              	.LFB21:
 852:../Generated_Code/UTIL1.c **** 
 853:../Generated_Code/UTIL1.c **** /*
 854:../Generated_Code/UTIL1.c **** ** ===================================================================
 855:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum16Hex (component Utility)
 856:../Generated_Code/UTIL1.c **** **     Description :
 857:../Generated_Code/UTIL1.c **** **         Appends a 16bit unsigned value to a string buffer as hex
 858:../Generated_Code/UTIL1.c **** **         number (without a 0x prefix).
 859:../Generated_Code/UTIL1.c **** **     Parameters  :
 860:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 861:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 862:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 863:../Generated_Code/UTIL1.c **** **                           bytes).
 864:../Generated_Code/UTIL1.c **** **         num             - Value to convert.
 865:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 866:../Generated_Code/UTIL1.c **** ** ===================================================================
 867:../Generated_Code/UTIL1.c **** */
 868:../Generated_Code/UTIL1.c **** /*!
 869:../Generated_Code/UTIL1.c ****   \brief Adds a 16bit number as hex value to a string.
 870:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 871:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 872:../Generated_Code/UTIL1.c ****   \param[in] num The 16bit number to add
 873:../Generated_Code/UTIL1.c ****   */
 874:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum16Hex(uint8_t *dst, size_t dstSize, uint16_t num)
 875:../Generated_Code/UTIL1.c **** {
 1449              		.loc 1 875 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 24
 1452              		@ frame_needed = 1, uses_anonymous_args = 0
 1453 0000 80B5     		push	{r7, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 86B0     		sub	sp, sp, #24
 1458              		.cfi_def_cfa_offset 32
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 F860     		str	r0, [r7, #12]
 1462 0008 B960     		str	r1, [r7, #8]
 1463 000a 1346     		mov	r3, r2
 1464 000c FB80     		strh	r3, [r7, #6]	@ movhi
 876:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("FFFF")]; /* maximum buffer size we need */
 877:../Generated_Code/UTIL1.c ****   unsigned char hex;
 878:../Generated_Code/UTIL1.c ****   int8_t i;
 879:../Generated_Code/UTIL1.c **** 
 880:../Generated_Code/UTIL1.c ****   buf[4] = '\0';
 1465              		.loc 1 880 0
 1466 000e 0023     		movs	r3, #0
 1467 0010 3B75     		strb	r3, [r7, #20]
 881:../Generated_Code/UTIL1.c ****   i = 3;
 1468              		.loc 1 881 0
 1469 0012 0323     		movs	r3, #3
 1470 0014 FB75     		strb	r3, [r7, #23]
 1471              	.L69:
 882:../Generated_Code/UTIL1.c ****   do {
 883:../Generated_Code/UTIL1.c ****     hex = (char)(num & 0x0F);
 1472              		.loc 1 883 0
 1473 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1474 0018 DBB2     		uxtb	r3, r3
 1475 001a 03F00F03 		and	r3, r3, #15
 1476 001e BB75     		strb	r3, [r7, #22]
 884:../Generated_Code/UTIL1.c ****     buf[i] = (char)(hex + ((hex <= 9) ? '0' : ('A'-10)));
 1477              		.loc 1 884 0
 1478 0020 97F91710 		ldrsb	r1, [r7, #23]
 1479 0024 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1480 0026 092B     		cmp	r3, #9
 1481 0028 01D8     		bhi	.L67
 1482              		.loc 1 884 0 is_stmt 0 discriminator 1
 1483 002a 3023     		movs	r3, #48
 1484 002c 00E0     		b	.L68
 1485              	.L67:
 1486              		.loc 1 884 0 discriminator 2
 1487 002e 3723     		movs	r3, #55
 1488              	.L68:
 1489              		.loc 1 884 0 discriminator 3
 1490 0030 BA7D     		ldrb	r2, [r7, #22]
 1491 0032 1344     		add	r3, r3, r2
 1492 0034 DAB2     		uxtb	r2, r3
 1493 0036 07F11803 		add	r3, r7, #24
 1494 003a 0B44     		add	r3, r3, r1
 1495 003c 03F8082C 		strb	r2, [r3, #-8]
 885:../Generated_Code/UTIL1.c ****     num >>= 4;                          /* next nibble */
 1496              		.loc 1 885 0 is_stmt 1 discriminator 3
 1497 0040 FB88     		ldrh	r3, [r7, #6]
 1498 0042 1B09     		lsrs	r3, r3, #4
 1499 0044 FB80     		strh	r3, [r7, #6]	@ movhi
 886:../Generated_Code/UTIL1.c ****     i--;
 1500              		.loc 1 886 0 discriminator 3
 1501 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1502 0048 013B     		subs	r3, r3, #1
 1503 004a FB75     		strb	r3, [r7, #23]
 887:../Generated_Code/UTIL1.c ****   } while (i>=0);
 1504              		.loc 1 887 0 discriminator 3
 1505 004c 97F91730 		ldrsb	r3, [r7, #23]
 1506 0050 002B     		cmp	r3, #0
 1507 0052 E0DA     		bge	.L69
 888:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1508              		.loc 1 888 0
 1509 0054 07F11003 		add	r3, r7, #16
 1510 0058 F868     		ldr	r0, [r7, #12]
 1511 005a B968     		ldr	r1, [r7, #8]
 1512 005c 1A46     		mov	r2, r3
 1513 005e FFF7FEFF 		bl	UTIL1_strcat
 889:../Generated_Code/UTIL1.c **** }
 1514              		.loc 1 889 0
 1515 0062 1837     		adds	r7, r7, #24
 1516 0064 BD46     		mov	sp, r7
 1517              		@ sp needed
 1518 0066 80BD     		pop	{r7, pc}
 1519              		.cfi_endproc
 1520              	.LFE21:
 1522              		.section	.text.UTIL1_strcatNum24Hex,"ax",%progbits
 1523              		.align	2
 1524              		.global	UTIL1_strcatNum24Hex
 1525              		.thumb
 1526              		.thumb_func
 1528              	UTIL1_strcatNum24Hex:
 1529              	.LFB22:
 890:../Generated_Code/UTIL1.c **** 
 891:../Generated_Code/UTIL1.c **** /*
 892:../Generated_Code/UTIL1.c **** ** ===================================================================
 893:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum24Hex (component Utility)
 894:../Generated_Code/UTIL1.c **** **     Description :
 895:../Generated_Code/UTIL1.c **** **         Appends a 32bit unsigned value to a string buffer as hex
 896:../Generated_Code/UTIL1.c **** **         number (without a 0x prefix). Only 24bits are used.
 897:../Generated_Code/UTIL1.c **** **     Parameters  :
 898:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 899:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 900:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 901:../Generated_Code/UTIL1.c **** **                           bytes).
 902:../Generated_Code/UTIL1.c **** **         num             - Value to convert.
 903:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 904:../Generated_Code/UTIL1.c **** ** ===================================================================
 905:../Generated_Code/UTIL1.c **** */
 906:../Generated_Code/UTIL1.c **** /*!
 907:../Generated_Code/UTIL1.c ****   \brief Adds a 24bit number as hex value to a string.
 908:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 909:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 910:../Generated_Code/UTIL1.c ****   \param[in] num The 24bit number to add
 911:../Generated_Code/UTIL1.c ****   */
 912:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum24Hex(uint8_t *dst, size_t dstSize, uint32_t num)
 913:../Generated_Code/UTIL1.c **** {
 1530              		.loc 1 913 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 32
 1533              		@ frame_needed = 1, uses_anonymous_args = 0
 1534 0000 80B5     		push	{r7, lr}
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 88B0     		sub	sp, sp, #32
 1539              		.cfi_def_cfa_offset 40
 1540 0004 00AF     		add	r7, sp, #0
 1541              		.cfi_def_cfa_register 7
 1542 0006 F860     		str	r0, [r7, #12]
 1543 0008 B960     		str	r1, [r7, #8]
 1544 000a 7A60     		str	r2, [r7, #4]
 914:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("FFFFFF")]; /* maximum buffer size we need */
 915:../Generated_Code/UTIL1.c ****   unsigned char hex;
 916:../Generated_Code/UTIL1.c ****   int8_t i;
 917:../Generated_Code/UTIL1.c **** 
 918:../Generated_Code/UTIL1.c ****   buf[6] = '\0';
 1545              		.loc 1 918 0
 1546 000c 0023     		movs	r3, #0
 1547 000e BB76     		strb	r3, [r7, #26]
 919:../Generated_Code/UTIL1.c ****   i = 5;
 1548              		.loc 1 919 0
 1549 0010 0523     		movs	r3, #5
 1550 0012 FB77     		strb	r3, [r7, #31]
 1551              	.L73:
 920:../Generated_Code/UTIL1.c ****   do {
 921:../Generated_Code/UTIL1.c ****     hex = (char)(num & 0x0F);
 1552              		.loc 1 921 0
 1553 0014 7B68     		ldr	r3, [r7, #4]
 1554 0016 DBB2     		uxtb	r3, r3
 1555 0018 03F00F03 		and	r3, r3, #15
 1556 001c BB77     		strb	r3, [r7, #30]
 922:../Generated_Code/UTIL1.c ****     buf[i] = (char)(hex + ((hex <= 9) ? '0' : ('A'-10)));
 1557              		.loc 1 922 0
 1558 001e 97F91F10 		ldrsb	r1, [r7, #31]
 1559 0022 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1560 0024 092B     		cmp	r3, #9
 1561 0026 01D8     		bhi	.L71
 1562              		.loc 1 922 0 is_stmt 0 discriminator 1
 1563 0028 3023     		movs	r3, #48
 1564 002a 00E0     		b	.L72
 1565              	.L71:
 1566              		.loc 1 922 0 discriminator 2
 1567 002c 3723     		movs	r3, #55
 1568              	.L72:
 1569              		.loc 1 922 0 discriminator 3
 1570 002e BA7F     		ldrb	r2, [r7, #30]
 1571 0030 1344     		add	r3, r3, r2
 1572 0032 DAB2     		uxtb	r2, r3
 1573 0034 07F12003 		add	r3, r7, #32
 1574 0038 0B44     		add	r3, r3, r1
 1575 003a 03F80C2C 		strb	r2, [r3, #-12]
 923:../Generated_Code/UTIL1.c ****     num >>= 4;                          /* next nibble */
 1576              		.loc 1 923 0 is_stmt 1 discriminator 3
 1577 003e 7B68     		ldr	r3, [r7, #4]
 1578 0040 1B09     		lsrs	r3, r3, #4
 1579 0042 7B60     		str	r3, [r7, #4]
 924:../Generated_Code/UTIL1.c ****     i--;
 1580              		.loc 1 924 0 discriminator 3
 1581 0044 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1582 0046 013B     		subs	r3, r3, #1
 1583 0048 FB77     		strb	r3, [r7, #31]
 925:../Generated_Code/UTIL1.c ****   } while (i>=0);
 1584              		.loc 1 925 0 discriminator 3
 1585 004a 97F91F30 		ldrsb	r3, [r7, #31]
 1586 004e 002B     		cmp	r3, #0
 1587 0050 E0DA     		bge	.L73
 926:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1588              		.loc 1 926 0
 1589 0052 07F11403 		add	r3, r7, #20
 1590 0056 F868     		ldr	r0, [r7, #12]
 1591 0058 B968     		ldr	r1, [r7, #8]
 1592 005a 1A46     		mov	r2, r3
 1593 005c FFF7FEFF 		bl	UTIL1_strcat
 927:../Generated_Code/UTIL1.c **** }
 1594              		.loc 1 927 0
 1595 0060 2037     		adds	r7, r7, #32
 1596 0062 BD46     		mov	sp, r7
 1597              		@ sp needed
 1598 0064 80BD     		pop	{r7, pc}
 1599              		.cfi_endproc
 1600              	.LFE22:
 1602 0066 00BF     		.section	.text.UTIL1_strcatNum32Hex,"ax",%progbits
 1603              		.align	2
 1604              		.global	UTIL1_strcatNum32Hex
 1605              		.thumb
 1606              		.thumb_func
 1608              	UTIL1_strcatNum32Hex:
 1609              	.LFB23:
 928:../Generated_Code/UTIL1.c **** 
 929:../Generated_Code/UTIL1.c **** /*
 930:../Generated_Code/UTIL1.c **** ** ===================================================================
 931:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32Hex (component Utility)
 932:../Generated_Code/UTIL1.c **** **     Description :
 933:../Generated_Code/UTIL1.c **** **         Appends a 16bit unsigned value to a string buffer as hex
 934:../Generated_Code/UTIL1.c **** **         number (without a 0x prefix).
 935:../Generated_Code/UTIL1.c **** **     Parameters  :
 936:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 937:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 938:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 939:../Generated_Code/UTIL1.c **** **                           bytes).
 940:../Generated_Code/UTIL1.c **** **         num             - Value to convert.
 941:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 942:../Generated_Code/UTIL1.c **** ** ===================================================================
 943:../Generated_Code/UTIL1.c **** */
 944:../Generated_Code/UTIL1.c **** /*!
 945:../Generated_Code/UTIL1.c ****   \brief Adds a 32bit number as hex value to a string.
 946:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 947:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 948:../Generated_Code/UTIL1.c ****   \param[in] num The 32bit number to add
 949:../Generated_Code/UTIL1.c ****   */
 950:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32Hex(uint8_t *dst, size_t dstSize, uint32_t num)
 951:../Generated_Code/UTIL1.c **** {
 1610              		.loc 1 951 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 32
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614 0000 80B5     		push	{r7, lr}
 1615              		.cfi_def_cfa_offset 8
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 88B0     		sub	sp, sp, #32
 1619              		.cfi_def_cfa_offset 40
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 F860     		str	r0, [r7, #12]
 1623 0008 B960     		str	r1, [r7, #8]
 1624 000a 7A60     		str	r2, [r7, #4]
 952:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("FFFFFFFF")]; /* maximum buffer size we need */
 953:../Generated_Code/UTIL1.c ****   unsigned char hex;
 954:../Generated_Code/UTIL1.c ****   int8_t i;
 955:../Generated_Code/UTIL1.c **** 
 956:../Generated_Code/UTIL1.c ****   buf[8] = '\0';
 1625              		.loc 1 956 0
 1626 000c 0023     		movs	r3, #0
 1627 000e 3B77     		strb	r3, [r7, #28]
 957:../Generated_Code/UTIL1.c ****   i = 7;
 1628              		.loc 1 957 0
 1629 0010 0723     		movs	r3, #7
 1630 0012 FB77     		strb	r3, [r7, #31]
 1631              	.L77:
 958:../Generated_Code/UTIL1.c ****   do {
 959:../Generated_Code/UTIL1.c ****     hex = (char)(num & 0x0F);
 1632              		.loc 1 959 0
 1633 0014 7B68     		ldr	r3, [r7, #4]
 1634 0016 DBB2     		uxtb	r3, r3
 1635 0018 03F00F03 		and	r3, r3, #15
 1636 001c BB77     		strb	r3, [r7, #30]
 960:../Generated_Code/UTIL1.c ****     buf[i] = (char)(hex + ((hex <= 9) ? '0' : ('A'-10)));
 1637              		.loc 1 960 0
 1638 001e 97F91F10 		ldrsb	r1, [r7, #31]
 1639 0022 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1640 0024 092B     		cmp	r3, #9
 1641 0026 01D8     		bhi	.L75
 1642              		.loc 1 960 0 is_stmt 0 discriminator 1
 1643 0028 3023     		movs	r3, #48
 1644 002a 00E0     		b	.L76
 1645              	.L75:
 1646              		.loc 1 960 0 discriminator 2
 1647 002c 3723     		movs	r3, #55
 1648              	.L76:
 1649              		.loc 1 960 0 discriminator 3
 1650 002e BA7F     		ldrb	r2, [r7, #30]
 1651 0030 1344     		add	r3, r3, r2
 1652 0032 DAB2     		uxtb	r2, r3
 1653 0034 07F12003 		add	r3, r7, #32
 1654 0038 0B44     		add	r3, r3, r1
 1655 003a 03F80C2C 		strb	r2, [r3, #-12]
 961:../Generated_Code/UTIL1.c ****     num >>= 4;                          /* next nibble */
 1656              		.loc 1 961 0 is_stmt 1 discriminator 3
 1657 003e 7B68     		ldr	r3, [r7, #4]
 1658 0040 1B09     		lsrs	r3, r3, #4
 1659 0042 7B60     		str	r3, [r7, #4]
 962:../Generated_Code/UTIL1.c ****     i--;
 1660              		.loc 1 962 0 discriminator 3
 1661 0044 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1662 0046 013B     		subs	r3, r3, #1
 1663 0048 FB77     		strb	r3, [r7, #31]
 963:../Generated_Code/UTIL1.c ****   } while (i>=0);
 1664              		.loc 1 963 0 discriminator 3
 1665 004a 97F91F30 		ldrsb	r3, [r7, #31]
 1666 004e 002B     		cmp	r3, #0
 1667 0050 E0DA     		bge	.L77
 964:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1668              		.loc 1 964 0
 1669 0052 07F11403 		add	r3, r7, #20
 1670 0056 F868     		ldr	r0, [r7, #12]
 1671 0058 B968     		ldr	r1, [r7, #8]
 1672 005a 1A46     		mov	r2, r3
 1673 005c FFF7FEFF 		bl	UTIL1_strcat
 965:../Generated_Code/UTIL1.c **** }
 1674              		.loc 1 965 0
 1675 0060 2037     		adds	r7, r7, #32
 1676 0062 BD46     		mov	sp, r7
 1677              		@ sp needed
 1678 0064 80BD     		pop	{r7, pc}
 1679              		.cfi_endproc
 1680              	.LFE23:
 1682 0066 00BF     		.section	.text.UTIL1_strcatNum32s,"ax",%progbits
 1683              		.align	2
 1684              		.global	UTIL1_strcatNum32s
 1685              		.thumb
 1686              		.thumb_func
 1688              	UTIL1_strcatNum32s:
 1689              	.LFB24:
 966:../Generated_Code/UTIL1.c **** 
 967:../Generated_Code/UTIL1.c **** /*
 968:../Generated_Code/UTIL1.c **** ** ===================================================================
 969:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32s (component Utility)
 970:../Generated_Code/UTIL1.c **** **     Description :
 971:../Generated_Code/UTIL1.c **** **         Appends a 32bit signed value to a string buffer.
 972:../Generated_Code/UTIL1.c **** **     Parameters  :
 973:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
 974:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
 975:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
 976:../Generated_Code/UTIL1.c **** **                           bytes).
 977:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
 978:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
 979:../Generated_Code/UTIL1.c **** ** ===================================================================
 980:../Generated_Code/UTIL1.c **** */
 981:../Generated_Code/UTIL1.c **** /*!
 982:../Generated_Code/UTIL1.c ****   \brief appends a 32bit (long) number to a string. Always terminates the result string.
 983:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
 984:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
 985:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
 986:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
 987:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit number to add
 988:../Generated_Code/UTIL1.c ****   */
 989:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32s(uint8_t *dst, size_t dstSize, int32_t val)
 990:../Generated_Code/UTIL1.c **** {
 1690              		.loc 1 990 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 32
 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694 0000 80B5     		push	{r7, lr}
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 7, -8
 1697              		.cfi_offset 14, -4
 1698 0002 88B0     		sub	sp, sp, #32
 1699              		.cfi_def_cfa_offset 40
 1700 0004 00AF     		add	r7, sp, #0
 1701              		.cfi_def_cfa_register 7
 1702 0006 F860     		str	r0, [r7, #12]
 1703 0008 B960     		str	r1, [r7, #8]
 1704 000a 7A60     		str	r2, [r7, #4]
 991:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("-4294967295")]; /* maximum buffer size we need */
 992:../Generated_Code/UTIL1.c **** 
 993:../Generated_Code/UTIL1.c ****   UTIL1_Num32sToStr(buf, sizeof(buf), val);
 1705              		.loc 1 993 0
 1706 000c 07F11403 		add	r3, r7, #20
 1707 0010 1846     		mov	r0, r3
 1708 0012 0C21     		movs	r1, #12
 1709 0014 7A68     		ldr	r2, [r7, #4]
 1710 0016 FFF7FEFF 		bl	UTIL1_Num32sToStr
 994:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1711              		.loc 1 994 0
 1712 001a 07F11403 		add	r3, r7, #20
 1713 001e F868     		ldr	r0, [r7, #12]
 1714 0020 B968     		ldr	r1, [r7, #8]
 1715 0022 1A46     		mov	r2, r3
 1716 0024 FFF7FEFF 		bl	UTIL1_strcat
 995:../Generated_Code/UTIL1.c **** }
 1717              		.loc 1 995 0
 1718 0028 2037     		adds	r7, r7, #32
 1719 002a BD46     		mov	sp, r7
 1720              		@ sp needed
 1721 002c 80BD     		pop	{r7, pc}
 1722              		.cfi_endproc
 1723              	.LFE24:
 1725 002e 00BF     		.section	.text.UTIL1_strcatNum32u,"ax",%progbits
 1726              		.align	2
 1727              		.global	UTIL1_strcatNum32u
 1728              		.thumb
 1729              		.thumb_func
 1731              	UTIL1_strcatNum32u:
 1732              	.LFB25:
 996:../Generated_Code/UTIL1.c **** 
 997:../Generated_Code/UTIL1.c **** /*
 998:../Generated_Code/UTIL1.c **** ** ===================================================================
 999:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32u (component Utility)
1000:../Generated_Code/UTIL1.c **** **     Description :
1001:../Generated_Code/UTIL1.c **** **         Appends a 32bit signed value to a string buffer.
1002:../Generated_Code/UTIL1.c **** **     Parameters  :
1003:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1004:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
1005:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
1006:../Generated_Code/UTIL1.c **** **                           bytes).
1007:../Generated_Code/UTIL1.c **** **         val             - Value to convert.
1008:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
1009:../Generated_Code/UTIL1.c **** ** ===================================================================
1010:../Generated_Code/UTIL1.c **** */
1011:../Generated_Code/UTIL1.c **** /*!
1012:../Generated_Code/UTIL1.c ****   \brief appends a 32bit (unsigned long) number to a string. Always terminates the result string.
1013:../Generated_Code/UTIL1.c ****      Note: count is the size of dst INCLUDING zero byte.
1014:../Generated_Code/UTIL1.c ****      Precondition: src, dst != NULL
1015:../Generated_Code/UTIL1.c ****   \param[in,out] dst Start of string buffer, where to append the number string
1016:../Generated_Code/UTIL1.c ****   \param[in] dstSize The size of the buffer, including the zero byte
1017:../Generated_Code/UTIL1.c ****   \param[in] val The 32bit unsigned number to add
1018:../Generated_Code/UTIL1.c ****   */
1019:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32u(uint8_t *dst, size_t dstSize, uint32_t val)
1020:../Generated_Code/UTIL1.c **** {
 1733              		.loc 1 1020 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 32
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737 0000 80B5     		push	{r7, lr}
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 7, -8
 1740              		.cfi_offset 14, -4
 1741 0002 88B0     		sub	sp, sp, #32
 1742              		.cfi_def_cfa_offset 40
 1743 0004 00AF     		add	r7, sp, #0
 1744              		.cfi_def_cfa_register 7
 1745 0006 F860     		str	r0, [r7, #12]
 1746 0008 B960     		str	r1, [r7, #8]
 1747 000a 7A60     		str	r2, [r7, #4]
1021:../Generated_Code/UTIL1.c ****   unsigned char buf[sizeof("4294967295")]; /* maximum buffer size we need */
1022:../Generated_Code/UTIL1.c **** 
1023:../Generated_Code/UTIL1.c ****   UTIL1_Num32uToStr(buf, sizeof(buf), val);
 1748              		.loc 1 1023 0
 1749 000c 07F11403 		add	r3, r7, #20
 1750 0010 1846     		mov	r0, r3
 1751 0012 0B21     		movs	r1, #11
 1752 0014 7A68     		ldr	r2, [r7, #4]
 1753 0016 FFF7FEFF 		bl	UTIL1_Num32uToStr
1024:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 1754              		.loc 1 1024 0
 1755 001a 07F11403 		add	r3, r7, #20
 1756 001e F868     		ldr	r0, [r7, #12]
 1757 0020 B968     		ldr	r1, [r7, #8]
 1758 0022 1A46     		mov	r2, r3
 1759 0024 FFF7FEFF 		bl	UTIL1_strcat
1025:../Generated_Code/UTIL1.c **** }
 1760              		.loc 1 1025 0
 1761 0028 2037     		adds	r7, r7, #32
 1762 002a BD46     		mov	sp, r7
 1763              		@ sp needed
 1764 002c 80BD     		pop	{r7, pc}
 1765              		.cfi_endproc
 1766              	.LFE25:
 1768 002e 00BF     		.section	.rodata
 1769 0007 00       		.align	2
 1770              	.LC1:
 1771 0008 2D323134 		.ascii	"-2147483648\000"
 1771      37343833 
 1771      36343800 
 1772              		.section	.text.UTIL1_Num32sToStr,"ax",%progbits
 1773              		.align	2
 1774              		.global	UTIL1_Num32sToStr
 1775              		.thumb
 1776              		.thumb_func
 1778              	UTIL1_Num32sToStr:
 1779              	.LFB26:
1026:../Generated_Code/UTIL1.c **** 
1027:../Generated_Code/UTIL1.c **** /*
1028:../Generated_Code/UTIL1.c **** ** ===================================================================
1029:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num32sToStr (component Utility)
1030:../Generated_Code/UTIL1.c **** **     Description :
1031:../Generated_Code/UTIL1.c **** **         Converts a signed 32bit value into a string.
1032:../Generated_Code/UTIL1.c **** **     Parameters  :
1033:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1034:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
1035:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
1036:../Generated_Code/UTIL1.c **** **                           bytes).
1037:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
1038:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
1039:../Generated_Code/UTIL1.c **** ** ===================================================================
1040:../Generated_Code/UTIL1.c **** */
1041:../Generated_Code/UTIL1.c **** /*!
1042:../Generated_Code/UTIL1.c ****   \brief Converts a 32bit number to a string.
1043:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
1044:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
1045:../Generated_Code/UTIL1.c ****   \param[in] val 32bit signed number to convert.
1046:../Generated_Code/UTIL1.c ****  */
1047:../Generated_Code/UTIL1.c **** void UTIL1_Num32sToStr(uint8_t *dst, size_t dstSize, int32_t val)
1048:../Generated_Code/UTIL1.c **** {
 1780              		.loc 1 1048 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 32
 1783              		@ frame_needed = 1, uses_anonymous_args = 0
 1784 0000 80B5     		push	{r7, lr}
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 7, -8
 1787              		.cfi_offset 14, -4
 1788 0002 88B0     		sub	sp, sp, #32
 1789              		.cfi_def_cfa_offset 40
 1790 0004 00AF     		add	r7, sp, #0
 1791              		.cfi_def_cfa_register 7
 1792 0006 F860     		str	r0, [r7, #12]
 1793 0008 B960     		str	r1, [r7, #8]
 1794 000a 7A60     		str	r2, [r7, #4]
1049:../Generated_Code/UTIL1.c ****   unsigned char *ptr = ((unsigned char *)dst);
 1795              		.loc 1 1049 0
 1796 000c FB68     		ldr	r3, [r7, #12]
 1797 000e BB61     		str	r3, [r7, #24]
1050:../Generated_Code/UTIL1.c ****   unsigned char i=0, j;
 1798              		.loc 1 1050 0
 1799 0010 0023     		movs	r3, #0
 1800 0012 FB77     		strb	r3, [r7, #31]
1051:../Generated_Code/UTIL1.c ****   unsigned char tmp;
1052:../Generated_Code/UTIL1.c ****   unsigned char sign = (unsigned char)(val < 0);
 1801              		.loc 1 1052 0
 1802 0014 7B68     		ldr	r3, [r7, #4]
 1803 0016 DB0F     		lsrs	r3, r3, #31
 1804 0018 DBB2     		uxtb	r3, r3
 1805 001a FB75     		strb	r3, [r7, #23]
1053:../Generated_Code/UTIL1.c **** 
1054:../Generated_Code/UTIL1.c ****   if (val==(int32_t)(0x80000000)) { /* special case 0x80000000/-2147483648: prevent overflow below.
 1806              		.loc 1 1054 0
 1807 001c 7B68     		ldr	r3, [r7, #4]
 1808 001e B3F1004F 		cmp	r3, #-2147483648
 1809 0022 05D1     		bne	.L81
1055:../Generated_Code/UTIL1.c ****     UTIL1_strcpy(dst, dstSize, (unsigned char*)"-2147483648");
 1810              		.loc 1 1055 0
 1811 0024 F868     		ldr	r0, [r7, #12]
 1812 0026 B968     		ldr	r1, [r7, #8]
 1813 0028 3E4A     		ldr	r2, .L91
 1814 002a FFF7FEFF 		bl	UTIL1_strcpy
1056:../Generated_Code/UTIL1.c ****     return;
 1815              		.loc 1 1056 0
 1816 002e 76E0     		b	.L80
 1817              	.L81:
1057:../Generated_Code/UTIL1.c ****   }
1058:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 1818              		.loc 1 1058 0
 1819 0030 BB68     		ldr	r3, [r7, #8]
 1820 0032 013B     		subs	r3, r3, #1
 1821 0034 BB60     		str	r3, [r7, #8]
1059:../Generated_Code/UTIL1.c ****   if (sign) {
 1822              		.loc 1 1059 0
 1823 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1824 0038 002B     		cmp	r3, #0
 1825 003a 02D0     		beq	.L83
1060:../Generated_Code/UTIL1.c ****     val = -val;
 1826              		.loc 1 1060 0
 1827 003c 7B68     		ldr	r3, [r7, #4]
 1828 003e 5B42     		negs	r3, r3
 1829 0040 7B60     		str	r3, [r7, #4]
 1830              	.L83:
1061:../Generated_Code/UTIL1.c ****   }
1062:../Generated_Code/UTIL1.c ****   if (val == 0 && dstSize > 0){
 1831              		.loc 1 1062 0
 1832 0042 7B68     		ldr	r3, [r7, #4]
 1833 0044 002B     		cmp	r3, #0
 1834 0046 0DD1     		bne	.L84
 1835              		.loc 1 1062 0 is_stmt 0 discriminator 1
 1836 0048 BB68     		ldr	r3, [r7, #8]
 1837 004a 002B     		cmp	r3, #0
 1838 004c 0AD0     		beq	.L84
1063:../Generated_Code/UTIL1.c ****     ptr[i++] = '0';
 1839              		.loc 1 1063 0 is_stmt 1
 1840 004e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1841 0050 5A1C     		adds	r2, r3, #1
 1842 0052 FA77     		strb	r2, [r7, #31]
 1843 0054 BA69     		ldr	r2, [r7, #24]
 1844 0056 1344     		add	r3, r3, r2
 1845 0058 3022     		movs	r2, #48
 1846 005a 1A70     		strb	r2, [r3]
1064:../Generated_Code/UTIL1.c ****     dstSize--;
 1847              		.loc 1 1064 0
 1848 005c BB68     		ldr	r3, [r7, #8]
 1849 005e 013B     		subs	r3, r3, #1
 1850 0060 BB60     		str	r3, [r7, #8]
1065:../Generated_Code/UTIL1.c ****   }
1066:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 1851              		.loc 1 1066 0
 1852 0062 20E0     		b	.L85
 1853              	.L84:
 1854 0064 1FE0     		b	.L85
 1855              	.L87:
1067:../Generated_Code/UTIL1.c ****     ptr[i++] = (unsigned char)((val % 10) + '0');
 1856              		.loc 1 1067 0
 1857 0066 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1858 0068 5A1C     		adds	r2, r3, #1
 1859 006a FA77     		strb	r2, [r7, #31]
 1860 006c BA69     		ldr	r2, [r7, #24]
 1861 006e D018     		adds	r0, r2, r3
 1862 0070 7968     		ldr	r1, [r7, #4]
 1863 0072 2D4B     		ldr	r3, .L91+4
 1864 0074 83FB0123 		smull	r2, r3, r3, r1
 1865 0078 9A10     		asrs	r2, r3, #2
 1866 007a CB17     		asrs	r3, r1, #31
 1867 007c D21A     		subs	r2, r2, r3
 1868 007e 1346     		mov	r3, r2
 1869 0080 9B00     		lsls	r3, r3, #2
 1870 0082 1344     		add	r3, r3, r2
 1871 0084 5B00     		lsls	r3, r3, #1
 1872 0086 CA1A     		subs	r2, r1, r3
 1873 0088 D3B2     		uxtb	r3, r2
 1874 008a 3033     		adds	r3, r3, #48
 1875 008c DBB2     		uxtb	r3, r3
 1876 008e 0370     		strb	r3, [r0]
1068:../Generated_Code/UTIL1.c ****     dstSize--;
 1877              		.loc 1 1068 0
 1878 0090 BB68     		ldr	r3, [r7, #8]
 1879 0092 013B     		subs	r3, r3, #1
 1880 0094 BB60     		str	r3, [r7, #8]
1069:../Generated_Code/UTIL1.c ****     val /= 10;
 1881              		.loc 1 1069 0
 1882 0096 7B68     		ldr	r3, [r7, #4]
 1883 0098 234A     		ldr	r2, .L91+4
 1884 009a 82FB0312 		smull	r1, r2, r2, r3
 1885 009e 9210     		asrs	r2, r2, #2
 1886 00a0 DB17     		asrs	r3, r3, #31
 1887 00a2 D31A     		subs	r3, r2, r3
 1888 00a4 7B60     		str	r3, [r7, #4]
 1889              	.L85:
1066:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 1890              		.loc 1 1066 0 discriminator 1
 1891 00a6 7B68     		ldr	r3, [r7, #4]
 1892 00a8 002B     		cmp	r3, #0
 1893 00aa 02DD     		ble	.L86
1066:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 1894              		.loc 1 1066 0 is_stmt 0 discriminator 2
 1895 00ac BB68     		ldr	r3, [r7, #8]
 1896 00ae 002B     		cmp	r3, #0
 1897 00b0 D9D1     		bne	.L87
 1898              	.L86:
1070:../Generated_Code/UTIL1.c ****   }
1071:../Generated_Code/UTIL1.c ****   if (sign && dstSize > 0){
 1899              		.loc 1 1071 0 is_stmt 1
 1900 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1901 00b4 002B     		cmp	r3, #0
 1902 00b6 09D0     		beq	.L88
 1903              		.loc 1 1071 0 is_stmt 0 discriminator 1
 1904 00b8 BB68     		ldr	r3, [r7, #8]
 1905 00ba 002B     		cmp	r3, #0
 1906 00bc 06D0     		beq	.L88
1072:../Generated_Code/UTIL1.c ****     ptr[i++] = '-';
 1907              		.loc 1 1072 0 is_stmt 1
 1908 00be FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1909 00c0 5A1C     		adds	r2, r3, #1
 1910 00c2 FA77     		strb	r2, [r7, #31]
 1911 00c4 BA69     		ldr	r2, [r7, #24]
 1912 00c6 1344     		add	r3, r3, r2
 1913 00c8 2D22     		movs	r2, #45
 1914 00ca 1A70     		strb	r2, [r3]
 1915              	.L88:
1073:../Generated_Code/UTIL1.c ****   }
1074:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 1916              		.loc 1 1074 0
 1917 00cc 0023     		movs	r3, #0
 1918 00ce BB77     		strb	r3, [r7, #30]
 1919 00d0 1AE0     		b	.L89
 1920              	.L90:
1075:../Generated_Code/UTIL1.c ****     tmp = ptr[j];
 1921              		.loc 1 1075 0 discriminator 2
 1922 00d2 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1923 00d4 BA69     		ldr	r2, [r7, #24]
 1924 00d6 1344     		add	r3, r3, r2
 1925 00d8 1B78     		ldrb	r3, [r3]
 1926 00da BB75     		strb	r3, [r7, #22]
1076:../Generated_Code/UTIL1.c ****     ptr[j] = ptr[(i-j)-1];
 1927              		.loc 1 1076 0 discriminator 2
 1928 00dc BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1929 00de BA69     		ldr	r2, [r7, #24]
 1930 00e0 1344     		add	r3, r3, r2
 1931 00e2 F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 1932 00e4 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1933 00e6 8A1A     		subs	r2, r1, r2
 1934 00e8 013A     		subs	r2, r2, #1
 1935 00ea B969     		ldr	r1, [r7, #24]
 1936 00ec 0A44     		add	r2, r2, r1
 1937 00ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1938 00f0 1A70     		strb	r2, [r3]
1077:../Generated_Code/UTIL1.c ****     ptr[(i-j)-1] = tmp;
 1939              		.loc 1 1077 0 discriminator 2
 1940 00f2 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1941 00f4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1942 00f6 D31A     		subs	r3, r2, r3
 1943 00f8 013B     		subs	r3, r3, #1
 1944 00fa BA69     		ldr	r2, [r7, #24]
 1945 00fc 1344     		add	r3, r3, r2
 1946 00fe BA7D     		ldrb	r2, [r7, #22]
 1947 0100 1A70     		strb	r2, [r3]
1074:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 1948              		.loc 1 1074 0 discriminator 2
 1949 0102 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1950 0104 0133     		adds	r3, r3, #1
 1951 0106 BB77     		strb	r3, [r7, #30]
 1952              	.L89:
1074:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 1953              		.loc 1 1074 0 is_stmt 0 discriminator 1
 1954 0108 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1955 010a 5B08     		lsrs	r3, r3, #1
 1956 010c DBB2     		uxtb	r3, r3
 1957 010e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1958 0110 9A42     		cmp	r2, r3
 1959 0112 DED3     		bcc	.L90
1078:../Generated_Code/UTIL1.c ****   }
1079:../Generated_Code/UTIL1.c ****   ptr[i] = '\0';
 1960              		.loc 1 1079 0 is_stmt 1
 1961 0114 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1962 0116 BA69     		ldr	r2, [r7, #24]
 1963 0118 1344     		add	r3, r3, r2
 1964 011a 0022     		movs	r2, #0
 1965 011c 1A70     		strb	r2, [r3]
 1966              	.L80:
1080:../Generated_Code/UTIL1.c **** }
 1967              		.loc 1 1080 0
 1968 011e 2037     		adds	r7, r7, #32
 1969 0120 BD46     		mov	sp, r7
 1970              		@ sp needed
 1971 0122 80BD     		pop	{r7, pc}
 1972              	.L92:
 1973              		.align	2
 1974              	.L91:
 1975 0124 08000000 		.word	.LC1
 1976 0128 67666666 		.word	1717986919
 1977              		.cfi_endproc
 1978              	.LFE26:
 1980              		.section	.text.UTIL1_Num32uToStr,"ax",%progbits
 1981              		.align	2
 1982              		.global	UTIL1_Num32uToStr
 1983              		.thumb
 1984              		.thumb_func
 1986              	UTIL1_Num32uToStr:
 1987              	.LFB27:
1081:../Generated_Code/UTIL1.c **** 
1082:../Generated_Code/UTIL1.c **** /*
1083:../Generated_Code/UTIL1.c **** ** ===================================================================
1084:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Num32uToStr (component Utility)
1085:../Generated_Code/UTIL1.c **** **     Description :
1086:../Generated_Code/UTIL1.c **** **         Converts an unsigned 32bit value into a string.
1087:../Generated_Code/UTIL1.c **** **     Parameters  :
1088:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1089:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
1090:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
1091:../Generated_Code/UTIL1.c **** **                           bytes).
1092:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
1093:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
1094:../Generated_Code/UTIL1.c **** ** ===================================================================
1095:../Generated_Code/UTIL1.c **** */
1096:../Generated_Code/UTIL1.c **** /*!
1097:../Generated_Code/UTIL1.c ****   \brief Converts a 32bit signed number to a string.
1098:../Generated_Code/UTIL1.c ****   \param[in,out] dst String buffer to store the number.
1099:../Generated_Code/UTIL1.c ****   \param[in] dstSize Size of the destination buffer in uint8_ts.
1100:../Generated_Code/UTIL1.c ****   \param[in] val 32bit unsigned number to convert.
1101:../Generated_Code/UTIL1.c ****  */
1102:../Generated_Code/UTIL1.c **** void UTIL1_Num32uToStr(uint8_t *dst, size_t dstSize, uint32_t val)
1103:../Generated_Code/UTIL1.c **** {
 1988              		.loc 1 1103 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 32
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993 0000 80B4     		push	{r7}
 1994              		.cfi_def_cfa_offset 4
 1995              		.cfi_offset 7, -4
 1996 0002 89B0     		sub	sp, sp, #36
 1997              		.cfi_def_cfa_offset 40
 1998 0004 00AF     		add	r7, sp, #0
 1999              		.cfi_def_cfa_register 7
 2000 0006 F860     		str	r0, [r7, #12]
 2001 0008 B960     		str	r1, [r7, #8]
 2002 000a 7A60     		str	r2, [r7, #4]
1104:../Generated_Code/UTIL1.c ****   unsigned char *ptr = ((unsigned char *)dst);
 2003              		.loc 1 1104 0
 2004 000c FB68     		ldr	r3, [r7, #12]
 2005 000e BB61     		str	r3, [r7, #24]
1105:../Generated_Code/UTIL1.c ****   unsigned char i=0, j;
 2006              		.loc 1 1105 0
 2007 0010 0023     		movs	r3, #0
 2008 0012 FB77     		strb	r3, [r7, #31]
1106:../Generated_Code/UTIL1.c ****   unsigned char tmp;
1107:../Generated_Code/UTIL1.c **** 
1108:../Generated_Code/UTIL1.c ****   dstSize--; /* for zero byte */
 2009              		.loc 1 1108 0
 2010 0014 BB68     		ldr	r3, [r7, #8]
 2011 0016 013B     		subs	r3, r3, #1
 2012 0018 BB60     		str	r3, [r7, #8]
1109:../Generated_Code/UTIL1.c ****   if (val == 0 && dstSize > 0){
 2013              		.loc 1 1109 0
 2014 001a 7B68     		ldr	r3, [r7, #4]
 2015 001c 002B     		cmp	r3, #0
 2016 001e 0DD1     		bne	.L94
 2017              		.loc 1 1109 0 is_stmt 0 discriminator 1
 2018 0020 BB68     		ldr	r3, [r7, #8]
 2019 0022 002B     		cmp	r3, #0
 2020 0024 0AD0     		beq	.L94
1110:../Generated_Code/UTIL1.c ****     ptr[i++] = '0';
 2021              		.loc 1 1110 0 is_stmt 1
 2022 0026 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2023 0028 5A1C     		adds	r2, r3, #1
 2024 002a FA77     		strb	r2, [r7, #31]
 2025 002c BA69     		ldr	r2, [r7, #24]
 2026 002e 1344     		add	r3, r3, r2
 2027 0030 3022     		movs	r2, #48
 2028 0032 1A70     		strb	r2, [r3]
1111:../Generated_Code/UTIL1.c ****     dstSize--;
 2029              		.loc 1 1111 0
 2030 0034 BB68     		ldr	r3, [r7, #8]
 2031 0036 013B     		subs	r3, r3, #1
 2032 0038 BB60     		str	r3, [r7, #8]
1112:../Generated_Code/UTIL1.c ****   }
1113:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 2033              		.loc 1 1113 0
 2034 003a 1CE0     		b	.L95
 2035              	.L94:
 2036 003c 1BE0     		b	.L95
 2037              	.L97:
1114:../Generated_Code/UTIL1.c ****     ptr[i++] = (unsigned char)((val % 10) + '0');
 2038              		.loc 1 1114 0
 2039 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2040 0040 5A1C     		adds	r2, r3, #1
 2041 0042 FA77     		strb	r2, [r7, #31]
 2042 0044 BA69     		ldr	r2, [r7, #24]
 2043 0046 D018     		adds	r0, r2, r3
 2044 0048 7968     		ldr	r1, [r7, #4]
 2045 004a 254B     		ldr	r3, .L100
 2046 004c A3FB0123 		umull	r2, r3, r3, r1
 2047 0050 DA08     		lsrs	r2, r3, #3
 2048 0052 1346     		mov	r3, r2
 2049 0054 9B00     		lsls	r3, r3, #2
 2050 0056 1344     		add	r3, r3, r2
 2051 0058 5B00     		lsls	r3, r3, #1
 2052 005a CA1A     		subs	r2, r1, r3
 2053 005c D3B2     		uxtb	r3, r2
 2054 005e 3033     		adds	r3, r3, #48
 2055 0060 DBB2     		uxtb	r3, r3
 2056 0062 0370     		strb	r3, [r0]
1115:../Generated_Code/UTIL1.c ****     dstSize--;
 2057              		.loc 1 1115 0
 2058 0064 BB68     		ldr	r3, [r7, #8]
 2059 0066 013B     		subs	r3, r3, #1
 2060 0068 BB60     		str	r3, [r7, #8]
1116:../Generated_Code/UTIL1.c ****     val /= 10;
 2061              		.loc 1 1116 0
 2062 006a 7A68     		ldr	r2, [r7, #4]
 2063 006c 1C4B     		ldr	r3, .L100
 2064 006e A3FB0213 		umull	r1, r3, r3, r2
 2065 0072 DB08     		lsrs	r3, r3, #3
 2066 0074 7B60     		str	r3, [r7, #4]
 2067              	.L95:
1113:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 2068              		.loc 1 1113 0 discriminator 1
 2069 0076 7B68     		ldr	r3, [r7, #4]
 2070 0078 002B     		cmp	r3, #0
 2071 007a 02D0     		beq	.L96
1113:../Generated_Code/UTIL1.c ****   while (val > 0 && dstSize > 0) {
 2072              		.loc 1 1113 0 is_stmt 0 discriminator 2
 2073 007c BB68     		ldr	r3, [r7, #8]
 2074 007e 002B     		cmp	r3, #0
 2075 0080 DDD1     		bne	.L97
 2076              	.L96:
1117:../Generated_Code/UTIL1.c ****   }
1118:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 2077              		.loc 1 1118 0 is_stmt 1
 2078 0082 0023     		movs	r3, #0
 2079 0084 BB77     		strb	r3, [r7, #30]
 2080 0086 1AE0     		b	.L98
 2081              	.L99:
1119:../Generated_Code/UTIL1.c ****     tmp = ptr[j];
 2082              		.loc 1 1119 0 discriminator 2
 2083 0088 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2084 008a BA69     		ldr	r2, [r7, #24]
 2085 008c 1344     		add	r3, r3, r2
 2086 008e 1B78     		ldrb	r3, [r3]
 2087 0090 FB75     		strb	r3, [r7, #23]
1120:../Generated_Code/UTIL1.c ****     ptr[j] = ptr[(i-j)-1];
 2088              		.loc 1 1120 0 discriminator 2
 2089 0092 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2090 0094 BA69     		ldr	r2, [r7, #24]
 2091 0096 1344     		add	r3, r3, r2
 2092 0098 F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 2093 009a BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2094 009c 8A1A     		subs	r2, r1, r2
 2095 009e 013A     		subs	r2, r2, #1
 2096 00a0 B969     		ldr	r1, [r7, #24]
 2097 00a2 0A44     		add	r2, r2, r1
 2098 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2099 00a6 1A70     		strb	r2, [r3]
1121:../Generated_Code/UTIL1.c ****     ptr[(i-j)-1] = tmp;
 2100              		.loc 1 1121 0 discriminator 2
 2101 00a8 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2102 00aa BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2103 00ac D31A     		subs	r3, r2, r3
 2104 00ae 013B     		subs	r3, r3, #1
 2105 00b0 BA69     		ldr	r2, [r7, #24]
 2106 00b2 1344     		add	r3, r3, r2
 2107 00b4 FA7D     		ldrb	r2, [r7, #23]
 2108 00b6 1A70     		strb	r2, [r3]
1118:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 2109              		.loc 1 1118 0 discriminator 2
 2110 00b8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2111 00ba 0133     		adds	r3, r3, #1
 2112 00bc BB77     		strb	r3, [r7, #30]
 2113              	.L98:
1118:../Generated_Code/UTIL1.c ****   for(j=0; j<(i/2); j++) { /* swap buffer */
 2114              		.loc 1 1118 0 is_stmt 0 discriminator 1
 2115 00be FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2116 00c0 5B08     		lsrs	r3, r3, #1
 2117 00c2 DBB2     		uxtb	r3, r3
 2118 00c4 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2119 00c6 9A42     		cmp	r2, r3
 2120 00c8 DED3     		bcc	.L99
1122:../Generated_Code/UTIL1.c ****   }
1123:../Generated_Code/UTIL1.c ****   ptr[i] = '\0';
 2121              		.loc 1 1123 0 is_stmt 1
 2122 00ca FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2123 00cc BA69     		ldr	r2, [r7, #24]
 2124 00ce 1344     		add	r3, r3, r2
 2125 00d0 0022     		movs	r2, #0
 2126 00d2 1A70     		strb	r2, [r3]
1124:../Generated_Code/UTIL1.c **** }
 2127              		.loc 1 1124 0
 2128 00d4 2437     		adds	r7, r7, #36
 2129 00d6 BD46     		mov	sp, r7
 2130              		@ sp needed
 2131 00d8 5DF8047B 		ldr	r7, [sp], #4
 2132 00dc 7047     		bx	lr
 2133              	.L101:
 2134 00de 00BF     		.align	2
 2135              	.L100:
 2136 00e0 CDCCCCCC 		.word	-858993459
 2137              		.cfi_endproc
 2138              	.LFE27:
 2140              		.section	.text.UTIL1_IsLeapYear,"ax",%progbits
 2141              		.align	2
 2142              		.global	UTIL1_IsLeapYear
 2143              		.thumb
 2144              		.thumb_func
 2146              	UTIL1_IsLeapYear:
 2147              	.LFB28:
1125:../Generated_Code/UTIL1.c **** 
1126:../Generated_Code/UTIL1.c **** /*
1127:../Generated_Code/UTIL1.c **** ** ===================================================================
1128:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_IsLeapYear (component Utility)
1129:../Generated_Code/UTIL1.c **** **     Description :
1130:../Generated_Code/UTIL1.c **** **         Returns true if a given year is a leap year
1131:../Generated_Code/UTIL1.c **** **     Parameters  :
1132:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1133:../Generated_Code/UTIL1.c **** **         year            - Year, in the YYYY format.
1134:../Generated_Code/UTIL1.c **** **     Returns     :
1135:../Generated_Code/UTIL1.c **** **         ---             - If the year is a leap year or not.
1136:../Generated_Code/UTIL1.c **** ** ===================================================================
1137:../Generated_Code/UTIL1.c **** */
1138:../Generated_Code/UTIL1.c **** bool UTIL1_IsLeapYear(uint16_t year)
1139:../Generated_Code/UTIL1.c **** {
 2148              		.loc 1 1139 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 8
 2151              		@ frame_needed = 1, uses_anonymous_args = 0
 2152              		@ link register save eliminated.
 2153 0000 80B4     		push	{r7}
 2154              		.cfi_def_cfa_offset 4
 2155              		.cfi_offset 7, -4
 2156 0002 83B0     		sub	sp, sp, #12
 2157              		.cfi_def_cfa_offset 16
 2158 0004 00AF     		add	r7, sp, #0
 2159              		.cfi_def_cfa_register 7
 2160 0006 0346     		mov	r3, r0
 2161 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1140:../Generated_Code/UTIL1.c ****   return ((((year%4)==0) && (year%100)!=0) || (year%400)==0);
 2162              		.loc 1 1140 0
 2163 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 2164 000c 03F00303 		and	r3, r3, #3
 2165 0010 9BB2     		uxth	r3, r3
 2166 0012 002B     		cmp	r3, #0
 2167 0014 0BD1     		bne	.L103
 2168              		.loc 1 1140 0 is_stmt 0 discriminator 1
 2169 0016 FB88     		ldrh	r3, [r7, #6]
 2170 0018 104A     		ldr	r2, .L108
 2171 001a A2FB0312 		umull	r1, r2, r2, r3
 2172 001e 5209     		lsrs	r2, r2, #5
 2173 0020 6421     		movs	r1, #100
 2174 0022 01FB02F2 		mul	r2, r1, r2
 2175 0026 9B1A     		subs	r3, r3, r2
 2176 0028 9BB2     		uxth	r3, r3
 2177 002a 002B     		cmp	r3, #0
 2178 002c 0CD1     		bne	.L104
 2179              	.L103:
 2180              		.loc 1 1140 0 discriminator 2
 2181 002e FB88     		ldrh	r3, [r7, #6]
 2182 0030 0A4A     		ldr	r2, .L108
 2183 0032 A2FB0312 		umull	r1, r2, r2, r3
 2184 0036 D209     		lsrs	r2, r2, #7
 2185 0038 4FF4C871 		mov	r1, #400
 2186 003c 01FB02F2 		mul	r2, r1, r2
 2187 0040 9B1A     		subs	r3, r3, r2
 2188 0042 9BB2     		uxth	r3, r3
 2189 0044 002B     		cmp	r3, #0
 2190 0046 01D1     		bne	.L105
 2191              	.L104:
 2192              		.loc 1 1140 0 discriminator 1
 2193 0048 0123     		movs	r3, #1
 2194 004a 00E0     		b	.L106
 2195              	.L105:
 2196              		.loc 1 1140 0 discriminator 3
 2197 004c 0023     		movs	r3, #0
 2198              	.L106:
 2199              		.loc 1 1140 0 discriminator 4
 2200 004e DBB2     		uxtb	r3, r3
1141:../Generated_Code/UTIL1.c **** }
 2201              		.loc 1 1141 0 is_stmt 1 discriminator 4
 2202 0050 1846     		mov	r0, r3
 2203 0052 0C37     		adds	r7, r7, #12
 2204 0054 BD46     		mov	sp, r7
 2205              		@ sp needed
 2206 0056 5DF8047B 		ldr	r7, [sp], #4
 2207 005a 7047     		bx	lr
 2208              	.L109:
 2209              		.align	2
 2210              	.L108:
 2211 005c 1F85EB51 		.word	1374389535
 2212              		.cfi_endproc
 2213              	.LFE28:
 2215              		.section	.text.UTIL1_WeekDay,"ax",%progbits
 2216              		.align	2
 2217              		.global	UTIL1_WeekDay
 2218              		.thumb
 2219              		.thumb_func
 2221              	UTIL1_WeekDay:
 2222              	.LFB29:
1142:../Generated_Code/UTIL1.c **** 
1143:../Generated_Code/UTIL1.c **** /*
1144:../Generated_Code/UTIL1.c **** ** ===================================================================
1145:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_WeekDay (component Utility)
1146:../Generated_Code/UTIL1.c **** **     Description :
1147:../Generated_Code/UTIL1.c **** **         Returns the weekday for a given date >= 1.Jan.1900
1148:../Generated_Code/UTIL1.c **** **     Parameters  :
1149:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1150:../Generated_Code/UTIL1.c **** **         year            - year in YYYY format
1151:../Generated_Code/UTIL1.c **** **         month           - month of the year (1: January, 2:
1152:../Generated_Code/UTIL1.c **** **                           February, etc)
1153:../Generated_Code/UTIL1.c **** **         day             - day of the moth (starting with 1)
1154:../Generated_Code/UTIL1.c **** **     Returns     :
1155:../Generated_Code/UTIL1.c **** **         ---             - Returns the weekday, 0 for Sunday, 1 for
1156:../Generated_Code/UTIL1.c **** **                           Monday, 2 for Tuesday, etc.
1157:../Generated_Code/UTIL1.c **** ** ===================================================================
1158:../Generated_Code/UTIL1.c **** */
1159:../Generated_Code/UTIL1.c **** uint8_t UTIL1_WeekDay(uint16_t year, uint8_t month, uint8_t day)
1160:../Generated_Code/UTIL1.c **** {
 2223              		.loc 1 1160 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 80B5     		push	{r7, lr}
 2228              		.cfi_def_cfa_offset 8
 2229              		.cfi_offset 7, -8
 2230              		.cfi_offset 14, -4
 2231 0002 84B0     		sub	sp, sp, #16
 2232              		.cfi_def_cfa_offset 24
 2233 0004 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
 2235 0006 1346     		mov	r3, r2
 2236 0008 0246     		mov	r2, r0	@ movhi
 2237 000a FA80     		strh	r2, [r7, #6]	@ movhi
 2238 000c 0A46     		mov	r2, r1
 2239 000e 7A71     		strb	r2, [r7, #5]
 2240 0010 3B71     		strb	r3, [r7, #4]
1161:../Generated_Code/UTIL1.c ****   /* see http://klausler.com/new-dayofweek.html */
1162:../Generated_Code/UTIL1.c ****   static const uint8_t skew[12] = {0,3,3,6,1,4,6,2,5,0,3,5};
1163:../Generated_Code/UTIL1.c ****   uint16_t sum;
1164:../Generated_Code/UTIL1.c **** 
1165:../Generated_Code/UTIL1.c ****   sum = (uint16_t)(year-1900);
 2241              		.loc 1 1165 0
 2242 0012 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2243 0014 A3F26C73 		subw	r3, r3, #1900
 2244 0018 FB81     		strh	r3, [r7, #14]	@ movhi
1166:../Generated_Code/UTIL1.c ****   sum += sum/4;
 2245              		.loc 1 1166 0
 2246 001a FB89     		ldrh	r3, [r7, #14]
 2247 001c 9B08     		lsrs	r3, r3, #2
 2248 001e 9AB2     		uxth	r2, r3
 2249 0020 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2250 0022 1344     		add	r3, r3, r2
 2251 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1167:../Generated_Code/UTIL1.c ****   sum %= 7;
 2252              		.loc 1 1167 0
 2253 0026 FA89     		ldrh	r2, [r7, #14]
 2254 0028 244B     		ldr	r3, .L114
 2255 002a A2FB0301 		umull	r0, r1, r2, r3
 2256 002e 531A     		subs	r3, r2, r1
 2257 0030 5B08     		lsrs	r3, r3, #1
 2258 0032 0B44     		add	r3, r3, r1
 2259 0034 9908     		lsrs	r1, r3, #2
 2260 0036 0B46     		mov	r3, r1
 2261 0038 DB00     		lsls	r3, r3, #3
 2262 003a 5B1A     		subs	r3, r3, r1
 2263 003c D31A     		subs	r3, r2, r3
 2264 003e FB81     		strh	r3, [r7, #14]	@ movhi
1168:../Generated_Code/UTIL1.c ****   if (UTIL1_IsLeapYear(year) && (month==1 || month==2)) {
 2265              		.loc 1 1168 0
 2266 0040 FB88     		ldrh	r3, [r7, #6]
 2267 0042 1846     		mov	r0, r3
 2268 0044 FFF7FEFF 		bl	UTIL1_IsLeapYear
 2269 0048 0346     		mov	r3, r0
 2270 004a 002B     		cmp	r3, #0
 2271 004c 08D0     		beq	.L111
 2272              		.loc 1 1168 0 is_stmt 0 discriminator 1
 2273 004e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2274 0050 012B     		cmp	r3, #1
 2275 0052 02D0     		beq	.L112
 2276 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2277 0056 022B     		cmp	r3, #2
 2278 0058 02D1     		bne	.L111
 2279              	.L112:
1169:../Generated_Code/UTIL1.c ****     sum--;
 2280              		.loc 1 1169 0 is_stmt 1
 2281 005a FB89     		ldrh	r3, [r7, #14]
 2282 005c 013B     		subs	r3, r3, #1
 2283 005e FB81     		strh	r3, [r7, #14]	@ movhi
 2284              	.L111:
1170:../Generated_Code/UTIL1.c ****   }
1171:../Generated_Code/UTIL1.c ****   sum += day;
 2285              		.loc 1 1171 0
 2286 0060 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2287 0062 9AB2     		uxth	r2, r3
 2288 0064 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2289 0066 1344     		add	r3, r3, r2
 2290 0068 FB81     		strh	r3, [r7, #14]	@ movhi
1172:../Generated_Code/UTIL1.c ****   sum %= 7;
 2291              		.loc 1 1172 0
 2292 006a FA89     		ldrh	r2, [r7, #14]
 2293 006c 134B     		ldr	r3, .L114
 2294 006e A2FB0301 		umull	r0, r1, r2, r3
 2295 0072 531A     		subs	r3, r2, r1
 2296 0074 5B08     		lsrs	r3, r3, #1
 2297 0076 0B44     		add	r3, r3, r1
 2298 0078 9908     		lsrs	r1, r3, #2
 2299 007a 0B46     		mov	r3, r1
 2300 007c DB00     		lsls	r3, r3, #3
 2301 007e 5B1A     		subs	r3, r3, r1
 2302 0080 D31A     		subs	r3, r2, r3
 2303 0082 FB81     		strh	r3, [r7, #14]	@ movhi
1173:../Generated_Code/UTIL1.c ****   sum += skew[month-1];
 2304              		.loc 1 1173 0
 2305 0084 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2306 0086 013B     		subs	r3, r3, #1
 2307 0088 0D4A     		ldr	r2, .L114+4
 2308 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2309 008c 1A46     		mov	r2, r3
 2310 008e FB89     		ldrh	r3, [r7, #14]	@ movhi
 2311 0090 1344     		add	r3, r3, r2
 2312 0092 FB81     		strh	r3, [r7, #14]	@ movhi
1174:../Generated_Code/UTIL1.c ****   sum %= 7;
 2313              		.loc 1 1174 0
 2314 0094 FA89     		ldrh	r2, [r7, #14]
 2315 0096 094B     		ldr	r3, .L114
 2316 0098 A2FB0301 		umull	r0, r1, r2, r3
 2317 009c 531A     		subs	r3, r2, r1
 2318 009e 5B08     		lsrs	r3, r3, #1
 2319 00a0 0B44     		add	r3, r3, r1
 2320 00a2 9908     		lsrs	r1, r3, #2
 2321 00a4 0B46     		mov	r3, r1
 2322 00a6 DB00     		lsls	r3, r3, #3
 2323 00a8 5B1A     		subs	r3, r3, r1
 2324 00aa D31A     		subs	r3, r2, r3
 2325 00ac FB81     		strh	r3, [r7, #14]	@ movhi
1175:../Generated_Code/UTIL1.c ****   return (uint8_t)sum; /* 0: Sunday, 1: Monday, 2: Tuesday, 3: Wednesday, ... */
 2326              		.loc 1 1175 0
 2327 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 2328 00b0 DBB2     		uxtb	r3, r3
1176:../Generated_Code/UTIL1.c **** }
 2329              		.loc 1 1176 0
 2330 00b2 1846     		mov	r0, r3
 2331 00b4 1037     		adds	r7, r7, #16
 2332 00b6 BD46     		mov	sp, r7
 2333              		@ sp needed
 2334 00b8 80BD     		pop	{r7, pc}
 2335              	.L115:
 2336 00ba 00BF     		.align	2
 2337              	.L114:
 2338 00bc 25499224 		.word	613566757
 2339 00c0 00000000 		.word	skew.7183
 2340              		.cfi_endproc
 2341              	.LFE29:
 2343              		.section	.rodata
 2344              		.align	2
 2345              	.LC2:
 2346 0014 00       		.ascii	"\000"
 2347              		.section	.text.UTIL1_ReadEscapedName,"ax",%progbits
 2348              		.align	2
 2349              		.global	UTIL1_ReadEscapedName
 2350              		.thumb
 2351              		.thumb_func
 2353              	UTIL1_ReadEscapedName:
 2354              	.LFB30:
1177:../Generated_Code/UTIL1.c **** 
1178:../Generated_Code/UTIL1.c **** /*
1179:../Generated_Code/UTIL1.c **** ** ===================================================================
1180:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ReadEscapedName (component Utility)
1181:../Generated_Code/UTIL1.c **** **     Description :
1182:../Generated_Code/UTIL1.c **** **         Scans an escaped name from a string. This is useful e.g. for
1183:../Generated_Code/UTIL1.c **** **         double quoted file names.
1184:../Generated_Code/UTIL1.c **** **     Parameters  :
1185:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1186:../Generated_Code/UTIL1.c **** **       * filename        - the name to be copied. Names may
1187:../Generated_Code/UTIL1.c **** **                           be in quoted format
1188:../Generated_Code/UTIL1.c **** **       * destname        - the destination of the copy.
1189:../Generated_Code/UTIL1.c **** **                           Names are not in quoted format. destname
1190:../Generated_Code/UTIL1.c **** **                           may be NULL to get the other return values
1191:../Generated_Code/UTIL1.c **** **                           only
1192:../Generated_Code/UTIL1.c **** **         maxlen          - length allocated for destname
1193:../Generated_Code/UTIL1.c **** **       * lenRead         - length read in filename to copy
1194:../Generated_Code/UTIL1.c **** **                           the whole name. Note that filenames maybe
1195:../Generated_Code/UTIL1.c **** **                           space terminated, so *lenRead <
1196:../Generated_Code/UTIL1.c **** **                           strlen(filename)
1197:../Generated_Code/UTIL1.c **** **         lenWritten      - the size written in destname.
1198:../Generated_Code/UTIL1.c **** **                           In case of overflows in destname,
1199:../Generated_Code/UTIL1.c **** **                           lenWritten is still increased but destname
1200:../Generated_Code/UTIL1.c **** **                           no longer written. The have the string
1201:../Generated_Code/UTIL1.c **** **                           length in these cases use strlen(destname)
1202:../Generated_Code/UTIL1.c **** **         terminators     - additional characters
1203:../Generated_Code/UTIL1.c **** **                           where a name should terminate. May be NULL
1204:../Generated_Code/UTIL1.c **** **     Returns     :
1205:../Generated_Code/UTIL1.c **** **         ---             - Error code
1206:../Generated_Code/UTIL1.c **** ** ===================================================================
1207:../Generated_Code/UTIL1.c **** */
1208:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ReadEscapedName(const unsigned char *filename, uint8_t *destname, size_t maxlen, size
1209:../Generated_Code/UTIL1.c **** {
 2355              		.loc 1 1209 0
 2356              		.cfi_startproc
 2357              		@ args = 8, pretend = 0, frame = 32
 2358              		@ frame_needed = 1, uses_anonymous_args = 0
 2359 0000 80B5     		push	{r7, lr}
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 7, -8
 2362              		.cfi_offset 14, -4
 2363 0002 88B0     		sub	sp, sp, #32
 2364              		.cfi_def_cfa_offset 40
 2365 0004 00AF     		add	r7, sp, #0
 2366              		.cfi_def_cfa_register 7
 2367 0006 F860     		str	r0, [r7, #12]
 2368 0008 B960     		str	r1, [r7, #8]
 2369 000a 7A60     		str	r2, [r7, #4]
 2370 000c 3B60     		str	r3, [r7]
1210:../Generated_Code/UTIL1.c ****   size_t lenCopied = 0, lenOverread = 0;
 2371              		.loc 1 1210 0
 2372 000e 0023     		movs	r3, #0
 2373 0010 FB61     		str	r3, [r7, #28]
 2374 0012 0023     		movs	r3, #0
 2375 0014 BB61     		str	r3, [r7, #24]
1211:../Generated_Code/UTIL1.c ****   bool quoteMode = FALSE;  /* quoteMode means the name is surrounded by ". In this mode, only a sec
 2376              		.loc 1 1211 0
 2377 0016 0023     		movs	r3, #0
 2378 0018 FB75     		strb	r3, [r7, #23]
1212:../Generated_Code/UTIL1.c ****                               terminates the string. In !quoteMode a space or a '\0' may also termi
1213:../Generated_Code/UTIL1.c ****   bool res = ERR_OK;
 2379              		.loc 1 1213 0
 2380 001a 0023     		movs	r3, #0
 2381 001c BB75     		strb	r3, [r7, #22]
1214:../Generated_Code/UTIL1.c ****   #define IS_SPACE(ch) ((ch)==' '||(ch)=='\t'||(ch)=='\n'||(ch)=='\v'||(ch)=='\f'||(ch)=='\r')
1215:../Generated_Code/UTIL1.c **** 
1216:../Generated_Code/UTIL1.c ****   if (filename==NULL || (destname!=NULL && maxlen==0)) {
 2382              		.loc 1 1216 0
 2383 001e FB68     		ldr	r3, [r7, #12]
 2384 0020 002B     		cmp	r3, #0
 2385 0022 05D0     		beq	.L117
 2386              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2387 0024 BB68     		ldr	r3, [r7, #8]
 2388 0026 002B     		cmp	r3, #0
 2389 0028 04D0     		beq	.L118
 2390 002a 7B68     		ldr	r3, [r7, #4]
 2391 002c 002B     		cmp	r3, #0
 2392 002e 01D1     		bne	.L118
 2393              	.L117:
1217:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 2394              		.loc 1 1217 0 is_stmt 1
 2395 0030 1B23     		movs	r3, #27
 2396 0032 80E0     		b	.L119
 2397              	.L118:
1218:../Generated_Code/UTIL1.c ****   }
1219:../Generated_Code/UTIL1.c ****   if (filename[0] == '"') { /* translated mode */
 2398              		.loc 1 1219 0
 2399 0034 FB68     		ldr	r3, [r7, #12]
 2400 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2401 0038 222B     		cmp	r3, #34
 2402 003a 07D1     		bne	.L120
1220:../Generated_Code/UTIL1.c ****     filename++; /* overread '"' */
 2403              		.loc 1 1220 0
 2404 003c FB68     		ldr	r3, [r7, #12]
 2405 003e 0133     		adds	r3, r3, #1
 2406 0040 FB60     		str	r3, [r7, #12]
1221:../Generated_Code/UTIL1.c ****     lenOverread++;
 2407              		.loc 1 1221 0
 2408 0042 BB69     		ldr	r3, [r7, #24]
 2409 0044 0133     		adds	r3, r3, #1
 2410 0046 BB61     		str	r3, [r7, #24]
1222:../Generated_Code/UTIL1.c ****     quoteMode=TRUE;
 2411              		.loc 1 1222 0
 2412 0048 0123     		movs	r3, #1
 2413 004a FB75     		strb	r3, [r7, #23]
 2414              	.L120:
1223:../Generated_Code/UTIL1.c ****   }
1224:../Generated_Code/UTIL1.c ****   if (terminators == NULL) {
 2415              		.loc 1 1224 0
 2416 004c FB6A     		ldr	r3, [r7, #44]
 2417 004e 002B     		cmp	r3, #0
 2418 0050 01D1     		bne	.L121
1225:../Generated_Code/UTIL1.c ****     terminators = "";
 2419              		.loc 1 1225 0
 2420 0052 3B4B     		ldr	r3, .L131
 2421 0054 FB62     		str	r3, [r7, #44]
 2422              	.L121:
1226:../Generated_Code/UTIL1.c ****   }
1227:../Generated_Code/UTIL1.c ****   for (;;) {
1228:../Generated_Code/UTIL1.c ****     if (quoteMode) {
 2423              		.loc 1 1228 0
 2424 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2425 0058 002B     		cmp	r3, #0
 2426 005a 15D0     		beq	.L122
1229:../Generated_Code/UTIL1.c ****       if (filename[0] == '"') {
 2427              		.loc 1 1229 0
 2428 005c FB68     		ldr	r3, [r7, #12]
 2429 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2430 0060 222B     		cmp	r3, #34
 2431 0062 0AD1     		bne	.L123
1230:../Generated_Code/UTIL1.c ****         filename++; /* overread '"' */
 2432              		.loc 1 1230 0
 2433 0064 FB68     		ldr	r3, [r7, #12]
 2434 0066 0133     		adds	r3, r3, #1
 2435 0068 FB60     		str	r3, [r7, #12]
1231:../Generated_Code/UTIL1.c ****         lenOverread++;
 2436              		.loc 1 1231 0
 2437 006a BB69     		ldr	r3, [r7, #24]
 2438 006c 0133     		adds	r3, r3, #1
 2439 006e BB61     		str	r3, [r7, #24]
1232:../Generated_Code/UTIL1.c ****         if (filename[0] != '"') { /* quoteMode is terminated by a single quote. A double quote is t
 2440              		.loc 1 1232 0
 2441 0070 FB68     		ldr	r3, [r7, #12]
 2442 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2443 0074 222B     		cmp	r3, #34
 2444 0076 00D0     		beq	.L123
1233:../Generated_Code/UTIL1.c ****           break; /* successfully finished with this name */
 2445              		.loc 1 1233 0
 2446 0078 47E0     		b	.L124
 2447              	.L123:
1234:../Generated_Code/UTIL1.c ****         } /* else we copy the second quote " */
1235:../Generated_Code/UTIL1.c ****       }
1236:../Generated_Code/UTIL1.c ****       if (filename[0] == '\0') { /* unexpected 0. stop */
 2448              		.loc 1 1236 0
 2449 007a FB68     		ldr	r3, [r7, #12]
 2450 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 007e 002B     		cmp	r3, #0
 2452 0080 27D1     		bne	.L125
1237:../Generated_Code/UTIL1.c ****         res = ERR_FAILED;
 2453              		.loc 1 1237 0
 2454 0082 1B23     		movs	r3, #27
 2455 0084 BB75     		strb	r3, [r7, #22]
1238:../Generated_Code/UTIL1.c ****         break; /* error case: no terminating double quote (") was found */
 2456              		.loc 1 1238 0
 2457 0086 40E0     		b	.L124
 2458              	.L122:
1239:../Generated_Code/UTIL1.c ****       }
1240:../Generated_Code/UTIL1.c ****     } else { /* copy mode */
1241:../Generated_Code/UTIL1.c ****       if (IS_SPACE(filename[0]) || filename[0] == '\0' || strchr(terminators, filename[0]) != NULL)
 2459              		.loc 1 1241 0
 2460 0088 FB68     		ldr	r3, [r7, #12]
 2461 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2462 008c 202B     		cmp	r3, #32
 2463 008e 3CD0     		beq	.L124
 2464              		.loc 1 1241 0 is_stmt 0 discriminator 1
 2465 0090 FB68     		ldr	r3, [r7, #12]
 2466 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2467 0094 092B     		cmp	r3, #9
 2468 0096 38D0     		beq	.L124
 2469 0098 FB68     		ldr	r3, [r7, #12]
 2470 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2471 009c 0A2B     		cmp	r3, #10
 2472 009e 34D0     		beq	.L124
 2473 00a0 FB68     		ldr	r3, [r7, #12]
 2474 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2475 00a4 0B2B     		cmp	r3, #11
 2476 00a6 30D0     		beq	.L124
 2477 00a8 FB68     		ldr	r3, [r7, #12]
 2478 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2479 00ac 0C2B     		cmp	r3, #12
 2480 00ae 2CD0     		beq	.L124
 2481 00b0 FB68     		ldr	r3, [r7, #12]
 2482 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2483 00b4 0D2B     		cmp	r3, #13
 2484 00b6 28D0     		beq	.L124
 2485 00b8 FB68     		ldr	r3, [r7, #12]
 2486 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2487 00bc 002B     		cmp	r3, #0
 2488 00be 24D0     		beq	.L124
 2489 00c0 FB68     		ldr	r3, [r7, #12]
 2490 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 00c4 F86A     		ldr	r0, [r7, #44]
 2492 00c6 1946     		mov	r1, r3
 2493 00c8 FFF7FEFF 		bl	strchr
 2494 00cc 0346     		mov	r3, r0
 2495 00ce 002B     		cmp	r3, #0
 2496 00d0 1BD1     		bne	.L124
 2497              	.L125:
1242:../Generated_Code/UTIL1.c ****         break;
1243:../Generated_Code/UTIL1.c ****       }
1244:../Generated_Code/UTIL1.c ****     }
1245:../Generated_Code/UTIL1.c ****     if (destname != NULL) {
 2498              		.loc 1 1245 0 is_stmt 1
 2499 00d2 BB68     		ldr	r3, [r7, #8]
 2500 00d4 002B     		cmp	r3, #0
 2501 00d6 11D0     		beq	.L126
1246:../Generated_Code/UTIL1.c ****       if (lenCopied + 1 < maxlen) {
 2502              		.loc 1 1246 0
 2503 00d8 FB69     		ldr	r3, [r7, #28]
 2504 00da 5A1C     		adds	r2, r3, #1
 2505 00dc 7B68     		ldr	r3, [r7, #4]
 2506 00de 9A42     		cmp	r2, r3
 2507 00e0 07D2     		bcs	.L127
1247:../Generated_Code/UTIL1.c ****         destname[0] = filename[0];
 2508              		.loc 1 1247 0
 2509 00e2 FB68     		ldr	r3, [r7, #12]
 2510 00e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2511 00e6 BB68     		ldr	r3, [r7, #8]
 2512 00e8 1A70     		strb	r2, [r3]
1248:../Generated_Code/UTIL1.c ****         destname++;
 2513              		.loc 1 1248 0
 2514 00ea BB68     		ldr	r3, [r7, #8]
 2515 00ec 0133     		adds	r3, r3, #1
 2516 00ee BB60     		str	r3, [r7, #8]
 2517 00f0 04E0     		b	.L126
 2518              	.L127:
1249:../Generated_Code/UTIL1.c ****       } else {
1250:../Generated_Code/UTIL1.c ****         destname[0] = '\0'; /* terminate string */
 2519              		.loc 1 1250 0
 2520 00f2 BB68     		ldr	r3, [r7, #8]
 2521 00f4 0022     		movs	r2, #0
 2522 00f6 1A70     		strb	r2, [r3]
1251:../Generated_Code/UTIL1.c ****         destname = NULL; /* avoid it to overwrite not allocated space */
 2523              		.loc 1 1251 0
 2524 00f8 0023     		movs	r3, #0
 2525 00fa BB60     		str	r3, [r7, #8]
 2526              	.L126:
1252:../Generated_Code/UTIL1.c ****       }
1253:../Generated_Code/UTIL1.c ****     }
1254:../Generated_Code/UTIL1.c ****     lenCopied++;
 2527              		.loc 1 1254 0
 2528 00fc FB69     		ldr	r3, [r7, #28]
 2529 00fe 0133     		adds	r3, r3, #1
 2530 0100 FB61     		str	r3, [r7, #28]
1255:../Generated_Code/UTIL1.c ****     filename++;
 2531              		.loc 1 1255 0
 2532 0102 FB68     		ldr	r3, [r7, #12]
 2533 0104 0133     		adds	r3, r3, #1
 2534 0106 FB60     		str	r3, [r7, #12]
1256:../Generated_Code/UTIL1.c ****   }
 2535              		.loc 1 1256 0
 2536 0108 A5E7     		b	.L121
 2537              	.L124:
1257:../Generated_Code/UTIL1.c ****   if (destname != NULL) {
 2538              		.loc 1 1257 0
 2539 010a BB68     		ldr	r3, [r7, #8]
 2540 010c 002B     		cmp	r3, #0
 2541 010e 02D0     		beq	.L128
1258:../Generated_Code/UTIL1.c ****     destname[0] = '\0';
 2542              		.loc 1 1258 0
 2543 0110 BB68     		ldr	r3, [r7, #8]
 2544 0112 0022     		movs	r2, #0
 2545 0114 1A70     		strb	r2, [r3]
 2546              	.L128:
1259:../Generated_Code/UTIL1.c ****   }
1260:../Generated_Code/UTIL1.c ****   if (lenRead != NULL) {
 2547              		.loc 1 1260 0
 2548 0116 3B68     		ldr	r3, [r7]
 2549 0118 002B     		cmp	r3, #0
 2550 011a 04D0     		beq	.L129
1261:../Generated_Code/UTIL1.c ****     *lenRead = lenCopied+lenOverread;
 2551              		.loc 1 1261 0
 2552 011c FA69     		ldr	r2, [r7, #28]
 2553 011e BB69     		ldr	r3, [r7, #24]
 2554 0120 1A44     		add	r2, r2, r3
 2555 0122 3B68     		ldr	r3, [r7]
 2556 0124 1A60     		str	r2, [r3]
 2557              	.L129:
1262:../Generated_Code/UTIL1.c ****   }
1263:../Generated_Code/UTIL1.c ****   if (lenWritten != NULL) {
 2558              		.loc 1 1263 0
 2559 0126 BB6A     		ldr	r3, [r7, #40]
 2560 0128 002B     		cmp	r3, #0
 2561 012a 03D0     		beq	.L130
1264:../Generated_Code/UTIL1.c ****     *lenWritten = lenCopied + 1; /* additionally a zero byte written */
 2562              		.loc 1 1264 0
 2563 012c FB69     		ldr	r3, [r7, #28]
 2564 012e 5A1C     		adds	r2, r3, #1
 2565 0130 BB6A     		ldr	r3, [r7, #40]
 2566 0132 1A60     		str	r2, [r3]
 2567              	.L130:
1265:../Generated_Code/UTIL1.c ****   }
1266:../Generated_Code/UTIL1.c ****   return res;
 2568              		.loc 1 1266 0
 2569 0134 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2570              	.L119:
1267:../Generated_Code/UTIL1.c **** }
 2571              		.loc 1 1267 0
 2572 0136 1846     		mov	r0, r3
 2573 0138 2037     		adds	r7, r7, #32
 2574 013a BD46     		mov	sp, r7
 2575              		@ sp needed
 2576 013c 80BD     		pop	{r7, pc}
 2577              	.L132:
 2578 013e 00BF     		.align	2
 2579              	.L131:
 2580 0140 14000000 		.word	.LC2
 2581              		.cfi_endproc
 2582              	.LFE30:
 2584              		.section	.text.UTIL1_xatoi,"ax",%progbits
 2585              		.align	2
 2586              		.global	UTIL1_xatoi
 2587              		.thumb
 2588              		.thumb_func
 2590              	UTIL1_xatoi:
 2591              	.LFB31:
1268:../Generated_Code/UTIL1.c **** 
1269:../Generated_Code/UTIL1.c **** /*
1270:../Generated_Code/UTIL1.c **** ** ===================================================================
1271:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_xatoi (component Utility)
1272:../Generated_Code/UTIL1.c **** **     Description :
1273:../Generated_Code/UTIL1.c **** **         Custom atoi() (ascii to int) implementation by Elm Chan
1274:../Generated_Code/UTIL1.c **** **     Parameters  :
1275:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1276:../Generated_Code/UTIL1.c **** **       * str             - Pointer to string to scan. Returns until
1277:../Generated_Code/UTIL1.c **** **                           where it has scanned.
1278:../Generated_Code/UTIL1.c **** **       * res             - Pointer to where to store the result
1279:../Generated_Code/UTIL1.c **** **     Returns     :
1280:../Generated_Code/UTIL1.c **** **         ---             - Error code
1281:../Generated_Code/UTIL1.c **** ** ===================================================================
1282:../Generated_Code/UTIL1.c **** */
1283:../Generated_Code/UTIL1.c **** /*------------------------------------------------------------------------/
1284:../Generated_Code/UTIL1.c **** /  Universal string handler for user console interface
1285:../Generated_Code/UTIL1.c **** /-------------------------------------------------------------------------/
1286:../Generated_Code/UTIL1.c **** /
1287:../Generated_Code/UTIL1.c **** /  Copyright (C) 2010, ChaN, all right reserved.
1288:../Generated_Code/UTIL1.c **** /
1289:../Generated_Code/UTIL1.c **** / * This software is a free software and there is NO WARRANTY.
1290:../Generated_Code/UTIL1.c **** / * No restriction on use. You can use, modify and redistribute it for
1291:../Generated_Code/UTIL1.c **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
1292:../Generated_Code/UTIL1.c **** / * Redistributions of source code must retain the above copyright notice.
1293:../Generated_Code/UTIL1.c **** /
1294:../Generated_Code/UTIL1.c **** /-------------------------------------------------------------------------*/
1295:../Generated_Code/UTIL1.c **** #ifdef __HC12__
1296:../Generated_Code/UTIL1.c ****   #pragma MESSAGE DISABLE C12056  /* message about SP debug info */
1297:../Generated_Code/UTIL1.c **** #endif
1298:../Generated_Code/UTIL1.c **** uint8_t UTIL1_xatoi(const unsigned char **str, int32_t *res)
1299:../Generated_Code/UTIL1.c **** {
 2592              		.loc 1 1299 0
 2593              		.cfi_startproc
 2594              		@ args = 0, pretend = 0, frame = 16
 2595              		@ frame_needed = 1, uses_anonymous_args = 0
 2596              		@ link register save eliminated.
 2597 0000 80B4     		push	{r7}
 2598              		.cfi_def_cfa_offset 4
 2599              		.cfi_offset 7, -4
 2600 0002 85B0     		sub	sp, sp, #20
 2601              		.cfi_def_cfa_offset 24
 2602 0004 00AF     		add	r7, sp, #0
 2603              		.cfi_def_cfa_register 7
 2604 0006 7860     		str	r0, [r7, #4]
 2605 0008 3960     		str	r1, [r7]
1300:../Generated_Code/UTIL1.c **** /* 123 -5   0x3ff 0b1111 0377 3.25  w "
1301:../Generated_Code/UTIL1.c ****       ^                               1st call returns 123 and next ptr
1302:../Generated_Code/UTIL1.c ****          ^                            2nd call returns -5 and next ptr
1303:../Generated_Code/UTIL1.c ****                  ^                    3rd call returns 1023 and next ptr
1304:../Generated_Code/UTIL1.c ****                         ^             4th call returns 15 and next ptr
1305:../Generated_Code/UTIL1.c ****                              ^        5th call returns 255 and next ptr
1306:../Generated_Code/UTIL1.c ****                                ^      6th call returns 3 and next ptr, caller needs to read '.'
1307:../Generated_Code/UTIL1.c ****                                  ^    7th call returns 25 and next ptr
1308:../Generated_Code/UTIL1.c ****                                     ^ 8th call fails and returns ERR_FAILED
1309:../Generated_Code/UTIL1.c **** */
1310:../Generated_Code/UTIL1.c ****   uint32_t val;
1311:../Generated_Code/UTIL1.c ****   uint8_t c, r, s = 0;
 2606              		.loc 1 1311 0
 2607 000a 0023     		movs	r3, #0
 2608 000c 7B72     		strb	r3, [r7, #9]
1312:../Generated_Code/UTIL1.c **** 
1313:../Generated_Code/UTIL1.c ****   *res = 0;
 2609              		.loc 1 1313 0
 2610 000e 3B68     		ldr	r3, [r7]
 2611 0010 0022     		movs	r2, #0
 2612 0012 1A60     		str	r2, [r3]
1314:../Generated_Code/UTIL1.c ****   while (**str==' ') {
 2613              		.loc 1 1314 0
 2614 0014 04E0     		b	.L134
 2615              	.L135:
1315:../Generated_Code/UTIL1.c ****     (*str)++;                          /* Skip leading spaces */
 2616              		.loc 1 1315 0
 2617 0016 7B68     		ldr	r3, [r7, #4]
 2618 0018 1B68     		ldr	r3, [r3]
 2619 001a 5A1C     		adds	r2, r3, #1
 2620 001c 7B68     		ldr	r3, [r7, #4]
 2621 001e 1A60     		str	r2, [r3]
 2622              	.L134:
1314:../Generated_Code/UTIL1.c ****   while (**str==' ') {
 2623              		.loc 1 1314 0 discriminator 1
 2624 0020 7B68     		ldr	r3, [r7, #4]
 2625 0022 1B68     		ldr	r3, [r3]
 2626 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2627 0026 202B     		cmp	r3, #32
 2628 0028 F5D0     		beq	.L135
1316:../Generated_Code/UTIL1.c ****   }
1317:../Generated_Code/UTIL1.c ****   c = **str;
 2629              		.loc 1 1317 0
 2630 002a 7B68     		ldr	r3, [r7, #4]
 2631 002c 1B68     		ldr	r3, [r3]
 2632 002e 1B78     		ldrb	r3, [r3]
 2633 0030 FB72     		strb	r3, [r7, #11]
1318:../Generated_Code/UTIL1.c ****   if (c == '-') {                      /* negative? */
 2634              		.loc 1 1318 0
 2635 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2636 0034 2D2B     		cmp	r3, #45
 2637 0036 0AD1     		bne	.L136
1319:../Generated_Code/UTIL1.c ****     s = 1;
 2638              		.loc 1 1319 0
 2639 0038 0123     		movs	r3, #1
 2640 003a 7B72     		strb	r3, [r7, #9]
1320:../Generated_Code/UTIL1.c ****     c = *(++(*str));
 2641              		.loc 1 1320 0
 2642 003c 7B68     		ldr	r3, [r7, #4]
 2643 003e 1B68     		ldr	r3, [r3]
 2644 0040 5A1C     		adds	r2, r3, #1
 2645 0042 7B68     		ldr	r3, [r7, #4]
 2646 0044 1A60     		str	r2, [r3]
 2647 0046 7B68     		ldr	r3, [r7, #4]
 2648 0048 1B68     		ldr	r3, [r3]
 2649 004a 1B78     		ldrb	r3, [r3]
 2650 004c FB72     		strb	r3, [r7, #11]
 2651              	.L136:
1321:../Generated_Code/UTIL1.c ****   }
1322:../Generated_Code/UTIL1.c ****   if (c == '0') {
 2652              		.loc 1 1322 0
 2653 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2654 0050 302B     		cmp	r3, #48
 2655 0052 39D1     		bne	.L137
1323:../Generated_Code/UTIL1.c ****     c = *(++(*str));
 2656              		.loc 1 1323 0
 2657 0054 7B68     		ldr	r3, [r7, #4]
 2658 0056 1B68     		ldr	r3, [r3]
 2659 0058 5A1C     		adds	r2, r3, #1
 2660 005a 7B68     		ldr	r3, [r7, #4]
 2661 005c 1A60     		str	r2, [r3]
 2662 005e 7B68     		ldr	r3, [r7, #4]
 2663 0060 1B68     		ldr	r3, [r3]
 2664 0062 1B78     		ldrb	r3, [r3]
 2665 0064 FB72     		strb	r3, [r7, #11]
1324:../Generated_Code/UTIL1.c ****     switch (c) {
 2666              		.loc 1 1324 0
 2667 0066 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2668 0068 622B     		cmp	r3, #98
 2669 006a 0DD0     		beq	.L139
 2670 006c 782B     		cmp	r3, #120
 2671 006e 17D1     		bne	.L157
1325:../Generated_Code/UTIL1.c ****       case 'x':                        /* hexadecimal */
1326:../Generated_Code/UTIL1.c ****         r = 16; c = *(++(*str));
 2672              		.loc 1 1326 0
 2673 0070 1023     		movs	r3, #16
 2674 0072 BB72     		strb	r3, [r7, #10]
 2675 0074 7B68     		ldr	r3, [r7, #4]
 2676 0076 1B68     		ldr	r3, [r3]
 2677 0078 5A1C     		adds	r2, r3, #1
 2678 007a 7B68     		ldr	r3, [r7, #4]
 2679 007c 1A60     		str	r2, [r3]
 2680 007e 7B68     		ldr	r3, [r7, #4]
 2681 0080 1B68     		ldr	r3, [r3]
 2682 0082 1B78     		ldrb	r3, [r3]
 2683 0084 FB72     		strb	r3, [r7, #11]
1327:../Generated_Code/UTIL1.c ****         break;
 2684              		.loc 1 1327 0
 2685 0086 1EE0     		b	.L141
 2686              	.L139:
1328:../Generated_Code/UTIL1.c ****       case 'b':                        /* binary */
1329:../Generated_Code/UTIL1.c ****         r = 2; c = *(++(*str));
 2687              		.loc 1 1329 0
 2688 0088 0223     		movs	r3, #2
 2689 008a BB72     		strb	r3, [r7, #10]
 2690 008c 7B68     		ldr	r3, [r7, #4]
 2691 008e 1B68     		ldr	r3, [r3]
 2692 0090 5A1C     		adds	r2, r3, #1
 2693 0092 7B68     		ldr	r3, [r7, #4]
 2694 0094 1A60     		str	r2, [r3]
 2695 0096 7B68     		ldr	r3, [r7, #4]
 2696 0098 1B68     		ldr	r3, [r3]
 2697 009a 1B78     		ldrb	r3, [r3]
 2698 009c FB72     		strb	r3, [r7, #11]
1330:../Generated_Code/UTIL1.c ****         break;
 2699              		.loc 1 1330 0
 2700 009e 12E0     		b	.L141
 2701              	.L157:
1331:../Generated_Code/UTIL1.c ****       default:
1332:../Generated_Code/UTIL1.c ****         if (c <= ' ' || c == '.') {
 2702              		.loc 1 1332 0
 2703 00a0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2704 00a2 202B     		cmp	r3, #32
 2705 00a4 02D9     		bls	.L142
 2706              		.loc 1 1332 0 is_stmt 0 discriminator 1
 2707 00a6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2708 00a8 2E2B     		cmp	r3, #46
 2709 00aa 01D1     		bne	.L143
 2710              	.L142:
1333:../Generated_Code/UTIL1.c ****           return ERR_OK;               /* single zero */
 2711              		.loc 1 1333 0 is_stmt 1
 2712 00ac 0023     		movs	r3, #0
 2713 00ae 52E0     		b	.L144
 2714              	.L143:
1334:../Generated_Code/UTIL1.c ****         }
1335:../Generated_Code/UTIL1.c ****         if (c < '0' || c > '9') {
 2715              		.loc 1 1335 0
 2716 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2717 00b2 2F2B     		cmp	r3, #47
 2718 00b4 02D9     		bls	.L145
 2719              		.loc 1 1335 0 is_stmt 0 discriminator 1
 2720 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2721 00b8 392B     		cmp	r3, #57
 2722 00ba 01D9     		bls	.L146
 2723              	.L145:
1336:../Generated_Code/UTIL1.c ****           return ERR_FAILED;           /* invalid char */
 2724              		.loc 1 1336 0 is_stmt 1
 2725 00bc 1B23     		movs	r3, #27
 2726 00be 4AE0     		b	.L144
 2727              	.L146:
1337:../Generated_Code/UTIL1.c ****         }
1338:../Generated_Code/UTIL1.c ****         r = 8;                         /* octal */
 2728              		.loc 1 1338 0
 2729 00c0 0823     		movs	r3, #8
 2730 00c2 BB72     		strb	r3, [r7, #10]
1339:../Generated_Code/UTIL1.c ****         break;
 2731              		.loc 1 1339 0
 2732 00c4 00BF     		nop
 2733              	.L141:
 2734 00c6 09E0     		b	.L147
 2735              	.L137:
1340:../Generated_Code/UTIL1.c ****     } /* switch */
1341:../Generated_Code/UTIL1.c ****   } else {
1342:../Generated_Code/UTIL1.c ****     if (c < '0' || c > '9') {
 2736              		.loc 1 1342 0
 2737 00c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2738 00ca 2F2B     		cmp	r3, #47
 2739 00cc 02D9     		bls	.L148
 2740              		.loc 1 1342 0 is_stmt 0 discriminator 1
 2741 00ce FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2742 00d0 392B     		cmp	r3, #57
 2743 00d2 01D9     		bls	.L149
 2744              	.L148:
1343:../Generated_Code/UTIL1.c ****       return ERR_FAILED;               /* EOL or invalid char */
 2745              		.loc 1 1343 0 is_stmt 1
 2746 00d4 1B23     		movs	r3, #27
 2747 00d6 3EE0     		b	.L144
 2748              	.L149:
1344:../Generated_Code/UTIL1.c ****     }
1345:../Generated_Code/UTIL1.c ****     r = 10;                            /* decimal */
 2749              		.loc 1 1345 0
 2750 00d8 0A23     		movs	r3, #10
 2751 00da BB72     		strb	r3, [r7, #10]
 2752              	.L147:
1346:../Generated_Code/UTIL1.c ****   }
1347:../Generated_Code/UTIL1.c ****   val = 0;
 2753              		.loc 1 1347 0
 2754 00dc 0023     		movs	r3, #0
 2755 00de FB60     		str	r3, [r7, #12]
1348:../Generated_Code/UTIL1.c ****   while (c > ' ' && c != '.') {
 2756              		.loc 1 1348 0
 2757 00e0 29E0     		b	.L150
 2758              	.L155:
1349:../Generated_Code/UTIL1.c ****     if (c >= 'a') c -= 0x20;
 2759              		.loc 1 1349 0
 2760 00e2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2761 00e4 602B     		cmp	r3, #96
 2762 00e6 02D9     		bls	.L151
 2763              		.loc 1 1349 0 is_stmt 0 discriminator 1
 2764 00e8 FB7A     		ldrb	r3, [r7, #11]
 2765 00ea 203B     		subs	r3, r3, #32
 2766 00ec FB72     		strb	r3, [r7, #11]
 2767              	.L151:
1350:../Generated_Code/UTIL1.c ****     c -= '0';
 2768              		.loc 1 1350 0 is_stmt 1
 2769 00ee FB7A     		ldrb	r3, [r7, #11]
 2770 00f0 303B     		subs	r3, r3, #48
 2771 00f2 FB72     		strb	r3, [r7, #11]
1351:../Generated_Code/UTIL1.c ****     if (c >= 17) {
 2772              		.loc 1 1351 0
 2773 00f4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2774 00f6 102B     		cmp	r3, #16
 2775 00f8 07D9     		bls	.L152
1352:../Generated_Code/UTIL1.c ****       c -= 7;
 2776              		.loc 1 1352 0
 2777 00fa FB7A     		ldrb	r3, [r7, #11]
 2778 00fc 073B     		subs	r3, r3, #7
 2779 00fe FB72     		strb	r3, [r7, #11]
1353:../Generated_Code/UTIL1.c ****       if (c <= 9) return ERR_FAILED;   /* invalid char */
 2780              		.loc 1 1353 0
 2781 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2782 0102 092B     		cmp	r3, #9
 2783 0104 01D8     		bhi	.L152
 2784              		.loc 1 1353 0 is_stmt 0 discriminator 1
 2785 0106 1B23     		movs	r3, #27
 2786 0108 25E0     		b	.L144
 2787              	.L152:
1354:../Generated_Code/UTIL1.c ****     }
1355:../Generated_Code/UTIL1.c ****     if (c >= r) return ERR_FAILED;     /* invalid char for current radix */
 2788              		.loc 1 1355 0 is_stmt 1
 2789 010a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 2790 010c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2791 010e 9A42     		cmp	r2, r3
 2792 0110 01D3     		bcc	.L153
 2793              		.loc 1 1355 0 is_stmt 0 discriminator 1
 2794 0112 1B23     		movs	r3, #27
 2795 0114 1FE0     		b	.L144
 2796              	.L153:
1356:../Generated_Code/UTIL1.c ****     val = val * r + c;
 2797              		.loc 1 1356 0 is_stmt 1
 2798 0116 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2799 0118 FA68     		ldr	r2, [r7, #12]
 2800 011a 02FB03F2 		mul	r2, r2, r3
 2801 011e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2802 0120 1344     		add	r3, r3, r2
 2803 0122 FB60     		str	r3, [r7, #12]
1357:../Generated_Code/UTIL1.c ****     c = *(++(*str));
 2804              		.loc 1 1357 0
 2805 0124 7B68     		ldr	r3, [r7, #4]
 2806 0126 1B68     		ldr	r3, [r3]
 2807 0128 5A1C     		adds	r2, r3, #1
 2808 012a 7B68     		ldr	r3, [r7, #4]
 2809 012c 1A60     		str	r2, [r3]
 2810 012e 7B68     		ldr	r3, [r7, #4]
 2811 0130 1B68     		ldr	r3, [r3]
 2812 0132 1B78     		ldrb	r3, [r3]
 2813 0134 FB72     		strb	r3, [r7, #11]
 2814              	.L150:
1348:../Generated_Code/UTIL1.c ****   while (c > ' ' && c != '.') {
 2815              		.loc 1 1348 0 discriminator 1
 2816 0136 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2817 0138 202B     		cmp	r3, #32
 2818 013a 02D9     		bls	.L154
1348:../Generated_Code/UTIL1.c ****   while (c > ' ' && c != '.') {
 2819              		.loc 1 1348 0 is_stmt 0 discriminator 2
 2820 013c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2821 013e 2E2B     		cmp	r3, #46
 2822 0140 CFD1     		bne	.L155
 2823              	.L154:
1358:../Generated_Code/UTIL1.c ****   } /* while */
1359:../Generated_Code/UTIL1.c ****   if (s) val = 0 - val;                /* apply sign if needed */
 2824              		.loc 1 1359 0 is_stmt 1
 2825 0142 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2826 0144 002B     		cmp	r3, #0
 2827 0146 02D0     		beq	.L156
 2828              		.loc 1 1359 0 is_stmt 0 discriminator 1
 2829 0148 FB68     		ldr	r3, [r7, #12]
 2830 014a 5B42     		negs	r3, r3
 2831 014c FB60     		str	r3, [r7, #12]
 2832              	.L156:
1360:../Generated_Code/UTIL1.c ****   *res = (long)val;
 2833              		.loc 1 1360 0 is_stmt 1
 2834 014e FA68     		ldr	r2, [r7, #12]
 2835 0150 3B68     		ldr	r3, [r7]
 2836 0152 1A60     		str	r2, [r3]
1361:../Generated_Code/UTIL1.c ****   return ERR_OK;
 2837              		.loc 1 1361 0
 2838 0154 0023     		movs	r3, #0
 2839              	.L144:
1362:../Generated_Code/UTIL1.c **** }
 2840              		.loc 1 1362 0
 2841 0156 1846     		mov	r0, r3
 2842 0158 1437     		adds	r7, r7, #20
 2843 015a BD46     		mov	sp, r7
 2844              		@ sp needed
 2845 015c 5DF8047B 		ldr	r7, [sp], #4
 2846 0160 7047     		bx	lr
 2847              		.cfi_endproc
 2848              	.LFE31:
 2850 0162 00BF     		.section	.text.UTIL1_ScanDate,"ax",%progbits
 2851              		.align	2
 2852              		.global	UTIL1_ScanDate
 2853              		.thumb
 2854              		.thumb_func
 2856              	UTIL1_ScanDate:
 2857              	.LFB32:
1363:../Generated_Code/UTIL1.c **** #ifdef __HC12__
1364:../Generated_Code/UTIL1.c ****   #pragma MESSAGE DEFAULT C12056  /* message about SP debug info */
1365:../Generated_Code/UTIL1.c **** #endif
1366:../Generated_Code/UTIL1.c **** 
1367:../Generated_Code/UTIL1.c **** /*
1368:../Generated_Code/UTIL1.c **** ** ===================================================================
1369:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDate (component Utility)
1370:../Generated_Code/UTIL1.c **** **     Description :
1371:../Generated_Code/UTIL1.c **** **         Scans a date in the format "dd.mm.yyyy" or "dd-mm-yyyy". For
1372:../Generated_Code/UTIL1.c **** **         yy it will expand it to 20yy.
1373:../Generated_Code/UTIL1.c **** **     Parameters  :
1374:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1375:../Generated_Code/UTIL1.c **** **       * str             - Pointer to the string to be scanned. The
1376:../Generated_Code/UTIL1.c **** **                           function advances the pointer.
1377:../Generated_Code/UTIL1.c **** **       * day             - Pointer to where to store the day value
1378:../Generated_Code/UTIL1.c **** **       * month           - Pointer to where to store the month
1379:../Generated_Code/UTIL1.c **** **                           value
1380:../Generated_Code/UTIL1.c **** **       * year            - Pointer to where to store the year value
1381:../Generated_Code/UTIL1.c **** **     Returns     :
1382:../Generated_Code/UTIL1.c **** **         ---             - Error code
1383:../Generated_Code/UTIL1.c **** ** ===================================================================
1384:../Generated_Code/UTIL1.c **** */
1385:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDate(const unsigned char **str, uint8_t *day, uint8_t *month, uint16_t *year)
1386:../Generated_Code/UTIL1.c **** {
 2858              		.loc 1 1386 0
 2859              		.cfi_startproc
 2860              		@ args = 0, pretend = 0, frame = 24
 2861              		@ frame_needed = 1, uses_anonymous_args = 0
 2862 0000 80B5     		push	{r7, lr}
 2863              		.cfi_def_cfa_offset 8
 2864              		.cfi_offset 7, -8
 2865              		.cfi_offset 14, -4
 2866 0002 86B0     		sub	sp, sp, #24
 2867              		.cfi_def_cfa_offset 32
 2868 0004 00AF     		add	r7, sp, #0
 2869              		.cfi_def_cfa_register 7
 2870 0006 F860     		str	r0, [r7, #12]
 2871 0008 B960     		str	r1, [r7, #8]
 2872 000a 7A60     		str	r2, [r7, #4]
 2873 000c 3B60     		str	r3, [r7]
1387:../Generated_Code/UTIL1.c ****   /* precondition: string points to starting of date, e.g. "01.01.10" or "12.5.2010", and date is i
1388:../Generated_Code/UTIL1.c ****   const unsigned char *p;
1389:../Generated_Code/UTIL1.c **** 
1390:../Generated_Code/UTIL1.c ****   p = *str;
 2874              		.loc 1 1390 0
 2875 000e FB68     		ldr	r3, [r7, #12]
 2876 0010 1B68     		ldr	r3, [r3]
 2877 0012 7B61     		str	r3, [r7, #20]
1391:../Generated_Code/UTIL1.c ****   while(*p==' ') {
 2878              		.loc 1 1391 0
 2879 0014 02E0     		b	.L159
 2880              	.L160:
1392:../Generated_Code/UTIL1.c ****     p++; /* skip leading spaces */
 2881              		.loc 1 1392 0
 2882 0016 7B69     		ldr	r3, [r7, #20]
 2883 0018 0133     		adds	r3, r3, #1
 2884 001a 7B61     		str	r3, [r7, #20]
 2885              	.L159:
1391:../Generated_Code/UTIL1.c ****   while(*p==' ') {
 2886              		.loc 1 1391 0 discriminator 1
 2887 001c 7B69     		ldr	r3, [r7, #20]
 2888 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2889 0020 202B     		cmp	r3, #32
 2890 0022 F8D0     		beq	.L160
1393:../Generated_Code/UTIL1.c ****   }
1394:../Generated_Code/UTIL1.c ****   if (   UTIL1_ScanDecimal8uNumber(&p, day)==ERR_OK
 2891              		.loc 1 1394 0
 2892 0024 07F11403 		add	r3, r7, #20
 2893 0028 1846     		mov	r0, r3
 2894 002a B968     		ldr	r1, [r7, #8]
 2895 002c FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 2896 0030 0346     		mov	r3, r0
 2897 0032 002B     		cmp	r3, #0
 2898 0034 51D1     		bne	.L161
1395:../Generated_Code/UTIL1.c ****       && *day > 0 && *day <= 31
 2899              		.loc 1 1395 0
 2900 0036 BB68     		ldr	r3, [r7, #8]
 2901 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2902 003a 002B     		cmp	r3, #0
 2903 003c 4DD0     		beq	.L161
 2904              		.loc 1 1395 0 is_stmt 0 discriminator 1
 2905 003e BB68     		ldr	r3, [r7, #8]
 2906 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 0042 1F2B     		cmp	r3, #31
 2908 0044 49D8     		bhi	.L161
1396:../Generated_Code/UTIL1.c ****       && (*p=='.' || *p=='-')
 2909              		.loc 1 1396 0 is_stmt 1
 2910 0046 7B69     		ldr	r3, [r7, #20]
 2911 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2912 004a 2E2B     		cmp	r3, #46
 2913 004c 03D0     		beq	.L162
 2914              		.loc 1 1396 0 is_stmt 0 discriminator 1
 2915 004e 7B69     		ldr	r3, [r7, #20]
 2916 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2917 0052 2D2B     		cmp	r3, #45
 2918 0054 41D1     		bne	.L161
 2919              	.L162:
1397:../Generated_Code/UTIL1.c ****      )
1398:../Generated_Code/UTIL1.c ****   {
1399:../Generated_Code/UTIL1.c ****     p++;
 2920              		.loc 1 1399 0 is_stmt 1
 2921 0056 7B69     		ldr	r3, [r7, #20]
 2922 0058 0133     		adds	r3, r3, #1
 2923 005a 7B61     		str	r3, [r7, #20]
1400:../Generated_Code/UTIL1.c ****     if (   UTIL1_ScanDecimal8uNumber(&p, month)==ERR_OK
 2924              		.loc 1 1400 0
 2925 005c 07F11403 		add	r3, r7, #20
 2926 0060 1846     		mov	r0, r3
 2927 0062 7968     		ldr	r1, [r7, #4]
 2928 0064 FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 2929 0068 0346     		mov	r3, r0
 2930 006a 002B     		cmp	r3, #0
 2931 006c 35D1     		bne	.L161
1401:../Generated_Code/UTIL1.c ****         && *month > 0 && *month <= 12
 2932              		.loc 1 1401 0
 2933 006e 7B68     		ldr	r3, [r7, #4]
 2934 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2935 0072 002B     		cmp	r3, #0
 2936 0074 31D0     		beq	.L161
 2937              		.loc 1 1401 0 is_stmt 0 discriminator 1
 2938 0076 7B68     		ldr	r3, [r7, #4]
 2939 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2940 007a 0C2B     		cmp	r3, #12
 2941 007c 2DD8     		bhi	.L161
1402:../Generated_Code/UTIL1.c ****         && (*p=='.' || *p=='-')
 2942              		.loc 1 1402 0 is_stmt 1
 2943 007e 7B69     		ldr	r3, [r7, #20]
 2944 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2945 0082 2E2B     		cmp	r3, #46
 2946 0084 03D0     		beq	.L163
 2947              		.loc 1 1402 0 is_stmt 0 discriminator 1
 2948 0086 7B69     		ldr	r3, [r7, #20]
 2949 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2950 008a 2D2B     		cmp	r3, #45
 2951 008c 25D1     		bne	.L161
 2952              	.L163:
1403:../Generated_Code/UTIL1.c ****        )
1404:../Generated_Code/UTIL1.c ****     {
1405:../Generated_Code/UTIL1.c ****       p++;
 2953              		.loc 1 1405 0 is_stmt 1
 2954 008e 7B69     		ldr	r3, [r7, #20]
 2955 0090 0133     		adds	r3, r3, #1
 2956 0092 7B61     		str	r3, [r7, #20]
1406:../Generated_Code/UTIL1.c ****       if (   UTIL1_ScanDecimal16uNumber(&p, year)==ERR_OK
 2957              		.loc 1 1406 0
 2958 0094 07F11403 		add	r3, r7, #20
 2959 0098 1846     		mov	r0, r3
 2960 009a 3968     		ldr	r1, [r7]
 2961 009c FFF7FEFF 		bl	UTIL1_ScanDecimal16uNumber
 2962 00a0 0346     		mov	r3, r0
 2963 00a2 002B     		cmp	r3, #0
 2964 00a4 19D1     		bne	.L161
1407:../Generated_Code/UTIL1.c ****           && *year > 0 && *year <= 3000 /* hopefully this is enough :-) */
 2965              		.loc 1 1407 0
 2966 00a6 3B68     		ldr	r3, [r7]
 2967 00a8 1B88     		ldrh	r3, [r3]
 2968 00aa 002B     		cmp	r3, #0
 2969 00ac 15D0     		beq	.L161
 2970              		.loc 1 1407 0 is_stmt 0 discriminator 1
 2971 00ae 3B68     		ldr	r3, [r7]
 2972 00b0 1A88     		ldrh	r2, [r3]
 2973 00b2 40F6B833 		movw	r3, #3000
 2974 00b6 9A42     		cmp	r2, r3
 2975 00b8 0FD8     		bhi	.L161
1408:../Generated_Code/UTIL1.c ****          )
1409:../Generated_Code/UTIL1.c ****       {
1410:../Generated_Code/UTIL1.c ****         if (*year < 100) {
 2976              		.loc 1 1410 0 is_stmt 1
 2977 00ba 3B68     		ldr	r3, [r7]
 2978 00bc 1B88     		ldrh	r3, [r3]
 2979 00be 632B     		cmp	r3, #99
 2980 00c0 06D8     		bhi	.L164
1411:../Generated_Code/UTIL1.c ****           *year += 2000; /* transform '10' into '2010' */
 2981              		.loc 1 1411 0
 2982 00c2 3B68     		ldr	r3, [r7]
 2983 00c4 1B88     		ldrh	r3, [r3]
 2984 00c6 03F5FA63 		add	r3, r3, #2000
 2985 00ca 9AB2     		uxth	r2, r3
 2986 00cc 3B68     		ldr	r3, [r7]
 2987 00ce 1A80     		strh	r2, [r3]	@ movhi
 2988              	.L164:
1412:../Generated_Code/UTIL1.c ****         }
1413:../Generated_Code/UTIL1.c ****         *str = p; /* advance pointer for caller */
 2989              		.loc 1 1413 0
 2990 00d0 7A69     		ldr	r2, [r7, #20]
 2991 00d2 FB68     		ldr	r3, [r7, #12]
 2992 00d4 1A60     		str	r2, [r3]
1414:../Generated_Code/UTIL1.c ****         return ERR_OK;
 2993              		.loc 1 1414 0
 2994 00d6 0023     		movs	r3, #0
 2995 00d8 09E0     		b	.L166
 2996              	.L161:
1415:../Generated_Code/UTIL1.c ****       }
1416:../Generated_Code/UTIL1.c ****     }
1417:../Generated_Code/UTIL1.c ****   }
1418:../Generated_Code/UTIL1.c ****   *day = 0;
 2997              		.loc 1 1418 0
 2998 00da BB68     		ldr	r3, [r7, #8]
 2999 00dc 0022     		movs	r2, #0
 3000 00de 1A70     		strb	r2, [r3]
1419:../Generated_Code/UTIL1.c ****   *month = 0;
 3001              		.loc 1 1419 0
 3002 00e0 7B68     		ldr	r3, [r7, #4]
 3003 00e2 0022     		movs	r2, #0
 3004 00e4 1A70     		strb	r2, [r3]
1420:../Generated_Code/UTIL1.c ****   *year = 0;
 3005              		.loc 1 1420 0
 3006 00e6 3B68     		ldr	r3, [r7]
 3007 00e8 0022     		movs	r2, #0
 3008 00ea 1A80     		strh	r2, [r3]	@ movhi
1421:../Generated_Code/UTIL1.c ****   return ERR_FAILED; /* wrong format */
 3009              		.loc 1 1421 0
 3010 00ec 1B23     		movs	r3, #27
 3011              	.L166:
1422:../Generated_Code/UTIL1.c **** }
 3012              		.loc 1 1422 0
 3013 00ee 1846     		mov	r0, r3
 3014 00f0 1837     		adds	r7, r7, #24
 3015 00f2 BD46     		mov	sp, r7
 3016              		@ sp needed
 3017 00f4 80BD     		pop	{r7, pc}
 3018              		.cfi_endproc
 3019              	.LFE32:
 3021 00f6 00BF     		.section	.text.UTIL1_ScanTime,"ax",%progbits
 3022              		.align	2
 3023              		.global	UTIL1_ScanTime
 3024              		.thumb
 3025              		.thumb_func
 3027              	UTIL1_ScanTime:
 3028              	.LFB33:
1423:../Generated_Code/UTIL1.c **** 
1424:../Generated_Code/UTIL1.c **** /*
1425:../Generated_Code/UTIL1.c **** ** ===================================================================
1426:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanTime (component Utility)
1427:../Generated_Code/UTIL1.c **** **     Description :
1428:../Generated_Code/UTIL1.c **** **         Scans a time string in the format "hh:mm:ss,hh" with the
1429:../Generated_Code/UTIL1.c **** **         part for the ",hh" is optional.
1430:../Generated_Code/UTIL1.c **** **     Parameters  :
1431:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1432:../Generated_Code/UTIL1.c **** **         str             - Pointer to the string to be scanned. The
1433:../Generated_Code/UTIL1.c **** **                           function advances the pointer.
1434:../Generated_Code/UTIL1.c **** **       * hour            - Pointer to where to store the hour value
1435:../Generated_Code/UTIL1.c **** **       * minute          - Pointer to where to store the minute
1436:../Generated_Code/UTIL1.c **** **                           value
1437:../Generated_Code/UTIL1.c **** **       * second          - Pointer to where to store the second
1438:../Generated_Code/UTIL1.c **** **                           value
1439:../Generated_Code/UTIL1.c **** **       * hSecond         - Pointer to scans the hundreds of
1440:../Generated_Code/UTIL1.c **** **                           second part. If not present in string, zero
1441:../Generated_Code/UTIL1.c **** **                           is stored
1442:../Generated_Code/UTIL1.c **** **     Returns     :
1443:../Generated_Code/UTIL1.c **** **         ---             - Error code
1444:../Generated_Code/UTIL1.c **** ** ===================================================================
1445:../Generated_Code/UTIL1.c **** */
1446:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanTime(const unsigned char **str, uint8_t *hour, uint8_t *minute, uint8_t *second, 
1447:../Generated_Code/UTIL1.c **** {
 3029              		.loc 1 1447 0
 3030              		.cfi_startproc
 3031              		@ args = 4, pretend = 0, frame = 24
 3032              		@ frame_needed = 1, uses_anonymous_args = 0
 3033 0000 80B5     		push	{r7, lr}
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 7, -8
 3036              		.cfi_offset 14, -4
 3037 0002 86B0     		sub	sp, sp, #24
 3038              		.cfi_def_cfa_offset 32
 3039 0004 00AF     		add	r7, sp, #0
 3040              		.cfi_def_cfa_register 7
 3041 0006 F860     		str	r0, [r7, #12]
 3042 0008 B960     		str	r1, [r7, #8]
 3043 000a 7A60     		str	r2, [r7, #4]
 3044 000c 3B60     		str	r3, [r7]
1448:../Generated_Code/UTIL1.c ****   /* precondition: string points to starting of time string, e.g. "03:15:05" or "03:15:05,3" or "03
1449:../Generated_Code/UTIL1.c ****   const unsigned char *p;
1450:../Generated_Code/UTIL1.c ****   #define SCAN_IS_DIGIT(ch) ((ch)>='0'&&(ch)<='9')
1451:../Generated_Code/UTIL1.c **** 
1452:../Generated_Code/UTIL1.c ****   *hour = 0;
 3045              		.loc 1 1452 0
 3046 000e BB68     		ldr	r3, [r7, #8]
 3047 0010 0022     		movs	r2, #0
 3048 0012 1A70     		strb	r2, [r3]
1453:../Generated_Code/UTIL1.c ****   *minute = 0;
 3049              		.loc 1 1453 0
 3050 0014 7B68     		ldr	r3, [r7, #4]
 3051 0016 0022     		movs	r2, #0
 3052 0018 1A70     		strb	r2, [r3]
1454:../Generated_Code/UTIL1.c ****   *second = 0;
 3053              		.loc 1 1454 0
 3054 001a 3B68     		ldr	r3, [r7]
 3055 001c 0022     		movs	r2, #0
 3056 001e 1A70     		strb	r2, [r3]
1455:../Generated_Code/UTIL1.c ****   *hSecond = 0;
 3057              		.loc 1 1455 0
 3058 0020 3B6A     		ldr	r3, [r7, #32]
 3059 0022 0022     		movs	r2, #0
 3060 0024 1A70     		strb	r2, [r3]
1456:../Generated_Code/UTIL1.c ****   p = *str;
 3061              		.loc 1 1456 0
 3062 0026 FB68     		ldr	r3, [r7, #12]
 3063 0028 1B68     		ldr	r3, [r3]
 3064 002a 7B61     		str	r3, [r7, #20]
1457:../Generated_Code/UTIL1.c ****   while(*p==' ') {
 3065              		.loc 1 1457 0
 3066 002c 02E0     		b	.L168
 3067              	.L169:
1458:../Generated_Code/UTIL1.c ****     p++; /* skip leading spaces */
 3068              		.loc 1 1458 0
 3069 002e 7B69     		ldr	r3, [r7, #20]
 3070 0030 0133     		adds	r3, r3, #1
 3071 0032 7B61     		str	r3, [r7, #20]
 3072              	.L168:
1457:../Generated_Code/UTIL1.c ****   while(*p==' ') {
 3073              		.loc 1 1457 0 discriminator 1
 3074 0034 7B69     		ldr	r3, [r7, #20]
 3075 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3076 0038 202B     		cmp	r3, #32
 3077 003a F8D0     		beq	.L169
1459:../Generated_Code/UTIL1.c ****   }
1460:../Generated_Code/UTIL1.c ****   if (   UTIL1_ScanDecimal8uNumber(&p, hour)==ERR_OK
 3078              		.loc 1 1460 0
 3079 003c 07F11403 		add	r3, r7, #20
 3080 0040 1846     		mov	r0, r3
 3081 0042 B968     		ldr	r1, [r7, #8]
 3082 0044 FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 3083 0048 0346     		mov	r3, r0
 3084 004a 002B     		cmp	r3, #0
 3085 004c 7FD1     		bne	.L170
1461:../Generated_Code/UTIL1.c ****       && *hour <= 24
 3086              		.loc 1 1461 0
 3087 004e BB68     		ldr	r3, [r7, #8]
 3088 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3089 0052 182B     		cmp	r3, #24
 3090 0054 7BD8     		bhi	.L170
1462:../Generated_Code/UTIL1.c ****       && *p==':'
 3091              		.loc 1 1462 0
 3092 0056 7B69     		ldr	r3, [r7, #20]
 3093 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3094 005a 3A2B     		cmp	r3, #58
 3095 005c 77D1     		bne	.L170
1463:../Generated_Code/UTIL1.c ****      )
1464:../Generated_Code/UTIL1.c ****   {
1465:../Generated_Code/UTIL1.c ****     p++; /* skip ':' */
 3096              		.loc 1 1465 0
 3097 005e 7B69     		ldr	r3, [r7, #20]
 3098 0060 0133     		adds	r3, r3, #1
 3099 0062 7B61     		str	r3, [r7, #20]
1466:../Generated_Code/UTIL1.c ****     if (   UTIL1_ScanDecimal8uNumber(&p, minute)==ERR_OK
 3100              		.loc 1 1466 0
 3101 0064 07F11403 		add	r3, r7, #20
 3102 0068 1846     		mov	r0, r3
 3103 006a 7968     		ldr	r1, [r7, #4]
 3104 006c FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 3105 0070 0346     		mov	r3, r0
 3106 0072 002B     		cmp	r3, #0
 3107 0074 6BD1     		bne	.L170
1467:../Generated_Code/UTIL1.c ****         && *minute <= 60
 3108              		.loc 1 1467 0
 3109 0076 7B68     		ldr	r3, [r7, #4]
 3110 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3111 007a 3C2B     		cmp	r3, #60
 3112 007c 67D8     		bhi	.L170
1468:../Generated_Code/UTIL1.c ****        )
1469:../Generated_Code/UTIL1.c ****     {
1470:../Generated_Code/UTIL1.c ****       if (*p==':') { /* there is more after the minute */
 3113              		.loc 1 1470 0
 3114 007e 7B69     		ldr	r3, [r7, #20]
 3115 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3116 0082 3A2B     		cmp	r3, #58
 3117 0084 56D1     		bne	.L171
1471:../Generated_Code/UTIL1.c ****         p++; /* skip ':' */
 3118              		.loc 1 1471 0
 3119 0086 7B69     		ldr	r3, [r7, #20]
 3120 0088 0133     		adds	r3, r3, #1
 3121 008a 7B61     		str	r3, [r7, #20]
1472:../Generated_Code/UTIL1.c ****         if (   UTIL1_ScanDecimal8uNumber(&p, second)==ERR_OK
 3122              		.loc 1 1472 0
 3123 008c 07F11403 		add	r3, r7, #20
 3124 0090 1846     		mov	r0, r3
 3125 0092 3968     		ldr	r1, [r7]
 3126 0094 FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 3127 0098 0346     		mov	r3, r0
 3128 009a 002B     		cmp	r3, #0
 3129 009c 57D1     		bne	.L170
1473:../Generated_Code/UTIL1.c ****             && *second <= 60
 3130              		.loc 1 1473 0
 3131 009e 3B68     		ldr	r3, [r7]
 3132 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3133 00a2 3C2B     		cmp	r3, #60
 3134 00a4 53D8     		bhi	.L170
1474:../Generated_Code/UTIL1.c ****            )
1475:../Generated_Code/UTIL1.c ****         {
1476:../Generated_Code/UTIL1.c ****           if (*p==',') { /* we do have either ",z" or ",hh" */
 3135              		.loc 1 1476 0
 3136 00a6 7B69     		ldr	r3, [r7, #20]
 3137 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3138 00aa 2C2B     		cmp	r3, #44
 3139 00ac 3DD1     		bne	.L172
1477:../Generated_Code/UTIL1.c ****             p++; /* skip ',' */
 3140              		.loc 1 1477 0
 3141 00ae 7B69     		ldr	r3, [r7, #20]
 3142 00b0 0133     		adds	r3, r3, #1
 3143 00b2 7B61     		str	r3, [r7, #20]
1478:../Generated_Code/UTIL1.c ****             if (SCAN_IS_DIGIT(*p)) {
 3144              		.loc 1 1478 0
 3145 00b4 7B69     		ldr	r3, [r7, #20]
 3146 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3147 00b8 2F2B     		cmp	r3, #47
 3148 00ba 34D9     		bls	.L173
 3149              		.loc 1 1478 0 is_stmt 0 discriminator 1
 3150 00bc 7B69     		ldr	r3, [r7, #20]
 3151 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3152 00c0 392B     		cmp	r3, #57
 3153 00c2 30D8     		bhi	.L173
1479:../Generated_Code/UTIL1.c ****               if (SCAN_IS_DIGIT(*(p+1))) { /* ,hh format */
 3154              		.loc 1 1479 0 is_stmt 1
 3155 00c4 7B69     		ldr	r3, [r7, #20]
 3156 00c6 0133     		adds	r3, r3, #1
 3157 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3158 00ca 2F2B     		cmp	r3, #47
 3159 00cc 18D9     		bls	.L174
 3160              		.loc 1 1479 0 is_stmt 0 discriminator 1
 3161 00ce 7B69     		ldr	r3, [r7, #20]
 3162 00d0 0133     		adds	r3, r3, #1
 3163 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3164 00d4 392B     		cmp	r3, #57
 3165 00d6 13D8     		bhi	.L174
1480:../Generated_Code/UTIL1.c ****                 *hSecond = (uint8_t)((*p-'0')*10 + *(p+1)-'0');
 3166              		.loc 1 1480 0 is_stmt 1
 3167 00d8 7B69     		ldr	r3, [r7, #20]
 3168 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3169 00dc 303B     		subs	r3, r3, #48
 3170 00de DBB2     		uxtb	r3, r3
 3171 00e0 1A46     		mov	r2, r3
 3172 00e2 9200     		lsls	r2, r2, #2
 3173 00e4 1344     		add	r3, r3, r2
 3174 00e6 5B00     		lsls	r3, r3, #1
 3175 00e8 DAB2     		uxtb	r2, r3
 3176 00ea 7B69     		ldr	r3, [r7, #20]
 3177 00ec 0133     		adds	r3, r3, #1
 3178 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3179 00f0 1344     		add	r3, r3, r2
 3180 00f2 DBB2     		uxtb	r3, r3
 3181 00f4 303B     		subs	r3, r3, #48
 3182 00f6 DAB2     		uxtb	r2, r3
 3183 00f8 3B6A     		ldr	r3, [r7, #32]
 3184 00fa 1A70     		strb	r2, [r3]
1481:../Generated_Code/UTIL1.c ****                 return ERR_OK;
 3185              		.loc 1 1481 0
 3186 00fc 0023     		movs	r3, #0
 3187 00fe 27E0     		b	.L177
 3188              	.L174:
1482:../Generated_Code/UTIL1.c ****               } else { /* ,z format */
1483:../Generated_Code/UTIL1.c ****                 *hSecond = (uint8_t)((*p-'0')*10);
 3189              		.loc 1 1483 0
 3190 0100 7B69     		ldr	r3, [r7, #20]
 3191 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3192 0104 303B     		subs	r3, r3, #48
 3193 0106 DBB2     		uxtb	r3, r3
 3194 0108 1A46     		mov	r2, r3
 3195 010a 9200     		lsls	r2, r2, #2
 3196 010c 1344     		add	r3, r3, r2
 3197 010e 5B00     		lsls	r3, r3, #1
 3198 0110 DAB2     		uxtb	r2, r3
 3199 0112 3B6A     		ldr	r3, [r7, #32]
 3200 0114 1A70     		strb	r2, [r3]
1484:../Generated_Code/UTIL1.c ****                 p++;
 3201              		.loc 1 1484 0
 3202 0116 7B69     		ldr	r3, [r7, #20]
 3203 0118 0133     		adds	r3, r3, #1
 3204 011a 7B61     		str	r3, [r7, #20]
1485:../Generated_Code/UTIL1.c ****                 *str = p; /* advance pointer for caller */
 3205              		.loc 1 1485 0
 3206 011c 7A69     		ldr	r2, [r7, #20]
 3207 011e FB68     		ldr	r3, [r7, #12]
 3208 0120 1A60     		str	r2, [r3]
1486:../Generated_Code/UTIL1.c ****                 return ERR_OK;
 3209              		.loc 1 1486 0
 3210 0122 0023     		movs	r3, #0
 3211 0124 14E0     		b	.L177
 3212              	.L173:
1487:../Generated_Code/UTIL1.c ****               }
1488:../Generated_Code/UTIL1.c ****             } else {
1489:../Generated_Code/UTIL1.c ****               return ERR_FAILED; /* illegal format, not a number, e.g. ",x" */
 3213              		.loc 1 1489 0
 3214 0126 1B23     		movs	r3, #27
 3215 0128 12E0     		b	.L177
 3216              	.L172:
1490:../Generated_Code/UTIL1.c ****             }
1491:../Generated_Code/UTIL1.c ****           }
1492:../Generated_Code/UTIL1.c ****           *str = p; /* advance pointer for caller */
 3217              		.loc 1 1492 0
 3218 012a 7A69     		ldr	r2, [r7, #20]
 3219 012c FB68     		ldr	r3, [r7, #12]
 3220 012e 1A60     		str	r2, [r3]
1493:../Generated_Code/UTIL1.c ****           return ERR_OK;
 3221              		.loc 1 1493 0
 3222 0130 0023     		movs	r3, #0
 3223 0132 0DE0     		b	.L177
 3224              	.L171:
1494:../Generated_Code/UTIL1.c ****         }
1495:../Generated_Code/UTIL1.c ****       } else if (*p==' ' || *p=='\0') { /* nothing more after the minute? Assume zero seconds */
 3225              		.loc 1 1495 0
 3226 0134 7B69     		ldr	r3, [r7, #20]
 3227 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3228 0138 202B     		cmp	r3, #32
 3229 013a 03D0     		beq	.L176
 3230              		.loc 1 1495 0 is_stmt 0 discriminator 1
 3231 013c 7B69     		ldr	r3, [r7, #20]
 3232 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3233 0140 002B     		cmp	r3, #0
 3234 0142 04D1     		bne	.L170
 3235              	.L176:
1496:../Generated_Code/UTIL1.c ****         *str = p; /* advance pointer for caller */
 3236              		.loc 1 1496 0 is_stmt 1
 3237 0144 7A69     		ldr	r2, [r7, #20]
 3238 0146 FB68     		ldr	r3, [r7, #12]
 3239 0148 1A60     		str	r2, [r3]
1497:../Generated_Code/UTIL1.c ****         return ERR_OK;
 3240              		.loc 1 1497 0
 3241 014a 0023     		movs	r3, #0
 3242 014c 00E0     		b	.L177
 3243              	.L170:
1498:../Generated_Code/UTIL1.c ****       }
1499:../Generated_Code/UTIL1.c ****     }
1500:../Generated_Code/UTIL1.c ****   }
1501:../Generated_Code/UTIL1.c ****   return ERR_FAILED; /* wrong format */
 3244              		.loc 1 1501 0
 3245 014e 1B23     		movs	r3, #27
 3246              	.L177:
1502:../Generated_Code/UTIL1.c **** }
 3247              		.loc 1 1502 0
 3248 0150 1846     		mov	r0, r3
 3249 0152 1837     		adds	r7, r7, #24
 3250 0154 BD46     		mov	sp, r7
 3251              		@ sp needed
 3252 0156 80BD     		pop	{r7, pc}
 3253              		.cfi_endproc
 3254              	.LFE33:
 3256              		.section	.text.UTIL1_ScanDecimal8uNumber,"ax",%progbits
 3257              		.align	2
 3258              		.global	UTIL1_ScanDecimal8uNumber
 3259              		.thumb
 3260              		.thumb_func
 3262              	UTIL1_ScanDecimal8uNumber:
 3263              	.LFB34:
1503:../Generated_Code/UTIL1.c **** 
1504:../Generated_Code/UTIL1.c **** /*
1505:../Generated_Code/UTIL1.c **** ** ===================================================================
1506:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal8uNumber (component Utility)
1507:../Generated_Code/UTIL1.c **** **     Description :
1508:../Generated_Code/UTIL1.c **** **         Scans a decimal 8bit unsigned number
1509:../Generated_Code/UTIL1.c **** **     Parameters  :
1510:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1511:../Generated_Code/UTIL1.c **** **         str             - String to scan. It returns as well until
1512:../Generated_Code/UTIL1.c **** **                           where it has scanned
1513:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1514:../Generated_Code/UTIL1.c **** **     Returns     :
1515:../Generated_Code/UTIL1.c **** **         ---             - Error code
1516:../Generated_Code/UTIL1.c **** ** ===================================================================
1517:../Generated_Code/UTIL1.c **** */
1518:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal8uNumber(const unsigned char **str, uint8_t *val)
1519:../Generated_Code/UTIL1.c **** {
 3264              		.loc 1 1519 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 16
 3267              		@ frame_needed = 1, uses_anonymous_args = 0
 3268              		@ link register save eliminated.
 3269 0000 80B4     		push	{r7}
 3270              		.cfi_def_cfa_offset 4
 3271              		.cfi_offset 7, -4
 3272 0002 85B0     		sub	sp, sp, #20
 3273              		.cfi_def_cfa_offset 24
 3274 0004 00AF     		add	r7, sp, #0
 3275              		.cfi_def_cfa_register 7
 3276 0006 7860     		str	r0, [r7, #4]
 3277 0008 3960     		str	r1, [r7]
1520:../Generated_Code/UTIL1.c ****   /* scans a decimal number, and stops at any non-number. Number can have any preceding zeros or sp
1521:../Generated_Code/UTIL1.c ****   #define _8_NOF_DIGITS  (3+1)
1522:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = _8_NOF_DIGITS; /* maximum number of digits to avoid overflow */
 3278              		.loc 1 1522 0
 3279 000a 0423     		movs	r3, #4
 3280 000c FB73     		strb	r3, [r7, #15]
1523:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3281              		.loc 1 1523 0
 3282 000e 7B68     		ldr	r3, [r7, #4]
 3283 0010 1B68     		ldr	r3, [r3]
 3284 0012 BB60     		str	r3, [r7, #8]
1524:../Generated_Code/UTIL1.c **** 
1525:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3285              		.loc 1 1525 0
 3286 0014 02E0     		b	.L179
 3287              	.L180:
1526:../Generated_Code/UTIL1.c ****     p++;
 3288              		.loc 1 1526 0
 3289 0016 BB68     		ldr	r3, [r7, #8]
 3290 0018 0133     		adds	r3, r3, #1
 3291 001a BB60     		str	r3, [r7, #8]
 3292              	.L179:
1525:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3293              		.loc 1 1525 0 discriminator 1
 3294 001c BB68     		ldr	r3, [r7, #8]
 3295 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3296 0020 202B     		cmp	r3, #32
 3297 0022 F8D0     		beq	.L180
1527:../Generated_Code/UTIL1.c ****   }
1528:../Generated_Code/UTIL1.c ****   *val = 0;
 3298              		.loc 1 1528 0
 3299 0024 3B68     		ldr	r3, [r7]
 3300 0026 0022     		movs	r2, #0
 3301 0028 1A70     		strb	r2, [r3]
1529:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3302              		.loc 1 1529 0
 3303 002a 14E0     		b	.L181
 3304              	.L183:
1530:../Generated_Code/UTIL1.c ****     *val = (uint8_t)((*val)*10 + *p-'0');
 3305              		.loc 1 1530 0
 3306 002c 3B68     		ldr	r3, [r7]
 3307 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3308 0030 1A46     		mov	r2, r3
 3309 0032 9200     		lsls	r2, r2, #2
 3310 0034 1344     		add	r3, r3, r2
 3311 0036 5B00     		lsls	r3, r3, #1
 3312 0038 DAB2     		uxtb	r2, r3
 3313 003a BB68     		ldr	r3, [r7, #8]
 3314 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3315 003e 1344     		add	r3, r3, r2
 3316 0040 DBB2     		uxtb	r3, r3
 3317 0042 303B     		subs	r3, r3, #48
 3318 0044 DAB2     		uxtb	r2, r3
 3319 0046 3B68     		ldr	r3, [r7]
 3320 0048 1A70     		strb	r2, [r3]
1531:../Generated_Code/UTIL1.c ****     nofDigits--;
 3321              		.loc 1 1531 0
 3322 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3323 004c 013B     		subs	r3, r3, #1
 3324 004e FB73     		strb	r3, [r7, #15]
1532:../Generated_Code/UTIL1.c ****     p++;
 3325              		.loc 1 1532 0
 3326 0050 BB68     		ldr	r3, [r7, #8]
 3327 0052 0133     		adds	r3, r3, #1
 3328 0054 BB60     		str	r3, [r7, #8]
 3329              	.L181:
1529:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3330              		.loc 1 1529 0 discriminator 1
 3331 0056 BB68     		ldr	r3, [r7, #8]
 3332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3333 005a 2F2B     		cmp	r3, #47
 3334 005c 06D9     		bls	.L182
1529:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3335              		.loc 1 1529 0 is_stmt 0 discriminator 2
 3336 005e BB68     		ldr	r3, [r7, #8]
 3337 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3338 0062 392B     		cmp	r3, #57
 3339 0064 02D8     		bhi	.L182
1529:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3340              		.loc 1 1529 0 discriminator 1
 3341 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3342 0068 002B     		cmp	r3, #0
 3343 006a DFD1     		bne	.L183
 3344              	.L182:
1533:../Generated_Code/UTIL1.c ****   } /* while */
1534:../Generated_Code/UTIL1.c ****   if (nofDigits==0) {
 3345              		.loc 1 1534 0 is_stmt 1
 3346 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3347 006e 002B     		cmp	r3, #0
 3348 0070 01D1     		bne	.L184
1535:../Generated_Code/UTIL1.c ****     return ERR_OVERFLOW;
 3349              		.loc 1 1535 0
 3350 0072 0423     		movs	r3, #4
 3351 0074 08E0     		b	.L185
 3352              	.L184:
1536:../Generated_Code/UTIL1.c ****   }
1537:../Generated_Code/UTIL1.c ****   if (nofDigits==_8_NOF_DIGITS) { /* no digits at all? */
 3353              		.loc 1 1537 0
 3354 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3355 0078 042B     		cmp	r3, #4
 3356 007a 01D1     		bne	.L186
1538:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 3357              		.loc 1 1538 0
 3358 007c 1B23     		movs	r3, #27
 3359 007e 03E0     		b	.L185
 3360              	.L186:
1539:../Generated_Code/UTIL1.c ****   }
1540:../Generated_Code/UTIL1.c ****   *str = p;
 3361              		.loc 1 1540 0
 3362 0080 7B68     		ldr	r3, [r7, #4]
 3363 0082 BA68     		ldr	r2, [r7, #8]
 3364 0084 1A60     		str	r2, [r3]
1541:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3365              		.loc 1 1541 0
 3366 0086 0023     		movs	r3, #0
 3367              	.L185:
1542:../Generated_Code/UTIL1.c **** }
 3368              		.loc 1 1542 0
 3369 0088 1846     		mov	r0, r3
 3370 008a 1437     		adds	r7, r7, #20
 3371 008c BD46     		mov	sp, r7
 3372              		@ sp needed
 3373 008e 5DF8047B 		ldr	r7, [sp], #4
 3374 0092 7047     		bx	lr
 3375              		.cfi_endproc
 3376              	.LFE34:
 3378              		.section	.text.UTIL1_ScanDecimal8sNumber,"ax",%progbits
 3379              		.align	2
 3380              		.global	UTIL1_ScanDecimal8sNumber
 3381              		.thumb
 3382              		.thumb_func
 3384              	UTIL1_ScanDecimal8sNumber:
 3385              	.LFB35:
1543:../Generated_Code/UTIL1.c **** 
1544:../Generated_Code/UTIL1.c **** /*
1545:../Generated_Code/UTIL1.c **** ** ===================================================================
1546:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal8sNumber (component Utility)
1547:../Generated_Code/UTIL1.c **** **     Description :
1548:../Generated_Code/UTIL1.c **** **         Scans a decimal 8bit signed number
1549:../Generated_Code/UTIL1.c **** **     Parameters  :
1550:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1551:../Generated_Code/UTIL1.c **** **         str             - String to scan. It returns as well until
1552:../Generated_Code/UTIL1.c **** **                           where it has scanned
1553:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1554:../Generated_Code/UTIL1.c **** **     Returns     :
1555:../Generated_Code/UTIL1.c **** **         ---             - Error code
1556:../Generated_Code/UTIL1.c **** ** ===================================================================
1557:../Generated_Code/UTIL1.c **** */
1558:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal8sNumber(const unsigned char **str, signed char *val)
1559:../Generated_Code/UTIL1.c **** {
 3386              		.loc 1 1559 0
 3387              		.cfi_startproc
 3388              		@ args = 0, pretend = 0, frame = 24
 3389              		@ frame_needed = 1, uses_anonymous_args = 0
 3390 0000 80B5     		push	{r7, lr}
 3391              		.cfi_def_cfa_offset 8
 3392              		.cfi_offset 7, -8
 3393              		.cfi_offset 14, -4
 3394 0002 86B0     		sub	sp, sp, #24
 3395              		.cfi_def_cfa_offset 32
 3396 0004 00AF     		add	r7, sp, #0
 3397              		.cfi_def_cfa_register 7
 3398 0006 7860     		str	r0, [r7, #4]
 3399 0008 3960     		str	r1, [r7]
1560:../Generated_Code/UTIL1.c ****   /* Scans a decimal number, and stops at any non-number. Number can have any preceding spaces. */
1561:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3400              		.loc 1 1561 0
 3401 000a 7B68     		ldr	r3, [r7, #4]
 3402 000c 1B68     		ldr	r3, [r3]
 3403 000e 3B61     		str	r3, [r7, #16]
1562:../Generated_Code/UTIL1.c ****   bool isNeg;
1563:../Generated_Code/UTIL1.c ****   uint8_t val8u;
1564:../Generated_Code/UTIL1.c ****   uint8_t res;
1565:../Generated_Code/UTIL1.c **** 
1566:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3404              		.loc 1 1566 0
 3405 0010 02E0     		b	.L188
 3406              	.L189:
1567:../Generated_Code/UTIL1.c ****     p++;
 3407              		.loc 1 1567 0
 3408 0012 3B69     		ldr	r3, [r7, #16]
 3409 0014 0133     		adds	r3, r3, #1
 3410 0016 3B61     		str	r3, [r7, #16]
 3411              	.L188:
1566:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3412              		.loc 1 1566 0 discriminator 1
 3413 0018 3B69     		ldr	r3, [r7, #16]
 3414 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3415 001c 202B     		cmp	r3, #32
 3416 001e F8D0     		beq	.L189
1568:../Generated_Code/UTIL1.c ****   }
1569:../Generated_Code/UTIL1.c ****   *val = 0;
 3417              		.loc 1 1569 0
 3418 0020 3B68     		ldr	r3, [r7]
 3419 0022 0022     		movs	r2, #0
 3420 0024 1A70     		strb	r2, [r3]
1570:../Generated_Code/UTIL1.c ****   if (*p=='-') {
 3421              		.loc 1 1570 0
 3422 0026 3B69     		ldr	r3, [r7, #16]
 3423 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3424 002a 2D2B     		cmp	r3, #45
 3425 002c 05D1     		bne	.L190
1571:../Generated_Code/UTIL1.c ****     isNeg = TRUE;
 3426              		.loc 1 1571 0
 3427 002e 0123     		movs	r3, #1
 3428 0030 FB75     		strb	r3, [r7, #23]
1572:../Generated_Code/UTIL1.c ****     p++; /* skip minus */
 3429              		.loc 1 1572 0
 3430 0032 3B69     		ldr	r3, [r7, #16]
 3431 0034 0133     		adds	r3, r3, #1
 3432 0036 3B61     		str	r3, [r7, #16]
 3433 0038 01E0     		b	.L191
 3434              	.L190:
1573:../Generated_Code/UTIL1.c ****   } else {
1574:../Generated_Code/UTIL1.c ****     isNeg = FALSE;
 3435              		.loc 1 1574 0
 3436 003a 0023     		movs	r3, #0
 3437 003c FB75     		strb	r3, [r7, #23]
 3438              	.L191:
1575:../Generated_Code/UTIL1.c ****   }
1576:../Generated_Code/UTIL1.c ****   res = UTIL1_ScanDecimal8uNumber(&p, &val8u);
 3439              		.loc 1 1576 0
 3440 003e 07F11002 		add	r2, r7, #16
 3441 0042 07F10F03 		add	r3, r7, #15
 3442 0046 1046     		mov	r0, r2
 3443 0048 1946     		mov	r1, r3
 3444 004a FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 3445 004e 0346     		mov	r3, r0
 3446 0050 BB75     		strb	r3, [r7, #22]
1577:../Generated_Code/UTIL1.c ****   if (res != ERR_OK) {
 3447              		.loc 1 1577 0
 3448 0052 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3449 0054 002B     		cmp	r3, #0
 3450 0056 01D0     		beq	.L192
1578:../Generated_Code/UTIL1.c ****     return res;
 3451              		.loc 1 1578 0
 3452 0058 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3453 005a 11E0     		b	.L196
 3454              	.L192:
1579:../Generated_Code/UTIL1.c ****   }
1580:../Generated_Code/UTIL1.c ****   if (isNeg) {
 3455              		.loc 1 1580 0
 3456 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3457 005e 002B     		cmp	r3, #0
 3458 0060 06D0     		beq	.L194
1581:../Generated_Code/UTIL1.c ****     *val = (int8_t)(-(int8_t)val8u);
 3459              		.loc 1 1581 0
 3460 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3461 0064 5B42     		negs	r3, r3
 3462 0066 DBB2     		uxtb	r3, r3
 3463 0068 DAB2     		uxtb	r2, r3
 3464 006a 3B68     		ldr	r3, [r7]
 3465 006c 1A70     		strb	r2, [r3]
 3466 006e 03E0     		b	.L195
 3467              	.L194:
1582:../Generated_Code/UTIL1.c ****   } else {
1583:../Generated_Code/UTIL1.c ****     *val = (int8_t)val8u;
 3468              		.loc 1 1583 0
 3469 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3470 0072 DAB2     		uxtb	r2, r3
 3471 0074 3B68     		ldr	r3, [r7]
 3472 0076 1A70     		strb	r2, [r3]
 3473              	.L195:
1584:../Generated_Code/UTIL1.c ****   }
1585:../Generated_Code/UTIL1.c ****   *str = p;
 3474              		.loc 1 1585 0
 3475 0078 3A69     		ldr	r2, [r7, #16]
 3476 007a 7B68     		ldr	r3, [r7, #4]
 3477 007c 1A60     		str	r2, [r3]
1586:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3478              		.loc 1 1586 0
 3479 007e 0023     		movs	r3, #0
 3480              	.L196:
1587:../Generated_Code/UTIL1.c **** }
 3481              		.loc 1 1587 0
 3482 0080 1846     		mov	r0, r3
 3483 0082 1837     		adds	r7, r7, #24
 3484 0084 BD46     		mov	sp, r7
 3485              		@ sp needed
 3486 0086 80BD     		pop	{r7, pc}
 3487              		.cfi_endproc
 3488              	.LFE35:
 3490              		.section	.text.UTIL1_ScanDecimal16uNumber,"ax",%progbits
 3491              		.align	2
 3492              		.global	UTIL1_ScanDecimal16uNumber
 3493              		.thumb
 3494              		.thumb_func
 3496              	UTIL1_ScanDecimal16uNumber:
 3497              	.LFB36:
1588:../Generated_Code/UTIL1.c **** 
1589:../Generated_Code/UTIL1.c **** /*
1590:../Generated_Code/UTIL1.c **** ** ===================================================================
1591:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal16uNumber (component Utility)
1592:../Generated_Code/UTIL1.c **** **     Description :
1593:../Generated_Code/UTIL1.c **** **         Scans a decimal 16bit unsigned number
1594:../Generated_Code/UTIL1.c **** **     Parameters  :
1595:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1596:../Generated_Code/UTIL1.c **** **         str             - String to scan. It returns as well until
1597:../Generated_Code/UTIL1.c **** **                           where it has scanned
1598:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1599:../Generated_Code/UTIL1.c **** **     Returns     :
1600:../Generated_Code/UTIL1.c **** **         ---             - Error code
1601:../Generated_Code/UTIL1.c **** ** ===================================================================
1602:../Generated_Code/UTIL1.c **** */
1603:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal16uNumber(const unsigned char **str, uint16_t *val)
1604:../Generated_Code/UTIL1.c **** {
 3498              		.loc 1 1604 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 16
 3501              		@ frame_needed = 1, uses_anonymous_args = 0
 3502              		@ link register save eliminated.
 3503 0000 80B4     		push	{r7}
 3504              		.cfi_def_cfa_offset 4
 3505              		.cfi_offset 7, -4
 3506 0002 85B0     		sub	sp, sp, #20
 3507              		.cfi_def_cfa_offset 24
 3508 0004 00AF     		add	r7, sp, #0
 3509              		.cfi_def_cfa_register 7
 3510 0006 7860     		str	r0, [r7, #4]
 3511 0008 3960     		str	r1, [r7]
1605:../Generated_Code/UTIL1.c ****   /* scans a decimal number, and stops at any non-number. Number can have any preceding zeros or sp
1606:../Generated_Code/UTIL1.c ****   #define _16_NOF_DIGITS  (5+1)
1607:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = _16_NOF_DIGITS; /* maximum number of digits to avoid overflow */
 3512              		.loc 1 1607 0
 3513 000a 0623     		movs	r3, #6
 3514 000c FB73     		strb	r3, [r7, #15]
1608:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3515              		.loc 1 1608 0
 3516 000e 7B68     		ldr	r3, [r7, #4]
 3517 0010 1B68     		ldr	r3, [r3]
 3518 0012 BB60     		str	r3, [r7, #8]
1609:../Generated_Code/UTIL1.c **** 
1610:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3519              		.loc 1 1610 0
 3520 0014 02E0     		b	.L198
 3521              	.L199:
1611:../Generated_Code/UTIL1.c ****     p++;
 3522              		.loc 1 1611 0
 3523 0016 BB68     		ldr	r3, [r7, #8]
 3524 0018 0133     		adds	r3, r3, #1
 3525 001a BB60     		str	r3, [r7, #8]
 3526              	.L198:
1610:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3527              		.loc 1 1610 0 discriminator 1
 3528 001c BB68     		ldr	r3, [r7, #8]
 3529 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3530 0020 202B     		cmp	r3, #32
 3531 0022 F8D0     		beq	.L199
1612:../Generated_Code/UTIL1.c ****   }
1613:../Generated_Code/UTIL1.c ****   *val = 0;
 3532              		.loc 1 1613 0
 3533 0024 3B68     		ldr	r3, [r7]
 3534 0026 0022     		movs	r2, #0
 3535 0028 1A80     		strh	r2, [r3]	@ movhi
1614:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3536              		.loc 1 1614 0
 3537 002a 14E0     		b	.L200
 3538              	.L202:
1615:../Generated_Code/UTIL1.c ****     *val = (uint16_t)((*val)*10 + *p-'0');
 3539              		.loc 1 1615 0
 3540 002c 3B68     		ldr	r3, [r7]
 3541 002e 1B88     		ldrh	r3, [r3]
 3542 0030 1A46     		mov	r2, r3	@ movhi
 3543 0032 9200     		lsls	r2, r2, #2
 3544 0034 1344     		add	r3, r3, r2
 3545 0036 5B00     		lsls	r3, r3, #1
 3546 0038 9AB2     		uxth	r2, r3
 3547 003a BB68     		ldr	r3, [r7, #8]
 3548 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3549 003e 1344     		add	r3, r3, r2
 3550 0040 9BB2     		uxth	r3, r3
 3551 0042 303B     		subs	r3, r3, #48
 3552 0044 9AB2     		uxth	r2, r3
 3553 0046 3B68     		ldr	r3, [r7]
 3554 0048 1A80     		strh	r2, [r3]	@ movhi
1616:../Generated_Code/UTIL1.c ****     nofDigits--;
 3555              		.loc 1 1616 0
 3556 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3557 004c 013B     		subs	r3, r3, #1
 3558 004e FB73     		strb	r3, [r7, #15]
1617:../Generated_Code/UTIL1.c ****     p++;
 3559              		.loc 1 1617 0
 3560 0050 BB68     		ldr	r3, [r7, #8]
 3561 0052 0133     		adds	r3, r3, #1
 3562 0054 BB60     		str	r3, [r7, #8]
 3563              	.L200:
1614:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3564              		.loc 1 1614 0 discriminator 1
 3565 0056 BB68     		ldr	r3, [r7, #8]
 3566 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3567 005a 2F2B     		cmp	r3, #47
 3568 005c 06D9     		bls	.L201
1614:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3569              		.loc 1 1614 0 is_stmt 0 discriminator 2
 3570 005e BB68     		ldr	r3, [r7, #8]
 3571 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 0062 392B     		cmp	r3, #57
 3573 0064 02D8     		bhi	.L201
1614:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3574              		.loc 1 1614 0 discriminator 1
 3575 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3576 0068 002B     		cmp	r3, #0
 3577 006a DFD1     		bne	.L202
 3578              	.L201:
1618:../Generated_Code/UTIL1.c ****   } /* while */
1619:../Generated_Code/UTIL1.c ****   if (nofDigits==0) {
 3579              		.loc 1 1619 0 is_stmt 1
 3580 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3581 006e 002B     		cmp	r3, #0
 3582 0070 01D1     		bne	.L203
1620:../Generated_Code/UTIL1.c ****     return ERR_OVERFLOW;
 3583              		.loc 1 1620 0
 3584 0072 0423     		movs	r3, #4
 3585 0074 08E0     		b	.L204
 3586              	.L203:
1621:../Generated_Code/UTIL1.c ****   }
1622:../Generated_Code/UTIL1.c ****   if (nofDigits==_16_NOF_DIGITS) { /* no digits at all? */
 3587              		.loc 1 1622 0
 3588 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3589 0078 062B     		cmp	r3, #6
 3590 007a 01D1     		bne	.L205
1623:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 3591              		.loc 1 1623 0
 3592 007c 1B23     		movs	r3, #27
 3593 007e 03E0     		b	.L204
 3594              	.L205:
1624:../Generated_Code/UTIL1.c ****   }
1625:../Generated_Code/UTIL1.c ****   *str = p;
 3595              		.loc 1 1625 0
 3596 0080 7B68     		ldr	r3, [r7, #4]
 3597 0082 BA68     		ldr	r2, [r7, #8]
 3598 0084 1A60     		str	r2, [r3]
1626:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3599              		.loc 1 1626 0
 3600 0086 0023     		movs	r3, #0
 3601              	.L204:
1627:../Generated_Code/UTIL1.c **** }
 3602              		.loc 1 1627 0
 3603 0088 1846     		mov	r0, r3
 3604 008a 1437     		adds	r7, r7, #20
 3605 008c BD46     		mov	sp, r7
 3606              		@ sp needed
 3607 008e 5DF8047B 		ldr	r7, [sp], #4
 3608 0092 7047     		bx	lr
 3609              		.cfi_endproc
 3610              	.LFE36:
 3612              		.section	.text.UTIL1_ScanDecimal16sNumber,"ax",%progbits
 3613              		.align	2
 3614              		.global	UTIL1_ScanDecimal16sNumber
 3615              		.thumb
 3616              		.thumb_func
 3618              	UTIL1_ScanDecimal16sNumber:
 3619              	.LFB37:
1628:../Generated_Code/UTIL1.c **** 
1629:../Generated_Code/UTIL1.c **** /*
1630:../Generated_Code/UTIL1.c **** ** ===================================================================
1631:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal16sNumber (component Utility)
1632:../Generated_Code/UTIL1.c **** **     Description :
1633:../Generated_Code/UTIL1.c **** **         Scans a decimal 16bit signed number
1634:../Generated_Code/UTIL1.c **** **     Parameters  :
1635:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1636:../Generated_Code/UTIL1.c **** **         str             - String to scan. It returns as well until
1637:../Generated_Code/UTIL1.c **** **                           where it has scanned
1638:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1639:../Generated_Code/UTIL1.c **** **     Returns     :
1640:../Generated_Code/UTIL1.c **** **         ---             - Error code
1641:../Generated_Code/UTIL1.c **** ** ===================================================================
1642:../Generated_Code/UTIL1.c **** */
1643:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal16sNumber(const unsigned char **str, int16_t *val)
1644:../Generated_Code/UTIL1.c **** {
 3620              		.loc 1 1644 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 24
 3623              		@ frame_needed = 1, uses_anonymous_args = 0
 3624 0000 80B5     		push	{r7, lr}
 3625              		.cfi_def_cfa_offset 8
 3626              		.cfi_offset 7, -8
 3627              		.cfi_offset 14, -4
 3628 0002 86B0     		sub	sp, sp, #24
 3629              		.cfi_def_cfa_offset 32
 3630 0004 00AF     		add	r7, sp, #0
 3631              		.cfi_def_cfa_register 7
 3632 0006 7860     		str	r0, [r7, #4]
 3633 0008 3960     		str	r1, [r7]
1645:../Generated_Code/UTIL1.c ****   /* Scans a decimal number, and stops at any non-number. Number can have any preceding spaces. */
1646:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3634              		.loc 1 1646 0
 3635 000a 7B68     		ldr	r3, [r7, #4]
 3636 000c 1B68     		ldr	r3, [r3]
 3637 000e 3B61     		str	r3, [r7, #16]
1647:../Generated_Code/UTIL1.c ****   bool isNeg;
1648:../Generated_Code/UTIL1.c ****   uint16_t val16u;
1649:../Generated_Code/UTIL1.c ****   uint8_t res;
1650:../Generated_Code/UTIL1.c **** 
1651:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3638              		.loc 1 1651 0
 3639 0010 02E0     		b	.L207
 3640              	.L208:
1652:../Generated_Code/UTIL1.c ****     p++;
 3641              		.loc 1 1652 0
 3642 0012 3B69     		ldr	r3, [r7, #16]
 3643 0014 0133     		adds	r3, r3, #1
 3644 0016 3B61     		str	r3, [r7, #16]
 3645              	.L207:
1651:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3646              		.loc 1 1651 0 discriminator 1
 3647 0018 3B69     		ldr	r3, [r7, #16]
 3648 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3649 001c 202B     		cmp	r3, #32
 3650 001e F8D0     		beq	.L208
1653:../Generated_Code/UTIL1.c ****   }
1654:../Generated_Code/UTIL1.c ****   *val = 0;
 3651              		.loc 1 1654 0
 3652 0020 3B68     		ldr	r3, [r7]
 3653 0022 0022     		movs	r2, #0
 3654 0024 1A80     		strh	r2, [r3]	@ movhi
1655:../Generated_Code/UTIL1.c ****   if (*p=='-') {
 3655              		.loc 1 1655 0
 3656 0026 3B69     		ldr	r3, [r7, #16]
 3657 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3658 002a 2D2B     		cmp	r3, #45
 3659 002c 05D1     		bne	.L209
1656:../Generated_Code/UTIL1.c ****     isNeg = TRUE;
 3660              		.loc 1 1656 0
 3661 002e 0123     		movs	r3, #1
 3662 0030 FB75     		strb	r3, [r7, #23]
1657:../Generated_Code/UTIL1.c ****     p++; /* skip minus */
 3663              		.loc 1 1657 0
 3664 0032 3B69     		ldr	r3, [r7, #16]
 3665 0034 0133     		adds	r3, r3, #1
 3666 0036 3B61     		str	r3, [r7, #16]
 3667 0038 01E0     		b	.L210
 3668              	.L209:
1658:../Generated_Code/UTIL1.c ****   } else {
1659:../Generated_Code/UTIL1.c ****     isNeg = FALSE;
 3669              		.loc 1 1659 0
 3670 003a 0023     		movs	r3, #0
 3671 003c FB75     		strb	r3, [r7, #23]
 3672              	.L210:
1660:../Generated_Code/UTIL1.c ****   }
1661:../Generated_Code/UTIL1.c ****   res = UTIL1_ScanDecimal16uNumber(&p, (uint16_t*)&val16u);
 3673              		.loc 1 1661 0
 3674 003e 07F11002 		add	r2, r7, #16
 3675 0042 07F10E03 		add	r3, r7, #14
 3676 0046 1046     		mov	r0, r2
 3677 0048 1946     		mov	r1, r3
 3678 004a FFF7FEFF 		bl	UTIL1_ScanDecimal16uNumber
 3679 004e 0346     		mov	r3, r0
 3680 0050 BB75     		strb	r3, [r7, #22]
1662:../Generated_Code/UTIL1.c ****   if (res != ERR_OK) {
 3681              		.loc 1 1662 0
 3682 0052 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3683 0054 002B     		cmp	r3, #0
 3684 0056 01D0     		beq	.L211
1663:../Generated_Code/UTIL1.c ****     return res;
 3685              		.loc 1 1663 0
 3686 0058 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3687 005a 11E0     		b	.L215
 3688              	.L211:
1664:../Generated_Code/UTIL1.c ****   }
1665:../Generated_Code/UTIL1.c ****   if (isNeg) {
 3689              		.loc 1 1665 0
 3690 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3691 005e 002B     		cmp	r3, #0
 3692 0060 06D0     		beq	.L213
1666:../Generated_Code/UTIL1.c ****     *val = (int16_t)(-(int16_t)val16u);
 3693              		.loc 1 1666 0
 3694 0062 FB89     		ldrh	r3, [r7, #14]
 3695 0064 5B42     		negs	r3, r3
 3696 0066 9BB2     		uxth	r3, r3
 3697 0068 9AB2     		uxth	r2, r3
 3698 006a 3B68     		ldr	r3, [r7]
 3699 006c 1A80     		strh	r2, [r3]	@ movhi
 3700 006e 03E0     		b	.L214
 3701              	.L213:
1667:../Generated_Code/UTIL1.c ****   } else {
1668:../Generated_Code/UTIL1.c ****     *val = (int16_t)val16u;
 3702              		.loc 1 1668 0
 3703 0070 FB89     		ldrh	r3, [r7, #14]
 3704 0072 9AB2     		uxth	r2, r3
 3705 0074 3B68     		ldr	r3, [r7]
 3706 0076 1A80     		strh	r2, [r3]	@ movhi
 3707              	.L214:
1669:../Generated_Code/UTIL1.c ****   }
1670:../Generated_Code/UTIL1.c ****   *str = p;
 3708              		.loc 1 1670 0
 3709 0078 3A69     		ldr	r2, [r7, #16]
 3710 007a 7B68     		ldr	r3, [r7, #4]
 3711 007c 1A60     		str	r2, [r3]
1671:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3712              		.loc 1 1671 0
 3713 007e 0023     		movs	r3, #0
 3714              	.L215:
1672:../Generated_Code/UTIL1.c **** }
 3715              		.loc 1 1672 0
 3716 0080 1846     		mov	r0, r3
 3717 0082 1837     		adds	r7, r7, #24
 3718 0084 BD46     		mov	sp, r7
 3719              		@ sp needed
 3720 0086 80BD     		pop	{r7, pc}
 3721              		.cfi_endproc
 3722              	.LFE37:
 3724              		.section	.text.UTIL1_ScanDecimal32uNumber,"ax",%progbits
 3725              		.align	2
 3726              		.global	UTIL1_ScanDecimal32uNumber
 3727              		.thumb
 3728              		.thumb_func
 3730              	UTIL1_ScanDecimal32uNumber:
 3731              	.LFB38:
1673:../Generated_Code/UTIL1.c **** 
1674:../Generated_Code/UTIL1.c **** /*
1675:../Generated_Code/UTIL1.c **** ** ===================================================================
1676:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal32uNumber (component Utility)
1677:../Generated_Code/UTIL1.c **** **     Description :
1678:../Generated_Code/UTIL1.c **** **         Scans a decimal 32bit unsigned number
1679:../Generated_Code/UTIL1.c **** **     Parameters  :
1680:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1681:../Generated_Code/UTIL1.c **** **         str             - string to scan. It returns as well until
1682:../Generated_Code/UTIL1.c **** **                           where it has scanned
1683:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1684:../Generated_Code/UTIL1.c **** **     Returns     :
1685:../Generated_Code/UTIL1.c **** **         ---             - Error code
1686:../Generated_Code/UTIL1.c **** ** ===================================================================
1687:../Generated_Code/UTIL1.c **** */
1688:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal32uNumber(const unsigned char **str, uint32_t *val)
1689:../Generated_Code/UTIL1.c **** {
 3732              		.loc 1 1689 0
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 16
 3735              		@ frame_needed = 1, uses_anonymous_args = 0
 3736              		@ link register save eliminated.
 3737 0000 80B4     		push	{r7}
 3738              		.cfi_def_cfa_offset 4
 3739              		.cfi_offset 7, -4
 3740 0002 85B0     		sub	sp, sp, #20
 3741              		.cfi_def_cfa_offset 24
 3742 0004 00AF     		add	r7, sp, #0
 3743              		.cfi_def_cfa_register 7
 3744 0006 7860     		str	r0, [r7, #4]
 3745 0008 3960     		str	r1, [r7]
1690:../Generated_Code/UTIL1.c ****   /* scans a decimal number, and stops at any non-number. Number can have any preceding zeros or sp
1691:../Generated_Code/UTIL1.c ****   #define _32_NOF_DIGITS  (10+1)
1692:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = _32_NOF_DIGITS; /* maximum number of digits to avoid overflow */
 3746              		.loc 1 1692 0
 3747 000a 0B23     		movs	r3, #11
 3748 000c FB73     		strb	r3, [r7, #15]
1693:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3749              		.loc 1 1693 0
 3750 000e 7B68     		ldr	r3, [r7, #4]
 3751 0010 1B68     		ldr	r3, [r3]
 3752 0012 BB60     		str	r3, [r7, #8]
1694:../Generated_Code/UTIL1.c **** 
1695:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3753              		.loc 1 1695 0
 3754 0014 02E0     		b	.L217
 3755              	.L218:
1696:../Generated_Code/UTIL1.c ****     p++;
 3756              		.loc 1 1696 0
 3757 0016 BB68     		ldr	r3, [r7, #8]
 3758 0018 0133     		adds	r3, r3, #1
 3759 001a BB60     		str	r3, [r7, #8]
 3760              	.L217:
1695:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3761              		.loc 1 1695 0 discriminator 1
 3762 001c BB68     		ldr	r3, [r7, #8]
 3763 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3764 0020 202B     		cmp	r3, #32
 3765 0022 F8D0     		beq	.L218
1697:../Generated_Code/UTIL1.c ****   }
1698:../Generated_Code/UTIL1.c ****   *val = 0;
 3766              		.loc 1 1698 0
 3767 0024 3B68     		ldr	r3, [r7]
 3768 0026 0022     		movs	r2, #0
 3769 0028 1A60     		str	r2, [r3]
1699:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3770              		.loc 1 1699 0
 3771 002a 13E0     		b	.L219
 3772              	.L221:
1700:../Generated_Code/UTIL1.c ****     *val = (uint32_t)((*val)*10 + *p-'0');
 3773              		.loc 1 1700 0
 3774 002c 3B68     		ldr	r3, [r7]
 3775 002e 1A68     		ldr	r2, [r3]
 3776 0030 1346     		mov	r3, r2
 3777 0032 9B00     		lsls	r3, r3, #2
 3778 0034 1344     		add	r3, r3, r2
 3779 0036 5B00     		lsls	r3, r3, #1
 3780 0038 1A46     		mov	r2, r3
 3781 003a BB68     		ldr	r3, [r7, #8]
 3782 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3783 003e 1344     		add	r3, r3, r2
 3784 0040 A3F13002 		sub	r2, r3, #48
 3785 0044 3B68     		ldr	r3, [r7]
 3786 0046 1A60     		str	r2, [r3]
1701:../Generated_Code/UTIL1.c ****     nofDigits--;
 3787              		.loc 1 1701 0
 3788 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3789 004a 013B     		subs	r3, r3, #1
 3790 004c FB73     		strb	r3, [r7, #15]
1702:../Generated_Code/UTIL1.c ****     p++;
 3791              		.loc 1 1702 0
 3792 004e BB68     		ldr	r3, [r7, #8]
 3793 0050 0133     		adds	r3, r3, #1
 3794 0052 BB60     		str	r3, [r7, #8]
 3795              	.L219:
1699:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3796              		.loc 1 1699 0 discriminator 1
 3797 0054 BB68     		ldr	r3, [r7, #8]
 3798 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3799 0058 2F2B     		cmp	r3, #47
 3800 005a 06D9     		bls	.L220
1699:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3801              		.loc 1 1699 0 is_stmt 0 discriminator 2
 3802 005c BB68     		ldr	r3, [r7, #8]
 3803 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3804 0060 392B     		cmp	r3, #57
 3805 0062 02D8     		bhi	.L220
1699:../Generated_Code/UTIL1.c ****   while(*p>='0' && *p<='9' && nofDigits > 0) {
 3806              		.loc 1 1699 0 discriminator 1
 3807 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3808 0066 002B     		cmp	r3, #0
 3809 0068 E0D1     		bne	.L221
 3810              	.L220:
1703:../Generated_Code/UTIL1.c ****   } /* while */
1704:../Generated_Code/UTIL1.c ****   if (nofDigits==0) {
 3811              		.loc 1 1704 0 is_stmt 1
 3812 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3813 006c 002B     		cmp	r3, #0
 3814 006e 01D1     		bne	.L222
1705:../Generated_Code/UTIL1.c ****     return ERR_OVERFLOW;
 3815              		.loc 1 1705 0
 3816 0070 0423     		movs	r3, #4
 3817 0072 08E0     		b	.L223
 3818              	.L222:
1706:../Generated_Code/UTIL1.c ****   }
1707:../Generated_Code/UTIL1.c ****   if (nofDigits==_32_NOF_DIGITS) { /* no digits at all? */
 3819              		.loc 1 1707 0
 3820 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3821 0076 0B2B     		cmp	r3, #11
 3822 0078 01D1     		bne	.L224
1708:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 3823              		.loc 1 1708 0
 3824 007a 1B23     		movs	r3, #27
 3825 007c 03E0     		b	.L223
 3826              	.L224:
1709:../Generated_Code/UTIL1.c ****   }
1710:../Generated_Code/UTIL1.c ****   *str = p;
 3827              		.loc 1 1710 0
 3828 007e 7B68     		ldr	r3, [r7, #4]
 3829 0080 BA68     		ldr	r2, [r7, #8]
 3830 0082 1A60     		str	r2, [r3]
1711:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3831              		.loc 1 1711 0
 3832 0084 0023     		movs	r3, #0
 3833              	.L223:
1712:../Generated_Code/UTIL1.c **** }
 3834              		.loc 1 1712 0
 3835 0086 1846     		mov	r0, r3
 3836 0088 1437     		adds	r7, r7, #20
 3837 008a BD46     		mov	sp, r7
 3838              		@ sp needed
 3839 008c 5DF8047B 		ldr	r7, [sp], #4
 3840 0090 7047     		bx	lr
 3841              		.cfi_endproc
 3842              	.LFE38:
 3844 0092 00BF     		.section	.text.UTIL1_ScanDecimal32sNumber,"ax",%progbits
 3845              		.align	2
 3846              		.global	UTIL1_ScanDecimal32sNumber
 3847              		.thumb
 3848              		.thumb_func
 3850              	UTIL1_ScanDecimal32sNumber:
 3851              	.LFB39:
1713:../Generated_Code/UTIL1.c **** 
1714:../Generated_Code/UTIL1.c **** /*
1715:../Generated_Code/UTIL1.c **** ** ===================================================================
1716:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal32sNumber (component Utility)
1717:../Generated_Code/UTIL1.c **** **     Description :
1718:../Generated_Code/UTIL1.c **** **         Scans a decimal 32bit signed number
1719:../Generated_Code/UTIL1.c **** **     Parameters  :
1720:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1721:../Generated_Code/UTIL1.c **** **         str             - string to scan. It returns as well until
1722:../Generated_Code/UTIL1.c **** **                           where it has scanned
1723:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1724:../Generated_Code/UTIL1.c **** **     Returns     :
1725:../Generated_Code/UTIL1.c **** **         ---             - Error code
1726:../Generated_Code/UTIL1.c **** ** ===================================================================
1727:../Generated_Code/UTIL1.c **** */
1728:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal32sNumber(const unsigned char **str, int32_t *val)
1729:../Generated_Code/UTIL1.c **** {
 3852              		.loc 1 1729 0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 24
 3855              		@ frame_needed = 1, uses_anonymous_args = 0
 3856 0000 80B5     		push	{r7, lr}
 3857              		.cfi_def_cfa_offset 8
 3858              		.cfi_offset 7, -8
 3859              		.cfi_offset 14, -4
 3860 0002 86B0     		sub	sp, sp, #24
 3861              		.cfi_def_cfa_offset 32
 3862 0004 00AF     		add	r7, sp, #0
 3863              		.cfi_def_cfa_register 7
 3864 0006 7860     		str	r0, [r7, #4]
 3865 0008 3960     		str	r1, [r7]
1730:../Generated_Code/UTIL1.c ****   /* Scans a decimal number, and stops at any non-number. Number can have any preceding spaces. */
1731:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3866              		.loc 1 1731 0
 3867 000a 7B68     		ldr	r3, [r7, #4]
 3868 000c 1B68     		ldr	r3, [r3]
 3869 000e 3B61     		str	r3, [r7, #16]
1732:../Generated_Code/UTIL1.c ****   bool isNeg;
1733:../Generated_Code/UTIL1.c ****   uint32_t val32u;
1734:../Generated_Code/UTIL1.c ****   uint8_t res;
1735:../Generated_Code/UTIL1.c **** 
1736:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3870              		.loc 1 1736 0
 3871 0010 02E0     		b	.L226
 3872              	.L227:
1737:../Generated_Code/UTIL1.c ****     p++;
 3873              		.loc 1 1737 0
 3874 0012 3B69     		ldr	r3, [r7, #16]
 3875 0014 0133     		adds	r3, r3, #1
 3876 0016 3B61     		str	r3, [r7, #16]
 3877              	.L226:
1736:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 3878              		.loc 1 1736 0 discriminator 1
 3879 0018 3B69     		ldr	r3, [r7, #16]
 3880 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3881 001c 202B     		cmp	r3, #32
 3882 001e F8D0     		beq	.L227
1738:../Generated_Code/UTIL1.c ****   }
1739:../Generated_Code/UTIL1.c ****   *val = 0;
 3883              		.loc 1 1739 0
 3884 0020 3B68     		ldr	r3, [r7]
 3885 0022 0022     		movs	r2, #0
 3886 0024 1A60     		str	r2, [r3]
1740:../Generated_Code/UTIL1.c ****   if (*p=='-') {
 3887              		.loc 1 1740 0
 3888 0026 3B69     		ldr	r3, [r7, #16]
 3889 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3890 002a 2D2B     		cmp	r3, #45
 3891 002c 05D1     		bne	.L228
1741:../Generated_Code/UTIL1.c ****     isNeg = TRUE;
 3892              		.loc 1 1741 0
 3893 002e 0123     		movs	r3, #1
 3894 0030 FB75     		strb	r3, [r7, #23]
1742:../Generated_Code/UTIL1.c ****     p++; /* skip minus */
 3895              		.loc 1 1742 0
 3896 0032 3B69     		ldr	r3, [r7, #16]
 3897 0034 0133     		adds	r3, r3, #1
 3898 0036 3B61     		str	r3, [r7, #16]
 3899 0038 01E0     		b	.L229
 3900              	.L228:
1743:../Generated_Code/UTIL1.c ****   } else {
1744:../Generated_Code/UTIL1.c ****     isNeg = FALSE;
 3901              		.loc 1 1744 0
 3902 003a 0023     		movs	r3, #0
 3903 003c FB75     		strb	r3, [r7, #23]
 3904              	.L229:
1745:../Generated_Code/UTIL1.c ****   }
1746:../Generated_Code/UTIL1.c ****   res = UTIL1_ScanDecimal32uNumber(&p, &val32u);
 3905              		.loc 1 1746 0
 3906 003e 07F11002 		add	r2, r7, #16
 3907 0042 07F10C03 		add	r3, r7, #12
 3908 0046 1046     		mov	r0, r2
 3909 0048 1946     		mov	r1, r3
 3910 004a FFF7FEFF 		bl	UTIL1_ScanDecimal32uNumber
 3911 004e 0346     		mov	r3, r0
 3912 0050 BB75     		strb	r3, [r7, #22]
1747:../Generated_Code/UTIL1.c ****   if (res != ERR_OK) {
 3913              		.loc 1 1747 0
 3914 0052 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3915 0054 002B     		cmp	r3, #0
 3916 0056 01D0     		beq	.L230
1748:../Generated_Code/UTIL1.c ****     return res;
 3917              		.loc 1 1748 0
 3918 0058 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3919 005a 0FE0     		b	.L234
 3920              	.L230:
1749:../Generated_Code/UTIL1.c ****   }
1750:../Generated_Code/UTIL1.c ****   if (isNeg) {
 3921              		.loc 1 1750 0
 3922 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3923 005e 002B     		cmp	r3, #0
 3924 0060 04D0     		beq	.L232
1751:../Generated_Code/UTIL1.c ****     *val = (int32_t)(-(int32_t)val32u);
 3925              		.loc 1 1751 0
 3926 0062 FB68     		ldr	r3, [r7, #12]
 3927 0064 5A42     		negs	r2, r3
 3928 0066 3B68     		ldr	r3, [r7]
 3929 0068 1A60     		str	r2, [r3]
 3930 006a 03E0     		b	.L233
 3931              	.L232:
1752:../Generated_Code/UTIL1.c ****   } else {
1753:../Generated_Code/UTIL1.c ****     *val = (int32_t)val32u;
 3932              		.loc 1 1753 0
 3933 006c FB68     		ldr	r3, [r7, #12]
 3934 006e 1A46     		mov	r2, r3
 3935 0070 3B68     		ldr	r3, [r7]
 3936 0072 1A60     		str	r2, [r3]
 3937              	.L233:
1754:../Generated_Code/UTIL1.c ****   }
1755:../Generated_Code/UTIL1.c ****   *str = p;
 3938              		.loc 1 1755 0
 3939 0074 3A69     		ldr	r2, [r7, #16]
 3940 0076 7B68     		ldr	r3, [r7, #4]
 3941 0078 1A60     		str	r2, [r3]
1756:../Generated_Code/UTIL1.c ****   return ERR_OK;
 3942              		.loc 1 1756 0
 3943 007a 0023     		movs	r3, #0
 3944              	.L234:
1757:../Generated_Code/UTIL1.c **** }
 3945              		.loc 1 1757 0
 3946 007c 1846     		mov	r0, r3
 3947 007e 1837     		adds	r7, r7, #24
 3948 0080 BD46     		mov	sp, r7
 3949              		@ sp needed
 3950 0082 80BD     		pop	{r7, pc}
 3951              		.cfi_endproc
 3952              	.LFE39:
 3954              		.section	.text.UTIL1_ScanDecimal32sDotNumber,"ax",%progbits
 3955              		.align	2
 3956              		.global	UTIL1_ScanDecimal32sDotNumber
 3957              		.thumb
 3958              		.thumb_func
 3960              	UTIL1_ScanDecimal32sDotNumber:
 3961              	.LFB40:
1758:../Generated_Code/UTIL1.c **** 
1759:../Generated_Code/UTIL1.c **** /*
1760:../Generated_Code/UTIL1.c **** ** ===================================================================
1761:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDecimal32sDotNumber (component Utility)
1762:../Generated_Code/UTIL1.c **** **     Description :
1763:../Generated_Code/UTIL1.c **** **         Scans a decimal 32bit signed number with a following dot
1764:../Generated_Code/UTIL1.c **** **         (fractional part), e.g. "-34587.0248", it will return the
1765:../Generated_Code/UTIL1.c **** **         (signed) integral and fractional part with number of
1766:../Generated_Code/UTIL1.c **** **         fractional zeros. The function accepts as well numbers  like
1767:../Generated_Code/UTIL1.c **** **         "17" (no fractional part" or "17.0" 
1768:../Generated_Code/UTIL1.c **** **     Parameters  :
1769:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1770:../Generated_Code/UTIL1.c **** **         str             - string to scan. It returns as well until
1771:../Generated_Code/UTIL1.c **** **                           where it has scanned
1772:../Generated_Code/UTIL1.c **** **       * integral        - Pointer to value before the dot
1773:../Generated_Code/UTIL1.c **** **       * fractional      - Pointer to value after the
1774:../Generated_Code/UTIL1.c **** **                           dot, e.g. 32 for "-134.0032"
1775:../Generated_Code/UTIL1.c **** **         nofFractionalZeros - Number of
1776:../Generated_Code/UTIL1.c **** **                           fractional leading zeros, e.g. 2 for "-134.
1777:../Generated_Code/UTIL1.c **** **                           0032"
1778:../Generated_Code/UTIL1.c **** **     Returns     :
1779:../Generated_Code/UTIL1.c **** **         ---             - Error code
1780:../Generated_Code/UTIL1.c **** ** ===================================================================
1781:../Generated_Code/UTIL1.c **** */
1782:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDecimal32sDotNumber(const unsigned char **str, int32_t *integral, uint32_t *fract
1783:../Generated_Code/UTIL1.c **** {
 3962              		.loc 1 1783 0
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 24
 3965              		@ frame_needed = 1, uses_anonymous_args = 0
 3966 0000 80B5     		push	{r7, lr}
 3967              		.cfi_def_cfa_offset 8
 3968              		.cfi_offset 7, -8
 3969              		.cfi_offset 14, -4
 3970 0002 86B0     		sub	sp, sp, #24
 3971              		.cfi_def_cfa_offset 32
 3972 0004 00AF     		add	r7, sp, #0
 3973              		.cfi_def_cfa_register 7
 3974 0006 F860     		str	r0, [r7, #12]
 3975 0008 B960     		str	r1, [r7, #8]
 3976 000a 7A60     		str	r2, [r7, #4]
 3977 000c 3B60     		str	r3, [r7]
1784:../Generated_Code/UTIL1.c ****   /* scans e.g. "-3445.071" and returns -3445 in integral part, and 71 in fractional part */
1785:../Generated_Code/UTIL1.c ****   uint8_t res;
1786:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 3978              		.loc 1 1786 0
 3979 000e FB68     		ldr	r3, [r7, #12]
 3980 0010 1B68     		ldr	r3, [r3]
 3981 0012 3B61     		str	r3, [r7, #16]
1787:../Generated_Code/UTIL1.c **** 
1788:../Generated_Code/UTIL1.c ****   *integral = 0;
 3982              		.loc 1 1788 0
 3983 0014 BB68     		ldr	r3, [r7, #8]
 3984 0016 0022     		movs	r2, #0
 3985 0018 1A60     		str	r2, [r3]
1789:../Generated_Code/UTIL1.c ****   *fractional = 0;
 3986              		.loc 1 1789 0
 3987 001a 7B68     		ldr	r3, [r7, #4]
 3988 001c 0022     		movs	r2, #0
 3989 001e 1A60     		str	r2, [r3]
1790:../Generated_Code/UTIL1.c ****   *nofFractionalZeros = 0;
 3990              		.loc 1 1790 0
 3991 0020 3B68     		ldr	r3, [r7]
 3992 0022 0022     		movs	r2, #0
 3993 0024 1A70     		strb	r2, [r3]
1791:../Generated_Code/UTIL1.c ****   res = UTIL1_ScanDecimal32sNumber(&p, integral);
 3994              		.loc 1 1791 0
 3995 0026 07F11003 		add	r3, r7, #16
 3996 002a 1846     		mov	r0, r3
 3997 002c B968     		ldr	r1, [r7, #8]
 3998 002e FFF7FEFF 		bl	UTIL1_ScanDecimal32sNumber
 3999 0032 0346     		mov	r3, r0
 4000 0034 FB75     		strb	r3, [r7, #23]
1792:../Generated_Code/UTIL1.c ****   if (res != ERR_OK) {
 4001              		.loc 1 1792 0
 4002 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4003 0038 002B     		cmp	r3, #0
 4004 003a 01D0     		beq	.L236
1793:../Generated_Code/UTIL1.c ****     return res;
 4005              		.loc 1 1793 0
 4006 003c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4007 003e 2DE0     		b	.L241
 4008              	.L236:
1794:../Generated_Code/UTIL1.c ****   }
1795:../Generated_Code/UTIL1.c ****   if (*p=='.') {
 4009              		.loc 1 1795 0
 4010 0040 3B69     		ldr	r3, [r7, #16]
 4011 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4012 0044 2E2B     		cmp	r3, #46
 4013 0046 25D1     		bne	.L238
1796:../Generated_Code/UTIL1.c ****     p++; /* skip '.' */
 4014              		.loc 1 1796 0
 4015 0048 3B69     		ldr	r3, [r7, #16]
 4016 004a 0133     		adds	r3, r3, #1
 4017 004c 3B61     		str	r3, [r7, #16]
1797:../Generated_Code/UTIL1.c ****     while (*p=='0') { /* count leading zeros */
 4018              		.loc 1 1797 0
 4019 004e 08E0     		b	.L239
 4020              	.L240:
1798:../Generated_Code/UTIL1.c ****       (*nofFractionalZeros)++;
 4021              		.loc 1 1798 0
 4022 0050 3B68     		ldr	r3, [r7]
 4023 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4024 0054 0133     		adds	r3, r3, #1
 4025 0056 DAB2     		uxtb	r2, r3
 4026 0058 3B68     		ldr	r3, [r7]
 4027 005a 1A70     		strb	r2, [r3]
1799:../Generated_Code/UTIL1.c ****       p++; /* skip leading zero */
 4028              		.loc 1 1799 0
 4029 005c 3B69     		ldr	r3, [r7, #16]
 4030 005e 0133     		adds	r3, r3, #1
 4031 0060 3B61     		str	r3, [r7, #16]
 4032              	.L239:
1797:../Generated_Code/UTIL1.c ****     while (*p=='0') { /* count leading zeros */
 4033              		.loc 1 1797 0 discriminator 1
 4034 0062 3B69     		ldr	r3, [r7, #16]
 4035 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4036 0066 302B     		cmp	r3, #48
 4037 0068 F2D0     		beq	.L240
1800:../Generated_Code/UTIL1.c ****     }
1801:../Generated_Code/UTIL1.c ****     if (*p>='0' && *p<='9') { /* number */
 4038              		.loc 1 1801 0
 4039 006a 3B69     		ldr	r3, [r7, #16]
 4040 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4041 006e 2F2B     		cmp	r3, #47
 4042 0070 10D9     		bls	.L238
 4043              		.loc 1 1801 0 is_stmt 0 discriminator 1
 4044 0072 3B69     		ldr	r3, [r7, #16]
 4045 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4046 0076 392B     		cmp	r3, #57
 4047 0078 0CD8     		bhi	.L238
1802:../Generated_Code/UTIL1.c ****       res = UTIL1_ScanDecimal32uNumber(&p, fractional);
 4048              		.loc 1 1802 0 is_stmt 1
 4049 007a 07F11003 		add	r3, r7, #16
 4050 007e 1846     		mov	r0, r3
 4051 0080 7968     		ldr	r1, [r7, #4]
 4052 0082 FFF7FEFF 		bl	UTIL1_ScanDecimal32uNumber
 4053 0086 0346     		mov	r3, r0
 4054 0088 FB75     		strb	r3, [r7, #23]
1803:../Generated_Code/UTIL1.c ****       if (res != ERR_OK) {
 4055              		.loc 1 1803 0
 4056 008a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4057 008c 002B     		cmp	r3, #0
 4058 008e 01D0     		beq	.L238
1804:../Generated_Code/UTIL1.c ****         return res;
 4059              		.loc 1 1804 0
 4060 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4061 0092 03E0     		b	.L241
 4062              	.L238:
1805:../Generated_Code/UTIL1.c ****       }
1806:../Generated_Code/UTIL1.c ****     }
1807:../Generated_Code/UTIL1.c ****   }
1808:../Generated_Code/UTIL1.c ****   *str = p; /* store parsing pointer */
 4063              		.loc 1 1808 0
 4064 0094 3A69     		ldr	r2, [r7, #16]
 4065 0096 FB68     		ldr	r3, [r7, #12]
 4066 0098 1A60     		str	r2, [r3]
1809:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4067              		.loc 1 1809 0
 4068 009a 0023     		movs	r3, #0
 4069              	.L241:
1810:../Generated_Code/UTIL1.c **** }
 4070              		.loc 1 1810 0
 4071 009c 1846     		mov	r0, r3
 4072 009e 1837     		adds	r7, r7, #24
 4073 00a0 BD46     		mov	sp, r7
 4074              		@ sp needed
 4075 00a2 80BD     		pop	{r7, pc}
 4076              		.cfi_endproc
 4077              	.LFE40:
 4079              		.section	.text.isHexCharacter,"ax",%progbits
 4080              		.align	2
 4081              		.thumb
 4082              		.thumb_func
 4084              	isHexCharacter:
 4085              	.LFB41:
1811:../Generated_Code/UTIL1.c **** 
1812:../Generated_Code/UTIL1.c **** /*
1813:../Generated_Code/UTIL1.c **** ** ===================================================================
1814:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcmp (component Utility)
1815:../Generated_Code/UTIL1.c **** **     Description :
1816:../Generated_Code/UTIL1.c **** **         Wrapper to the standard strcmp() routine
1817:../Generated_Code/UTIL1.c **** **     Parameters  :
1818:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1819:../Generated_Code/UTIL1.c **** **       * str1            - Pointer to string
1820:../Generated_Code/UTIL1.c **** **       * str2            - Pointer to string
1821:../Generated_Code/UTIL1.c **** **     Returns     :
1822:../Generated_Code/UTIL1.c **** **         ---             - Returns zero if the two strings are the
1823:../Generated_Code/UTIL1.c **** **                           same
1824:../Generated_Code/UTIL1.c **** ** ===================================================================
1825:../Generated_Code/UTIL1.c **** */
1826:../Generated_Code/UTIL1.c **** /***
1827:../Generated_Code/UTIL1.c **** int16_t UTIL1_strcmp(const char *, const char *)
1828:../Generated_Code/UTIL1.c **** {
1829:../Generated_Code/UTIL1.c ****   Method is implemented as macro in the header file as wrapper to the standard strcmp() function
1830:../Generated_Code/UTIL1.c **** }
1831:../Generated_Code/UTIL1.c **** */
1832:../Generated_Code/UTIL1.c **** 
1833:../Generated_Code/UTIL1.c **** /*
1834:../Generated_Code/UTIL1.c **** ** ===================================================================
1835:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strncmp (component Utility)
1836:../Generated_Code/UTIL1.c **** **     Description :
1837:../Generated_Code/UTIL1.c **** **         Wrapper to the standard strncmp() routine
1838:../Generated_Code/UTIL1.c **** **     Parameters  :
1839:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1840:../Generated_Code/UTIL1.c **** **       * str1            - Pointer to string
1841:../Generated_Code/UTIL1.c **** **       * str2            - Pointer to string
1842:../Generated_Code/UTIL1.c **** **         size            - 
1843:../Generated_Code/UTIL1.c **** **     Returns     :
1844:../Generated_Code/UTIL1.c **** **         ---             - Returns zero if the two strings are the
1845:../Generated_Code/UTIL1.c **** **                           same
1846:../Generated_Code/UTIL1.c **** ** ===================================================================
1847:../Generated_Code/UTIL1.c **** */
1848:../Generated_Code/UTIL1.c **** /***
1849:../Generated_Code/UTIL1.c **** int16_t UTIL1_strncmp(const char *, const char *, size_t size)
1850:../Generated_Code/UTIL1.c **** {
1851:../Generated_Code/UTIL1.c ****   /Method is implemented as macro in the header file as wrapper to the standard strncmp() function
1852:../Generated_Code/UTIL1.c **** }
1853:../Generated_Code/UTIL1.c **** */
1854:../Generated_Code/UTIL1.c **** 
1855:../Generated_Code/UTIL1.c **** /*
1856:../Generated_Code/UTIL1.c **** ** ===================================================================
1857:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strlen (component Utility)
1858:../Generated_Code/UTIL1.c **** **     Description :
1859:../Generated_Code/UTIL1.c **** **         Wrapper to the standard strlen() function.
1860:../Generated_Code/UTIL1.c **** **     Parameters  :
1861:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1862:../Generated_Code/UTIL1.c **** **         str             - 
1863:../Generated_Code/UTIL1.c **** **     Returns     :
1864:../Generated_Code/UTIL1.c **** **         ---             - size of strinig
1865:../Generated_Code/UTIL1.c **** ** ===================================================================
1866:../Generated_Code/UTIL1.c **** */
1867:../Generated_Code/UTIL1.c **** /***
1868:../Generated_Code/UTIL1.c **** uint16_t UTIL1_strlen(const char *)
1869:../Generated_Code/UTIL1.c **** {
1870:../Generated_Code/UTIL1.c ****   Method is implemented as macro in the header file as wrapper to the standard strlen() function
1871:../Generated_Code/UTIL1.c **** }
1872:../Generated_Code/UTIL1.c **** */
1873:../Generated_Code/UTIL1.c **** 
1874:../Generated_Code/UTIL1.c **** static bool isHexCharacter(unsigned char ch) {
 4086              		.loc 1 1874 0
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 8
 4089              		@ frame_needed = 1, uses_anonymous_args = 0
 4090              		@ link register save eliminated.
 4091 0000 80B4     		push	{r7}
 4092              		.cfi_def_cfa_offset 4
 4093              		.cfi_offset 7, -4
 4094 0002 83B0     		sub	sp, sp, #12
 4095              		.cfi_def_cfa_offset 16
 4096 0004 00AF     		add	r7, sp, #0
 4097              		.cfi_def_cfa_register 7
 4098 0006 0346     		mov	r3, r0
 4099 0008 FB71     		strb	r3, [r7, #7]
1875:../Generated_Code/UTIL1.c ****   /* returns TRUE if character is a hexadecimal character */
1876:../Generated_Code/UTIL1.c ****   return (ch>='0' && ch<='9') || (ch>='a' && ch<='f') || (ch>='A' && ch<='F');
 4100              		.loc 1 1876 0
 4101 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4102 000c 2F2B     		cmp	r3, #47
 4103 000e 02D9     		bls	.L243
 4104              		.loc 1 1876 0 is_stmt 0 discriminator 1
 4105 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4106 0012 392B     		cmp	r3, #57
 4107 0014 0BD9     		bls	.L244
 4108              	.L243:
 4109              		.loc 1 1876 0 discriminator 2
 4110 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4111 0018 602B     		cmp	r3, #96
 4112 001a 02D9     		bls	.L245
 4113              		.loc 1 1876 0 discriminator 1
 4114 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4115 001e 662B     		cmp	r3, #102
 4116 0020 05D9     		bls	.L244
 4117              	.L245:
 4118              		.loc 1 1876 0 discriminator 2
 4119 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4120 0024 402B     		cmp	r3, #64
 4121 0026 04D9     		bls	.L246
 4122              		.loc 1 1876 0 discriminator 3
 4123 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4124 002a 462B     		cmp	r3, #70
 4125 002c 01D8     		bhi	.L246
 4126              	.L244:
 4127              		.loc 1 1876 0 discriminator 1
 4128 002e 0123     		movs	r3, #1
 4129 0030 00E0     		b	.L247
 4130              	.L246:
 4131              		.loc 1 1876 0 discriminator 4
 4132 0032 0023     		movs	r3, #0
 4133              	.L247:
 4134              		.loc 1 1876 0 discriminator 5
 4135 0034 DBB2     		uxtb	r3, r3
1877:../Generated_Code/UTIL1.c **** }
 4136              		.loc 1 1877 0 is_stmt 1 discriminator 5
 4137 0036 1846     		mov	r0, r3
 4138 0038 0C37     		adds	r7, r7, #12
 4139 003a BD46     		mov	sp, r7
 4140              		@ sp needed
 4141 003c 5DF8047B 		ldr	r7, [sp], #4
 4142 0040 7047     		bx	lr
 4143              		.cfi_endproc
 4144              	.LFE41:
 4146 0042 00BF     		.section	.text.PreScanHexNumber,"ax",%progbits
 4147              		.align	2
 4148              		.thumb
 4149              		.thumb_func
 4151              	PreScanHexNumber:
 4152              	.LFB42:
1878:../Generated_Code/UTIL1.c **** 
1879:../Generated_Code/UTIL1.c **** static uint8_t PreScanHexNumber(const unsigned char **str) {
 4153              		.loc 1 1879 0
 4154              		.cfi_startproc
 4155              		@ args = 0, pretend = 0, frame = 16
 4156              		@ frame_needed = 1, uses_anonymous_args = 0
 4157              		@ link register save eliminated.
 4158 0000 80B4     		push	{r7}
 4159              		.cfi_def_cfa_offset 4
 4160              		.cfi_offset 7, -4
 4161 0002 85B0     		sub	sp, sp, #20
 4162              		.cfi_def_cfa_offset 24
 4163 0004 00AF     		add	r7, sp, #0
 4164              		.cfi_def_cfa_register 7
 4165 0006 7860     		str	r0, [r7, #4]
1880:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 4166              		.loc 1 1880 0
 4167 0008 7B68     		ldr	r3, [r7, #4]
 4168 000a 1B68     		ldr	r3, [r3]
 4169 000c FB60     		str	r3, [r7, #12]
1881:../Generated_Code/UTIL1.c **** 
1882:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 4170              		.loc 1 1882 0
 4171 000e 02E0     		b	.L250
 4172              	.L251:
1883:../Generated_Code/UTIL1.c ****     p++; /* skip space */
 4173              		.loc 1 1883 0
 4174 0010 FB68     		ldr	r3, [r7, #12]
 4175 0012 0133     		adds	r3, r3, #1
 4176 0014 FB60     		str	r3, [r7, #12]
 4177              	.L250:
1882:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 4178              		.loc 1 1882 0 discriminator 1
 4179 0016 FB68     		ldr	r3, [r7, #12]
 4180 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4181 001a 202B     		cmp	r3, #32
 4182 001c F8D0     		beq	.L251
1884:../Generated_Code/UTIL1.c ****   }
1885:../Generated_Code/UTIL1.c ****   if (*p!='0') { /* must start with 0x */
 4183              		.loc 1 1885 0
 4184 001e FB68     		ldr	r3, [r7, #12]
 4185 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4186 0022 302B     		cmp	r3, #48
 4187 0024 01D0     		beq	.L252
1886:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4188              		.loc 1 1886 0
 4189 0026 1B23     		movs	r3, #27
 4190 0028 0FE0     		b	.L253
 4191              	.L252:
1887:../Generated_Code/UTIL1.c ****   }
1888:../Generated_Code/UTIL1.c ****   p++; /* skip '0' */
 4192              		.loc 1 1888 0
 4193 002a FB68     		ldr	r3, [r7, #12]
 4194 002c 0133     		adds	r3, r3, #1
 4195 002e FB60     		str	r3, [r7, #12]
1889:../Generated_Code/UTIL1.c ****   if (*p!='x') { /* must start with 0x */
 4196              		.loc 1 1889 0
 4197 0030 FB68     		ldr	r3, [r7, #12]
 4198 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4199 0034 782B     		cmp	r3, #120
 4200 0036 01D0     		beq	.L254
1890:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4201              		.loc 1 1890 0
 4202 0038 1B23     		movs	r3, #27
 4203 003a 06E0     		b	.L253
 4204              	.L254:
1891:../Generated_Code/UTIL1.c ****   }
1892:../Generated_Code/UTIL1.c ****   p++; /* skip 'x' */
 4205              		.loc 1 1892 0
 4206 003c FB68     		ldr	r3, [r7, #12]
 4207 003e 0133     		adds	r3, r3, #1
 4208 0040 FB60     		str	r3, [r7, #12]
1893:../Generated_Code/UTIL1.c ****   *str = p;
 4209              		.loc 1 1893 0
 4210 0042 7B68     		ldr	r3, [r7, #4]
 4211 0044 FA68     		ldr	r2, [r7, #12]
 4212 0046 1A60     		str	r2, [r3]
1894:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4213              		.loc 1 1894 0
 4214 0048 0023     		movs	r3, #0
 4215              	.L253:
1895:../Generated_Code/UTIL1.c **** }
 4216              		.loc 1 1895 0
 4217 004a 1846     		mov	r0, r3
 4218 004c 1437     		adds	r7, r7, #20
 4219 004e BD46     		mov	sp, r7
 4220              		@ sp needed
 4221 0050 5DF8047B 		ldr	r7, [sp], #4
 4222 0054 7047     		bx	lr
 4223              		.cfi_endproc
 4224              	.LFE42:
 4226 0056 00BF     		.section	.text.HexToDec,"ax",%progbits
 4227              		.align	2
 4228              		.thumb
 4229              		.thumb_func
 4231              	HexToDec:
 4232              	.LFB43:
1896:../Generated_Code/UTIL1.c **** 
1897:../Generated_Code/UTIL1.c **** static uint8_t HexToDec(const unsigned char **p, unsigned char *val) {
 4233              		.loc 1 1897 0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 16
 4236              		@ frame_needed = 1, uses_anonymous_args = 0
 4237              		@ link register save eliminated.
 4238 0000 80B4     		push	{r7}
 4239              		.cfi_def_cfa_offset 4
 4240              		.cfi_offset 7, -4
 4241 0002 85B0     		sub	sp, sp, #20
 4242              		.cfi_def_cfa_offset 24
 4243 0004 00AF     		add	r7, sp, #0
 4244              		.cfi_def_cfa_register 7
 4245 0006 7860     		str	r0, [r7, #4]
 4246 0008 3960     		str	r1, [r7]
1898:../Generated_Code/UTIL1.c ****   /* convert a hexadecimal character into a decimal value */
1899:../Generated_Code/UTIL1.c ****   unsigned char ch = **p;
 4247              		.loc 1 1899 0
 4248 000a 7B68     		ldr	r3, [r7, #4]
 4249 000c 1B68     		ldr	r3, [r3]
 4250 000e 1B78     		ldrb	r3, [r3]
 4251 0010 FB73     		strb	r3, [r7, #15]
1900:../Generated_Code/UTIL1.c **** 
1901:../Generated_Code/UTIL1.c ****   if (ch>='0' && ch<='9') {
 4252              		.loc 1 1901 0
 4253 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4254 0014 2F2B     		cmp	r3, #47
 4255 0016 0ED9     		bls	.L256
 4256              		.loc 1 1901 0 is_stmt 0 discriminator 1
 4257 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4258 001a 392B     		cmp	r3, #57
 4259 001c 0BD8     		bhi	.L256
1902:../Generated_Code/UTIL1.c ****     *val = (unsigned char)(ch-'0');
 4260              		.loc 1 1902 0 is_stmt 1
 4261 001e FB7B     		ldrb	r3, [r7, #15]
 4262 0020 303B     		subs	r3, r3, #48
 4263 0022 DAB2     		uxtb	r2, r3
 4264 0024 3B68     		ldr	r3, [r7]
 4265 0026 1A70     		strb	r2, [r3]
1903:../Generated_Code/UTIL1.c ****     (*p)++;
 4266              		.loc 1 1903 0
 4267 0028 7B68     		ldr	r3, [r7, #4]
 4268 002a 1B68     		ldr	r3, [r3]
 4269 002c 5A1C     		adds	r2, r3, #1
 4270 002e 7B68     		ldr	r3, [r7, #4]
 4271 0030 1A60     		str	r2, [r3]
1904:../Generated_Code/UTIL1.c ****     return ERR_OK;
 4272              		.loc 1 1904 0
 4273 0032 0023     		movs	r3, #0
 4274 0034 24E0     		b	.L257
 4275              	.L256:
1905:../Generated_Code/UTIL1.c ****   } else if (ch>='a' && ch<='f') {
 4276              		.loc 1 1905 0
 4277 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4278 0038 602B     		cmp	r3, #96
 4279 003a 0ED9     		bls	.L258
 4280              		.loc 1 1905 0 is_stmt 0 discriminator 1
 4281 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4282 003e 662B     		cmp	r3, #102
 4283 0040 0BD8     		bhi	.L258
1906:../Generated_Code/UTIL1.c ****     *val = (unsigned char)(ch-'a'+10);
 4284              		.loc 1 1906 0 is_stmt 1
 4285 0042 FB7B     		ldrb	r3, [r7, #15]
 4286 0044 573B     		subs	r3, r3, #87
 4287 0046 DAB2     		uxtb	r2, r3
 4288 0048 3B68     		ldr	r3, [r7]
 4289 004a 1A70     		strb	r2, [r3]
1907:../Generated_Code/UTIL1.c ****     (*p)++;
 4290              		.loc 1 1907 0
 4291 004c 7B68     		ldr	r3, [r7, #4]
 4292 004e 1B68     		ldr	r3, [r3]
 4293 0050 5A1C     		adds	r2, r3, #1
 4294 0052 7B68     		ldr	r3, [r7, #4]
 4295 0054 1A60     		str	r2, [r3]
1908:../Generated_Code/UTIL1.c ****     return ERR_OK;
 4296              		.loc 1 1908 0
 4297 0056 0023     		movs	r3, #0
 4298 0058 12E0     		b	.L257
 4299              	.L258:
1909:../Generated_Code/UTIL1.c ****   } else if (ch>='A' && ch<='F') {
 4300              		.loc 1 1909 0
 4301 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4302 005c 402B     		cmp	r3, #64
 4303 005e 0ED9     		bls	.L259
 4304              		.loc 1 1909 0 is_stmt 0 discriminator 1
 4305 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4306 0062 462B     		cmp	r3, #70
 4307 0064 0BD8     		bhi	.L259
1910:../Generated_Code/UTIL1.c ****     *val = (unsigned char)(ch-'A'+10);
 4308              		.loc 1 1910 0 is_stmt 1
 4309 0066 FB7B     		ldrb	r3, [r7, #15]
 4310 0068 373B     		subs	r3, r3, #55
 4311 006a DAB2     		uxtb	r2, r3
 4312 006c 3B68     		ldr	r3, [r7]
 4313 006e 1A70     		strb	r2, [r3]
1911:../Generated_Code/UTIL1.c ****     (*p)++;
 4314              		.loc 1 1911 0
 4315 0070 7B68     		ldr	r3, [r7, #4]
 4316 0072 1B68     		ldr	r3, [r3]
 4317 0074 5A1C     		adds	r2, r3, #1
 4318 0076 7B68     		ldr	r3, [r7, #4]
 4319 0078 1A60     		str	r2, [r3]
1912:../Generated_Code/UTIL1.c ****     return ERR_OK;
 4320              		.loc 1 1912 0
 4321 007a 0023     		movs	r3, #0
 4322 007c 00E0     		b	.L257
 4323              	.L259:
1913:../Generated_Code/UTIL1.c ****   }
1914:../Generated_Code/UTIL1.c ****   return ERR_FAILED;
 4324              		.loc 1 1914 0
 4325 007e 1B23     		movs	r3, #27
 4326              	.L257:
1915:../Generated_Code/UTIL1.c **** }
 4327              		.loc 1 1915 0
 4328 0080 1846     		mov	r0, r3
 4329 0082 1437     		adds	r7, r7, #20
 4330 0084 BD46     		mov	sp, r7
 4331              		@ sp needed
 4332 0086 5DF8047B 		ldr	r7, [sp], #4
 4333 008a 7047     		bx	lr
 4334              		.cfi_endproc
 4335              	.LFE43:
 4337              		.section	.text.UTIL1_ScanHex32uNumber,"ax",%progbits
 4338              		.align	2
 4339              		.global	UTIL1_ScanHex32uNumber
 4340              		.thumb
 4341              		.thumb_func
 4343              	UTIL1_ScanHex32uNumber:
 4344              	.LFB44:
1916:../Generated_Code/UTIL1.c **** 
1917:../Generated_Code/UTIL1.c **** /*
1918:../Generated_Code/UTIL1.c **** ** ===================================================================
1919:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanHex32uNumber (component Utility)
1920:../Generated_Code/UTIL1.c **** **     Description :
1921:../Generated_Code/UTIL1.c **** **         Scans a hexadecimal 32bit number, starting with 0x
1922:../Generated_Code/UTIL1.c **** **     Parameters  :
1923:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1924:../Generated_Code/UTIL1.c **** **         str             - String to scan, starting with 0x. It
1925:../Generated_Code/UTIL1.c **** **                           returns as well until where it has scanned
1926:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1927:../Generated_Code/UTIL1.c **** **     Returns     :
1928:../Generated_Code/UTIL1.c **** **         ---             - Error code
1929:../Generated_Code/UTIL1.c **** ** ===================================================================
1930:../Generated_Code/UTIL1.c **** */
1931:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanHex32uNumber(const unsigned char **str, uint32_t *val)
1932:../Generated_Code/UTIL1.c **** {
 4345              		.loc 1 1932 0
 4346              		.cfi_startproc
 4347              		@ args = 0, pretend = 0, frame = 24
 4348              		@ frame_needed = 1, uses_anonymous_args = 0
 4349 0000 80B5     		push	{r7, lr}
 4350              		.cfi_def_cfa_offset 8
 4351              		.cfi_offset 7, -8
 4352              		.cfi_offset 14, -4
 4353 0002 86B0     		sub	sp, sp, #24
 4354              		.cfi_def_cfa_offset 32
 4355 0004 00AF     		add	r7, sp, #0
 4356              		.cfi_def_cfa_register 7
 4357 0006 7860     		str	r0, [r7, #4]
 4358 0008 3960     		str	r1, [r7]
1933:../Generated_Code/UTIL1.c ****   /* scans a decimal number, and stops at any non-number. Number can have any preceding zeros or sp
1934:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = 8; /* maximum number of digits to avoid overflow */
 4359              		.loc 1 1934 0
 4360 000a 0823     		movs	r3, #8
 4361 000c FB75     		strb	r3, [r7, #23]
1935:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 4362              		.loc 1 1935 0
 4363 000e 7B68     		ldr	r3, [r7, #4]
 4364 0010 1B68     		ldr	r3, [r3]
 4365 0012 3B61     		str	r3, [r7, #16]
1936:../Generated_Code/UTIL1.c ****   uint8_t v;
1937:../Generated_Code/UTIL1.c **** 
1938:../Generated_Code/UTIL1.c ****   *val = 0;
 4366              		.loc 1 1938 0
 4367 0014 3B68     		ldr	r3, [r7]
 4368 0016 0022     		movs	r2, #0
 4369 0018 1A60     		str	r2, [r3]
1939:../Generated_Code/UTIL1.c ****   if (PreScanHexNumber(&p)!=ERR_OK) { /* skip leading spaces, and scan '0x' */
 4370              		.loc 1 1939 0
 4371 001a 07F11003 		add	r3, r7, #16
 4372 001e 1846     		mov	r0, r3
 4373 0020 FFF7FEFF 		bl	PreScanHexNumber
 4374 0024 0346     		mov	r3, r0
 4375 0026 002B     		cmp	r3, #0
 4376 0028 01D0     		beq	.L261
1940:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4377              		.loc 1 1940 0
 4378 002a 1B23     		movs	r3, #27
 4379 002c 26E0     		b	.L267
 4380              	.L261:
1941:../Generated_Code/UTIL1.c ****   }
1942:../Generated_Code/UTIL1.c ****   if (!isHexCharacter(*p)) { /* not a valid hex number sequence */
 4381              		.loc 1 1942 0
 4382 002e 3B69     		ldr	r3, [r7, #16]
 4383 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4384 0032 1846     		mov	r0, r3
 4385 0034 FFF7FEFF 		bl	isHexCharacter
 4386 0038 0346     		mov	r3, r0
 4387 003a 002B     		cmp	r3, #0
 4388 003c 01D1     		bne	.L263
1943:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4389              		.loc 1 1943 0
 4390 003e 1B23     		movs	r3, #27
 4391 0040 1CE0     		b	.L267
 4392              	.L263:
1944:../Generated_Code/UTIL1.c ****   }
1945:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4393              		.loc 1 1945 0
 4394 0042 09E0     		b	.L264
 4395              	.L266:
1946:../Generated_Code/UTIL1.c ****     *val = (uint32_t)((*val)*16 + v);
 4396              		.loc 1 1946 0
 4397 0044 3B68     		ldr	r3, [r7]
 4398 0046 1B68     		ldr	r3, [r3]
 4399 0048 1A01     		lsls	r2, r3, #4
 4400 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4401 004c 1A44     		add	r2, r2, r3
 4402 004e 3B68     		ldr	r3, [r7]
 4403 0050 1A60     		str	r2, [r3]
1947:../Generated_Code/UTIL1.c ****     nofDigits--;
 4404              		.loc 1 1947 0
 4405 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4406 0054 013B     		subs	r3, r3, #1
 4407 0056 FB75     		strb	r3, [r7, #23]
 4408              	.L264:
1945:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4409              		.loc 1 1945 0 discriminator 1
 4410 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4411 005a 002B     		cmp	r3, #0
 4412 005c 0AD0     		beq	.L265
1945:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4413              		.loc 1 1945 0 is_stmt 0 discriminator 2
 4414 005e 07F11002 		add	r2, r7, #16
 4415 0062 07F10F03 		add	r3, r7, #15
 4416 0066 1046     		mov	r0, r2
 4417 0068 1946     		mov	r1, r3
 4418 006a FFF7FEFF 		bl	HexToDec
 4419 006e 0346     		mov	r3, r0
 4420 0070 002B     		cmp	r3, #0
 4421 0072 E7D0     		beq	.L266
 4422              	.L265:
1948:../Generated_Code/UTIL1.c ****   } /* while */
1949:../Generated_Code/UTIL1.c ****   *str = p;
 4423              		.loc 1 1949 0 is_stmt 1
 4424 0074 3A69     		ldr	r2, [r7, #16]
 4425 0076 7B68     		ldr	r3, [r7, #4]
 4426 0078 1A60     		str	r2, [r3]
1950:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4427              		.loc 1 1950 0
 4428 007a 0023     		movs	r3, #0
 4429              	.L267:
1951:../Generated_Code/UTIL1.c **** }
 4430              		.loc 1 1951 0
 4431 007c 1846     		mov	r0, r3
 4432 007e 1837     		adds	r7, r7, #24
 4433 0080 BD46     		mov	sp, r7
 4434              		@ sp needed
 4435 0082 80BD     		pop	{r7, pc}
 4436              		.cfi_endproc
 4437              	.LFE44:
 4439              		.section	.text.UTIL1_ScanHex16uNumber,"ax",%progbits
 4440              		.align	2
 4441              		.global	UTIL1_ScanHex16uNumber
 4442              		.thumb
 4443              		.thumb_func
 4445              	UTIL1_ScanHex16uNumber:
 4446              	.LFB45:
1952:../Generated_Code/UTIL1.c **** 
1953:../Generated_Code/UTIL1.c **** /*
1954:../Generated_Code/UTIL1.c **** ** ===================================================================
1955:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanHex16uNumber (component Utility)
1956:../Generated_Code/UTIL1.c **** **     Description :
1957:../Generated_Code/UTIL1.c **** **         Scans a hexadecimal 16bit number, starting with 0x
1958:../Generated_Code/UTIL1.c **** **     Parameters  :
1959:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1960:../Generated_Code/UTIL1.c **** **         str             - String to scan, starting with 0x.. It
1961:../Generated_Code/UTIL1.c **** **                           returns as well until where it has scanned
1962:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1963:../Generated_Code/UTIL1.c **** **     Returns     :
1964:../Generated_Code/UTIL1.c **** **         ---             - Error code
1965:../Generated_Code/UTIL1.c **** ** ===================================================================
1966:../Generated_Code/UTIL1.c **** */
1967:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanHex16uNumber(const unsigned char **str, uint16_t *val)
1968:../Generated_Code/UTIL1.c **** {
 4447              		.loc 1 1968 0
 4448              		.cfi_startproc
 4449              		@ args = 0, pretend = 0, frame = 24
 4450              		@ frame_needed = 1, uses_anonymous_args = 0
 4451 0000 80B5     		push	{r7, lr}
 4452              		.cfi_def_cfa_offset 8
 4453              		.cfi_offset 7, -8
 4454              		.cfi_offset 14, -4
 4455 0002 86B0     		sub	sp, sp, #24
 4456              		.cfi_def_cfa_offset 32
 4457 0004 00AF     		add	r7, sp, #0
 4458              		.cfi_def_cfa_register 7
 4459 0006 7860     		str	r0, [r7, #4]
 4460 0008 3960     		str	r1, [r7]
1969:../Generated_Code/UTIL1.c ****   /* scans a decimal number, and stops at any non-number. Number can have any preceding zeros or sp
1970:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = 4; /* maximum number of digits to read */
 4461              		.loc 1 1970 0
 4462 000a 0423     		movs	r3, #4
 4463 000c FB75     		strb	r3, [r7, #23]
1971:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 4464              		.loc 1 1971 0
 4465 000e 7B68     		ldr	r3, [r7, #4]
 4466 0010 1B68     		ldr	r3, [r3]
 4467 0012 3B61     		str	r3, [r7, #16]
1972:../Generated_Code/UTIL1.c ****   uint8_t v;
1973:../Generated_Code/UTIL1.c **** 
1974:../Generated_Code/UTIL1.c ****   *val = 0;
 4468              		.loc 1 1974 0
 4469 0014 3B68     		ldr	r3, [r7]
 4470 0016 0022     		movs	r2, #0
 4471 0018 1A80     		strh	r2, [r3]	@ movhi
1975:../Generated_Code/UTIL1.c ****   if (PreScanHexNumber(&p)!=ERR_OK) { /* skip leading spaces, and scan '0x' */
 4472              		.loc 1 1975 0
 4473 001a 07F11003 		add	r3, r7, #16
 4474 001e 1846     		mov	r0, r3
 4475 0020 FFF7FEFF 		bl	PreScanHexNumber
 4476 0024 0346     		mov	r3, r0
 4477 0026 002B     		cmp	r3, #0
 4478 0028 01D0     		beq	.L269
1976:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4479              		.loc 1 1976 0
 4480 002a 1B23     		movs	r3, #27
 4481 002c 28E0     		b	.L275
 4482              	.L269:
1977:../Generated_Code/UTIL1.c ****   }
1978:../Generated_Code/UTIL1.c ****   if (!isHexCharacter(*p)) { /* not a valid hex number sequence */
 4483              		.loc 1 1978 0
 4484 002e 3B69     		ldr	r3, [r7, #16]
 4485 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4486 0032 1846     		mov	r0, r3
 4487 0034 FFF7FEFF 		bl	isHexCharacter
 4488 0038 0346     		mov	r3, r0
 4489 003a 002B     		cmp	r3, #0
 4490 003c 01D1     		bne	.L271
1979:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4491              		.loc 1 1979 0
 4492 003e 1B23     		movs	r3, #27
 4493 0040 1EE0     		b	.L275
 4494              	.L271:
1980:../Generated_Code/UTIL1.c ****   }
1981:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4495              		.loc 1 1981 0
 4496 0042 0BE0     		b	.L272
 4497              	.L274:
1982:../Generated_Code/UTIL1.c ****     *val = (uint16_t)((*val)*16 + v);
 4498              		.loc 1 1982 0
 4499 0044 3B68     		ldr	r3, [r7]
 4500 0046 1B88     		ldrh	r3, [r3]
 4501 0048 1B01     		lsls	r3, r3, #4
 4502 004a 9AB2     		uxth	r2, r3
 4503 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4504 004e 1344     		add	r3, r3, r2
 4505 0050 9AB2     		uxth	r2, r3
 4506 0052 3B68     		ldr	r3, [r7]
 4507 0054 1A80     		strh	r2, [r3]	@ movhi
1983:../Generated_Code/UTIL1.c ****     nofDigits--;
 4508              		.loc 1 1983 0
 4509 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4510 0058 013B     		subs	r3, r3, #1
 4511 005a FB75     		strb	r3, [r7, #23]
 4512              	.L272:
1981:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4513              		.loc 1 1981 0 discriminator 1
 4514 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4515 005e 002B     		cmp	r3, #0
 4516 0060 0AD0     		beq	.L273
1981:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4517              		.loc 1 1981 0 is_stmt 0 discriminator 2
 4518 0062 07F11002 		add	r2, r7, #16
 4519 0066 07F10F03 		add	r3, r7, #15
 4520 006a 1046     		mov	r0, r2
 4521 006c 1946     		mov	r1, r3
 4522 006e FFF7FEFF 		bl	HexToDec
 4523 0072 0346     		mov	r3, r0
 4524 0074 002B     		cmp	r3, #0
 4525 0076 E5D0     		beq	.L274
 4526              	.L273:
1984:../Generated_Code/UTIL1.c ****   } /* while */
1985:../Generated_Code/UTIL1.c ****   *str = p;
 4527              		.loc 1 1985 0 is_stmt 1
 4528 0078 3A69     		ldr	r2, [r7, #16]
 4529 007a 7B68     		ldr	r3, [r7, #4]
 4530 007c 1A60     		str	r2, [r3]
1986:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4531              		.loc 1 1986 0
 4532 007e 0023     		movs	r3, #0
 4533              	.L275:
1987:../Generated_Code/UTIL1.c **** }
 4534              		.loc 1 1987 0
 4535 0080 1846     		mov	r0, r3
 4536 0082 1837     		adds	r7, r7, #24
 4537 0084 BD46     		mov	sp, r7
 4538              		@ sp needed
 4539 0086 80BD     		pop	{r7, pc}
 4540              		.cfi_endproc
 4541              	.LFE45:
 4543              		.section	.text.UTIL1_ScanHex8uNumber,"ax",%progbits
 4544              		.align	2
 4545              		.global	UTIL1_ScanHex8uNumber
 4546              		.thumb
 4547              		.thumb_func
 4549              	UTIL1_ScanHex8uNumber:
 4550              	.LFB46:
1988:../Generated_Code/UTIL1.c **** 
1989:../Generated_Code/UTIL1.c **** /*
1990:../Generated_Code/UTIL1.c **** ** ===================================================================
1991:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanHex8uNumber (component Utility)
1992:../Generated_Code/UTIL1.c **** **     Description :
1993:../Generated_Code/UTIL1.c **** **         Scans a hexadecimal 8bit number, starting with 0x
1994:../Generated_Code/UTIL1.c **** **     Parameters  :
1995:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
1996:../Generated_Code/UTIL1.c **** **         str             - String to scan, starting with 0x. It
1997:../Generated_Code/UTIL1.c **** **                           returns as well until where it has scanned
1998:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
1999:../Generated_Code/UTIL1.c **** **     Returns     :
2000:../Generated_Code/UTIL1.c **** **         ---             - Error code
2001:../Generated_Code/UTIL1.c **** ** ===================================================================
2002:../Generated_Code/UTIL1.c **** */
2003:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanHex8uNumber(const unsigned char **str, uint8_t *val)
2004:../Generated_Code/UTIL1.c **** {
 4551              		.loc 1 2004 0
 4552              		.cfi_startproc
 4553              		@ args = 0, pretend = 0, frame = 24
 4554              		@ frame_needed = 1, uses_anonymous_args = 0
 4555 0000 80B5     		push	{r7, lr}
 4556              		.cfi_def_cfa_offset 8
 4557              		.cfi_offset 7, -8
 4558              		.cfi_offset 14, -4
 4559 0002 86B0     		sub	sp, sp, #24
 4560              		.cfi_def_cfa_offset 32
 4561 0004 00AF     		add	r7, sp, #0
 4562              		.cfi_def_cfa_register 7
 4563 0006 7860     		str	r0, [r7, #4]
 4564 0008 3960     		str	r1, [r7]
2005:../Generated_Code/UTIL1.c ****   /* scans a hex number with 0x, and stops at any non-number. Number can have any preceding zeros o
2006:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = 2; /* maximum number of digits to read */
 4565              		.loc 1 2006 0
 4566 000a 0223     		movs	r3, #2
 4567 000c FB75     		strb	r3, [r7, #23]
2007:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 4568              		.loc 1 2007 0
 4569 000e 7B68     		ldr	r3, [r7, #4]
 4570 0010 1B68     		ldr	r3, [r3]
 4571 0012 3B61     		str	r3, [r7, #16]
2008:../Generated_Code/UTIL1.c ****   uint8_t v;
2009:../Generated_Code/UTIL1.c **** 
2010:../Generated_Code/UTIL1.c ****   *val = 0;
 4572              		.loc 1 2010 0
 4573 0014 3B68     		ldr	r3, [r7]
 4574 0016 0022     		movs	r2, #0
 4575 0018 1A70     		strb	r2, [r3]
2011:../Generated_Code/UTIL1.c ****   if (PreScanHexNumber(&p)!=ERR_OK) { /* skip leading spaces, and scan '0x' */
 4576              		.loc 1 2011 0
 4577 001a 07F11003 		add	r3, r7, #16
 4578 001e 1846     		mov	r0, r3
 4579 0020 FFF7FEFF 		bl	PreScanHexNumber
 4580 0024 0346     		mov	r3, r0
 4581 0026 002B     		cmp	r3, #0
 4582 0028 01D0     		beq	.L277
2012:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4583              		.loc 1 2012 0
 4584 002a 1B23     		movs	r3, #27
 4585 002c 28E0     		b	.L283
 4586              	.L277:
2013:../Generated_Code/UTIL1.c ****   }
2014:../Generated_Code/UTIL1.c ****   if (!isHexCharacter(*p)) { /* not a valid hex number sequence */
 4587              		.loc 1 2014 0
 4588 002e 3B69     		ldr	r3, [r7, #16]
 4589 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4590 0032 1846     		mov	r0, r3
 4591 0034 FFF7FEFF 		bl	isHexCharacter
 4592 0038 0346     		mov	r3, r0
 4593 003a 002B     		cmp	r3, #0
 4594 003c 01D1     		bne	.L279
2015:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4595              		.loc 1 2015 0
 4596 003e 1B23     		movs	r3, #27
 4597 0040 1EE0     		b	.L283
 4598              	.L279:
2016:../Generated_Code/UTIL1.c ****   }
2017:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4599              		.loc 1 2017 0
 4600 0042 0BE0     		b	.L280
 4601              	.L282:
2018:../Generated_Code/UTIL1.c ****     *val = (uint8_t)((*val)*16 + v);
 4602              		.loc 1 2018 0
 4603 0044 3B68     		ldr	r3, [r7]
 4604 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4605 0048 1B01     		lsls	r3, r3, #4
 4606 004a DAB2     		uxtb	r2, r3
 4607 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4608 004e 1344     		add	r3, r3, r2
 4609 0050 DAB2     		uxtb	r2, r3
 4610 0052 3B68     		ldr	r3, [r7]
 4611 0054 1A70     		strb	r2, [r3]
2019:../Generated_Code/UTIL1.c ****     nofDigits--;
 4612              		.loc 1 2019 0
 4613 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4614 0058 013B     		subs	r3, r3, #1
 4615 005a FB75     		strb	r3, [r7, #23]
 4616              	.L280:
2017:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4617              		.loc 1 2017 0 discriminator 1
 4618 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4619 005e 002B     		cmp	r3, #0
 4620 0060 0AD0     		beq	.L281
2017:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4621              		.loc 1 2017 0 is_stmt 0 discriminator 2
 4622 0062 07F11002 		add	r2, r7, #16
 4623 0066 07F10F03 		add	r3, r7, #15
 4624 006a 1046     		mov	r0, r2
 4625 006c 1946     		mov	r1, r3
 4626 006e FFF7FEFF 		bl	HexToDec
 4627 0072 0346     		mov	r3, r0
 4628 0074 002B     		cmp	r3, #0
 4629 0076 E5D0     		beq	.L282
 4630              	.L281:
2020:../Generated_Code/UTIL1.c ****   } /* while */
2021:../Generated_Code/UTIL1.c ****   *str = p;
 4631              		.loc 1 2021 0 is_stmt 1
 4632 0078 3A69     		ldr	r2, [r7, #16]
 4633 007a 7B68     		ldr	r3, [r7, #4]
 4634 007c 1A60     		str	r2, [r3]
2022:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4635              		.loc 1 2022 0
 4636 007e 0023     		movs	r3, #0
 4637              	.L283:
2023:../Generated_Code/UTIL1.c **** }
 4638              		.loc 1 2023 0
 4639 0080 1846     		mov	r0, r3
 4640 0082 1837     		adds	r7, r7, #24
 4641 0084 BD46     		mov	sp, r7
 4642              		@ sp needed
 4643 0086 80BD     		pop	{r7, pc}
 4644              		.cfi_endproc
 4645              	.LFE46:
 4647              		.section	.text.UTIL1_ScanHex8uNumberNoPrefix,"ax",%progbits
 4648              		.align	2
 4649              		.global	UTIL1_ScanHex8uNumberNoPrefix
 4650              		.thumb
 4651              		.thumb_func
 4653              	UTIL1_ScanHex8uNumberNoPrefix:
 4654              	.LFB47:
2024:../Generated_Code/UTIL1.c **** 
2025:../Generated_Code/UTIL1.c **** /*
2026:../Generated_Code/UTIL1.c **** ** ===================================================================
2027:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanHex8uNumberNoPrefix (component Utility)
2028:../Generated_Code/UTIL1.c **** **     Description :
2029:../Generated_Code/UTIL1.c **** **         Scans a hexadecimal 8bit number, without 0x
2030:../Generated_Code/UTIL1.c **** **     Parameters  :
2031:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2032:../Generated_Code/UTIL1.c **** **         str             - String to scan, starting with 0x. It
2033:../Generated_Code/UTIL1.c **** **                           returns as well until where it has scanned
2034:../Generated_Code/UTIL1.c **** **       * val             - Pointer to value
2035:../Generated_Code/UTIL1.c **** **     Returns     :
2036:../Generated_Code/UTIL1.c **** **         ---             - Error code
2037:../Generated_Code/UTIL1.c **** ** ===================================================================
2038:../Generated_Code/UTIL1.c **** */
2039:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanHex8uNumberNoPrefix(const unsigned char **str, uint8_t *val)
2040:../Generated_Code/UTIL1.c **** {
 4655              		.loc 1 2040 0
 4656              		.cfi_startproc
 4657              		@ args = 0, pretend = 0, frame = 24
 4658              		@ frame_needed = 1, uses_anonymous_args = 0
 4659 0000 80B5     		push	{r7, lr}
 4660              		.cfi_def_cfa_offset 8
 4661              		.cfi_offset 7, -8
 4662              		.cfi_offset 14, -4
 4663 0002 86B0     		sub	sp, sp, #24
 4664              		.cfi_def_cfa_offset 32
 4665 0004 00AF     		add	r7, sp, #0
 4666              		.cfi_def_cfa_register 7
 4667 0006 7860     		str	r0, [r7, #4]
 4668 0008 3960     		str	r1, [r7]
2041:../Generated_Code/UTIL1.c ****   /* scans a hex number without 0x, and stops at any non-number. Number can have any preceding zero
2042:../Generated_Code/UTIL1.c ****   uint8_t nofDigits = 2; /* maximum number of digits to read */
 4669              		.loc 1 2042 0
 4670 000a 0223     		movs	r3, #2
 4671 000c FB75     		strb	r3, [r7, #23]
2043:../Generated_Code/UTIL1.c ****   const unsigned char *p = *str;
 4672              		.loc 1 2043 0
 4673 000e 7B68     		ldr	r3, [r7, #4]
 4674 0010 1B68     		ldr	r3, [r3]
 4675 0012 3B61     		str	r3, [r7, #16]
2044:../Generated_Code/UTIL1.c ****   uint8_t v;
2045:../Generated_Code/UTIL1.c **** 
2046:../Generated_Code/UTIL1.c ****   *val = 0;
 4676              		.loc 1 2046 0
 4677 0014 3B68     		ldr	r3, [r7]
 4678 0016 0022     		movs	r2, #0
 4679 0018 1A70     		strb	r2, [r3]
2047:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 4680              		.loc 1 2047 0
 4681 001a 02E0     		b	.L285
 4682              	.L286:
2048:../Generated_Code/UTIL1.c ****     p++; /* skip space */
 4683              		.loc 1 2048 0
 4684 001c 3B69     		ldr	r3, [r7, #16]
 4685 001e 0133     		adds	r3, r3, #1
 4686 0020 3B61     		str	r3, [r7, #16]
 4687              	.L285:
2047:../Generated_Code/UTIL1.c ****   while(*p==' ') { /* skip leading spaces */
 4688              		.loc 1 2047 0 discriminator 1
 4689 0022 3B69     		ldr	r3, [r7, #16]
 4690 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4691 0026 202B     		cmp	r3, #32
 4692 0028 F8D0     		beq	.L286
2049:../Generated_Code/UTIL1.c ****   }
2050:../Generated_Code/UTIL1.c ****   if (!isHexCharacter(*p)) { /* not a valid hex number sequence */
 4693              		.loc 1 2050 0
 4694 002a 3B69     		ldr	r3, [r7, #16]
 4695 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4696 002e 1846     		mov	r0, r3
 4697 0030 FFF7FEFF 		bl	isHexCharacter
 4698 0034 0346     		mov	r3, r0
 4699 0036 002B     		cmp	r3, #0
 4700 0038 01D1     		bne	.L287
2051:../Generated_Code/UTIL1.c ****     return ERR_FAILED;
 4701              		.loc 1 2051 0
 4702 003a 1B23     		movs	r3, #27
 4703 003c 1EE0     		b	.L292
 4704              	.L287:
2052:../Generated_Code/UTIL1.c ****   }
2053:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4705              		.loc 1 2053 0
 4706 003e 0BE0     		b	.L289
 4707              	.L291:
2054:../Generated_Code/UTIL1.c ****     *val = (uint8_t)((*val)*16 + v);
 4708              		.loc 1 2054 0
 4709 0040 3B68     		ldr	r3, [r7]
 4710 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4711 0044 1B01     		lsls	r3, r3, #4
 4712 0046 DAB2     		uxtb	r2, r3
 4713 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4714 004a 1344     		add	r3, r3, r2
 4715 004c DAB2     		uxtb	r2, r3
 4716 004e 3B68     		ldr	r3, [r7]
 4717 0050 1A70     		strb	r2, [r3]
2055:../Generated_Code/UTIL1.c ****     nofDigits--;
 4718              		.loc 1 2055 0
 4719 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4720 0054 013B     		subs	r3, r3, #1
 4721 0056 FB75     		strb	r3, [r7, #23]
 4722              	.L289:
2053:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4723              		.loc 1 2053 0 discriminator 1
 4724 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4725 005a 002B     		cmp	r3, #0
 4726 005c 0AD0     		beq	.L290
2053:../Generated_Code/UTIL1.c ****   while (nofDigits>0 && HexToDec(&p, &v)==ERR_OK) {
 4727              		.loc 1 2053 0 is_stmt 0 discriminator 2
 4728 005e 07F11002 		add	r2, r7, #16
 4729 0062 07F10F03 		add	r3, r7, #15
 4730 0066 1046     		mov	r0, r2
 4731 0068 1946     		mov	r1, r3
 4732 006a FFF7FEFF 		bl	HexToDec
 4733 006e 0346     		mov	r3, r0
 4734 0070 002B     		cmp	r3, #0
 4735 0072 E5D0     		beq	.L291
 4736              	.L290:
2056:../Generated_Code/UTIL1.c ****   } /* while */
2057:../Generated_Code/UTIL1.c ****   *str = p;
 4737              		.loc 1 2057 0 is_stmt 1
 4738 0074 3A69     		ldr	r2, [r7, #16]
 4739 0076 7B68     		ldr	r3, [r7, #4]
 4740 0078 1A60     		str	r2, [r3]
2058:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4741              		.loc 1 2058 0
 4742 007a 0023     		movs	r3, #0
 4743              	.L292:
2059:../Generated_Code/UTIL1.c **** }
 4744              		.loc 1 2059 0
 4745 007c 1846     		mov	r0, r3
 4746 007e 1837     		adds	r7, r7, #24
 4747 0080 BD46     		mov	sp, r7
 4748              		@ sp needed
 4749 0082 80BD     		pop	{r7, pc}
 4750              		.cfi_endproc
 4751              	.LFE47:
 4753              		.section	.text.UTIL1_strtailcmp,"ax",%progbits
 4754              		.align	2
 4755              		.global	UTIL1_strtailcmp
 4756              		.thumb
 4757              		.thumb_func
 4759              	UTIL1_strtailcmp:
 4760              	.LFB48:
2060:../Generated_Code/UTIL1.c **** 
2061:../Generated_Code/UTIL1.c **** /*
2062:../Generated_Code/UTIL1.c **** ** ===================================================================
2063:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strtailcmp (component Utility)
2064:../Generated_Code/UTIL1.c **** **     Description :
2065:../Generated_Code/UTIL1.c **** **         Compares the tail of a string and returns 0 if it matches, 1
2066:../Generated_Code/UTIL1.c **** **         otherwise
2067:../Generated_Code/UTIL1.c **** **     Parameters  :
2068:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2069:../Generated_Code/UTIL1.c **** **       * str             - Pointer to string. This string is compared
2070:../Generated_Code/UTIL1.c **** **                           if it contains the tail.
2071:../Generated_Code/UTIL1.c **** **       * tail            - Pointer to tail string.
2072:../Generated_Code/UTIL1.c **** **     Returns     :
2073:../Generated_Code/UTIL1.c **** **         ---             - returns 0 if tail matches, -1 otherwise
2074:../Generated_Code/UTIL1.c **** ** ===================================================================
2075:../Generated_Code/UTIL1.c **** */
2076:../Generated_Code/UTIL1.c **** uint8_t UTIL1_strtailcmp(const uint8_t *str, const uint8_t *tail)
2077:../Generated_Code/UTIL1.c **** {
 4761              		.loc 1 2077 0
 4762              		.cfi_startproc
 4763              		@ args = 0, pretend = 0, frame = 16
 4764              		@ frame_needed = 1, uses_anonymous_args = 0
 4765 0000 80B5     		push	{r7, lr}
 4766              		.cfi_def_cfa_offset 8
 4767              		.cfi_offset 7, -8
 4768              		.cfi_offset 14, -4
 4769 0002 84B0     		sub	sp, sp, #16
 4770              		.cfi_def_cfa_offset 24
 4771 0004 00AF     		add	r7, sp, #0
 4772              		.cfi_def_cfa_register 7
 4773 0006 7860     		str	r0, [r7, #4]
 4774 0008 3960     		str	r1, [r7]
2078:../Generated_Code/UTIL1.c ****   int i, j;
2079:../Generated_Code/UTIL1.c **** 
2080:../Generated_Code/UTIL1.c ****   i = (int)UTIL1_strlen((char*)str);
 4775              		.loc 1 2080 0
 4776 000a 7868     		ldr	r0, [r7, #4]
 4777 000c FFF7FEFF 		bl	strlen
 4778 0010 0346     		mov	r3, r0
 4779 0012 FB60     		str	r3, [r7, #12]
2081:../Generated_Code/UTIL1.c ****   j = (int)UTIL1_strlen((char*)tail);
 4780              		.loc 1 2081 0
 4781 0014 3868     		ldr	r0, [r7]
 4782 0016 FFF7FEFF 		bl	strlen
 4783 001a 0346     		mov	r3, r0
 4784 001c BB60     		str	r3, [r7, #8]
2082:../Generated_Code/UTIL1.c ****   if (j>i) { /* str is smaller than tail */
 4785              		.loc 1 2082 0
 4786 001e BA68     		ldr	r2, [r7, #8]
 4787 0020 FB68     		ldr	r3, [r7, #12]
 4788 0022 9A42     		cmp	r2, r3
 4789 0024 01DD     		ble	.L294
2083:../Generated_Code/UTIL1.c ****     return 1; /* cannot match */
 4790              		.loc 1 2083 0
 4791 0026 0123     		movs	r3, #1
 4792 0028 16E0     		b	.L295
 4793              	.L294:
2084:../Generated_Code/UTIL1.c ****   }
2085:../Generated_Code/UTIL1.c ****   /* compare strings */
2086:../Generated_Code/UTIL1.c ****   while(str[i]==tail[j]) {
 4794              		.loc 1 2086 0
 4795 002a 0AE0     		b	.L296
 4796              	.L297:
2087:../Generated_Code/UTIL1.c ****     i--;
 4797              		.loc 1 2087 0
 4798 002c FB68     		ldr	r3, [r7, #12]
 4799 002e 013B     		subs	r3, r3, #1
 4800 0030 FB60     		str	r3, [r7, #12]
2088:../Generated_Code/UTIL1.c ****     j--;
 4801              		.loc 1 2088 0
 4802 0032 BB68     		ldr	r3, [r7, #8]
 4803 0034 013B     		subs	r3, r3, #1
 4804 0036 BB60     		str	r3, [r7, #8]
2089:../Generated_Code/UTIL1.c ****     if (j<0) {
 4805              		.loc 1 2089 0
 4806 0038 BB68     		ldr	r3, [r7, #8]
 4807 003a 002B     		cmp	r3, #0
 4808 003c 01DA     		bge	.L296
2090:../Generated_Code/UTIL1.c ****       return 0; /* match */
 4809              		.loc 1 2090 0
 4810 003e 0023     		movs	r3, #0
 4811 0040 0AE0     		b	.L295
 4812              	.L296:
2086:../Generated_Code/UTIL1.c ****   while(str[i]==tail[j]) {
 4813              		.loc 1 2086 0 discriminator 1
 4814 0042 FB68     		ldr	r3, [r7, #12]
 4815 0044 7A68     		ldr	r2, [r7, #4]
 4816 0046 1344     		add	r3, r3, r2
 4817 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4818 004a BB68     		ldr	r3, [r7, #8]
 4819 004c 3968     		ldr	r1, [r7]
 4820 004e 0B44     		add	r3, r3, r1
 4821 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4822 0052 9A42     		cmp	r2, r3
 4823 0054 EAD0     		beq	.L297
2091:../Generated_Code/UTIL1.c ****     }
2092:../Generated_Code/UTIL1.c ****   }
2093:../Generated_Code/UTIL1.c ****   return 1; /* !=0 means no match */
 4824              		.loc 1 2093 0
 4825 0056 0123     		movs	r3, #1
 4826              	.L295:
2094:../Generated_Code/UTIL1.c **** }
 4827              		.loc 1 2094 0
 4828 0058 1846     		mov	r0, r3
 4829 005a 1037     		adds	r7, r7, #16
 4830 005c BD46     		mov	sp, r7
 4831              		@ sp needed
 4832 005e 80BD     		pop	{r7, pc}
 4833              		.cfi_endproc
 4834              	.LFE48:
 4836              		.section	.text.UTIL1_strCutTail,"ax",%progbits
 4837              		.align	2
 4838              		.global	UTIL1_strCutTail
 4839              		.thumb
 4840              		.thumb_func
 4842              	UTIL1_strCutTail:
 4843              	.LFB49:
2095:../Generated_Code/UTIL1.c **** 
2096:../Generated_Code/UTIL1.c **** /*
2097:../Generated_Code/UTIL1.c **** ** ===================================================================
2098:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strCutTail (component Utility)
2099:../Generated_Code/UTIL1.c **** **     Description :
2100:../Generated_Code/UTIL1.c **** **         Removes a tailing substring from a string. The string passed
2101:../Generated_Code/UTIL1.c **** **         will be modified (the tail is cut by writing a zero byte to
2102:../Generated_Code/UTIL1.c **** **         the string!)
2103:../Generated_Code/UTIL1.c **** **     Parameters  :
2104:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2105:../Generated_Code/UTIL1.c **** **       * str             - Pointer to string where to remove the tail
2106:../Generated_Code/UTIL1.c **** **       * tail            - Pointer to substring to remove
2107:../Generated_Code/UTIL1.c **** **     Returns     :
2108:../Generated_Code/UTIL1.c **** **         ---             - Error code, ERR_OK if no error, otherwise
2109:../Generated_Code/UTIL1.c **** **                           ERR_FAIL if tail is not found
2110:../Generated_Code/UTIL1.c **** ** ===================================================================
2111:../Generated_Code/UTIL1.c **** */
2112:../Generated_Code/UTIL1.c **** uint8_t UTIL1_strCutTail(uint8_t *str, uint8_t *tail)
2113:../Generated_Code/UTIL1.c **** {
 4844              		.loc 1 2113 0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 16
 4847              		@ frame_needed = 1, uses_anonymous_args = 0
 4848 0000 80B5     		push	{r7, lr}
 4849              		.cfi_def_cfa_offset 8
 4850              		.cfi_offset 7, -8
 4851              		.cfi_offset 14, -4
 4852 0002 84B0     		sub	sp, sp, #16
 4853              		.cfi_def_cfa_offset 24
 4854 0004 00AF     		add	r7, sp, #0
 4855              		.cfi_def_cfa_register 7
 4856 0006 7860     		str	r0, [r7, #4]
 4857 0008 3960     		str	r1, [r7]
2114:../Generated_Code/UTIL1.c ****   /* cut the tail from the string */
2115:../Generated_Code/UTIL1.c ****   size_t strLen, tailLen;
2116:../Generated_Code/UTIL1.c **** 
2117:../Generated_Code/UTIL1.c ****   if (UTIL1_strtailcmp(str, tail)!=0) { /* check if tail is present */
 4858              		.loc 1 2117 0
 4859 000a 7868     		ldr	r0, [r7, #4]
 4860 000c 3968     		ldr	r1, [r7]
 4861 000e FFF7FEFF 		bl	UTIL1_strtailcmp
 4862 0012 0346     		mov	r3, r0
 4863 0014 002B     		cmp	r3, #0
 4864 0016 01D0     		beq	.L299
2118:../Generated_Code/UTIL1.c ****     return ERR_FAILED; /* tail not found */
 4865              		.loc 1 2118 0
 4866 0018 1B23     		movs	r3, #27
 4867 001a 0FE0     		b	.L300
 4868              	.L299:
2119:../Generated_Code/UTIL1.c ****   }
2120:../Generated_Code/UTIL1.c ****   tailLen = UTIL1_strlen((char*)tail);
 4869              		.loc 1 2120 0
 4870 001c 3868     		ldr	r0, [r7]
 4871 001e FFF7FEFF 		bl	strlen
 4872 0022 F860     		str	r0, [r7, #12]
2121:../Generated_Code/UTIL1.c ****   strLen = UTIL1_strlen((char*)str);
 4873              		.loc 1 2121 0
 4874 0024 7868     		ldr	r0, [r7, #4]
 4875 0026 FFF7FEFF 		bl	strlen
 4876 002a B860     		str	r0, [r7, #8]
2122:../Generated_Code/UTIL1.c ****   /* write \0 to cut the tail */
2123:../Generated_Code/UTIL1.c ****   str[strLen-tailLen] = '\0';
 4877              		.loc 1 2123 0
 4878 002c BA68     		ldr	r2, [r7, #8]
 4879 002e FB68     		ldr	r3, [r7, #12]
 4880 0030 D31A     		subs	r3, r2, r3
 4881 0032 7A68     		ldr	r2, [r7, #4]
 4882 0034 1344     		add	r3, r3, r2
 4883 0036 0022     		movs	r2, #0
 4884 0038 1A70     		strb	r2, [r3]
2124:../Generated_Code/UTIL1.c ****   return ERR_OK;
 4885              		.loc 1 2124 0
 4886 003a 0023     		movs	r3, #0
 4887              	.L300:
2125:../Generated_Code/UTIL1.c **** }
 4888              		.loc 1 2125 0
 4889 003c 1846     		mov	r0, r3
 4890 003e 1037     		adds	r7, r7, #16
 4891 0040 BD46     		mov	sp, r7
 4892              		@ sp needed
 4893 0042 80BD     		pop	{r7, pc}
 4894              		.cfi_endproc
 4895              	.LFE49:
 4897              		.section	.text.UTIL1_strcatNum32sDotValue100,"ax",%progbits
 4898              		.align	2
 4899              		.global	UTIL1_strcatNum32sDotValue100
 4900              		.thumb
 4901              		.thumb_func
 4903              	UTIL1_strcatNum32sDotValue100:
 4904              	.LFB50:
2126:../Generated_Code/UTIL1.c **** 
2127:../Generated_Code/UTIL1.c **** /*
2128:../Generated_Code/UTIL1.c **** ** ===================================================================
2129:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNum32sDotValue100 (component Utility)
2130:../Generated_Code/UTIL1.c **** **     Description :
2131:../Generated_Code/UTIL1.c **** **         Appends a 32bit signed value to a string buffer. The value
2132:../Generated_Code/UTIL1.c **** **         is in 1/100 units.  For example for the value -13456 it will
2133:../Generated_Code/UTIL1.c **** **         append the string "-134.56"
2134:../Generated_Code/UTIL1.c **** **     Parameters  :
2135:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2136:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
2137:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
2138:../Generated_Code/UTIL1.c **** **                           bytes).
2139:../Generated_Code/UTIL1.c **** **         num             - Value to convert.
2140:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2141:../Generated_Code/UTIL1.c **** ** ===================================================================
2142:../Generated_Code/UTIL1.c **** */
2143:../Generated_Code/UTIL1.c **** void UTIL1_strcatNum32sDotValue100(uint8_t *dst, size_t dstSize, int32_t num)
2144:../Generated_Code/UTIL1.c **** {
 4905              		.loc 1 2144 0
 4906              		.cfi_startproc
 4907              		@ args = 0, pretend = 0, frame = 16
 4908              		@ frame_needed = 1, uses_anonymous_args = 0
 4909 0000 80B5     		push	{r7, lr}
 4910              		.cfi_def_cfa_offset 8
 4911              		.cfi_offset 7, -8
 4912              		.cfi_offset 14, -4
 4913 0002 86B0     		sub	sp, sp, #24
 4914              		.cfi_def_cfa_offset 32
 4915 0004 02AF     		add	r7, sp, #8
 4916              		.cfi_def_cfa 7, 24
 4917 0006 F860     		str	r0, [r7, #12]
 4918 0008 B960     		str	r1, [r7, #8]
 4919 000a 7A60     		str	r2, [r7, #4]
2145:../Generated_Code/UTIL1.c ****   if (num<0 && (num/100)==0) { /* e.g. -53 ==> write sign, as strcatNum32() below will not know tha
 4920              		.loc 1 2145 0
 4921 000c 7B68     		ldr	r3, [r7, #4]
 4922 000e 002B     		cmp	r3, #0
 4923 0010 08DA     		bge	.L302
 4924              		.loc 1 2145 0 is_stmt 0 discriminator 1
 4925 0012 7B68     		ldr	r3, [r7, #4]
 4926 0014 6333     		adds	r3, r3, #99
 4927 0016 C62B     		cmp	r3, #198
 4928 0018 04D8     		bhi	.L302
2146:../Generated_Code/UTIL1.c ****     UTIL1_chcat(dst, dstSize, '-');
 4929              		.loc 1 2146 0 is_stmt 1
 4930 001a F868     		ldr	r0, [r7, #12]
 4931 001c B968     		ldr	r1, [r7, #8]
 4932 001e 2D22     		movs	r2, #45
 4933 0020 FFF7FEFF 		bl	UTIL1_chcat
 4934              	.L302:
2147:../Generated_Code/UTIL1.c ****   }
2148:../Generated_Code/UTIL1.c ****   UTIL1_strcatNum32s(dst, dstSize, num/100);
 4935              		.loc 1 2148 0
 4936 0024 7B68     		ldr	r3, [r7, #4]
 4937 0026 154A     		ldr	r2, .L304
 4938 0028 82FB0312 		smull	r1, r2, r2, r3
 4939 002c 5211     		asrs	r2, r2, #5
 4940 002e DB17     		asrs	r3, r3, #31
 4941 0030 D31A     		subs	r3, r2, r3
 4942 0032 F868     		ldr	r0, [r7, #12]
 4943 0034 B968     		ldr	r1, [r7, #8]
 4944 0036 1A46     		mov	r2, r3
 4945 0038 FFF7FEFF 		bl	UTIL1_strcatNum32s
2149:../Generated_Code/UTIL1.c ****   UTIL1_chcat(dst, dstSize, '.');
 4946              		.loc 1 2149 0
 4947 003c F868     		ldr	r0, [r7, #12]
 4948 003e B968     		ldr	r1, [r7, #8]
 4949 0040 2E22     		movs	r2, #46
 4950 0042 FFF7FEFF 		bl	UTIL1_chcat
2150:../Generated_Code/UTIL1.c ****   if (num<0) {
 4951              		.loc 1 2150 0
 4952 0046 7B68     		ldr	r3, [r7, #4]
 4953 0048 002B     		cmp	r3, #0
 4954 004a 02DA     		bge	.L303
2151:../Generated_Code/UTIL1.c ****     num = -num;
 4955              		.loc 1 2151 0
 4956 004c 7B68     		ldr	r3, [r7, #4]
 4957 004e 5B42     		negs	r3, r3
 4958 0050 7B60     		str	r3, [r7, #4]
 4959              	.L303:
2152:../Generated_Code/UTIL1.c ****   }
2153:../Generated_Code/UTIL1.c ****   UTIL1_strcatNum16uFormatted(dst, dstSize, (uint16_t)((unsigned)num%100U), '0', 2);
 4960              		.loc 1 2153 0
 4961 0052 7A68     		ldr	r2, [r7, #4]
 4962 0054 094B     		ldr	r3, .L304
 4963 0056 A3FB0213 		umull	r1, r3, r3, r2
 4964 005a 5B09     		lsrs	r3, r3, #5
 4965 005c 6421     		movs	r1, #100
 4966 005e 01FB03F3 		mul	r3, r1, r3
 4967 0062 D31A     		subs	r3, r2, r3
 4968 0064 9BB2     		uxth	r3, r3
 4969 0066 0222     		movs	r2, #2
 4970 0068 0092     		str	r2, [sp]
 4971 006a F868     		ldr	r0, [r7, #12]
 4972 006c B968     		ldr	r1, [r7, #8]
 4973 006e 1A46     		mov	r2, r3
 4974 0070 3023     		movs	r3, #48
 4975 0072 FFF7FEFF 		bl	UTIL1_strcatNum16uFormatted
2154:../Generated_Code/UTIL1.c **** }
 4976              		.loc 1 2154 0
 4977 0076 1037     		adds	r7, r7, #16
 4978 0078 BD46     		mov	sp, r7
 4979              		@ sp needed
 4980 007a 80BD     		pop	{r7, pc}
 4981              	.L305:
 4982              		.align	2
 4983              	.L304:
 4984 007c 1F85EB51 		.word	1374389535
 4985              		.cfi_endproc
 4986              	.LFE50:
 4988              		.section	.text.UTIL1_strFind,"ax",%progbits
 4989              		.align	2
 4990              		.global	UTIL1_strFind
 4991              		.thumb
 4992              		.thumb_func
 4994              	UTIL1_strFind:
 4995              	.LFB51:
2155:../Generated_Code/UTIL1.c **** 
2156:../Generated_Code/UTIL1.c **** /*
2157:../Generated_Code/UTIL1.c **** ** ===================================================================
2158:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strFind (component Utility)
2159:../Generated_Code/UTIL1.c **** **     Description :
2160:../Generated_Code/UTIL1.c **** **         Searches a substring inside a string and returns the
2161:../Generated_Code/UTIL1.c **** **         position.
2162:../Generated_Code/UTIL1.c **** **     Parameters  :
2163:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2164:../Generated_Code/UTIL1.c **** **       * str             - Pointer to string which will be searched
2165:../Generated_Code/UTIL1.c **** **       * subStr          - Pointer to substring to search
2166:../Generated_Code/UTIL1.c **** **                           inside str
2167:../Generated_Code/UTIL1.c **** **     Returns     :
2168:../Generated_Code/UTIL1.c **** **         ---             - -1 if not found, otherwise the character
2169:../Generated_Code/UTIL1.c **** **                           index.
2170:../Generated_Code/UTIL1.c **** ** ===================================================================
2171:../Generated_Code/UTIL1.c **** */
2172:../Generated_Code/UTIL1.c **** int16_t UTIL1_strFind(uint8_t *str, uint8_t *subStr)
2173:../Generated_Code/UTIL1.c **** {
 4996              		.loc 1 2173 0
 4997              		.cfi_startproc
 4998              		@ args = 0, pretend = 0, frame = 16
 4999              		@ frame_needed = 1, uses_anonymous_args = 0
 5000 0000 80B5     		push	{r7, lr}
 5001              		.cfi_def_cfa_offset 8
 5002              		.cfi_offset 7, -8
 5003              		.cfi_offset 14, -4
 5004 0002 84B0     		sub	sp, sp, #16
 5005              		.cfi_def_cfa_offset 24
 5006 0004 00AF     		add	r7, sp, #0
 5007              		.cfi_def_cfa_register 7
 5008 0006 7860     		str	r0, [r7, #4]
 5009 0008 3960     		str	r1, [r7]
2174:../Generated_Code/UTIL1.c ****   int16_t i, len;
2175:../Generated_Code/UTIL1.c **** 
2176:../Generated_Code/UTIL1.c ****   len = (int16_t)UTIL1_strlen((char*)subStr);
 5010              		.loc 1 2176 0
 5011 000a 3868     		ldr	r0, [r7]
 5012 000c FFF7FEFF 		bl	strlen
 5013 0010 0346     		mov	r3, r0
 5014 0012 BB81     		strh	r3, [r7, #12]	@ movhi
2177:../Generated_Code/UTIL1.c ****   for (i=0; *str!='\0'; i++, str++) {
 5015              		.loc 1 2177 0
 5016 0014 0023     		movs	r3, #0
 5017 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 5018 0018 11E0     		b	.L307
 5019              	.L310:
2178:../Generated_Code/UTIL1.c ****     if (UTIL1_strncmp((char*)str, (char*)subStr, len)==0) {
 5020              		.loc 1 2178 0
 5021 001a B7F90C30 		ldrsh	r3, [r7, #12]
 5022 001e 7868     		ldr	r0, [r7, #4]
 5023 0020 3968     		ldr	r1, [r7]
 5024 0022 1A46     		mov	r2, r3
 5025 0024 FFF7FEFF 		bl	strncmp
 5026 0028 0346     		mov	r3, r0
 5027 002a 002B     		cmp	r3, #0
 5028 002c 01D1     		bne	.L308
2179:../Generated_Code/UTIL1.c ****       return i; /* found */
 5029              		.loc 1 2179 0
 5030 002e FB89     		ldrh	r3, [r7, #14]
 5031 0030 0BE0     		b	.L309
 5032              	.L308:
2177:../Generated_Code/UTIL1.c ****   for (i=0; *str!='\0'; i++, str++) {
 5033              		.loc 1 2177 0
 5034 0032 FB89     		ldrh	r3, [r7, #14]
 5035 0034 0133     		adds	r3, r3, #1
 5036 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 5037 0038 7B68     		ldr	r3, [r7, #4]
 5038 003a 0133     		adds	r3, r3, #1
 5039 003c 7B60     		str	r3, [r7, #4]
 5040              	.L307:
2177:../Generated_Code/UTIL1.c ****   for (i=0; *str!='\0'; i++, str++) {
 5041              		.loc 1 2177 0 is_stmt 0 discriminator 1
 5042 003e 7B68     		ldr	r3, [r7, #4]
 5043 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5044 0042 002B     		cmp	r3, #0
 5045 0044 E9D1     		bne	.L310
2180:../Generated_Code/UTIL1.c ****     }
2181:../Generated_Code/UTIL1.c ****   }
2182:../Generated_Code/UTIL1.c ****   return -1; /* not found */
 5046              		.loc 1 2182 0 is_stmt 1
 5047 0046 4FF6FF73 		movw	r3, #65535
 5048              	.L309:
 5049 004a 1BB2     		sxth	r3, r3
2183:../Generated_Code/UTIL1.c **** }
 5050              		.loc 1 2183 0
 5051 004c 1846     		mov	r0, r3
 5052 004e 1037     		adds	r7, r7, #16
 5053 0050 BD46     		mov	sp, r7
 5054              		@ sp needed
 5055 0052 80BD     		pop	{r7, pc}
 5056              		.cfi_endproc
 5057              	.LFE51:
 5059              		.section	.text.UTIL1_ScanSeparatedNumbers,"ax",%progbits
 5060              		.align	2
 5061              		.global	UTIL1_ScanSeparatedNumbers
 5062              		.thumb
 5063              		.thumb_func
 5065              	UTIL1_ScanSeparatedNumbers:
 5066              	.LFB52:
2184:../Generated_Code/UTIL1.c **** 
2185:../Generated_Code/UTIL1.c **** /*
2186:../Generated_Code/UTIL1.c **** ** ===================================================================
2187:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanSeparatedNumbers (component Utility)
2188:../Generated_Code/UTIL1.c **** **     Description :
2189:../Generated_Code/UTIL1.c **** **         Scans multiple numbers separated by character, e.g. "123.68.
2190:../Generated_Code/UTIL1.c **** **         5.3"
2191:../Generated_Code/UTIL1.c **** **     Parameters  :
2192:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2193:../Generated_Code/UTIL1.c **** **         str             - String to scan. It returns as well until
2194:../Generated_Code/UTIL1.c **** **                           where it has scanned
2195:../Generated_Code/UTIL1.c **** **       * values          - Pointer to array where to store the
2196:../Generated_Code/UTIL1.c **** **                           values
2197:../Generated_Code/UTIL1.c **** **         nofValues       - Number of values in the array
2198:../Generated_Code/UTIL1.c **** **         separator       - Character separator, e.g. '.'
2199:../Generated_Code/UTIL1.c **** **         numberType      - type of number to scan
2200:../Generated_Code/UTIL1.c **** **     Returns     :
2201:../Generated_Code/UTIL1.c **** **         ---             - Error code
2202:../Generated_Code/UTIL1.c **** ** ===================================================================
2203:../Generated_Code/UTIL1.c **** */
2204:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanSeparatedNumbers(const unsigned char **str, uint8_t *values, uint8_t nofValues, c
2205:../Generated_Code/UTIL1.c **** {
 5067              		.loc 1 2205 0
 5068              		.cfi_startproc
 5069              		@ args = 4, pretend = 0, frame = 32
 5070              		@ frame_needed = 1, uses_anonymous_args = 0
 5071 0000 80B5     		push	{r7, lr}
 5072              		.cfi_def_cfa_offset 8
 5073              		.cfi_offset 7, -8
 5074              		.cfi_offset 14, -4
 5075 0002 88B0     		sub	sp, sp, #32
 5076              		.cfi_def_cfa_offset 40
 5077 0004 00AF     		add	r7, sp, #0
 5078              		.cfi_def_cfa_register 7
 5079 0006 F860     		str	r0, [r7, #12]
 5080 0008 B960     		str	r1, [r7, #8]
 5081 000a FA71     		strb	r2, [r7, #7]
 5082 000c BB71     		strb	r3, [r7, #6]
2206:../Generated_Code/UTIL1.c ****   int i;
2207:../Generated_Code/UTIL1.c ****   uint8_t res;
2208:../Generated_Code/UTIL1.c ****   const unsigned char *p;
2209:../Generated_Code/UTIL1.c **** 
2210:../Generated_Code/UTIL1.c ****   if (nofValues<=1) {
 5083              		.loc 1 2210 0
 5084 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5085 0010 012B     		cmp	r3, #1
 5086 0012 01D8     		bhi	.L312
2211:../Generated_Code/UTIL1.c ****     return ERR_FAILED; /* need at least two values */
 5087              		.loc 1 2211 0
 5088 0014 1B23     		movs	r3, #27
 5089 0016 49E0     		b	.L323
 5090              	.L312:
2212:../Generated_Code/UTIL1.c ****   }
2213:../Generated_Code/UTIL1.c ****   p = *str;
 5091              		.loc 1 2213 0
 5092 0018 FB68     		ldr	r3, [r7, #12]
 5093 001a 1B68     		ldr	r3, [r3]
 5094 001c 7B61     		str	r3, [r7, #20]
2214:../Generated_Code/UTIL1.c ****   for(i=0;i<nofValues;i++) {
 5095              		.loc 1 2214 0
 5096 001e 0023     		movs	r3, #0
 5097 0020 FB61     		str	r3, [r7, #28]
 5098 0022 3BE0     		b	.L314
 5099              	.L322:
2215:../Generated_Code/UTIL1.c ****     if (numberType==UTIL1_SEP_NUM_TYPE_UINT8) {
 5100              		.loc 1 2215 0
 5101 0024 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 5102 0028 002B     		cmp	r3, #0
 5103 002a 0BD1     		bne	.L315
2216:../Generated_Code/UTIL1.c ****       res = UTIL1_ScanDecimal8uNumber(&p, &values[i]);
 5104              		.loc 1 2216 0
 5105 002c FB69     		ldr	r3, [r7, #28]
 5106 002e BA68     		ldr	r2, [r7, #8]
 5107 0030 1344     		add	r3, r3, r2
 5108 0032 07F11402 		add	r2, r7, #20
 5109 0036 1046     		mov	r0, r2
 5110 0038 1946     		mov	r1, r3
 5111 003a FFF7FEFF 		bl	UTIL1_ScanDecimal8uNumber
 5112 003e 0346     		mov	r3, r0
 5113 0040 FB76     		strb	r3, [r7, #27]
 5114 0042 11E0     		b	.L316
 5115              	.L315:
2217:../Generated_Code/UTIL1.c ****     } else if (numberType==UTIL1_SEP_NUM_TYPE_UINT8_HEX_NO_PREFIX) {
 5116              		.loc 1 2217 0
 5117 0044 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 5118 0048 012B     		cmp	r3, #1
 5119 004a 0BD1     		bne	.L317
2218:../Generated_Code/UTIL1.c ****       res = UTIL1_ScanHex8uNumberNoPrefix(&p, &values[i]);
 5120              		.loc 1 2218 0
 5121 004c FB69     		ldr	r3, [r7, #28]
 5122 004e BA68     		ldr	r2, [r7, #8]
 5123 0050 1344     		add	r3, r3, r2
 5124 0052 07F11402 		add	r2, r7, #20
 5125 0056 1046     		mov	r0, r2
 5126 0058 1946     		mov	r1, r3
 5127 005a FFF7FEFF 		bl	UTIL1_ScanHex8uNumberNoPrefix
 5128 005e 0346     		mov	r3, r0
 5129 0060 FB76     		strb	r3, [r7, #27]
 5130 0062 01E0     		b	.L316
 5131              	.L317:
2219:../Generated_Code/UTIL1.c ****     } else {
2220:../Generated_Code/UTIL1.c ****       res = ERR_FAILED;
 5132              		.loc 1 2220 0
 5133 0064 1B23     		movs	r3, #27
 5134 0066 FB76     		strb	r3, [r7, #27]
 5135              	.L316:
2221:../Generated_Code/UTIL1.c ****     }
2222:../Generated_Code/UTIL1.c ****     if (res==ERR_OK) { /* parsing ok */
 5136              		.loc 1 2222 0
 5137 0068 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 5138 006a 002B     		cmp	r3, #0
 5139 006c 11D1     		bne	.L318
2223:../Generated_Code/UTIL1.c ****       if (i!=nofValues-1) {
 5140              		.loc 1 2223 0
 5141 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5142 0070 5A1E     		subs	r2, r3, #1
 5143 0072 FB69     		ldr	r3, [r7, #28]
 5144 0074 9A42     		cmp	r2, r3
 5145 0076 0ED0     		beq	.L321
2224:../Generated_Code/UTIL1.c ****         if ((*p)!=separator) { /* not last one */
 5146              		.loc 1 2224 0
 5147 0078 7B69     		ldr	r3, [r7, #20]
 5148 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5149 007c 1A46     		mov	r2, r3
 5150 007e 97F90630 		ldrsb	r3, [r7, #6]
 5151 0082 9A42     		cmp	r2, r3
 5152 0084 01D0     		beq	.L320
2225:../Generated_Code/UTIL1.c ****           return ERR_FAILED; /* wrong separator */
 5153              		.loc 1 2225 0
 5154 0086 1B23     		movs	r3, #27
 5155 0088 10E0     		b	.L323
 5156              	.L320:
2226:../Generated_Code/UTIL1.c ****         } /* if */
2227:../Generated_Code/UTIL1.c ****         p++; /* skip separator and continue scanning */
 5157              		.loc 1 2227 0
 5158 008a 7B69     		ldr	r3, [r7, #20]
 5159 008c 0133     		adds	r3, r3, #1
 5160 008e 7B61     		str	r3, [r7, #20]
 5161 0090 01E0     		b	.L321
 5162              	.L318:
2228:../Generated_Code/UTIL1.c ****       } /* if */
2229:../Generated_Code/UTIL1.c ****     } else {
2230:../Generated_Code/UTIL1.c ****       return ERR_FAILED; /* failed parsing number */
 5163              		.loc 1 2230 0
 5164 0092 1B23     		movs	r3, #27
 5165 0094 0AE0     		b	.L323
 5166              	.L321:
2214:../Generated_Code/UTIL1.c ****   for(i=0;i<nofValues;i++) {
 5167              		.loc 1 2214 0
 5168 0096 FB69     		ldr	r3, [r7, #28]
 5169 0098 0133     		adds	r3, r3, #1
 5170 009a FB61     		str	r3, [r7, #28]
 5171              	.L314:
2214:../Generated_Code/UTIL1.c ****   for(i=0;i<nofValues;i++) {
 5172              		.loc 1 2214 0 is_stmt 0 discriminator 1
 5173 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5174 009e FB69     		ldr	r3, [r7, #28]
 5175 00a0 9A42     		cmp	r2, r3
 5176 00a2 BFDC     		bgt	.L322
2231:../Generated_Code/UTIL1.c ****     } /* if */
2232:../Generated_Code/UTIL1.c ****   } /* for */
2233:../Generated_Code/UTIL1.c ****   *str = p;
 5177              		.loc 1 2233 0 is_stmt 1
 5178 00a4 7A69     		ldr	r2, [r7, #20]
 5179 00a6 FB68     		ldr	r3, [r7, #12]
 5180 00a8 1A60     		str	r2, [r3]
2234:../Generated_Code/UTIL1.c ****   return ERR_OK;
 5181              		.loc 1 2234 0
 5182 00aa 0023     		movs	r3, #0
 5183              	.L323:
2235:../Generated_Code/UTIL1.c **** }
 5184              		.loc 1 2235 0
 5185 00ac 1846     		mov	r0, r3
 5186 00ae 2037     		adds	r7, r7, #32
 5187 00b0 BD46     		mov	sp, r7
 5188              		@ sp needed
 5189 00b2 80BD     		pop	{r7, pc}
 5190              		.cfi_endproc
 5191              	.LFE52:
 5193              		.section	.text.UTIL1_ScanDoubleQuotedString,"ax",%progbits
 5194              		.align	2
 5195              		.global	UTIL1_ScanDoubleQuotedString
 5196              		.thumb
 5197              		.thumb_func
 5199              	UTIL1_ScanDoubleQuotedString:
 5200              	.LFB53:
2236:../Generated_Code/UTIL1.c **** 
2237:../Generated_Code/UTIL1.c **** /*
2238:../Generated_Code/UTIL1.c **** ** ===================================================================
2239:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_ScanDoubleQuotedString (component Utility)
2240:../Generated_Code/UTIL1.c **** **     Description :
2241:../Generated_Code/UTIL1.c **** **         Scans a string inside double quotes and returns it without
2242:../Generated_Code/UTIL1.c **** **         the double quotes.
2243:../Generated_Code/UTIL1.c **** **     Parameters  :
2244:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2245:../Generated_Code/UTIL1.c **** **         cmd             - Pointer to pointer to string to parse.
2246:../Generated_Code/UTIL1.c **** **                           This pointer will be advanced as much as
2247:../Generated_Code/UTIL1.c **** **                           parsing is done.
2248:../Generated_Code/UTIL1.c **** **       * buf             - Pointer to buffer where to store the string
2249:../Generated_Code/UTIL1.c **** **         bufSize         - Size of buffer in bytes
2250:../Generated_Code/UTIL1.c **** **     Returns     :
2251:../Generated_Code/UTIL1.c **** **         ---             - Error code
2252:../Generated_Code/UTIL1.c **** ** ===================================================================
2253:../Generated_Code/UTIL1.c **** */
2254:../Generated_Code/UTIL1.c **** uint8_t UTIL1_ScanDoubleQuotedString(const uint8_t **cmd, uint8_t *buf, size_t bufSize)
2255:../Generated_Code/UTIL1.c **** {
 5201              		.loc 1 2255 0
 5202              		.cfi_startproc
 5203              		@ args = 0, pretend = 0, frame = 24
 5204              		@ frame_needed = 1, uses_anonymous_args = 0
 5205              		@ link register save eliminated.
 5206 0000 80B4     		push	{r7}
 5207              		.cfi_def_cfa_offset 4
 5208              		.cfi_offset 7, -4
 5209 0002 87B0     		sub	sp, sp, #28
 5210              		.cfi_def_cfa_offset 32
 5211 0004 00AF     		add	r7, sp, #0
 5212              		.cfi_def_cfa_register 7
 5213 0006 F860     		str	r0, [r7, #12]
 5214 0008 B960     		str	r1, [r7, #8]
 5215 000a 7A60     		str	r2, [r7, #4]
2256:../Generated_Code/UTIL1.c ****   const uint8_t *p = *cmd;
 5216              		.loc 1 2256 0
 5217 000c FB68     		ldr	r3, [r7, #12]
 5218 000e 1B68     		ldr	r3, [r3]
 5219 0010 7B61     		str	r3, [r7, #20]
2257:../Generated_Code/UTIL1.c **** 
2258:../Generated_Code/UTIL1.c ****   if (bufSize==1) {
 5220              		.loc 1 2258 0
 5221 0012 7B68     		ldr	r3, [r7, #4]
 5222 0014 012B     		cmp	r3, #1
 5223 0016 01D1     		bne	.L325
2259:../Generated_Code/UTIL1.c ****     return ERR_FAILED; /* buffer too small */
 5224              		.loc 1 2259 0
 5225 0018 1B23     		movs	r3, #27
 5226 001a 38E0     		b	.L326
 5227              	.L325:
2260:../Generated_Code/UTIL1.c ****   }
2261:../Generated_Code/UTIL1.c ****   buf[bufSize-1] = '\0'; /* terminate buffer */
 5228              		.loc 1 2261 0
 5229 001c 7B68     		ldr	r3, [r7, #4]
 5230 001e 013B     		subs	r3, r3, #1
 5231 0020 BA68     		ldr	r2, [r7, #8]
 5232 0022 1344     		add	r3, r3, r2
 5233 0024 0022     		movs	r2, #0
 5234 0026 1A70     		strb	r2, [r3]
2262:../Generated_Code/UTIL1.c ****   bufSize--;
 5235              		.loc 1 2262 0
 5236 0028 7B68     		ldr	r3, [r7, #4]
 5237 002a 013B     		subs	r3, r3, #1
 5238 002c 7B60     		str	r3, [r7, #4]
2263:../Generated_Code/UTIL1.c ****   if (*p!='\"') {
 5239              		.loc 1 2263 0
 5240 002e 7B69     		ldr	r3, [r7, #20]
 5241 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5242 0032 222B     		cmp	r3, #34
 5243 0034 01D0     		beq	.L327
2264:../Generated_Code/UTIL1.c ****     return ERR_FAILED; /* does not start with double quote */
 5244              		.loc 1 2264 0
 5245 0036 1B23     		movs	r3, #27
 5246 0038 29E0     		b	.L326
 5247              	.L327:
2265:../Generated_Code/UTIL1.c ****   }
2266:../Generated_Code/UTIL1.c ****   p++; /* skip double quote */
 5248              		.loc 1 2266 0
 5249 003a 7B69     		ldr	r3, [r7, #20]
 5250 003c 0133     		adds	r3, r3, #1
 5251 003e 7B61     		str	r3, [r7, #20]
2267:../Generated_Code/UTIL1.c ****   while(*p!='\"' && *p!='\0' && bufSize>0) {
 5252              		.loc 1 2267 0
 5253 0040 0AE0     		b	.L328
 5254              	.L330:
2268:../Generated_Code/UTIL1.c ****     *buf++ = *p++;
 5255              		.loc 1 2268 0
 5256 0042 BB68     		ldr	r3, [r7, #8]
 5257 0044 5A1C     		adds	r2, r3, #1
 5258 0046 BA60     		str	r2, [r7, #8]
 5259 0048 7A69     		ldr	r2, [r7, #20]
 5260 004a 511C     		adds	r1, r2, #1
 5261 004c 7961     		str	r1, [r7, #20]
 5262 004e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5263 0050 1A70     		strb	r2, [r3]
2269:../Generated_Code/UTIL1.c ****     bufSize--;
 5264              		.loc 1 2269 0
 5265 0052 7B68     		ldr	r3, [r7, #4]
 5266 0054 013B     		subs	r3, r3, #1
 5267 0056 7B60     		str	r3, [r7, #4]
 5268              	.L328:
2267:../Generated_Code/UTIL1.c ****   while(*p!='\"' && *p!='\0' && bufSize>0) {
 5269              		.loc 1 2267 0 discriminator 1
 5270 0058 7B69     		ldr	r3, [r7, #20]
 5271 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5272 005c 222B     		cmp	r3, #34
 5273 005e 06D0     		beq	.L329
2267:../Generated_Code/UTIL1.c ****   while(*p!='\"' && *p!='\0' && bufSize>0) {
 5274              		.loc 1 2267 0 is_stmt 0 discriminator 2
 5275 0060 7B69     		ldr	r3, [r7, #20]
 5276 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5277 0064 002B     		cmp	r3, #0
 5278 0066 02D0     		beq	.L329
2267:../Generated_Code/UTIL1.c ****   while(*p!='\"' && *p!='\0' && bufSize>0) {
 5279              		.loc 1 2267 0 discriminator 1
 5280 0068 7B68     		ldr	r3, [r7, #4]
 5281 006a 002B     		cmp	r3, #0
 5282 006c E9D1     		bne	.L330
 5283              	.L329:
2270:../Generated_Code/UTIL1.c ****   }
2271:../Generated_Code/UTIL1.c ****   if (*p!='\"') {
 5284              		.loc 1 2271 0 is_stmt 1
 5285 006e 7B69     		ldr	r3, [r7, #20]
 5286 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5287 0072 222B     		cmp	r3, #34
 5288 0074 01D0     		beq	.L331
2272:../Generated_Code/UTIL1.c ****     return ERR_FAILED; /* no terminating double quote */
 5289              		.loc 1 2272 0
 5290 0076 1B23     		movs	r3, #27
 5291 0078 09E0     		b	.L326
 5292              	.L331:
2273:../Generated_Code/UTIL1.c ****   } else {
2274:../Generated_Code/UTIL1.c ****     p++; /* skip double quote */
 5293              		.loc 1 2274 0
 5294 007a 7B69     		ldr	r3, [r7, #20]
 5295 007c 0133     		adds	r3, r3, #1
 5296 007e 7B61     		str	r3, [r7, #20]
2275:../Generated_Code/UTIL1.c ****     *buf = '\0'; /* terminate buffer */
 5297              		.loc 1 2275 0
 5298 0080 BB68     		ldr	r3, [r7, #8]
 5299 0082 0022     		movs	r2, #0
 5300 0084 1A70     		strb	r2, [r3]
2276:../Generated_Code/UTIL1.c ****   }
2277:../Generated_Code/UTIL1.c ****   *cmd = p; /* advance pointer */
 5301              		.loc 1 2277 0
 5302 0086 FB68     		ldr	r3, [r7, #12]
 5303 0088 7A69     		ldr	r2, [r7, #20]
 5304 008a 1A60     		str	r2, [r3]
2278:../Generated_Code/UTIL1.c ****   return ERR_OK;
 5305              		.loc 1 2278 0
 5306 008c 0023     		movs	r3, #0
 5307              	.L326:
2279:../Generated_Code/UTIL1.c **** }
 5308              		.loc 1 2279 0
 5309 008e 1846     		mov	r0, r3
 5310 0090 1C37     		adds	r7, r7, #28
 5311 0092 BD46     		mov	sp, r7
 5312              		@ sp needed
 5313 0094 5DF8047B 		ldr	r7, [sp], #4
 5314 0098 7047     		bx	lr
 5315              		.cfi_endproc
 5316              	.LFE53:
 5318 009a 00BF     		.section	.text.UTIL1_strcatPad,"ax",%progbits
 5319              		.align	2
 5320              		.global	UTIL1_strcatPad
 5321              		.thumb
 5322              		.thumb_func
 5324              	UTIL1_strcatPad:
 5325              	.LFB54:
2280:../Generated_Code/UTIL1.c **** 
2281:../Generated_Code/UTIL1.c **** /*
2282:../Generated_Code/UTIL1.c **** ** ===================================================================
2283:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatPad (component Utility)
2284:../Generated_Code/UTIL1.c **** **     Description :
2285:../Generated_Code/UTIL1.c **** **         Same as normal strcat, but safe as it does not write beyond
2286:../Generated_Code/UTIL1.c **** **         the buffer. The buffer will be filled with a pad character
2287:../Generated_Code/UTIL1.c **** **         for a given length.
2288:../Generated_Code/UTIL1.c **** **     Parameters  :
2289:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2290:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
2291:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
2292:../Generated_Code/UTIL1.c **** **                           bytes).
2293:../Generated_Code/UTIL1.c **** **       * src             - Pointer to source string.
2294:../Generated_Code/UTIL1.c **** **         padChar         - Character to be used for padding
2295:../Generated_Code/UTIL1.c **** **         srcPadSize      - To which size the src string
2296:../Generated_Code/UTIL1.c **** **                           has to be padded.
2297:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2298:../Generated_Code/UTIL1.c **** ** ===================================================================
2299:../Generated_Code/UTIL1.c **** */
2300:../Generated_Code/UTIL1.c **** void UTIL1_strcatPad(uint8_t *dst, size_t dstSize, const unsigned char *src, char padChar, uint8_t 
2301:../Generated_Code/UTIL1.c **** {
 5326              		.loc 1 2301 0
 5327              		.cfi_startproc
 5328              		@ args = 4, pretend = 0, frame = 24
 5329              		@ frame_needed = 1, uses_anonymous_args = 0
 5330 0000 80B5     		push	{r7, lr}
 5331              		.cfi_def_cfa_offset 8
 5332              		.cfi_offset 7, -8
 5333              		.cfi_offset 14, -4
 5334 0002 86B0     		sub	sp, sp, #24
 5335              		.cfi_def_cfa_offset 32
 5336 0004 00AF     		add	r7, sp, #0
 5337              		.cfi_def_cfa_register 7
 5338 0006 F860     		str	r0, [r7, #12]
 5339 0008 B960     		str	r1, [r7, #8]
 5340 000a 7A60     		str	r2, [r7, #4]
 5341 000c FB70     		strb	r3, [r7, #3]
2302:../Generated_Code/UTIL1.c ****   uint8_t *p;
2303:../Generated_Code/UTIL1.c ****   size_t nof = 0;
 5342              		.loc 1 2303 0
 5343 000e 0023     		movs	r3, #0
 5344 0010 3B61     		str	r3, [r7, #16]
2304:../Generated_Code/UTIL1.c **** 
2305:../Generated_Code/UTIL1.c ****   if (dstSize<2) {
 5345              		.loc 1 2305 0
 5346 0012 BB68     		ldr	r3, [r7, #8]
 5347 0014 012B     		cmp	r3, #1
 5348 0016 00D8     		bhi	.L333
2306:../Generated_Code/UTIL1.c ****     return; /* hmm, really to small for anything than the zero byte? */
 5349              		.loc 1 2306 0
 5350 0018 4AE0     		b	.L332
 5351              	.L333:
2307:../Generated_Code/UTIL1.c ****   }
2308:../Generated_Code/UTIL1.c ****   p = dst;
 5352              		.loc 1 2308 0
 5353 001a FB68     		ldr	r3, [r7, #12]
 5354 001c 7B61     		str	r3, [r7, #20]
2309:../Generated_Code/UTIL1.c ****   while(*p != '\0') { /* find end of string */
 5355              		.loc 1 2309 0
 5356 001e 05E0     		b	.L335
 5357              	.L336:
2310:../Generated_Code/UTIL1.c ****     p++;
 5358              		.loc 1 2310 0
 5359 0020 7B69     		ldr	r3, [r7, #20]
 5360 0022 0133     		adds	r3, r3, #1
 5361 0024 7B61     		str	r3, [r7, #20]
2311:../Generated_Code/UTIL1.c ****     nof++;
 5362              		.loc 1 2311 0
 5363 0026 3B69     		ldr	r3, [r7, #16]
 5364 0028 0133     		adds	r3, r3, #1
 5365 002a 3B61     		str	r3, [r7, #16]
 5366              	.L335:
2309:../Generated_Code/UTIL1.c ****   while(*p != '\0') { /* find end of string */
 5367              		.loc 1 2309 0 discriminator 1
 5368 002c 7B69     		ldr	r3, [r7, #20]
 5369 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5370 0030 002B     		cmp	r3, #0
 5371 0032 F5D1     		bne	.L336
2312:../Generated_Code/UTIL1.c ****   }
2313:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst+nof, dstSize-nof, src); /* add string */
 5372              		.loc 1 2313 0
 5373 0034 FA68     		ldr	r2, [r7, #12]
 5374 0036 3B69     		ldr	r3, [r7, #16]
 5375 0038 1A44     		add	r2, r2, r3
 5376 003a B968     		ldr	r1, [r7, #8]
 5377 003c 3B69     		ldr	r3, [r7, #16]
 5378 003e CB1A     		subs	r3, r1, r3
 5379 0040 1046     		mov	r0, r2
 5380 0042 1946     		mov	r1, r3
 5381 0044 7A68     		ldr	r2, [r7, #4]
 5382 0046 FFF7FEFF 		bl	UTIL1_strcat
2314:../Generated_Code/UTIL1.c ****   dstSize -= nof;
 5383              		.loc 1 2314 0
 5384 004a BA68     		ldr	r2, [r7, #8]
 5385 004c 3B69     		ldr	r3, [r7, #16]
 5386 004e D31A     		subs	r3, r2, r3
 5387 0050 BB60     		str	r3, [r7, #8]
2315:../Generated_Code/UTIL1.c ****   while(*p != '\0' && srcPadSize>0 && dstSize>1) {
 5388              		.loc 1 2315 0
 5389 0052 0AE0     		b	.L337
 5390              	.L339:
2316:../Generated_Code/UTIL1.c ****     p++;
 5391              		.loc 1 2316 0
 5392 0054 7B69     		ldr	r3, [r7, #20]
 5393 0056 0133     		adds	r3, r3, #1
 5394 0058 7B61     		str	r3, [r7, #20]
2317:../Generated_Code/UTIL1.c ****     srcPadSize--;
 5395              		.loc 1 2317 0
 5396 005a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5397 005e 013B     		subs	r3, r3, #1
 5398 0060 87F82030 		strb	r3, [r7, #32]
2318:../Generated_Code/UTIL1.c ****     dstSize--;
 5399              		.loc 1 2318 0
 5400 0064 BB68     		ldr	r3, [r7, #8]
 5401 0066 013B     		subs	r3, r3, #1
 5402 0068 BB60     		str	r3, [r7, #8]
 5403              	.L337:
2315:../Generated_Code/UTIL1.c ****   while(*p != '\0' && srcPadSize>0 && dstSize>1) {
 5404              		.loc 1 2315 0 discriminator 1
 5405 006a 7B69     		ldr	r3, [r7, #20]
 5406 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5407 006e 002B     		cmp	r3, #0
 5408 0070 06D0     		beq	.L338
2315:../Generated_Code/UTIL1.c ****   while(*p != '\0' && srcPadSize>0 && dstSize>1) {
 5409              		.loc 1 2315 0 is_stmt 0 discriminator 2
 5410 0072 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5411 0076 002B     		cmp	r3, #0
 5412 0078 02D0     		beq	.L338
2315:../Generated_Code/UTIL1.c ****   while(*p != '\0' && srcPadSize>0 && dstSize>1) {
 5413              		.loc 1 2315 0 discriminator 1
 5414 007a BB68     		ldr	r3, [r7, #8]
 5415 007c 012B     		cmp	r3, #1
 5416 007e E9D8     		bhi	.L339
 5417              	.L338:
2319:../Generated_Code/UTIL1.c ****   }
2320:../Generated_Code/UTIL1.c ****   while(srcPadSize>0 && dstSize>1) {
 5418              		.loc 1 2320 0 is_stmt 1
 5419 0080 0CE0     		b	.L340
 5420              	.L342:
2321:../Generated_Code/UTIL1.c ****     *p++ = padChar; /* add padding char */
 5421              		.loc 1 2321 0
 5422 0082 7B69     		ldr	r3, [r7, #20]
 5423 0084 5A1C     		adds	r2, r3, #1
 5424 0086 7A61     		str	r2, [r7, #20]
 5425 0088 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 5426 008a 1A70     		strb	r2, [r3]
2322:../Generated_Code/UTIL1.c ****     srcPadSize--;
 5427              		.loc 1 2322 0
 5428 008c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5429 0090 013B     		subs	r3, r3, #1
 5430 0092 87F82030 		strb	r3, [r7, #32]
2323:../Generated_Code/UTIL1.c ****     dstSize--;
 5431              		.loc 1 2323 0
 5432 0096 BB68     		ldr	r3, [r7, #8]
 5433 0098 013B     		subs	r3, r3, #1
 5434 009a BB60     		str	r3, [r7, #8]
 5435              	.L340:
2320:../Generated_Code/UTIL1.c ****   while(srcPadSize>0 && dstSize>1) {
 5436              		.loc 1 2320 0 discriminator 1
 5437 009c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5438 00a0 002B     		cmp	r3, #0
 5439 00a2 02D0     		beq	.L341
2320:../Generated_Code/UTIL1.c ****   while(srcPadSize>0 && dstSize>1) {
 5440              		.loc 1 2320 0 is_stmt 0 discriminator 2
 5441 00a4 BB68     		ldr	r3, [r7, #8]
 5442 00a6 012B     		cmp	r3, #1
 5443 00a8 EBD8     		bhi	.L342
 5444              	.L341:
2324:../Generated_Code/UTIL1.c ****   }
2325:../Generated_Code/UTIL1.c ****   *p = '\0'; /* terminate string */
 5445              		.loc 1 2325 0 is_stmt 1
 5446 00aa 7B69     		ldr	r3, [r7, #20]
 5447 00ac 0022     		movs	r2, #0
 5448 00ae 1A70     		strb	r2, [r3]
 5449              	.L332:
2326:../Generated_Code/UTIL1.c **** }
 5450              		.loc 1 2326 0
 5451 00b0 1837     		adds	r7, r7, #24
 5452 00b2 BD46     		mov	sp, r7
 5453              		@ sp needed
 5454 00b4 80BD     		pop	{r7, pc}
 5455              		.cfi_endproc
 5456              	.LFE54:
 5458 00b6 00BF     		.section	.rodata
 5459 0015 000000   		.align	2
 5460              	.LC3:
 5461 0018 2D00     		.ascii	"-\000"
 5462 001a 0000     		.section	.text.UTIL1_NumFloatToStr,"ax",%progbits
 5463              		.align	2
 5464              		.global	UTIL1_NumFloatToStr
 5465              		.thumb
 5466              		.thumb_func
 5468              	UTIL1_NumFloatToStr:
 5469              	.LFB55:
2327:../Generated_Code/UTIL1.c **** 
2328:../Generated_Code/UTIL1.c **** /*
2329:../Generated_Code/UTIL1.c **** ** ===================================================================
2330:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_NumFloatToStr (component Utility)
2331:../Generated_Code/UTIL1.c **** **     Description :
2332:../Generated_Code/UTIL1.c **** **         Converts a float value into a string.
2333:../Generated_Code/UTIL1.c **** **     Parameters  :
2334:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2335:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
2336:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
2337:../Generated_Code/UTIL1.c **** **                           bytes).
2338:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
2339:../Generated_Code/UTIL1.c **** **         nofFracDigits   - Number of fractional
2340:../Generated_Code/UTIL1.c **** **                           digits to print
2341:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2342:../Generated_Code/UTIL1.c **** ** ===================================================================
2343:../Generated_Code/UTIL1.c **** */
2344:../Generated_Code/UTIL1.c **** void UTIL1_NumFloatToStr(uint8_t *dst, size_t dstSize, float val, uint8_t nofFracDigits)
2345:../Generated_Code/UTIL1.c **** {
 5470              		.loc 1 2345 0
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 40
 5473              		@ frame_needed = 1, uses_anonymous_args = 0
 5474 0000 80B5     		push	{r7, lr}
 5475              		.cfi_def_cfa_offset 8
 5476              		.cfi_offset 7, -8
 5477              		.cfi_offset 14, -4
 5478 0002 8CB0     		sub	sp, sp, #48
 5479              		.cfi_def_cfa_offset 56
 5480 0004 02AF     		add	r7, sp, #8
 5481              		.cfi_def_cfa 7, 48
 5482 0006 F860     		str	r0, [r7, #12]
 5483 0008 B960     		str	r1, [r7, #8]
 5484 000a 87ED010A 		fsts	s0, [r7, #4]
 5485 000e 1346     		mov	r3, r2
 5486 0010 FB70     		strb	r3, [r7, #3]
2346:../Generated_Code/UTIL1.c ****   uint32_t integral;
2347:../Generated_Code/UTIL1.c ****   uint32_t fractional, shift;
2348:../Generated_Code/UTIL1.c ****   int i;
2349:../Generated_Code/UTIL1.c ****   bool isNeg;
2350:../Generated_Code/UTIL1.c **** 
2351:../Generated_Code/UTIL1.c ****   isNeg = (bool)(val<0);
 5487              		.loc 1 2351 0
 5488 0012 D7ED017A 		flds	s15, [r7, #4]
 5489 0016 F5EEC07A 		fcmpezs	s15
 5490 001a F1EE10FA 		fmstat
 5491 001e 54BF     		ite	pl
 5492 0020 0023     		movpl	r3, #0
 5493 0022 0123     		movmi	r3, #1
 5494 0024 DBB2     		uxtb	r3, r3
 5495 0026 FB77     		strb	r3, [r7, #31]
2352:../Generated_Code/UTIL1.c ****   if (isNeg) {
 5496              		.loc 1 2352 0
 5497 0028 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5498 002a 002B     		cmp	r3, #0
 5499 002c 05D0     		beq	.L344
2353:../Generated_Code/UTIL1.c ****     val = -val; /* make it positive */
 5500              		.loc 1 2353 0
 5501 002e D7ED017A 		flds	s15, [r7, #4]
 5502 0032 F1EE677A 		fnegs	s15, s15
 5503 0036 C7ED017A 		fsts	s15, [r7, #4]
 5504              	.L344:
2354:../Generated_Code/UTIL1.c ****   }
2355:../Generated_Code/UTIL1.c ****   integral = (uint32_t)(int32_t)val;
 5505              		.loc 1 2355 0
 5506 003a D7ED017A 		flds	s15, [r7, #4]
 5507 003e FDEEE77A 		ftosizs	s15, s15
 5508 0042 17EE903A 		fmrs	r3, s15	@ int
 5509 0046 BB61     		str	r3, [r7, #24]
2356:../Generated_Code/UTIL1.c ****   val = val-(float)integral; /* get rid of integral part */
 5510              		.loc 1 2356 0
 5511 0048 BB69     		ldr	r3, [r7, #24]
 5512 004a 07EE103A 		fmsr	s14, r3	@ int
 5513 004e F8EE477A 		fuitos	s15, s14
 5514 0052 97ED017A 		flds	s14, [r7, #4]
 5515 0056 77EE677A 		fsubs	s15, s14, s15
 5516 005a C7ED017A 		fsts	s15, [r7, #4]
2357:../Generated_Code/UTIL1.c ****   shift = 1;
 5517              		.loc 1 2357 0
 5518 005e 0123     		movs	r3, #1
 5519 0060 7B62     		str	r3, [r7, #36]
2358:../Generated_Code/UTIL1.c ****   for(i=0;i<nofFracDigits;i++) {
 5520              		.loc 1 2358 0
 5521 0062 0023     		movs	r3, #0
 5522 0064 3B62     		str	r3, [r7, #32]
 5523 0066 08E0     		b	.L345
 5524              	.L346:
2359:../Generated_Code/UTIL1.c ****     shift *= 10;
 5525              		.loc 1 2359 0 discriminator 2
 5526 0068 7A6A     		ldr	r2, [r7, #36]
 5527 006a 1346     		mov	r3, r2
 5528 006c 9B00     		lsls	r3, r3, #2
 5529 006e 1344     		add	r3, r3, r2
 5530 0070 5B00     		lsls	r3, r3, #1
 5531 0072 7B62     		str	r3, [r7, #36]
2358:../Generated_Code/UTIL1.c ****   for(i=0;i<nofFracDigits;i++) {
 5532              		.loc 1 2358 0 discriminator 2
 5533 0074 3B6A     		ldr	r3, [r7, #32]
 5534 0076 0133     		adds	r3, r3, #1
 5535 0078 3B62     		str	r3, [r7, #32]
 5536              	.L345:
2358:../Generated_Code/UTIL1.c ****   for(i=0;i<nofFracDigits;i++) {
 5537              		.loc 1 2358 0 is_stmt 0 discriminator 1
 5538 007a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 5539 007c 3B6A     		ldr	r3, [r7, #32]
 5540 007e 9A42     		cmp	r2, r3
 5541 0080 F2DC     		bgt	.L346
2360:../Generated_Code/UTIL1.c ****   }
2361:../Generated_Code/UTIL1.c ****   /* get fractional part */
2362:../Generated_Code/UTIL1.c ****   fractional = (uint32_t)(val*shift);
 5542              		.loc 1 2362 0 is_stmt 1
 5543 0082 7B6A     		ldr	r3, [r7, #36]
 5544 0084 07EE903A 		fmsr	s15, r3	@ int
 5545 0088 B8EE677A 		fuitos	s14, s15
 5546 008c D7ED017A 		flds	s15, [r7, #4]
 5547 0090 67EE277A 		fmuls	s15, s14, s15
 5548 0094 FCEEE77A 		ftouizs	s15, s15
 5549 0098 17EE903A 		fmrs	r3, s15	@ int
 5550 009c 7B61     		str	r3, [r7, #20]
2363:../Generated_Code/UTIL1.c ****   /* write integral part */
2364:../Generated_Code/UTIL1.c ****   if (integral==0 && fractional==0) { /* special check to avoid writing -0 or -0.000 */
 5551              		.loc 1 2364 0
 5552 009e BB69     		ldr	r3, [r7, #24]
 5553 00a0 002B     		cmp	r3, #0
 5554 00a2 08D1     		bne	.L347
 5555              		.loc 1 2364 0 is_stmt 0 discriminator 1
 5556 00a4 7B69     		ldr	r3, [r7, #20]
 5557 00a6 002B     		cmp	r3, #0
 5558 00a8 05D1     		bne	.L347
2365:../Generated_Code/UTIL1.c ****     UTIL1_Num32sToStr(dst, dstSize, 0); /* just write the zero */
 5559              		.loc 1 2365 0 is_stmt 1
 5560 00aa F868     		ldr	r0, [r7, #12]
 5561 00ac B968     		ldr	r1, [r7, #8]
 5562 00ae 0022     		movs	r2, #0
 5563 00b0 FFF7FEFF 		bl	UTIL1_Num32sToStr
 5564 00b4 14E0     		b	.L348
 5565              	.L347:
2366:../Generated_Code/UTIL1.c ****   } else if (isNeg) { /* for negative numbers, write it with sign */
 5566              		.loc 1 2366 0
 5567 00b6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5568 00b8 002B     		cmp	r3, #0
 5569 00ba 0BD0     		beq	.L349
2367:../Generated_Code/UTIL1.c ****     UTIL1_strcpy(dst, dstSize, (unsigned char*)"-");
 5570              		.loc 1 2367 0
 5571 00bc F868     		ldr	r0, [r7, #12]
 5572 00be B968     		ldr	r1, [r7, #8]
 5573 00c0 114A     		ldr	r2, .L351
 5574 00c2 FFF7FEFF 		bl	UTIL1_strcpy
2368:../Generated_Code/UTIL1.c ****     UTIL1_strcatNum32s(dst, dstSize, (int32_t)integral);
 5575              		.loc 1 2368 0
 5576 00c6 BB69     		ldr	r3, [r7, #24]
 5577 00c8 F868     		ldr	r0, [r7, #12]
 5578 00ca B968     		ldr	r1, [r7, #8]
 5579 00cc 1A46     		mov	r2, r3
 5580 00ce FFF7FEFF 		bl	UTIL1_strcatNum32s
 5581 00d2 05E0     		b	.L348
 5582              	.L349:
2369:../Generated_Code/UTIL1.c ****   } else {
2370:../Generated_Code/UTIL1.c ****     UTIL1_Num32sToStr(dst, dstSize, (int32_t)integral);
 5583              		.loc 1 2370 0
 5584 00d4 BB69     		ldr	r3, [r7, #24]
 5585 00d6 F868     		ldr	r0, [r7, #12]
 5586 00d8 B968     		ldr	r1, [r7, #8]
 5587 00da 1A46     		mov	r2, r3
 5588 00dc FFF7FEFF 		bl	UTIL1_Num32sToStr
 5589              	.L348:
2371:../Generated_Code/UTIL1.c ****   }
2372:../Generated_Code/UTIL1.c ****   /* write fractional part */
2373:../Generated_Code/UTIL1.c ****   if (nofFracDigits>0) {
 5590              		.loc 1 2373 0
 5591 00e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5592 00e2 002B     		cmp	r3, #0
 5593 00e4 0CD0     		beq	.L343
2374:../Generated_Code/UTIL1.c ****     UTIL1_chcat(dst, dstSize, '.');
 5594              		.loc 1 2374 0
 5595 00e6 F868     		ldr	r0, [r7, #12]
 5596 00e8 B968     		ldr	r1, [r7, #8]
 5597 00ea 2E22     		movs	r2, #46
 5598 00ec FFF7FEFF 		bl	UTIL1_chcat
2375:../Generated_Code/UTIL1.c ****     UTIL1_strcatNum32uFormatted(dst, dstSize, fractional, '0', nofFracDigits);
 5599              		.loc 1 2375 0
 5600 00f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5601 00f2 0093     		str	r3, [sp]
 5602 00f4 F868     		ldr	r0, [r7, #12]
 5603 00f6 B968     		ldr	r1, [r7, #8]
 5604 00f8 7A69     		ldr	r2, [r7, #20]
 5605 00fa 3023     		movs	r3, #48
 5606 00fc FFF7FEFF 		bl	UTIL1_strcatNum32uFormatted
 5607              	.L343:
2376:../Generated_Code/UTIL1.c ****   }
2377:../Generated_Code/UTIL1.c **** }
 5608              		.loc 1 2377 0
 5609 0100 2837     		adds	r7, r7, #40
 5610 0102 BD46     		mov	sp, r7
 5611              		@ sp needed
 5612 0104 80BD     		pop	{r7, pc}
 5613              	.L352:
 5614 0106 00BF     		.align	2
 5615              	.L351:
 5616 0108 18000000 		.word	.LC3
 5617              		.cfi_endproc
 5618              	.LFE55:
 5620              		.section	.text.UTIL1_strcatNumFloat,"ax",%progbits
 5621              		.align	2
 5622              		.global	UTIL1_strcatNumFloat
 5623              		.thumb
 5624              		.thumb_func
 5626              	UTIL1_strcatNumFloat:
 5627              	.LFB56:
2378:../Generated_Code/UTIL1.c **** 
2379:../Generated_Code/UTIL1.c **** /*
2380:../Generated_Code/UTIL1.c **** ** ===================================================================
2381:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_strcatNumFloat (component Utility)
2382:../Generated_Code/UTIL1.c **** **     Description :
2383:../Generated_Code/UTIL1.c **** **         Converts a float value into a string.
2384:../Generated_Code/UTIL1.c **** **     Parameters  :
2385:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2386:../Generated_Code/UTIL1.c **** **       * dst             - Pointer to destination string
2387:../Generated_Code/UTIL1.c **** **         dstSize         - Size of the destination buffer (in
2388:../Generated_Code/UTIL1.c **** **                           bytes).
2389:../Generated_Code/UTIL1.c **** **         val             - Value to be converted.
2390:../Generated_Code/UTIL1.c **** **         nofFracDigits   - Number of factional
2391:../Generated_Code/UTIL1.c **** **                           digits to print
2392:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2393:../Generated_Code/UTIL1.c **** ** ===================================================================
2394:../Generated_Code/UTIL1.c **** */
2395:../Generated_Code/UTIL1.c **** void UTIL1_strcatNumFloat(uint8_t *dst, size_t dstSize, float val, uint8_t nofFracDigits)
2396:../Generated_Code/UTIL1.c **** {
 5628              		.loc 1 2396 0
 5629              		.cfi_startproc
 5630              		@ args = 0, pretend = 0, frame = 48
 5631              		@ frame_needed = 1, uses_anonymous_args = 0
 5632 0000 80B5     		push	{r7, lr}
 5633              		.cfi_def_cfa_offset 8
 5634              		.cfi_offset 7, -8
 5635              		.cfi_offset 14, -4
 5636 0002 8CB0     		sub	sp, sp, #48
 5637              		.cfi_def_cfa_offset 56
 5638 0004 00AF     		add	r7, sp, #0
 5639              		.cfi_def_cfa_register 7
 5640 0006 F860     		str	r0, [r7, #12]
 5641 0008 B960     		str	r1, [r7, #8]
 5642 000a 87ED010A 		fsts	s0, [r7, #4]
 5643 000e 1346     		mov	r3, r2
 5644 0010 FB70     		strb	r3, [r7, #3]
2397:../Generated_Code/UTIL1.c ****   uint8_t buf[32];
2398:../Generated_Code/UTIL1.c **** 
2399:../Generated_Code/UTIL1.c ****   UTIL1_NumFloatToStr(buf, sizeof(buf), val, nofFracDigits);
 5645              		.loc 1 2399 0
 5646 0012 07F11002 		add	r2, r7, #16
 5647 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5648 0018 1046     		mov	r0, r2
 5649 001a 2021     		movs	r1, #32
 5650 001c 97ED010A 		flds	s0, [r7, #4]
 5651 0020 1A46     		mov	r2, r3
 5652 0022 FFF7FEFF 		bl	UTIL1_NumFloatToStr
2400:../Generated_Code/UTIL1.c ****   UTIL1_strcat(dst, dstSize, buf);
 5653              		.loc 1 2400 0
 5654 0026 07F11003 		add	r3, r7, #16
 5655 002a F868     		ldr	r0, [r7, #12]
 5656 002c B968     		ldr	r1, [r7, #8]
 5657 002e 1A46     		mov	r2, r3
 5658 0030 FFF7FEFF 		bl	UTIL1_strcat
2401:../Generated_Code/UTIL1.c **** }
 5659              		.loc 1 2401 0
 5660 0034 3037     		adds	r7, r7, #48
 5661 0036 BD46     		mov	sp, r7
 5662              		@ sp needed
 5663 0038 80BD     		pop	{r7, pc}
 5664              		.cfi_endproc
 5665              	.LFE56:
 5667 003a 00BF     		.section	.text.UTIL1_GetValue16LE,"ax",%progbits
 5668              		.align	2
 5669              		.global	UTIL1_GetValue16LE
 5670              		.thumb
 5671              		.thumb_func
 5673              	UTIL1_GetValue16LE:
 5674              	.LFB57:
2402:../Generated_Code/UTIL1.c **** 
2403:../Generated_Code/UTIL1.c **** /*
2404:../Generated_Code/UTIL1.c **** ** ===================================================================
2405:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_GetValue16LE (component Utility)
2406:../Generated_Code/UTIL1.c **** **     Description :
2407:../Generated_Code/UTIL1.c **** **         Returns a 16bit Little Endian value from memory
2408:../Generated_Code/UTIL1.c **** **     Parameters  :
2409:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2410:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2411:../Generated_Code/UTIL1.c **** **     Returns     :
2412:../Generated_Code/UTIL1.c **** **         ---             - Error code
2413:../Generated_Code/UTIL1.c **** ** ===================================================================
2414:../Generated_Code/UTIL1.c **** */
2415:../Generated_Code/UTIL1.c **** uint16_t UTIL1_GetValue16LE(uint8_t *dataP)
2416:../Generated_Code/UTIL1.c **** {
 5675              		.loc 1 2416 0
 5676              		.cfi_startproc
 5677              		@ args = 0, pretend = 0, frame = 8
 5678              		@ frame_needed = 1, uses_anonymous_args = 0
 5679              		@ link register save eliminated.
 5680 0000 80B4     		push	{r7}
 5681              		.cfi_def_cfa_offset 4
 5682              		.cfi_offset 7, -4
 5683 0002 83B0     		sub	sp, sp, #12
 5684              		.cfi_def_cfa_offset 16
 5685 0004 00AF     		add	r7, sp, #0
 5686              		.cfi_def_cfa_register 7
 5687 0006 7860     		str	r0, [r7, #4]
2417:../Generated_Code/UTIL1.c ****   return (uint16_t)((dataP[1]<<8)+(dataP[0]));
 5688              		.loc 1 2417 0
 5689 0008 7B68     		ldr	r3, [r7, #4]
 5690 000a 0133     		adds	r3, r3, #1
 5691 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5692 000e 1B02     		lsls	r3, r3, #8
 5693 0010 9AB2     		uxth	r2, r3
 5694 0012 7B68     		ldr	r3, [r7, #4]
 5695 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5696 0016 1344     		add	r3, r3, r2
 5697 0018 9BB2     		uxth	r3, r3
2418:../Generated_Code/UTIL1.c **** }
 5698              		.loc 1 2418 0
 5699 001a 1846     		mov	r0, r3
 5700 001c 0C37     		adds	r7, r7, #12
 5701 001e BD46     		mov	sp, r7
 5702              		@ sp needed
 5703 0020 5DF8047B 		ldr	r7, [sp], #4
 5704 0024 7047     		bx	lr
 5705              		.cfi_endproc
 5706              	.LFE57:
 5708 0026 00BF     		.section	.text.UTIL1_GetValue24LE,"ax",%progbits
 5709              		.align	2
 5710              		.global	UTIL1_GetValue24LE
 5711              		.thumb
 5712              		.thumb_func
 5714              	UTIL1_GetValue24LE:
 5715              	.LFB58:
2419:../Generated_Code/UTIL1.c **** 
2420:../Generated_Code/UTIL1.c **** /*
2421:../Generated_Code/UTIL1.c **** ** ===================================================================
2422:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_GetValue24LE (component Utility)
2423:../Generated_Code/UTIL1.c **** **     Description :
2424:../Generated_Code/UTIL1.c **** **         Returns a 24bit Little Endian value from memory
2425:../Generated_Code/UTIL1.c **** **     Parameters  :
2426:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2427:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2428:../Generated_Code/UTIL1.c **** **     Returns     :
2429:../Generated_Code/UTIL1.c **** **         ---             - Error code
2430:../Generated_Code/UTIL1.c **** ** ===================================================================
2431:../Generated_Code/UTIL1.c **** */
2432:../Generated_Code/UTIL1.c **** uint32_t UTIL1_GetValue24LE(uint8_t *dataP)
2433:../Generated_Code/UTIL1.c **** {
 5716              		.loc 1 2433 0
 5717              		.cfi_startproc
 5718              		@ args = 0, pretend = 0, frame = 8
 5719              		@ frame_needed = 1, uses_anonymous_args = 0
 5720              		@ link register save eliminated.
 5721 0000 80B4     		push	{r7}
 5722              		.cfi_def_cfa_offset 4
 5723              		.cfi_offset 7, -4
 5724 0002 83B0     		sub	sp, sp, #12
 5725              		.cfi_def_cfa_offset 16
 5726 0004 00AF     		add	r7, sp, #0
 5727              		.cfi_def_cfa_register 7
 5728 0006 7860     		str	r0, [r7, #4]
2434:../Generated_Code/UTIL1.c ****   return (uint32_t)(((uint32_t)dataP[2])<<16)+(dataP[1]<<8)+(dataP[0]);
 5729              		.loc 1 2434 0
 5730 0008 7B68     		ldr	r3, [r7, #4]
 5731 000a 0233     		adds	r3, r3, #2
 5732 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5733 000e 1A04     		lsls	r2, r3, #16
 5734 0010 7B68     		ldr	r3, [r7, #4]
 5735 0012 0133     		adds	r3, r3, #1
 5736 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5737 0016 1B02     		lsls	r3, r3, #8
 5738 0018 1A44     		add	r2, r2, r3
 5739 001a 7B68     		ldr	r3, [r7, #4]
 5740 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5741 001e 1344     		add	r3, r3, r2
2435:../Generated_Code/UTIL1.c **** }
 5742              		.loc 1 2435 0
 5743 0020 1846     		mov	r0, r3
 5744 0022 0C37     		adds	r7, r7, #12
 5745 0024 BD46     		mov	sp, r7
 5746              		@ sp needed
 5747 0026 5DF8047B 		ldr	r7, [sp], #4
 5748 002a 7047     		bx	lr
 5749              		.cfi_endproc
 5750              	.LFE58:
 5752              		.section	.text.UTIL1_GetValue32LE,"ax",%progbits
 5753              		.align	2
 5754              		.global	UTIL1_GetValue32LE
 5755              		.thumb
 5756              		.thumb_func
 5758              	UTIL1_GetValue32LE:
 5759              	.LFB59:
2436:../Generated_Code/UTIL1.c **** 
2437:../Generated_Code/UTIL1.c **** /*
2438:../Generated_Code/UTIL1.c **** ** ===================================================================
2439:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_GetValue32LE (component Utility)
2440:../Generated_Code/UTIL1.c **** **     Description :
2441:../Generated_Code/UTIL1.c **** **         Returns a 32bit Little Endian value from memory
2442:../Generated_Code/UTIL1.c **** **     Parameters  :
2443:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2444:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2445:../Generated_Code/UTIL1.c **** **     Returns     :
2446:../Generated_Code/UTIL1.c **** **         ---             - Error code
2447:../Generated_Code/UTIL1.c **** ** ===================================================================
2448:../Generated_Code/UTIL1.c **** */
2449:../Generated_Code/UTIL1.c **** uint32_t UTIL1_GetValue32LE(uint8_t *dataP)
2450:../Generated_Code/UTIL1.c **** {
 5760              		.loc 1 2450 0
 5761              		.cfi_startproc
 5762              		@ args = 0, pretend = 0, frame = 8
 5763              		@ frame_needed = 1, uses_anonymous_args = 0
 5764              		@ link register save eliminated.
 5765 0000 80B4     		push	{r7}
 5766              		.cfi_def_cfa_offset 4
 5767              		.cfi_offset 7, -4
 5768 0002 83B0     		sub	sp, sp, #12
 5769              		.cfi_def_cfa_offset 16
 5770 0004 00AF     		add	r7, sp, #0
 5771              		.cfi_def_cfa_register 7
 5772 0006 7860     		str	r0, [r7, #4]
2451:../Generated_Code/UTIL1.c ****   return (uint32_t)(((uint32_t)dataP[3])<<24)+(((uint32_t)dataP[2])<<16)+(dataP[1]<<8)+(dataP[0]);
 5773              		.loc 1 2451 0
 5774 0008 7B68     		ldr	r3, [r7, #4]
 5775 000a 0333     		adds	r3, r3, #3
 5776 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5777 000e 1A06     		lsls	r2, r3, #24
 5778 0010 7B68     		ldr	r3, [r7, #4]
 5779 0012 0233     		adds	r3, r3, #2
 5780 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5781 0016 1B04     		lsls	r3, r3, #16
 5782 0018 1A44     		add	r2, r2, r3
 5783 001a 7B68     		ldr	r3, [r7, #4]
 5784 001c 0133     		adds	r3, r3, #1
 5785 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5786 0020 1B02     		lsls	r3, r3, #8
 5787 0022 1A44     		add	r2, r2, r3
 5788 0024 7B68     		ldr	r3, [r7, #4]
 5789 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5790 0028 1344     		add	r3, r3, r2
2452:../Generated_Code/UTIL1.c **** }
 5791              		.loc 1 2452 0
 5792 002a 1846     		mov	r0, r3
 5793 002c 0C37     		adds	r7, r7, #12
 5794 002e BD46     		mov	sp, r7
 5795              		@ sp needed
 5796 0030 5DF8047B 		ldr	r7, [sp], #4
 5797 0034 7047     		bx	lr
 5798              		.cfi_endproc
 5799              	.LFE59:
 5801 0036 00BF     		.section	.text.UTIL1_SetValue16LE,"ax",%progbits
 5802              		.align	2
 5803              		.global	UTIL1_SetValue16LE
 5804              		.thumb
 5805              		.thumb_func
 5807              	UTIL1_SetValue16LE:
 5808              	.LFB60:
2453:../Generated_Code/UTIL1.c **** 
2454:../Generated_Code/UTIL1.c **** /*
2455:../Generated_Code/UTIL1.c **** ** ===================================================================
2456:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_SetValue16LE (component Utility)
2457:../Generated_Code/UTIL1.c **** **     Description :
2458:../Generated_Code/UTIL1.c **** **         Stores a 16bit value in memory as Little Endian
2459:../Generated_Code/UTIL1.c **** **     Parameters  :
2460:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2461:../Generated_Code/UTIL1.c **** **         data            - Value to store
2462:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2463:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2464:../Generated_Code/UTIL1.c **** ** ===================================================================
2465:../Generated_Code/UTIL1.c **** */
2466:../Generated_Code/UTIL1.c **** void UTIL1_SetValue16LE(uint16_t data, uint8_t *dataP)
2467:../Generated_Code/UTIL1.c **** {
 5809              		.loc 1 2467 0
 5810              		.cfi_startproc
 5811              		@ args = 0, pretend = 0, frame = 8
 5812              		@ frame_needed = 1, uses_anonymous_args = 0
 5813              		@ link register save eliminated.
 5814 0000 80B4     		push	{r7}
 5815              		.cfi_def_cfa_offset 4
 5816              		.cfi_offset 7, -4
 5817 0002 83B0     		sub	sp, sp, #12
 5818              		.cfi_def_cfa_offset 16
 5819 0004 00AF     		add	r7, sp, #0
 5820              		.cfi_def_cfa_register 7
 5821 0006 0346     		mov	r3, r0
 5822 0008 3960     		str	r1, [r7]
 5823 000a FB80     		strh	r3, [r7, #6]	@ movhi
2468:../Generated_Code/UTIL1.c ****   dataP[0] = (uint8_t)(data&0xff); /* LSB */
 5824              		.loc 1 2468 0
 5825 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5826 000e DAB2     		uxtb	r2, r3
 5827 0010 3B68     		ldr	r3, [r7]
 5828 0012 1A70     		strb	r2, [r3]
2469:../Generated_Code/UTIL1.c ****   dataP[1] = (uint8_t)((data>>8)&0xff); /* MSB */
 5829              		.loc 1 2469 0
 5830 0014 3B68     		ldr	r3, [r7]
 5831 0016 0133     		adds	r3, r3, #1
 5832 0018 FA88     		ldrh	r2, [r7, #6]
 5833 001a 120A     		lsrs	r2, r2, #8
 5834 001c 92B2     		uxth	r2, r2
 5835 001e D2B2     		uxtb	r2, r2
 5836 0020 1A70     		strb	r2, [r3]
2470:../Generated_Code/UTIL1.c **** }
 5837              		.loc 1 2470 0
 5838 0022 0C37     		adds	r7, r7, #12
 5839 0024 BD46     		mov	sp, r7
 5840              		@ sp needed
 5841 0026 5DF8047B 		ldr	r7, [sp], #4
 5842 002a 7047     		bx	lr
 5843              		.cfi_endproc
 5844              	.LFE60:
 5846              		.section	.text.UTIL1_SetValue24LE,"ax",%progbits
 5847              		.align	2
 5848              		.global	UTIL1_SetValue24LE
 5849              		.thumb
 5850              		.thumb_func
 5852              	UTIL1_SetValue24LE:
 5853              	.LFB61:
2471:../Generated_Code/UTIL1.c **** 
2472:../Generated_Code/UTIL1.c **** /*
2473:../Generated_Code/UTIL1.c **** ** ===================================================================
2474:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_SetValue24LE (component Utility)
2475:../Generated_Code/UTIL1.c **** **     Description :
2476:../Generated_Code/UTIL1.c **** **         Stores a 24bit value in memory as Little Endian
2477:../Generated_Code/UTIL1.c **** **     Parameters  :
2478:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2479:../Generated_Code/UTIL1.c **** **         data            - Value to store
2480:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2481:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2482:../Generated_Code/UTIL1.c **** ** ===================================================================
2483:../Generated_Code/UTIL1.c **** */
2484:../Generated_Code/UTIL1.c **** void UTIL1_SetValue24LE(uint32_t data, uint8_t *dataP)
2485:../Generated_Code/UTIL1.c **** {
 5854              		.loc 1 2485 0
 5855              		.cfi_startproc
 5856              		@ args = 0, pretend = 0, frame = 8
 5857              		@ frame_needed = 1, uses_anonymous_args = 0
 5858              		@ link register save eliminated.
 5859 0000 80B4     		push	{r7}
 5860              		.cfi_def_cfa_offset 4
 5861              		.cfi_offset 7, -4
 5862 0002 83B0     		sub	sp, sp, #12
 5863              		.cfi_def_cfa_offset 16
 5864 0004 00AF     		add	r7, sp, #0
 5865              		.cfi_def_cfa_register 7
 5866 0006 7860     		str	r0, [r7, #4]
 5867 0008 3960     		str	r1, [r7]
2486:../Generated_Code/UTIL1.c ****   dataP[0] = (uint8_t)(data&0xff); /* LSB */
 5868              		.loc 1 2486 0
 5869 000a 7B68     		ldr	r3, [r7, #4]
 5870 000c DAB2     		uxtb	r2, r3
 5871 000e 3B68     		ldr	r3, [r7]
 5872 0010 1A70     		strb	r2, [r3]
2487:../Generated_Code/UTIL1.c ****   dataP[1] = (uint8_t)((data>>8)&0xff);
 5873              		.loc 1 2487 0
 5874 0012 3B68     		ldr	r3, [r7]
 5875 0014 0133     		adds	r3, r3, #1
 5876 0016 7A68     		ldr	r2, [r7, #4]
 5877 0018 120A     		lsrs	r2, r2, #8
 5878 001a D2B2     		uxtb	r2, r2
 5879 001c 1A70     		strb	r2, [r3]
2488:../Generated_Code/UTIL1.c ****   dataP[2] = (uint8_t)((data>>16)&0xff);
 5880              		.loc 1 2488 0
 5881 001e 3B68     		ldr	r3, [r7]
 5882 0020 0233     		adds	r3, r3, #2
 5883 0022 7A68     		ldr	r2, [r7, #4]
 5884 0024 120C     		lsrs	r2, r2, #16
 5885 0026 D2B2     		uxtb	r2, r2
 5886 0028 1A70     		strb	r2, [r3]
2489:../Generated_Code/UTIL1.c **** }
 5887              		.loc 1 2489 0
 5888 002a 0C37     		adds	r7, r7, #12
 5889 002c BD46     		mov	sp, r7
 5890              		@ sp needed
 5891 002e 5DF8047B 		ldr	r7, [sp], #4
 5892 0032 7047     		bx	lr
 5893              		.cfi_endproc
 5894              	.LFE61:
 5896              		.section	.text.UTIL1_SetValue32LE,"ax",%progbits
 5897              		.align	2
 5898              		.global	UTIL1_SetValue32LE
 5899              		.thumb
 5900              		.thumb_func
 5902              	UTIL1_SetValue32LE:
 5903              	.LFB62:
2490:../Generated_Code/UTIL1.c **** 
2491:../Generated_Code/UTIL1.c **** /*
2492:../Generated_Code/UTIL1.c **** ** ===================================================================
2493:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_SetValue32LE (component Utility)
2494:../Generated_Code/UTIL1.c **** **     Description :
2495:../Generated_Code/UTIL1.c **** **         Stores a 32bit value in memory as Little Endian
2496:../Generated_Code/UTIL1.c **** **     Parameters  :
2497:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2498:../Generated_Code/UTIL1.c **** **         data            - Value to store
2499:../Generated_Code/UTIL1.c **** **       * dataP           - Pointer to memory
2500:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2501:../Generated_Code/UTIL1.c **** ** ===================================================================
2502:../Generated_Code/UTIL1.c **** */
2503:../Generated_Code/UTIL1.c **** void UTIL1_SetValue32LE(uint32_t data, uint8_t *dataP)
2504:../Generated_Code/UTIL1.c **** {
 5904              		.loc 1 2504 0
 5905              		.cfi_startproc
 5906              		@ args = 0, pretend = 0, frame = 8
 5907              		@ frame_needed = 1, uses_anonymous_args = 0
 5908              		@ link register save eliminated.
 5909 0000 80B4     		push	{r7}
 5910              		.cfi_def_cfa_offset 4
 5911              		.cfi_offset 7, -4
 5912 0002 83B0     		sub	sp, sp, #12
 5913              		.cfi_def_cfa_offset 16
 5914 0004 00AF     		add	r7, sp, #0
 5915              		.cfi_def_cfa_register 7
 5916 0006 7860     		str	r0, [r7, #4]
 5917 0008 3960     		str	r1, [r7]
2505:../Generated_Code/UTIL1.c ****   dataP[0] = (uint8_t)(data&0xff); /* LSB */
 5918              		.loc 1 2505 0
 5919 000a 7B68     		ldr	r3, [r7, #4]
 5920 000c DAB2     		uxtb	r2, r3
 5921 000e 3B68     		ldr	r3, [r7]
 5922 0010 1A70     		strb	r2, [r3]
2506:../Generated_Code/UTIL1.c ****   dataP[1] = (uint8_t)((data>>8)&0xff);
 5923              		.loc 1 2506 0
 5924 0012 3B68     		ldr	r3, [r7]
 5925 0014 0133     		adds	r3, r3, #1
 5926 0016 7A68     		ldr	r2, [r7, #4]
 5927 0018 120A     		lsrs	r2, r2, #8
 5928 001a D2B2     		uxtb	r2, r2
 5929 001c 1A70     		strb	r2, [r3]
2507:../Generated_Code/UTIL1.c ****   dataP[2] = (uint8_t)((data>>16)&0xff);
 5930              		.loc 1 2507 0
 5931 001e 3B68     		ldr	r3, [r7]
 5932 0020 0233     		adds	r3, r3, #2
 5933 0022 7A68     		ldr	r2, [r7, #4]
 5934 0024 120C     		lsrs	r2, r2, #16
 5935 0026 D2B2     		uxtb	r2, r2
 5936 0028 1A70     		strb	r2, [r3]
2508:../Generated_Code/UTIL1.c ****   dataP[3] = (uint8_t)((data>>24)&0xff);
 5937              		.loc 1 2508 0
 5938 002a 3B68     		ldr	r3, [r7]
 5939 002c 0333     		adds	r3, r3, #3
 5940 002e 7A68     		ldr	r2, [r7, #4]
 5941 0030 120E     		lsrs	r2, r2, #24
 5942 0032 D2B2     		uxtb	r2, r2
 5943 0034 1A70     		strb	r2, [r3]
2509:../Generated_Code/UTIL1.c **** }
 5944              		.loc 1 2509 0
 5945 0036 0C37     		adds	r7, r7, #12
 5946 0038 BD46     		mov	sp, r7
 5947              		@ sp needed
 5948 003a 5DF8047B 		ldr	r7, [sp], #4
 5949 003e 7047     		bx	lr
 5950              		.cfi_endproc
 5951              	.LFE62:
 5953              		.section	.text.UTIL1_Deinit,"ax",%progbits
 5954              		.align	2
 5955              		.global	UTIL1_Deinit
 5956              		.thumb
 5957              		.thumb_func
 5959              	UTIL1_Deinit:
 5960              	.LFB63:
2510:../Generated_Code/UTIL1.c **** 
2511:../Generated_Code/UTIL1.c **** /*
2512:../Generated_Code/UTIL1.c **** ** ===================================================================
2513:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Deinit (component Utility)
2514:../Generated_Code/UTIL1.c **** **     Description :
2515:../Generated_Code/UTIL1.c **** **         Driver De-Initialization
2516:../Generated_Code/UTIL1.c **** **     Parameters  : None
2517:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2518:../Generated_Code/UTIL1.c **** ** ===================================================================
2519:../Generated_Code/UTIL1.c **** */
2520:../Generated_Code/UTIL1.c **** void UTIL1_Deinit(void)
2521:../Generated_Code/UTIL1.c **** {
 5961              		.loc 1 2521 0
 5962              		.cfi_startproc
 5963              		@ args = 0, pretend = 0, frame = 0
 5964              		@ frame_needed = 1, uses_anonymous_args = 0
 5965              		@ link register save eliminated.
 5966 0000 80B4     		push	{r7}
 5967              		.cfi_def_cfa_offset 4
 5968              		.cfi_offset 7, -4
 5969 0002 00AF     		add	r7, sp, #0
 5970              		.cfi_def_cfa_register 7
2522:../Generated_Code/UTIL1.c ****   /* nothing needed */
2523:../Generated_Code/UTIL1.c **** }
 5971              		.loc 1 2523 0
 5972 0004 BD46     		mov	sp, r7
 5973              		@ sp needed
 5974 0006 5DF8047B 		ldr	r7, [sp], #4
 5975 000a 7047     		bx	lr
 5976              		.cfi_endproc
 5977              	.LFE63:
 5979              		.section	.text.UTIL1_Init,"ax",%progbits
 5980              		.align	2
 5981              		.global	UTIL1_Init
 5982              		.thumb
 5983              		.thumb_func
 5985              	UTIL1_Init:
 5986              	.LFB64:
2524:../Generated_Code/UTIL1.c **** 
2525:../Generated_Code/UTIL1.c **** /*
2526:../Generated_Code/UTIL1.c **** ** ===================================================================
2527:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_Init (component Utility)
2528:../Generated_Code/UTIL1.c **** **     Description :
2529:../Generated_Code/UTIL1.c **** **         Driver Initialization
2530:../Generated_Code/UTIL1.c **** **     Parameters  : None
2531:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2532:../Generated_Code/UTIL1.c **** ** ===================================================================
2533:../Generated_Code/UTIL1.c **** */
2534:../Generated_Code/UTIL1.c **** void UTIL1_Init(void)
2535:../Generated_Code/UTIL1.c **** {
 5987              		.loc 1 2535 0
 5988              		.cfi_startproc
 5989              		@ args = 0, pretend = 0, frame = 0
 5990              		@ frame_needed = 1, uses_anonymous_args = 0
 5991              		@ link register save eliminated.
 5992 0000 80B4     		push	{r7}
 5993              		.cfi_def_cfa_offset 4
 5994              		.cfi_offset 7, -4
 5995 0002 00AF     		add	r7, sp, #0
 5996              		.cfi_def_cfa_register 7
2536:../Generated_Code/UTIL1.c ****   /* nothing needed */
2537:../Generated_Code/UTIL1.c **** }
 5997              		.loc 1 2537 0
 5998 0004 BD46     		mov	sp, r7
 5999              		@ sp needed
 6000 0006 5DF8047B 		ldr	r7, [sp], #4
 6001 000a 7047     		bx	lr
 6002              		.cfi_endproc
 6003              	.LFE64:
 6005              		.section	.text.UTIL1_map,"ax",%progbits
 6006              		.align	2
 6007              		.global	UTIL1_map
 6008              		.thumb
 6009              		.thumb_func
 6011              	UTIL1_map:
 6012              	.LFB65:
2538:../Generated_Code/UTIL1.c **** 
2539:../Generated_Code/UTIL1.c **** /*
2540:../Generated_Code/UTIL1.c **** ** ===================================================================
2541:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_map (component Utility)
2542:../Generated_Code/UTIL1.c **** **     Description :
2543:../Generated_Code/UTIL1.c **** **         Maps a value from one range to another
2544:../Generated_Code/UTIL1.c **** **     Parameters  :
2545:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2546:../Generated_Code/UTIL1.c **** **         x               - value to be mapped
2547:../Generated_Code/UTIL1.c **** **         in_min          - input range minimum value
2548:../Generated_Code/UTIL1.c **** **         in_max          - input range maximum value
2549:../Generated_Code/UTIL1.c **** **         out_min         - output range maximum value
2550:../Generated_Code/UTIL1.c **** **         out_max         - 
2551:../Generated_Code/UTIL1.c **** **     Returns     :
2552:../Generated_Code/UTIL1.c **** **         ---             - remapped value
2553:../Generated_Code/UTIL1.c **** ** ===================================================================
2554:../Generated_Code/UTIL1.c **** */
2555:../Generated_Code/UTIL1.c **** int32_t UTIL1_map(int32_t x, int32_t in_min, int32_t in_max, int32_t out_min, int32_t out_max)
2556:../Generated_Code/UTIL1.c **** {
 6013              		.loc 1 2556 0
 6014              		.cfi_startproc
 6015              		@ args = 4, pretend = 0, frame = 16
 6016              		@ frame_needed = 1, uses_anonymous_args = 0
 6017              		@ link register save eliminated.
 6018 0000 80B4     		push	{r7}
 6019              		.cfi_def_cfa_offset 4
 6020              		.cfi_offset 7, -4
 6021 0002 85B0     		sub	sp, sp, #20
 6022              		.cfi_def_cfa_offset 24
 6023 0004 00AF     		add	r7, sp, #0
 6024              		.cfi_def_cfa_register 7
 6025 0006 F860     		str	r0, [r7, #12]
 6026 0008 B960     		str	r1, [r7, #8]
 6027 000a 7A60     		str	r2, [r7, #4]
 6028 000c 3B60     		str	r3, [r7]
2557:../Generated_Code/UTIL1.c **** #if 0 /* original Arduino implementation */
2558:../Generated_Code/UTIL1.c ****   return (x-in_min)*(out_max-out_min)/(in_max-in_min)+out_min;
2559:../Generated_Code/UTIL1.c **** #else /* improved version, see https://github.com/arduino/Arduino/issues/2466 */
2560:../Generated_Code/UTIL1.c ****   if ((in_max - in_min) > (out_max - out_min)) {
 6029              		.loc 1 2560 0
 6030 000e 7A68     		ldr	r2, [r7, #4]
 6031 0010 BB68     		ldr	r3, [r7, #8]
 6032 0012 D21A     		subs	r2, r2, r3
 6033 0014 B969     		ldr	r1, [r7, #24]
 6034 0016 3B68     		ldr	r3, [r7]
 6035 0018 CB1A     		subs	r3, r1, r3
 6036 001a 9A42     		cmp	r2, r3
 6037 001c 11DD     		ble	.L366
2561:../Generated_Code/UTIL1.c ****     return (x - in_min) * (out_max - out_min+1) / (in_max - in_min+1) + out_min;
 6038              		.loc 1 2561 0
 6039 001e FA68     		ldr	r2, [r7, #12]
 6040 0020 BB68     		ldr	r3, [r7, #8]
 6041 0022 D31A     		subs	r3, r2, r3
 6042 0024 B969     		ldr	r1, [r7, #24]
 6043 0026 3A68     		ldr	r2, [r7]
 6044 0028 8A1A     		subs	r2, r1, r2
 6045 002a 0132     		adds	r2, r2, #1
 6046 002c 02FB03F2 		mul	r2, r2, r3
 6047 0030 7968     		ldr	r1, [r7, #4]
 6048 0032 BB68     		ldr	r3, [r7, #8]
 6049 0034 CB1A     		subs	r3, r1, r3
 6050 0036 0133     		adds	r3, r3, #1
 6051 0038 92FBF3F2 		sdiv	r2, r2, r3
 6052 003c 3B68     		ldr	r3, [r7]
 6053 003e 1344     		add	r3, r3, r2
 6054 0040 0EE0     		b	.L367
 6055              	.L366:
2562:../Generated_Code/UTIL1.c ****   } else {
2563:../Generated_Code/UTIL1.c ****     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 6056              		.loc 1 2563 0
 6057 0042 FA68     		ldr	r2, [r7, #12]
 6058 0044 BB68     		ldr	r3, [r7, #8]
 6059 0046 D31A     		subs	r3, r2, r3
 6060 0048 B969     		ldr	r1, [r7, #24]
 6061 004a 3A68     		ldr	r2, [r7]
 6062 004c 8A1A     		subs	r2, r1, r2
 6063 004e 02FB03F2 		mul	r2, r2, r3
 6064 0052 7968     		ldr	r1, [r7, #4]
 6065 0054 BB68     		ldr	r3, [r7, #8]
 6066 0056 CB1A     		subs	r3, r1, r3
 6067 0058 92FBF3F2 		sdiv	r2, r2, r3
 6068 005c 3B68     		ldr	r3, [r7]
 6069 005e 1344     		add	r3, r3, r2
 6070              	.L367:
2564:../Generated_Code/UTIL1.c ****   }
2565:../Generated_Code/UTIL1.c **** #endif
2566:../Generated_Code/UTIL1.c **** }
 6071              		.loc 1 2566 0
 6072 0060 1846     		mov	r0, r3
 6073 0062 1437     		adds	r7, r7, #20
 6074 0064 BD46     		mov	sp, r7
 6075              		@ sp needed
 6076 0066 5DF8047B 		ldr	r7, [sp], #4
 6077 006a 7047     		bx	lr
 6078              		.cfi_endproc
 6079              	.LFE65:
 6081              		.section	.text.UTIL1_constrain,"ax",%progbits
 6082              		.align	2
 6083              		.global	UTIL1_constrain
 6084              		.thumb
 6085              		.thumb_func
 6087              	UTIL1_constrain:
 6088              	.LFB66:
2567:../Generated_Code/UTIL1.c **** 
2568:../Generated_Code/UTIL1.c **** /*
2569:../Generated_Code/UTIL1.c **** ** ===================================================================
2570:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_constrain (component Utility)
2571:../Generated_Code/UTIL1.c **** **     Description :
2572:../Generated_Code/UTIL1.c **** **         Makes sure that a given input value is inside a given range.
2573:../Generated_Code/UTIL1.c **** **     Parameters  :
2574:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2575:../Generated_Code/UTIL1.c **** **         val             - input value
2576:../Generated_Code/UTIL1.c **** **         min             - range minimum value
2577:../Generated_Code/UTIL1.c **** **         max             - range maximum value
2578:../Generated_Code/UTIL1.c **** **     Returns     :
2579:../Generated_Code/UTIL1.c **** **         ---             - the constrained value
2580:../Generated_Code/UTIL1.c **** ** ===================================================================
2581:../Generated_Code/UTIL1.c **** */
2582:../Generated_Code/UTIL1.c **** int32_t UTIL1_constrain(int32_t val, int32_t min, int32_t max)
2583:../Generated_Code/UTIL1.c **** {
 6089              		.loc 1 2583 0
 6090              		.cfi_startproc
 6091              		@ args = 0, pretend = 0, frame = 16
 6092              		@ frame_needed = 1, uses_anonymous_args = 0
 6093              		@ link register save eliminated.
 6094 0000 80B4     		push	{r7}
 6095              		.cfi_def_cfa_offset 4
 6096              		.cfi_offset 7, -4
 6097 0002 85B0     		sub	sp, sp, #20
 6098              		.cfi_def_cfa_offset 24
 6099 0004 00AF     		add	r7, sp, #0
 6100              		.cfi_def_cfa_register 7
 6101 0006 F860     		str	r0, [r7, #12]
 6102 0008 B960     		str	r1, [r7, #8]
 6103 000a 7A60     		str	r2, [r7, #4]
2584:../Generated_Code/UTIL1.c ****   if (val<min) {
 6104              		.loc 1 2584 0
 6105 000c FA68     		ldr	r2, [r7, #12]
 6106 000e BB68     		ldr	r3, [r7, #8]
 6107 0010 9A42     		cmp	r2, r3
 6108 0012 01DA     		bge	.L369
2585:../Generated_Code/UTIL1.c ****     return min;
 6109              		.loc 1 2585 0
 6110 0014 BB68     		ldr	r3, [r7, #8]
 6111 0016 06E0     		b	.L370
 6112              	.L369:
2586:../Generated_Code/UTIL1.c ****   } else if (val>max) {
 6113              		.loc 1 2586 0
 6114 0018 FA68     		ldr	r2, [r7, #12]
 6115 001a 7B68     		ldr	r3, [r7, #4]
 6116 001c 9A42     		cmp	r2, r3
 6117 001e 01DD     		ble	.L371
2587:../Generated_Code/UTIL1.c ****     return max;
 6118              		.loc 1 2587 0
 6119 0020 7B68     		ldr	r3, [r7, #4]
 6120 0022 00E0     		b	.L370
 6121              	.L371:
2588:../Generated_Code/UTIL1.c ****   }
2589:../Generated_Code/UTIL1.c ****   return val;
 6122              		.loc 1 2589 0
 6123 0024 FB68     		ldr	r3, [r7, #12]
 6124              	.L370:
2590:../Generated_Code/UTIL1.c **** }
 6125              		.loc 1 2590 0
 6126 0026 1846     		mov	r0, r3
 6127 0028 1437     		adds	r7, r7, #20
 6128 002a BD46     		mov	sp, r7
 6129              		@ sp needed
 6130 002c 5DF8047B 		ldr	r7, [sp], #4
 6131 0030 7047     		bx	lr
 6132              		.cfi_endproc
 6133              	.LFE66:
 6135 0032 00BF     		.section	.text.UTIL1_random,"ax",%progbits
 6136              		.align	2
 6137              		.global	UTIL1_random
 6138              		.thumb
 6139              		.thumb_func
 6141              	UTIL1_random:
 6142              	.LFB67:
2591:../Generated_Code/UTIL1.c **** 
2592:../Generated_Code/UTIL1.c **** /*
2593:../Generated_Code/UTIL1.c **** ** ===================================================================
2594:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_random (component Utility)
2595:../Generated_Code/UTIL1.c **** **     Description :
2596:../Generated_Code/UTIL1.c **** **         Provides a random value. You have to call intialize the
2597:../Generated_Code/UTIL1.c **** **         random number generator with randomSetSeed() first!
2598:../Generated_Code/UTIL1.c **** **     Parameters  :
2599:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2600:../Generated_Code/UTIL1.c **** **         min             - range minimum value
2601:../Generated_Code/UTIL1.c **** **         max             - range maximum value
2602:../Generated_Code/UTIL1.c **** **     Returns     :
2603:../Generated_Code/UTIL1.c **** **         ---             - random value between min and max
2604:../Generated_Code/UTIL1.c **** ** ===================================================================
2605:../Generated_Code/UTIL1.c **** */
2606:../Generated_Code/UTIL1.c **** int32_t UTIL1_random(int32_t min, int32_t max)
2607:../Generated_Code/UTIL1.c **** {
 6143              		.loc 1 2607 0
 6144              		.cfi_startproc
 6145              		@ args = 0, pretend = 0, frame = 16
 6146              		@ frame_needed = 1, uses_anonymous_args = 0
 6147 0000 80B5     		push	{r7, lr}
 6148              		.cfi_def_cfa_offset 8
 6149              		.cfi_offset 7, -8
 6150              		.cfi_offset 14, -4
 6151 0002 84B0     		sub	sp, sp, #16
 6152              		.cfi_def_cfa_offset 24
 6153 0004 00AF     		add	r7, sp, #0
 6154              		.cfi_def_cfa_register 7
 6155 0006 7860     		str	r0, [r7, #4]
 6156 0008 3960     		str	r1, [r7]
2608:../Generated_Code/UTIL1.c ****   int32_t val;
2609:../Generated_Code/UTIL1.c **** 
2610:../Generated_Code/UTIL1.c ****   val = rand()%(max-min+1)+min;
 6157              		.loc 1 2610 0
 6158 000a FFF7FEFF 		bl	rand
 6159 000e 0346     		mov	r3, r0
 6160 0010 3968     		ldr	r1, [r7]
 6161 0012 7A68     		ldr	r2, [r7, #4]
 6162 0014 8A1A     		subs	r2, r1, r2
 6163 0016 0132     		adds	r2, r2, #1
 6164 0018 93FBF2F1 		sdiv	r1, r3, r2
 6165 001c 02FB01F2 		mul	r2, r2, r1
 6166 0020 9A1A     		subs	r2, r3, r2
 6167 0022 7B68     		ldr	r3, [r7, #4]
 6168 0024 1344     		add	r3, r3, r2
 6169 0026 FB60     		str	r3, [r7, #12]
2611:../Generated_Code/UTIL1.c ****   return UTIL1_constrain(val, min, max);
 6170              		.loc 1 2611 0
 6171 0028 F868     		ldr	r0, [r7, #12]
 6172 002a 7968     		ldr	r1, [r7, #4]
 6173 002c 3A68     		ldr	r2, [r7]
 6174 002e FFF7FEFF 		bl	UTIL1_constrain
 6175 0032 0346     		mov	r3, r0
2612:../Generated_Code/UTIL1.c **** }
 6176              		.loc 1 2612 0
 6177 0034 1846     		mov	r0, r3
 6178 0036 1037     		adds	r7, r7, #16
 6179 0038 BD46     		mov	sp, r7
 6180              		@ sp needed
 6181 003a 80BD     		pop	{r7, pc}
 6182              		.cfi_endproc
 6183              	.LFE67:
 6185              		.section	.text.UTIL1_randomSetSeed,"ax",%progbits
 6186              		.align	2
 6187              		.global	UTIL1_randomSetSeed
 6188              		.thumb
 6189              		.thumb_func
 6191              	UTIL1_randomSetSeed:
 6192              	.LFB68:
2613:../Generated_Code/UTIL1.c **** 
2614:../Generated_Code/UTIL1.c **** /*
2615:../Generated_Code/UTIL1.c **** ** ===================================================================
2616:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_randomSetSeed (component Utility)
2617:../Generated_Code/UTIL1.c **** **     Description :
2618:../Generated_Code/UTIL1.c **** **         Sets a seed for the random number generator
2619:../Generated_Code/UTIL1.c **** **     Parameters  :
2620:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2621:../Generated_Code/UTIL1.c **** **         seed            - seed to be used for random number
2622:../Generated_Code/UTIL1.c **** **                           generator
2623:../Generated_Code/UTIL1.c **** **     Returns     : Nothing
2624:../Generated_Code/UTIL1.c **** ** ===================================================================
2625:../Generated_Code/UTIL1.c **** */
2626:../Generated_Code/UTIL1.c **** void UTIL1_randomSetSeed(unsigned int seed)
2627:../Generated_Code/UTIL1.c **** {
 6193              		.loc 1 2627 0
 6194              		.cfi_startproc
 6195              		@ args = 0, pretend = 0, frame = 8
 6196              		@ frame_needed = 1, uses_anonymous_args = 0
 6197 0000 80B5     		push	{r7, lr}
 6198              		.cfi_def_cfa_offset 8
 6199              		.cfi_offset 7, -8
 6200              		.cfi_offset 14, -4
 6201 0002 82B0     		sub	sp, sp, #8
 6202              		.cfi_def_cfa_offset 16
 6203 0004 00AF     		add	r7, sp, #0
 6204              		.cfi_def_cfa_register 7
 6205 0006 7860     		str	r0, [r7, #4]
2628:../Generated_Code/UTIL1.c ****   srand(seed); /* set random number generator seed */
 6206              		.loc 1 2628 0
 6207 0008 7868     		ldr	r0, [r7, #4]
 6208 000a FFF7FEFF 		bl	srand
2629:../Generated_Code/UTIL1.c **** }
 6209              		.loc 1 2629 0
 6210 000e 0837     		adds	r7, r7, #8
 6211 0010 BD46     		mov	sp, r7
 6212              		@ sp needed
 6213 0012 80BD     		pop	{r7, pc}
 6214              		.cfi_endproc
 6215              	.LFE68:
 6217              		.global	__aeabi_ldivmod
 6218              		.section	.text.UTIL1_map64,"ax",%progbits
 6219              		.align	2
 6220              		.global	UTIL1_map64
 6221              		.thumb
 6222              		.thumb_func
 6224              	UTIL1_map64:
 6225              	.LFB69:
2630:../Generated_Code/UTIL1.c **** 
2631:../Generated_Code/UTIL1.c **** /*
2632:../Generated_Code/UTIL1.c **** ** ===================================================================
2633:../Generated_Code/UTIL1.c **** **     Method      :  UTIL1_map64 (component Utility)
2634:../Generated_Code/UTIL1.c **** **     Description :
2635:../Generated_Code/UTIL1.c **** **         Maps a value from one range to another, using 64bit math
2636:../Generated_Code/UTIL1.c **** **     Parameters  :
2637:../Generated_Code/UTIL1.c **** **         NAME            - DESCRIPTION
2638:../Generated_Code/UTIL1.c **** **         x               - value to be mapped
2639:../Generated_Code/UTIL1.c **** **         in_min          - input range minimum value
2640:../Generated_Code/UTIL1.c **** **         in_max          - input range maximum value
2641:../Generated_Code/UTIL1.c **** **         out_min         - output range maximum value
2642:../Generated_Code/UTIL1.c **** **         out_max         - 
2643:../Generated_Code/UTIL1.c **** **     Returns     :
2644:../Generated_Code/UTIL1.c **** **         ---             - remapped value
2645:../Generated_Code/UTIL1.c **** ** ===================================================================
2646:../Generated_Code/UTIL1.c **** */
2647:../Generated_Code/UTIL1.c **** #ifdef __GNUC__ /* HIWARE compiler does not support 64bit data types */
2648:../Generated_Code/UTIL1.c **** int64_t UTIL1_map64(int64_t x, int64_t in_min, int64_t in_max, int64_t out_min, int64_t out_max)
2649:../Generated_Code/UTIL1.c **** {
 6226              		.loc 1 2649 0
 6227              		.cfi_startproc
 6228              		@ args = 24, pretend = 0, frame = 16
 6229              		@ frame_needed = 1, uses_anonymous_args = 0
 6230 0000 B0B5     		push	{r4, r5, r7, lr}
 6231              		.cfi_def_cfa_offset 16
 6232              		.cfi_offset 4, -16
 6233              		.cfi_offset 5, -12
 6234              		.cfi_offset 7, -8
 6235              		.cfi_offset 14, -4
 6236 0002 84B0     		sub	sp, sp, #16
 6237              		.cfi_def_cfa_offset 32
 6238 0004 00AF     		add	r7, sp, #0
 6239              		.cfi_def_cfa_register 7
 6240 0006 C7E90201 		strd	r0, [r7, #8]
 6241 000a C7E90023 		strd	r2, [r7]
2650:../Generated_Code/UTIL1.c ****   if ((in_max - in_min) > (out_max - out_min)) {
 6242              		.loc 1 2650 0
 6243 000e D7E90801 		ldrd	r0, [r7, #32]
 6244 0012 D7E90023 		ldrd	r2, [r7]
 6245 0016 821A     		subs	r2, r0, r2
 6246 0018 61EB0303 		sbc	r3, r1, r3
 6247 001c D7E90C45 		ldrd	r4, [r7, #48]
 6248 0020 D7E90A01 		ldrd	r0, [r7, #40]
 6249 0024 201A     		subs	r0, r4, r0
 6250 0026 65EB0101 		sbc	r1, r5, r1
 6251 002a 9042     		cmp	r0, r2
 6252 002c 71EB030C 		sbcs	ip, r1, r3
 6253 0030 33DA     		bge	.L376
2651:../Generated_Code/UTIL1.c ****     return (x - in_min) * (out_max - out_min+1) / (in_max - in_min+1) + out_min;
 6254              		.loc 1 2651 0
 6255 0032 D7E90201 		ldrd	r0, [r7, #8]
 6256 0036 D7E90023 		ldrd	r2, [r7]
 6257 003a 801A     		subs	r0, r0, r2
 6258 003c 61EB0301 		sbc	r1, r1, r3
 6259 0040 D7E90C45 		ldrd	r4, [r7, #48]
 6260 0044 D7E90A23 		ldrd	r2, [r7, #40]
 6261 0048 A21A     		subs	r2, r4, r2
 6262 004a 65EB0303 		sbc	r3, r5, r3
 6263 004e 0132     		adds	r2, r2, #1
 6264 0050 43F10003 		adc	r3, r3, #0
 6265 0054 02FB01F5 		mul	r5, r2, r1
 6266 0058 00FB03F4 		mul	r4, r0, r3
 6267 005c 2C44     		add	r4, r4, r5
 6268 005e A0FB0223 		umull	r2, r3, r0, r2
 6269 0062 E118     		adds	r1, r4, r3
 6270 0064 0B46     		mov	r3, r1
 6271 0066 D7E90845 		ldrd	r4, [r7, #32]
 6272 006a D7E90001 		ldrd	r0, [r7]
 6273 006e 201A     		subs	r0, r4, r0
 6274 0070 65EB0101 		sbc	r1, r5, r1
 6275 0074 441C     		adds	r4, r0, #1
 6276 0076 41F10005 		adc	r5, r1, #0
 6277 007a 1046     		mov	r0, r2
 6278 007c 1946     		mov	r1, r3
 6279 007e 2246     		mov	r2, r4
 6280 0080 2B46     		mov	r3, r5
 6281 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 6282 0086 0246     		mov	r2, r0
 6283 0088 0B46     		mov	r3, r1
 6284 008a 1046     		mov	r0, r2
 6285 008c 1946     		mov	r1, r3
 6286 008e D7E90A23 		ldrd	r2, [r7, #40]
 6287 0092 1218     		adds	r2, r2, r0
 6288 0094 43EB0103 		adc	r3, r3, r1
 6289 0098 2CE0     		b	.L377
 6290              	.L376:
2652:../Generated_Code/UTIL1.c ****   } else {
2653:../Generated_Code/UTIL1.c ****     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 6291              		.loc 1 2653 0
 6292 009a D7E90201 		ldrd	r0, [r7, #8]
 6293 009e D7E90023 		ldrd	r2, [r7]
 6294 00a2 801A     		subs	r0, r0, r2
 6295 00a4 61EB0301 		sbc	r1, r1, r3
 6296 00a8 D7E90C45 		ldrd	r4, [r7, #48]
 6297 00ac D7E90A23 		ldrd	r2, [r7, #40]
 6298 00b0 A21A     		subs	r2, r4, r2
 6299 00b2 65EB0303 		sbc	r3, r5, r3
 6300 00b6 02FB01F5 		mul	r5, r2, r1
 6301 00ba 00FB03F4 		mul	r4, r0, r3
 6302 00be 2C44     		add	r4, r4, r5
 6303 00c0 A0FB0223 		umull	r2, r3, r0, r2
 6304 00c4 E118     		adds	r1, r4, r3
 6305 00c6 0B46     		mov	r3, r1
 6306 00c8 D7E90845 		ldrd	r4, [r7, #32]
 6307 00cc D7E90001 		ldrd	r0, [r7]
 6308 00d0 241A     		subs	r4, r4, r0
 6309 00d2 65EB0105 		sbc	r5, r5, r1
 6310 00d6 1046     		mov	r0, r2
 6311 00d8 1946     		mov	r1, r3
 6312 00da 2246     		mov	r2, r4
 6313 00dc 2B46     		mov	r3, r5
 6314 00de FFF7FEFF 		bl	__aeabi_ldivmod
 6315 00e2 0246     		mov	r2, r0
 6316 00e4 0B46     		mov	r3, r1
 6317 00e6 1046     		mov	r0, r2
 6318 00e8 1946     		mov	r1, r3
 6319 00ea D7E90A23 		ldrd	r2, [r7, #40]
 6320 00ee 1218     		adds	r2, r2, r0
 6321 00f0 43EB0103 		adc	r3, r3, r1
 6322              	.L377:
2654:../Generated_Code/UTIL1.c ****   }
2655:../Generated_Code/UTIL1.c **** }
 6323              		.loc 1 2655 0
 6324 00f4 1046     		mov	r0, r2
 6325 00f6 1946     		mov	r1, r3
 6326 00f8 1037     		adds	r7, r7, #16
 6327 00fa BD46     		mov	sp, r7
 6328              		@ sp needed
 6329 00fc B0BD     		pop	{r4, r5, r7, pc}
 6330              		.cfi_endproc
 6331              	.LFE69:
 6333 00fe 00BF     		.section	.rodata.skew.7183,"a",%progbits
 6334              		.align	2
 6337              	skew.7183:
 6338 0000 00       		.byte	0
 6339 0001 03       		.byte	3
 6340 0002 03       		.byte	3
 6341 0003 06       		.byte	6
 6342 0004 01       		.byte	1
 6343 0005 04       		.byte	4
 6344 0006 06       		.byte	6
 6345 0007 02       		.byte	2
 6346 0008 05       		.byte	5
 6347 0009 00       		.byte	0
 6348 000a 03       		.byte	3
 6349 000b 05       		.byte	5
 6350              		.text
 6351              	.Letext0:
 6352              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 6353              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 6354              		.file 4 "../Generated_Code/PE_Types.h"
 6355              		.file 5 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stddef.h"
 6356              		.file 6 "../Generated_Code/UTIL1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 UTIL1.c
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:21     .text.UTIL1_strcpy:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:26     .text.UTIL1_strcpy:00000000 UTIL1_strcpy
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:89     .text.UTIL1_strcat:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:94     .text.UTIL1_strcat:00000000 UTIL1_strcat
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:178    .text.UTIL1_chcat:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:183    .text.UTIL1_chcat:00000000 UTIL1_chcat
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:252    .text.UTIL1_Num8uToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:257    .text.UTIL1_Num8uToStr:00000000 UTIL1_Num8uToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:336    .text.UTIL1_Num16uToStr:00000000 UTIL1_Num16uToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:291    .text.UTIL1_Num8sToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:296    .text.UTIL1_Num8sToStr:00000000 UTIL1_Num8sToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:502    .text.UTIL1_Num16sToStr:00000000 UTIL1_Num16sToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:331    .text.UTIL1_Num16uToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:488    .text.UTIL1_Num16uToStr:000000e4 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:493    .rodata:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:497    .text.UTIL1_Num16sToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:702    .text.UTIL1_Num16sToStr:00000134 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:708    .text.ShiftRightAndFill:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:712    .text.ShiftRightAndFill:00000000 ShiftRightAndFill
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:815    .text.UTIL1_Num16sToStrFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:820    .text.UTIL1_Num16sToStrFormatted:00000000 UTIL1_Num16sToStrFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:860    .text.UTIL1_Num16uToStrFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:865    .text.UTIL1_Num16uToStrFormatted:00000000 UTIL1_Num16uToStrFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:905    .text.UTIL1_Num32uToStrFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:910    .text.UTIL1_Num32uToStrFormatted:00000000 UTIL1_Num32uToStrFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1986   .text.UTIL1_Num32uToStr:00000000 UTIL1_Num32uToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:949    .text.UTIL1_Num32sToStrFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:954    .text.UTIL1_Num32sToStrFormatted:00000000 UTIL1_Num32sToStrFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1778   .text.UTIL1_Num32sToStr:00000000 UTIL1_Num32sToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:993    .text.UTIL1_strcatNum8u:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:998    .text.UTIL1_strcatNum8u:00000000 UTIL1_strcatNum8u
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1038   .text.UTIL1_strcatNum8s:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1043   .text.UTIL1_strcatNum8s:00000000 UTIL1_strcatNum8s
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1083   .text.UTIL1_strcatNum16u:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1088   .text.UTIL1_strcatNum16u:00000000 UTIL1_strcatNum16u
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1128   .text.UTIL1_strcatNum16s:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1133   .text.UTIL1_strcatNum16s:00000000 UTIL1_strcatNum16s
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1173   .text.UTIL1_strcatNum16uFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1178   .text.UTIL1_strcatNum16uFormatted:00000000 UTIL1_strcatNum16uFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1220   .text.UTIL1_strcatNum16sFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1225   .text.UTIL1_strcatNum16sFormatted:00000000 UTIL1_strcatNum16sFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1267   .text.UTIL1_strcatNum32uFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1272   .text.UTIL1_strcatNum32uFormatted:00000000 UTIL1_strcatNum32uFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1314   .text.UTIL1_strcatNum32sFormatted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1319   .text.UTIL1_strcatNum32sFormatted:00000000 UTIL1_strcatNum32sFormatted
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1361   .text.UTIL1_strcatNum8Hex:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1366   .text.UTIL1_strcatNum8Hex:00000000 UTIL1_strcatNum8Hex
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1442   .text.UTIL1_strcatNum16Hex:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1447   .text.UTIL1_strcatNum16Hex:00000000 UTIL1_strcatNum16Hex
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1523   .text.UTIL1_strcatNum24Hex:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1528   .text.UTIL1_strcatNum24Hex:00000000 UTIL1_strcatNum24Hex
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1603   .text.UTIL1_strcatNum32Hex:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1608   .text.UTIL1_strcatNum32Hex:00000000 UTIL1_strcatNum32Hex
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1683   .text.UTIL1_strcatNum32s:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1688   .text.UTIL1_strcatNum32s:00000000 UTIL1_strcatNum32s
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1726   .text.UTIL1_strcatNum32u:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1731   .text.UTIL1_strcatNum32u:00000000 UTIL1_strcatNum32u
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1773   .text.UTIL1_Num32sToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1975   .text.UTIL1_Num32sToStr:00000124 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:1981   .text.UTIL1_Num32uToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2136   .text.UTIL1_Num32uToStr:000000e0 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2141   .text.UTIL1_IsLeapYear:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2146   .text.UTIL1_IsLeapYear:00000000 UTIL1_IsLeapYear
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2211   .text.UTIL1_IsLeapYear:0000005c $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2216   .text.UTIL1_WeekDay:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2221   .text.UTIL1_WeekDay:00000000 UTIL1_WeekDay
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2338   .text.UTIL1_WeekDay:000000bc $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6337   .rodata.skew.7183:00000000 skew.7183
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2348   .text.UTIL1_ReadEscapedName:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2353   .text.UTIL1_ReadEscapedName:00000000 UTIL1_ReadEscapedName
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2580   .text.UTIL1_ReadEscapedName:00000140 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2585   .text.UTIL1_xatoi:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2590   .text.UTIL1_xatoi:00000000 UTIL1_xatoi
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2851   .text.UTIL1_ScanDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:2856   .text.UTIL1_ScanDate:00000000 UTIL1_ScanDate
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3262   .text.UTIL1_ScanDecimal8uNumber:00000000 UTIL1_ScanDecimal8uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3496   .text.UTIL1_ScanDecimal16uNumber:00000000 UTIL1_ScanDecimal16uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3022   .text.UTIL1_ScanTime:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3027   .text.UTIL1_ScanTime:00000000 UTIL1_ScanTime
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3257   .text.UTIL1_ScanDecimal8uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3379   .text.UTIL1_ScanDecimal8sNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3384   .text.UTIL1_ScanDecimal8sNumber:00000000 UTIL1_ScanDecimal8sNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3491   .text.UTIL1_ScanDecimal16uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3613   .text.UTIL1_ScanDecimal16sNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3618   .text.UTIL1_ScanDecimal16sNumber:00000000 UTIL1_ScanDecimal16sNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3725   .text.UTIL1_ScanDecimal32uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3730   .text.UTIL1_ScanDecimal32uNumber:00000000 UTIL1_ScanDecimal32uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3845   .text.UTIL1_ScanDecimal32sNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3850   .text.UTIL1_ScanDecimal32sNumber:00000000 UTIL1_ScanDecimal32sNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3955   .text.UTIL1_ScanDecimal32sDotNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:3960   .text.UTIL1_ScanDecimal32sDotNumber:00000000 UTIL1_ScanDecimal32sDotNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4080   .text.isHexCharacter:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4084   .text.isHexCharacter:00000000 isHexCharacter
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4147   .text.PreScanHexNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4151   .text.PreScanHexNumber:00000000 PreScanHexNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4227   .text.HexToDec:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4231   .text.HexToDec:00000000 HexToDec
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4338   .text.UTIL1_ScanHex32uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4343   .text.UTIL1_ScanHex32uNumber:00000000 UTIL1_ScanHex32uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4440   .text.UTIL1_ScanHex16uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4445   .text.UTIL1_ScanHex16uNumber:00000000 UTIL1_ScanHex16uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4544   .text.UTIL1_ScanHex8uNumber:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4549   .text.UTIL1_ScanHex8uNumber:00000000 UTIL1_ScanHex8uNumber
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4648   .text.UTIL1_ScanHex8uNumberNoPrefix:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4653   .text.UTIL1_ScanHex8uNumberNoPrefix:00000000 UTIL1_ScanHex8uNumberNoPrefix
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4754   .text.UTIL1_strtailcmp:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4759   .text.UTIL1_strtailcmp:00000000 UTIL1_strtailcmp
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4837   .text.UTIL1_strCutTail:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4842   .text.UTIL1_strCutTail:00000000 UTIL1_strCutTail
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4898   .text.UTIL1_strcatNum32sDotValue100:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4903   .text.UTIL1_strcatNum32sDotValue100:00000000 UTIL1_strcatNum32sDotValue100
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4984   .text.UTIL1_strcatNum32sDotValue100:0000007c $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4989   .text.UTIL1_strFind:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:4994   .text.UTIL1_strFind:00000000 UTIL1_strFind
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5060   .text.UTIL1_ScanSeparatedNumbers:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5065   .text.UTIL1_ScanSeparatedNumbers:00000000 UTIL1_ScanSeparatedNumbers
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5194   .text.UTIL1_ScanDoubleQuotedString:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5199   .text.UTIL1_ScanDoubleQuotedString:00000000 UTIL1_ScanDoubleQuotedString
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5319   .text.UTIL1_strcatPad:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5324   .text.UTIL1_strcatPad:00000000 UTIL1_strcatPad
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5463   .text.UTIL1_NumFloatToStr:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5468   .text.UTIL1_NumFloatToStr:00000000 UTIL1_NumFloatToStr
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5616   .text.UTIL1_NumFloatToStr:00000108 $d
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5621   .text.UTIL1_strcatNumFloat:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5626   .text.UTIL1_strcatNumFloat:00000000 UTIL1_strcatNumFloat
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5668   .text.UTIL1_GetValue16LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5673   .text.UTIL1_GetValue16LE:00000000 UTIL1_GetValue16LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5709   .text.UTIL1_GetValue24LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5714   .text.UTIL1_GetValue24LE:00000000 UTIL1_GetValue24LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5753   .text.UTIL1_GetValue32LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5758   .text.UTIL1_GetValue32LE:00000000 UTIL1_GetValue32LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5802   .text.UTIL1_SetValue16LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5807   .text.UTIL1_SetValue16LE:00000000 UTIL1_SetValue16LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5847   .text.UTIL1_SetValue24LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5852   .text.UTIL1_SetValue24LE:00000000 UTIL1_SetValue24LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5897   .text.UTIL1_SetValue32LE:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5902   .text.UTIL1_SetValue32LE:00000000 UTIL1_SetValue32LE
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5954   .text.UTIL1_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5959   .text.UTIL1_Deinit:00000000 UTIL1_Deinit
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5980   .text.UTIL1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:5985   .text.UTIL1_Init:00000000 UTIL1_Init
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6006   .text.UTIL1_map:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6011   .text.UTIL1_map:00000000 UTIL1_map
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6082   .text.UTIL1_constrain:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6087   .text.UTIL1_constrain:00000000 UTIL1_constrain
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6136   .text.UTIL1_random:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6141   .text.UTIL1_random:00000000 UTIL1_random
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6186   .text.UTIL1_randomSetSeed:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6191   .text.UTIL1_randomSetSeed:00000000 UTIL1_randomSetSeed
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6219   .text.UTIL1_map64:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6224   .text.UTIL1_map64:00000000 UTIL1_map64
C:\Users\Aron\AppData\Local\Temp\ccKwMsFD.s:6334   .rodata.skew.7183:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a

UNDEFINED SYMBOLS
strchr
strlen
strncmp
rand
srand
__aeabi_ldivmod
