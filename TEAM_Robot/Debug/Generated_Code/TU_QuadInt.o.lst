   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"TU_QuadInt.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  21              		.align	2
  24              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  25 0000 00000000 		.space	8
  25      00000000 
  26              		.section	.bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  27              		.align	2
  30              	INT_PIT1__DEFAULT_RTOS_ISRPARAM:
  31 0000 00000000 		.space	4
  32              		.section	.text.TU_QuadInt_Init,"ax",%progbits
  33              		.align	2
  34              		.global	TU_QuadInt_Init
  35              		.thumb
  36              		.thumb_func
  38              	TU_QuadInt_Init:
  39              	.LFB0:
  40              		.file 1 "../Generated_Code/TU_QuadInt.c"
   1:../Generated_Code/TU_QuadInt.c **** /* ###################################################################
   2:../Generated_Code/TU_QuadInt.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/TU_QuadInt.c **** **     Filename    : TU_QuadInt.c
   4:../Generated_Code/TU_QuadInt.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/TU_QuadInt.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/TU_QuadInt.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU_QuadInt.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU_QuadInt.c **** **     Repository  : Kinetis
   9:../Generated_Code/TU_QuadInt.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/TU_QuadInt.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/TU_QuadInt.c **** **     Abstract    :
  12:../Generated_Code/TU_QuadInt.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  13:../Generated_Code/TU_QuadInt.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  14:../Generated_Code/TU_QuadInt.c **** **     Settings    :
  15:../Generated_Code/TU_QuadInt.c **** **          Component name                                 : TU_QuadInt
  16:../Generated_Code/TU_QuadInt.c **** **          Module name                                    : PIT
  17:../Generated_Code/TU_QuadInt.c **** **          Counter                                        : PIT_CVAL1
  18:../Generated_Code/TU_QuadInt.c **** **          Counter direction                              : Down
  19:../Generated_Code/TU_QuadInt.c **** **          Counter width                                  : 32 bits
  20:../Generated_Code/TU_QuadInt.c **** **          Value type                                     : uint32_t
  21:../Generated_Code/TU_QuadInt.c **** **          Input clock source                             : Internal
  22:../Generated_Code/TU_QuadInt.c **** **            Counter frequency                            : Auto select
  23:../Generated_Code/TU_QuadInt.c **** **          Counter restart                                : On-match
  24:../Generated_Code/TU_QuadInt.c **** **            Period device                                : PIT_LDVAL1
  25:../Generated_Code/TU_QuadInt.c **** **            Period                                       : 10 ms
  26:../Generated_Code/TU_QuadInt.c **** **            Interrupt                                    : Enabled
  27:../Generated_Code/TU_QuadInt.c **** **              Interrupt                                  : INT_PIT1
  28:../Generated_Code/TU_QuadInt.c **** **              Interrupt priority                         : minimal priority
  29:../Generated_Code/TU_QuadInt.c **** **          Channel list                                   : 0
  30:../Generated_Code/TU_QuadInt.c **** **          Initialization                                 : 
  31:../Generated_Code/TU_QuadInt.c **** **            Enabled in init. code                        : yes
  32:../Generated_Code/TU_QuadInt.c **** **            Auto initialization                          : no
  33:../Generated_Code/TU_QuadInt.c **** **            Event mask                                   : 
  34:../Generated_Code/TU_QuadInt.c **** **              OnCounterRestart                           : Enabled
  35:../Generated_Code/TU_QuadInt.c **** **              OnChannel0                                 : Disabled
  36:../Generated_Code/TU_QuadInt.c **** **              OnChannel1                                 : Disabled
  37:../Generated_Code/TU_QuadInt.c **** **              OnChannel2                                 : Disabled
  38:../Generated_Code/TU_QuadInt.c **** **              OnChannel3                                 : Disabled
  39:../Generated_Code/TU_QuadInt.c **** **              OnChannel4                                 : Disabled
  40:../Generated_Code/TU_QuadInt.c **** **              OnChannel5                                 : Disabled
  41:../Generated_Code/TU_QuadInt.c **** **              OnChannel6                                 : Disabled
  42:../Generated_Code/TU_QuadInt.c **** **              OnChannel7                                 : Disabled
  43:../Generated_Code/TU_QuadInt.c **** **          CPU clock/configuration selection              : 
  44:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 0                        : This component enabled
  45:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 1                        : This component disabled
  46:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 2                        : This component disabled
  47:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 3                        : This component disabled
  48:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 4                        : This component disabled
  49:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 5                        : This component disabled
  50:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 6                        : This component disabled
  51:../Generated_Code/TU_QuadInt.c **** **            Clock configuration 7                        : This component disabled
  52:../Generated_Code/TU_QuadInt.c **** **     Contents    :
  53:../Generated_Code/TU_QuadInt.c **** **         Init - LDD_TDeviceData* TU_QuadInt_Init(LDD_TUserData *UserDataPtr);
  54:../Generated_Code/TU_QuadInt.c **** **
  55:../Generated_Code/TU_QuadInt.c **** **     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
  56:../Generated_Code/TU_QuadInt.c **** **     All Rights Reserved.
  57:../Generated_Code/TU_QuadInt.c **** **     
  58:../Generated_Code/TU_QuadInt.c **** **     Redistribution and use in source and binary forms, with or without modification,
  59:../Generated_Code/TU_QuadInt.c **** **     are permitted provided that the following conditions are met:
  60:../Generated_Code/TU_QuadInt.c **** **     
  61:../Generated_Code/TU_QuadInt.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  62:../Generated_Code/TU_QuadInt.c **** **       of conditions and the following disclaimer.
  63:../Generated_Code/TU_QuadInt.c **** **     
  64:../Generated_Code/TU_QuadInt.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  65:../Generated_Code/TU_QuadInt.c **** **       list of conditions and the following disclaimer in the documentation and/or
  66:../Generated_Code/TU_QuadInt.c **** **       other materials provided with the distribution.
  67:../Generated_Code/TU_QuadInt.c **** **     
  68:../Generated_Code/TU_QuadInt.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  69:../Generated_Code/TU_QuadInt.c **** **       contributors may be used to endorse or promote products derived from this
  70:../Generated_Code/TU_QuadInt.c **** **       software without specific prior written permission.
  71:../Generated_Code/TU_QuadInt.c **** **     
  72:../Generated_Code/TU_QuadInt.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  73:../Generated_Code/TU_QuadInt.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  74:../Generated_Code/TU_QuadInt.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  75:../Generated_Code/TU_QuadInt.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  76:../Generated_Code/TU_QuadInt.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  77:../Generated_Code/TU_QuadInt.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  78:../Generated_Code/TU_QuadInt.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  79:../Generated_Code/TU_QuadInt.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  80:../Generated_Code/TU_QuadInt.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  81:../Generated_Code/TU_QuadInt.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  82:../Generated_Code/TU_QuadInt.c **** **     
  83:../Generated_Code/TU_QuadInt.c **** **     http: www.freescale.com
  84:../Generated_Code/TU_QuadInt.c **** **     mail: support@freescale.com
  85:../Generated_Code/TU_QuadInt.c **** ** ###################################################################*/
  86:../Generated_Code/TU_QuadInt.c **** /*!
  87:../Generated_Code/TU_QuadInt.c **** ** @file TU_QuadInt.c
  88:../Generated_Code/TU_QuadInt.c **** ** @version 01.11
  89:../Generated_Code/TU_QuadInt.c **** ** @brief
  90:../Generated_Code/TU_QuadInt.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  91:../Generated_Code/TU_QuadInt.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  92:../Generated_Code/TU_QuadInt.c **** */         
  93:../Generated_Code/TU_QuadInt.c **** /*!
  94:../Generated_Code/TU_QuadInt.c **** **  @addtogroup TU_QuadInt_module TU_QuadInt module documentation
  95:../Generated_Code/TU_QuadInt.c **** **  @{
  96:../Generated_Code/TU_QuadInt.c **** */         
  97:../Generated_Code/TU_QuadInt.c **** 
  98:../Generated_Code/TU_QuadInt.c **** /* MODULE TU_QuadInt. */
  99:../Generated_Code/TU_QuadInt.c **** 
 100:../Generated_Code/TU_QuadInt.c **** #include "TimerIntLdd2.h"
 101:../Generated_Code/TU_QuadInt.c **** #include "TU_QuadInt.h"
 102:../Generated_Code/TU_QuadInt.c **** /* {Default RTOS Adapter} No RTOS includes */
 103:../Generated_Code/TU_QuadInt.c **** #include "IO_Map.h"
 104:../Generated_Code/TU_QuadInt.c **** 
 105:../Generated_Code/TU_QuadInt.c **** #ifdef __cplusplus
 106:../Generated_Code/TU_QuadInt.c **** extern "C" {
 107:../Generated_Code/TU_QuadInt.c **** #endif 
 108:../Generated_Code/TU_QuadInt.c **** 
 109:../Generated_Code/TU_QuadInt.c **** 
 110:../Generated_Code/TU_QuadInt.c **** typedef struct {
 111:../Generated_Code/TU_QuadInt.c ****   uint8_t InitCntr;                    /* Number of initialization */
 112:../Generated_Code/TU_QuadInt.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 113:../Generated_Code/TU_QuadInt.c **** } TU_QuadInt_TDeviceData;
 114:../Generated_Code/TU_QuadInt.c **** 
 115:../Generated_Code/TU_QuadInt.c **** typedef TU_QuadInt_TDeviceData *TU_QuadInt_TDeviceDataPtr; /* Pointer to the device data structure.
 116:../Generated_Code/TU_QuadInt.c **** 
 117:../Generated_Code/TU_QuadInt.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 118:../Generated_Code/TU_QuadInt.c **** static TU_QuadInt_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 119:../Generated_Code/TU_QuadInt.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
 120:../Generated_Code/TU_QuadInt.c **** static TU_QuadInt_TDeviceDataPtr INT_PIT1__DEFAULT_RTOS_ISRPARAM;
 121:../Generated_Code/TU_QuadInt.c **** 
 122:../Generated_Code/TU_QuadInt.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
 123:../Generated_Code/TU_QuadInt.c **** 
 124:../Generated_Code/TU_QuadInt.c **** /* Internal method prototypes */
 125:../Generated_Code/TU_QuadInt.c **** /*
 126:../Generated_Code/TU_QuadInt.c **** ** ===================================================================
 127:../Generated_Code/TU_QuadInt.c **** **     Method      :  TU_QuadInt_Init (component TimerUnit_LDD)
 128:../Generated_Code/TU_QuadInt.c **** */
 129:../Generated_Code/TU_QuadInt.c **** /*!
 130:../Generated_Code/TU_QuadInt.c **** **     @brief
 131:../Generated_Code/TU_QuadInt.c **** **         Initializes the device. Allocates memory for the device data
 132:../Generated_Code/TU_QuadInt.c **** **         structure, allocates interrupt vectors and sets interrupt
 133:../Generated_Code/TU_QuadInt.c **** **         priority, sets pin routing, sets timing, etc. If the
 134:../Generated_Code/TU_QuadInt.c **** **         property ["Enable in init. code"] is set to "yes" value then
 135:../Generated_Code/TU_QuadInt.c **** **         the device is also enabled (see the description of the
 136:../Generated_Code/TU_QuadInt.c **** **         [Enable] method). In this case the [Enable] method is not
 137:../Generated_Code/TU_QuadInt.c **** **         necessary and needn't to be generated. This method can be
 138:../Generated_Code/TU_QuadInt.c **** **         called only once. Before the second call of Init the [Deinit]
 139:../Generated_Code/TU_QuadInt.c **** **         must be called first.
 140:../Generated_Code/TU_QuadInt.c **** **     @param
 141:../Generated_Code/TU_QuadInt.c **** **         UserDataPtr     - Pointer to the user or
 142:../Generated_Code/TU_QuadInt.c **** **                           RTOS specific data. This pointer will be
 143:../Generated_Code/TU_QuadInt.c **** **                           passed as an event or callback parameter.
 144:../Generated_Code/TU_QuadInt.c **** **     @return
 145:../Generated_Code/TU_QuadInt.c **** **                         - Pointer to the dynamically allocated private
 146:../Generated_Code/TU_QuadInt.c **** **                           structure or NULL if there was an error.
 147:../Generated_Code/TU_QuadInt.c **** */
 148:../Generated_Code/TU_QuadInt.c **** /* ===================================================================*/
 149:../Generated_Code/TU_QuadInt.c **** LDD_TDeviceData* TU_QuadInt_Init(LDD_TUserData *UserDataPtr)
 150:../Generated_Code/TU_QuadInt.c **** {
  41              		.loc 1 150 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 16
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45              		@ link register save eliminated.
  46 0000 80B4     		push	{r7}
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 7, -4
  49 0002 85B0     		sub	sp, sp, #20
  50              		.cfi_def_cfa_offset 24
  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 7860     		str	r0, [r7, #4]
 151:../Generated_Code/TU_QuadInt.c ****   TU_QuadInt_TDeviceData *DeviceDataPrv;
 152:../Generated_Code/TU_QuadInt.c **** 
 153:../Generated_Code/TU_QuadInt.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU_QuadInt_ID] == NULL) {
  54              		.loc 1 153 0
  55 0008 274B     		ldr	r3, .L5
  56 000a 5B6D     		ldr	r3, [r3, #84]
  57 000c 002B     		cmp	r3, #0
  58 000e 38D1     		bne	.L2
 154:../Generated_Code/TU_QuadInt.c ****     /* Allocate device structure */
 155:../Generated_Code/TU_QuadInt.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 156:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  59              		.loc 1 156 0
  60 0010 264B     		ldr	r3, .L5+4
  61 0012 FB60     		str	r3, [r7, #12]
 157:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  62              		.loc 1 157 0
  63 0014 FB68     		ldr	r3, [r7, #12]
  64 0016 7A68     		ldr	r2, [r7, #4]
  65 0018 5A60     		str	r2, [r3, #4]
 158:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  66              		.loc 1 158 0
  67 001a FB68     		ldr	r3, [r7, #12]
  68 001c 0122     		movs	r2, #1
  69 001e 1A70     		strb	r2, [r3]
 159:../Generated_Code/TU_QuadInt.c ****   }
 160:../Generated_Code/TU_QuadInt.c ****   else {
 161:../Generated_Code/TU_QuadInt.c ****     /* Memory is already allocated */
 162:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv = (TU_QuadInt_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU_QuadInt_I
 163:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 164:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 165:../Generated_Code/TU_QuadInt.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 166:../Generated_Code/TU_QuadInt.c ****   }
 167:../Generated_Code/TU_QuadInt.c ****   /* Interrupt vector(s) allocation */
 168:../Generated_Code/TU_QuadInt.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 169:../Generated_Code/TU_QuadInt.c ****   INT_PIT1__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  70              		.loc 1 169 0
  71 0020 234B     		ldr	r3, .L5+8
  72 0022 FA68     		ldr	r2, [r7, #12]
  73 0024 1A60     		str	r2, [r3]
 170:../Generated_Code/TU_QuadInt.c ****   /* SIM_SCGC6: PIT=1 */
 171:../Generated_Code/TU_QuadInt.c ****   SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
  74              		.loc 1 171 0
  75 0026 2349     		ldr	r1, .L5+12
  76 0028 224B     		ldr	r3, .L5+12
  77 002a 03F58153 		add	r3, r3, #4128
  78 002e 1C33     		adds	r3, r3, #28
  79 0030 1B68     		ldr	r3, [r3]
  80 0032 43F40002 		orr	r2, r3, #8388608
  81 0036 01F58153 		add	r3, r1, #4128
  82 003a 1C33     		adds	r3, r3, #28
  83 003c 1A60     		str	r2, [r3]
 172:../Generated_Code/TU_QuadInt.c ****   /* PIT_MCR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 173:../Generated_Code/TU_QuadInt.c ****   PIT_MCR = 0x00U;                     /* Enable device clock */
  84              		.loc 1 173 0
  85 003e 1E4B     		ldr	r3, .L5+16
  86 0040 0022     		movs	r2, #0
  87 0042 1A60     		str	r2, [r3]
 174:../Generated_Code/TU_QuadInt.c ****   /* PIT_TCTRL1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??
 175:../Generated_Code/TU_QuadInt.c ****   PIT_TCTRL1 = 0x00U;                  /* Clear control register */
  88              		.loc 1 175 0
  89 0044 1C4B     		ldr	r3, .L5+16
  90 0046 0022     		movs	r2, #0
  91 0048 C3F81821 		str	r2, [r3, #280]
 176:../Generated_Code/TU_QuadInt.c ****   /* PIT_TFLG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 177:../Generated_Code/TU_QuadInt.c ****   PIT_TFLG1 = PIT_TFLG_TIF_MASK;       /* Clear timer flag register */
  92              		.loc 1 177 0
  93 004c 1A4B     		ldr	r3, .L5+16
  94 004e 0122     		movs	r2, #1
  95 0050 C3F81C21 		str	r2, [r3, #284]
 178:../Generated_Code/TU_QuadInt.c ****   /* PIT_LDVAL1: TSV=0x000927BF */
 179:../Generated_Code/TU_QuadInt.c ****   PIT_LDVAL1 = PIT_LDVAL_TSV(0x000927BF); /* Set up load register */
  96              		.loc 1 179 0
  97 0054 184B     		ldr	r3, .L5+16
  98 0056 194A     		ldr	r2, .L5+20
  99 0058 C3F81021 		str	r2, [r3, #272]
 180:../Generated_Code/TU_QuadInt.c ****   /* NVICIP49: PRI49=0xF0 */
 181:../Generated_Code/TU_QuadInt.c ****   NVICIP49 = NVIC_IP_PRI49(0xF0);
 100              		.loc 1 181 0
 101 005c 184B     		ldr	r3, .L5+24
 102 005e F022     		movs	r2, #240
 103 0060 83F83123 		strb	r2, [r3, #817]
 182:../Generated_Code/TU_QuadInt.c ****   /* NVICISER1: SETENA|=0x00020000 */
 183:../Generated_Code/TU_QuadInt.c ****   NVICISER1 |= NVIC_ISER_SETENA(0x00020000);
 104              		.loc 1 183 0
 105 0064 164B     		ldr	r3, .L5+24
 106 0066 164A     		ldr	r2, .L5+24
 107 0068 5268     		ldr	r2, [r2, #4]
 108 006a 42F40032 		orr	r2, r2, #131072
 109 006e 5A60     		str	r2, [r3, #4]
 184:../Generated_Code/TU_QuadInt.c ****   /* PIT_TCTRL1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??
 185:../Generated_Code/TU_QuadInt.c ****   PIT_TCTRL1 = (PIT_TCTRL_TIE_MASK | PIT_TCTRL_TEN_MASK); /* Set up control register */
 110              		.loc 1 185 0
 111 0070 114B     		ldr	r3, .L5+16
 112 0072 0322     		movs	r2, #3
 113 0074 C3F81821 		str	r2, [r3, #280]
 186:../Generated_Code/TU_QuadInt.c ****   /* Registration of the device structure */
 187:../Generated_Code/TU_QuadInt.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU_QuadInt_ID,DeviceDataPrv);
 114              		.loc 1 187 0
 115 0078 0B4B     		ldr	r3, .L5
 116 007a FA68     		ldr	r2, [r7, #12]
 117 007c 5A65     		str	r2, [r3, #84]
 188:../Generated_Code/TU_QuadInt.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 118              		.loc 1 188 0
 119 007e FB68     		ldr	r3, [r7, #12]
 120 0080 0CE0     		b	.L4
 121              	.L2:
 162:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv = (TU_QuadInt_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU_QuadInt_I
 122              		.loc 1 162 0
 123 0082 094B     		ldr	r3, .L5
 124 0084 5B6D     		ldr	r3, [r3, #84]
 125 0086 FB60     		str	r3, [r7, #12]
 163:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 126              		.loc 1 163 0
 127 0088 FB68     		ldr	r3, [r7, #12]
 128 008a 7A68     		ldr	r2, [r7, #4]
 129 008c 5A60     		str	r2, [r3, #4]
 164:../Generated_Code/TU_QuadInt.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 130              		.loc 1 164 0
 131 008e FB68     		ldr	r3, [r7, #12]
 132 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133 0092 0133     		adds	r3, r3, #1
 134 0094 DAB2     		uxtb	r2, r3
 135 0096 FB68     		ldr	r3, [r7, #12]
 136 0098 1A70     		strb	r2, [r3]
 165:../Generated_Code/TU_QuadInt.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 137              		.loc 1 165 0
 138 009a FB68     		ldr	r3, [r7, #12]
 139              	.L4:
 189:../Generated_Code/TU_QuadInt.c **** }
 140              		.loc 1 189 0
 141 009c 1846     		mov	r0, r3
 142 009e 1437     		adds	r7, r7, #20
 143 00a0 BD46     		mov	sp, r7
 144              		@ sp needed
 145 00a2 5DF8047B 		ldr	r7, [sp], #4
 146 00a6 7047     		bx	lr
 147              	.L6:
 148              		.align	2
 149              	.L5:
 150 00a8 00000000 		.word	PE_LDD_DeviceDataList
 151 00ac 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 152 00b0 00000000 		.word	INT_PIT1__DEFAULT_RTOS_ISRPARAM
 153 00b4 00700440 		.word	1074032640
 154 00b8 00700340 		.word	1073967104
 155 00bc BF270900 		.word	599999
 156 00c0 00E100E0 		.word	-536813312
 157              		.cfi_endproc
 158              	.LFE0:
 160              		.section	.text.TU_QuadInt_Interrupt,"ax",%progbits
 161              		.align	2
 162              		.global	TU_QuadInt_Interrupt
 163              		.thumb
 164              		.thumb_func
 166              	TU_QuadInt_Interrupt:
 167              	.LFB1:
 190:../Generated_Code/TU_QuadInt.c **** 
 191:../Generated_Code/TU_QuadInt.c **** /*
 192:../Generated_Code/TU_QuadInt.c **** ** ===================================================================
 193:../Generated_Code/TU_QuadInt.c **** **     Method      :  TU_QuadInt_Interrupt (component TimerUnit_LDD)
 194:../Generated_Code/TU_QuadInt.c **** **
 195:../Generated_Code/TU_QuadInt.c **** **     Description :
 196:../Generated_Code/TU_QuadInt.c **** **         The method services the interrupt of the selected peripheral(s)
 197:../Generated_Code/TU_QuadInt.c **** **         and eventually invokes event(s) of the component.
 198:../Generated_Code/TU_QuadInt.c **** **         This method is internal. It is used by Processor Expert only.
 199:../Generated_Code/TU_QuadInt.c **** ** ===================================================================
 200:../Generated_Code/TU_QuadInt.c **** */
 201:../Generated_Code/TU_QuadInt.c **** PE_ISR(TU_QuadInt_Interrupt)
 202:../Generated_Code/TU_QuadInt.c **** {
 168              		.loc 1 202 0
 169              		.cfi_startproc
 170              		@ Stack Align: May be called with mis-aligned SP.
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 6846     		mov	r0, sp
 174              		.cfi_register 13, 0
 175 0002 20F00701 		bic	r1, r0, #7
 176 0006 8D46     		mov	sp, r1
 177 0008 81B5     		push	{r0, r7, lr}
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 13, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 000a 83B0     		sub	sp, sp, #12
 183              		.cfi_def_cfa_offset 24
 184 000c 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 203:../Generated_Code/TU_QuadInt.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 204:../Generated_Code/TU_QuadInt.c ****   TU_QuadInt_TDeviceDataPtr DeviceDataPrv = INT_PIT1__DEFAULT_RTOS_ISRPARAM;
 186              		.loc 1 204 0
 187 000e 0A4B     		ldr	r3, .L8
 188 0010 1B68     		ldr	r3, [r3]
 189 0012 7B60     		str	r3, [r7, #4]
 205:../Generated_Code/TU_QuadInt.c **** 
 206:../Generated_Code/TU_QuadInt.c ****   PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_1); /* Clear interrupt flag */
 190              		.loc 1 206 0
 191 0014 094B     		ldr	r3, .L8+4
 192 0016 0122     		movs	r2, #1
 193 0018 C3F81C21 		str	r2, [r3, #284]
 194 001c 074B     		ldr	r3, .L8+4
 195 001e D3F81031 		ldr	r3, [r3, #272]
 207:../Generated_Code/TU_QuadInt.c ****   TU_QuadInt_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 196              		.loc 1 207 0
 197 0022 7B68     		ldr	r3, [r7, #4]
 198 0024 5B68     		ldr	r3, [r3, #4]
 199 0026 1846     		mov	r0, r3
 200 0028 FFF7FEFF 		bl	TU_QuadInt_OnCounterRestart
 208:../Generated_Code/TU_QuadInt.c **** }
 201              		.loc 1 208 0
 202 002c 0C37     		adds	r7, r7, #12
 203 002e BD46     		mov	sp, r7
 204              		@ sp needed
 205 0030 BDE88140 		pop	{r0, r7, lr}
 206 0034 8546     		mov	sp, r0
 207 0036 7047     		bx	lr
 208              	.L9:
 209              		.align	2
 210              	.L8:
 211 0038 00000000 		.word	INT_PIT1__DEFAULT_RTOS_ISRPARAM
 212 003c 00700340 		.word	1073967104
 213              		.cfi_endproc
 214              	.LFE1:
 216              		.text
 217              	.Letext0:
 218              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 219              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 220              		.file 4 "../Generated_Code/PE_Types.h"
 221              		.file 5 "C:/INTRO_HS18/IntroAronAlex/TEAM_Robot/Static_Code/IO_Map/MK22F12.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU_QuadInt.c
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:24     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:27     .bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:30     .bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM:00000000 INT_PIT1__DEFAULT_RTOS_ISRPARAM
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:33     .text.TU_QuadInt_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:38     .text.TU_QuadInt_Init:00000000 TU_QuadInt_Init
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:150    .text.TU_QuadInt_Init:000000a8 $d
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:161    .text.TU_QuadInt_Interrupt:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:166    .text.TU_QuadInt_Interrupt:00000000 TU_QuadInt_Interrupt
C:\Users\Aron\AppData\Local\Temp\cc6Wyukk.s:211    .text.TU_QuadInt_Interrupt:00000038 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.PIT_PDD.h.121.41c7561053a77002fd646f2e4d7503df
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.TU_QuadInt.h.119.c95e3fe39b4be442ba105baa4ac336a5
                           .group:00000000 wm4.TimerIntLdd2.h.115.d2bfa8e5c6927b3e9f2311b6b5c7077a

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
TU_QuadInt_OnCounterRestart
