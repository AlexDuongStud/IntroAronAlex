   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"MOTTU.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata.ChannelDevice,"a",%progbits
  21              		.align	2
  24              	ChannelDevice:
  25 0000 00       		.byte	0
  26 0001 03       		.byte	3
  27 0002 02       		.byte	2
  28 0003 00       		.section	.rodata.ChannelMode,"a",%progbits
  29              		.align	2
  32              	ChannelMode:
  33 0000 000000   		.space	3
  34 0003 00       		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  35              		.align	2
  38              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  39 0000 00000000 		.space	12
  39      00000000 
  39      00000000 
  40              		.section	.text.MOTTU_Init,"ax",%progbits
  41              		.align	2
  42              		.global	MOTTU_Init
  43              		.thumb
  44              		.thumb_func
  46              	MOTTU_Init:
  47              	.LFB0:
  48              		.file 1 "../Generated_Code/MOTTU.c"
   1:../Generated_Code/MOTTU.c **** /* ###################################################################
   2:../Generated_Code/MOTTU.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/MOTTU.c **** **     Filename    : MOTTU.c
   4:../Generated_Code/MOTTU.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/MOTTU.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/MOTTU.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/MOTTU.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/MOTTU.c **** **     Repository  : Kinetis
   9:../Generated_Code/MOTTU.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/MOTTU.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/MOTTU.c **** **     Abstract    :
  12:../Generated_Code/MOTTU.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  13:../Generated_Code/MOTTU.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  14:../Generated_Code/MOTTU.c **** **     Settings    :
  15:../Generated_Code/MOTTU.c **** **          Component name                                 : MOTTU
  16:../Generated_Code/MOTTU.c **** **          Module name                                    : FTM0
  17:../Generated_Code/MOTTU.c **** **          Counter                                        : FTM0_CNT
  18:../Generated_Code/MOTTU.c **** **          Counter direction                              : Up
  19:../Generated_Code/MOTTU.c **** **          Counter width                                  : 16 bits
  20:../Generated_Code/MOTTU.c **** **          Value type                                     : uint16_t
  21:../Generated_Code/MOTTU.c **** **          Input clock source                             : Internal
  22:../Generated_Code/MOTTU.c **** **            Counter frequency                            : 60 MHz
  23:../Generated_Code/MOTTU.c **** **          Counter restart                                : On-match
  24:../Generated_Code/MOTTU.c **** **            Period device                                : FTM0_MOD
  25:../Generated_Code/MOTTU.c **** **            Period                                       : 20 kHz
  26:../Generated_Code/MOTTU.c **** **            Interrupt                                    : Disabled
  27:../Generated_Code/MOTTU.c **** **          Channel list                                   : 3
  28:../Generated_Code/MOTTU.c **** **            Channel 0                                    : 
  29:../Generated_Code/MOTTU.c **** **              Mode                                       : Compare
  30:../Generated_Code/MOTTU.c **** **                Compare                                  : FTM0_C0V
  31:../Generated_Code/MOTTU.c **** **                Offset                                   : 0 timer-ticks
  32:../Generated_Code/MOTTU.c **** **                Output on compare                        : Disconnect
  33:../Generated_Code/MOTTU.c **** **                Interrupt                                : Disabled
  34:../Generated_Code/MOTTU.c **** **            Channel 1                                    : 
  35:../Generated_Code/MOTTU.c **** **              Mode                                       : Compare
  36:../Generated_Code/MOTTU.c **** **                Compare                                  : FTM0_C3V
  37:../Generated_Code/MOTTU.c **** **                Offset                                   : 0 µs
  38:../Generated_Code/MOTTU.c **** **                Output on compare                        : Set
  39:../Generated_Code/MOTTU.c **** **                  Output on overrun                      : Clear
  40:../Generated_Code/MOTTU.c **** **                  Initial state                          : Low
  41:../Generated_Code/MOTTU.c **** **                  Output pin                             : PTC4/LLWU_P8/SPI0_PCS0/UART1_TX/FTM0_C
  42:../Generated_Code/MOTTU.c **** **                  Output pin signal                      : PWM_LEFT_J10_01
  43:../Generated_Code/MOTTU.c **** **                Interrupt                                : Disabled
  44:../Generated_Code/MOTTU.c **** **            Channel 2                                    : 
  45:../Generated_Code/MOTTU.c **** **              Mode                                       : Compare
  46:../Generated_Code/MOTTU.c **** **                Compare                                  : FTM0_C2V
  47:../Generated_Code/MOTTU.c **** **                Offset                                   : 0 µs
  48:../Generated_Code/MOTTU.c **** **                Output on compare                        : Set
  49:../Generated_Code/MOTTU.c **** **                  Output on overrun                      : Clear
  50:../Generated_Code/MOTTU.c **** **                  Initial state                          : Low
  51:../Generated_Code/MOTTU.c **** **                  Output pin                             : PTC5/LLWU_P9/SPI0_SCK/LPTMR0_ALT2/I2S0
  52:../Generated_Code/MOTTU.c **** **                  Output pin signal                      : PWM_RIGHT_J10_03
  53:../Generated_Code/MOTTU.c **** **                Interrupt                                : Disabled
  54:../Generated_Code/MOTTU.c **** **          Initialization                                 : 
  55:../Generated_Code/MOTTU.c **** **            Enabled in init. code                        : no
  56:../Generated_Code/MOTTU.c **** **            Auto initialization                          : no
  57:../Generated_Code/MOTTU.c **** **            Event mask                                   : 
  58:../Generated_Code/MOTTU.c **** **              OnCounterRestart                           : Disabled
  59:../Generated_Code/MOTTU.c **** **              OnChannel0                                 : Disabled
  60:../Generated_Code/MOTTU.c **** **              OnChannel1                                 : Disabled
  61:../Generated_Code/MOTTU.c **** **              OnChannel2                                 : Disabled
  62:../Generated_Code/MOTTU.c **** **              OnChannel3                                 : Disabled
  63:../Generated_Code/MOTTU.c **** **              OnChannel4                                 : Disabled
  64:../Generated_Code/MOTTU.c **** **              OnChannel5                                 : Disabled
  65:../Generated_Code/MOTTU.c **** **              OnChannel6                                 : Disabled
  66:../Generated_Code/MOTTU.c **** **              OnChannel7                                 : Disabled
  67:../Generated_Code/MOTTU.c **** **          CPU clock/configuration selection              : 
  68:../Generated_Code/MOTTU.c **** **            Clock configuration 0                        : This component enabled
  69:../Generated_Code/MOTTU.c **** **            Clock configuration 1                        : This component disabled
  70:../Generated_Code/MOTTU.c **** **            Clock configuration 2                        : This component disabled
  71:../Generated_Code/MOTTU.c **** **            Clock configuration 3                        : This component disabled
  72:../Generated_Code/MOTTU.c **** **            Clock configuration 4                        : This component disabled
  73:../Generated_Code/MOTTU.c **** **            Clock configuration 5                        : This component disabled
  74:../Generated_Code/MOTTU.c **** **            Clock configuration 6                        : This component disabled
  75:../Generated_Code/MOTTU.c **** **            Clock configuration 7                        : This component disabled
  76:../Generated_Code/MOTTU.c **** **     Contents    :
  77:../Generated_Code/MOTTU.c **** **         Init               - LDD_TDeviceData* MOTTU_Init(LDD_TUserData *UserDataPtr);
  78:../Generated_Code/MOTTU.c **** **         Deinit             - void MOTTU_Deinit(LDD_TDeviceData *DeviceDataPtr);
  79:../Generated_Code/MOTTU.c **** **         Enable             - LDD_TError MOTTU_Enable(LDD_TDeviceData *DeviceDataPtr);
  80:../Generated_Code/MOTTU.c **** **         Disable            - LDD_TError MOTTU_Disable(LDD_TDeviceData *DeviceDataPtr);
  81:../Generated_Code/MOTTU.c **** **         GetPeriodTicks     - LDD_TError MOTTU_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr,...
  82:../Generated_Code/MOTTU.c **** **         ResetCounter       - LDD_TError MOTTU_ResetCounter(LDD_TDeviceData *DeviceDataPtr);
  83:../Generated_Code/MOTTU.c **** **         GetCounterValue    - MOTTU_TValueType MOTTU_GetCounterValue(LDD_TDeviceData *DeviceDataP
  84:../Generated_Code/MOTTU.c **** **         SetOffsetTicks     - LDD_TError MOTTU_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uin
  85:../Generated_Code/MOTTU.c **** **         GetOffsetTicks     - LDD_TError MOTTU_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uin
  86:../Generated_Code/MOTTU.c **** **         SelectOutputAction - LDD_TError MOTTU_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr,
  87:../Generated_Code/MOTTU.c **** **
  88:../Generated_Code/MOTTU.c **** **     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
  89:../Generated_Code/MOTTU.c **** **     All Rights Reserved.
  90:../Generated_Code/MOTTU.c **** **     
  91:../Generated_Code/MOTTU.c **** **     Redistribution and use in source and binary forms, with or without modification,
  92:../Generated_Code/MOTTU.c **** **     are permitted provided that the following conditions are met:
  93:../Generated_Code/MOTTU.c **** **     
  94:../Generated_Code/MOTTU.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  95:../Generated_Code/MOTTU.c **** **       of conditions and the following disclaimer.
  96:../Generated_Code/MOTTU.c **** **     
  97:../Generated_Code/MOTTU.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  98:../Generated_Code/MOTTU.c **** **       list of conditions and the following disclaimer in the documentation and/or
  99:../Generated_Code/MOTTU.c **** **       other materials provided with the distribution.
 100:../Generated_Code/MOTTU.c **** **     
 101:../Generated_Code/MOTTU.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
 102:../Generated_Code/MOTTU.c **** **       contributors may be used to endorse or promote products derived from this
 103:../Generated_Code/MOTTU.c **** **       software without specific prior written permission.
 104:../Generated_Code/MOTTU.c **** **     
 105:../Generated_Code/MOTTU.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 106:../Generated_Code/MOTTU.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 107:../Generated_Code/MOTTU.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 108:../Generated_Code/MOTTU.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 109:../Generated_Code/MOTTU.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 110:../Generated_Code/MOTTU.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 111:../Generated_Code/MOTTU.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 112:../Generated_Code/MOTTU.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 113:../Generated_Code/MOTTU.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 114:../Generated_Code/MOTTU.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 115:../Generated_Code/MOTTU.c **** **     
 116:../Generated_Code/MOTTU.c **** **     http: www.freescale.com
 117:../Generated_Code/MOTTU.c **** **     mail: support@freescale.com
 118:../Generated_Code/MOTTU.c **** ** ###################################################################*/
 119:../Generated_Code/MOTTU.c **** /*!
 120:../Generated_Code/MOTTU.c **** ** @file MOTTU.c
 121:../Generated_Code/MOTTU.c **** ** @version 01.11
 122:../Generated_Code/MOTTU.c **** ** @brief
 123:../Generated_Code/MOTTU.c **** **          This TimerUnit component provides a low level API for unified hardware access across
 124:../Generated_Code/MOTTU.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
 125:../Generated_Code/MOTTU.c **** */         
 126:../Generated_Code/MOTTU.c **** /*!
 127:../Generated_Code/MOTTU.c **** **  @addtogroup MOTTU_module MOTTU module documentation
 128:../Generated_Code/MOTTU.c **** **  @{
 129:../Generated_Code/MOTTU.c **** */         
 130:../Generated_Code/MOTTU.c **** 
 131:../Generated_Code/MOTTU.c **** /* MODULE MOTTU. */
 132:../Generated_Code/MOTTU.c **** 
 133:../Generated_Code/MOTTU.c **** #include "MOTTU.h"
 134:../Generated_Code/MOTTU.c **** /* {Default RTOS Adapter} No RTOS includes */
 135:../Generated_Code/MOTTU.c **** #include "IO_Map.h"
 136:../Generated_Code/MOTTU.c **** 
 137:../Generated_Code/MOTTU.c **** #ifdef __cplusplus
 138:../Generated_Code/MOTTU.c **** extern "C" {
 139:../Generated_Code/MOTTU.c **** #endif 
 140:../Generated_Code/MOTTU.c **** 
 141:../Generated_Code/MOTTU.c **** /* List of channels used by component */
 142:../Generated_Code/MOTTU.c **** static const uint8_t ChannelDevice[MOTTU_NUMBER_OF_CHANNELS] = {0x00U,0x03U,0x02U};
 143:../Generated_Code/MOTTU.c **** 
 144:../Generated_Code/MOTTU.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
 145:../Generated_Code/MOTTU.c **** static const uint8_t ChannelMode[MOTTU_NUMBER_OF_CHANNELS] = {0x00U,0x00U,0x00U};
 146:../Generated_Code/MOTTU.c **** 
 147:../Generated_Code/MOTTU.c **** 
 148:../Generated_Code/MOTTU.c **** typedef struct {
 149:../Generated_Code/MOTTU.c ****   uint32_t Source;                     /* Current source clock */
 150:../Generated_Code/MOTTU.c ****   uint8_t InitCntr;                    /* Number of initialization */
 151:../Generated_Code/MOTTU.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 152:../Generated_Code/MOTTU.c **** } MOTTU_TDeviceData;
 153:../Generated_Code/MOTTU.c **** 
 154:../Generated_Code/MOTTU.c **** typedef MOTTU_TDeviceData *MOTTU_TDeviceDataPtr; /* Pointer to the device data structure. */
 155:../Generated_Code/MOTTU.c **** 
 156:../Generated_Code/MOTTU.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 157:../Generated_Code/MOTTU.c **** static MOTTU_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 158:../Generated_Code/MOTTU.c **** 
 159:../Generated_Code/MOTTU.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(MOTTU_CHANNEL_1_PIN | MOTTU_CHANNEL_2_PIN)
 160:../Generated_Code/MOTTU.c **** #define LAST_CHANNEL 0x02U
 161:../Generated_Code/MOTTU.c **** 
 162:../Generated_Code/MOTTU.c **** /* Internal method prototypes */
 163:../Generated_Code/MOTTU.c **** /*
 164:../Generated_Code/MOTTU.c **** ** ===================================================================
 165:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_Init (component TimerUnit_LDD)
 166:../Generated_Code/MOTTU.c **** */
 167:../Generated_Code/MOTTU.c **** /*!
 168:../Generated_Code/MOTTU.c **** **     @brief
 169:../Generated_Code/MOTTU.c **** **         Initializes the device. Allocates memory for the device data
 170:../Generated_Code/MOTTU.c **** **         structure, allocates interrupt vectors and sets interrupt
 171:../Generated_Code/MOTTU.c **** **         priority, sets pin routing, sets timing, etc. If the
 172:../Generated_Code/MOTTU.c **** **         property ["Enable in init. code"] is set to "yes" value then
 173:../Generated_Code/MOTTU.c **** **         the device is also enabled (see the description of the
 174:../Generated_Code/MOTTU.c **** **         [Enable] method). In this case the [Enable] method is not
 175:../Generated_Code/MOTTU.c **** **         necessary and needn't to be generated. This method can be
 176:../Generated_Code/MOTTU.c **** **         called only once. Before the second call of Init the [Deinit]
 177:../Generated_Code/MOTTU.c **** **         must be called first.
 178:../Generated_Code/MOTTU.c **** **     @param
 179:../Generated_Code/MOTTU.c **** **         UserDataPtr     - Pointer to the user or
 180:../Generated_Code/MOTTU.c **** **                           RTOS specific data. This pointer will be
 181:../Generated_Code/MOTTU.c **** **                           passed as an event or callback parameter.
 182:../Generated_Code/MOTTU.c **** **     @return
 183:../Generated_Code/MOTTU.c **** **                         - Pointer to the dynamically allocated private
 184:../Generated_Code/MOTTU.c **** **                           structure or NULL if there was an error.
 185:../Generated_Code/MOTTU.c **** */
 186:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 187:../Generated_Code/MOTTU.c **** LDD_TDeviceData* MOTTU_Init(LDD_TUserData *UserDataPtr)
 188:../Generated_Code/MOTTU.c **** {
  49              		.loc 1 188 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 16
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
  55              		.cfi_def_cfa_offset 4
  56              		.cfi_offset 7, -4
  57 0002 85B0     		sub	sp, sp, #20
  58              		.cfi_def_cfa_offset 24
  59 0004 00AF     		add	r7, sp, #0
  60              		.cfi_def_cfa_register 7
  61 0006 7860     		str	r0, [r7, #4]
 189:../Generated_Code/MOTTU.c ****   MOTTU_TDeviceData *DeviceDataPrv;
 190:../Generated_Code/MOTTU.c **** 
 191:../Generated_Code/MOTTU.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_MOTTU_ID] == NULL) {
  62              		.loc 1 191 0
  63 0008 404B     		ldr	r3, .L5
  64 000a 1B6C     		ldr	r3, [r3, #64]
  65 000c 002B     		cmp	r3, #0
  66 000e 69D1     		bne	.L2
 192:../Generated_Code/MOTTU.c ****     /* Allocate device structure */
 193:../Generated_Code/MOTTU.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 194:../Generated_Code/MOTTU.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  67              		.loc 1 194 0
  68 0010 3F4B     		ldr	r3, .L5+4
  69 0012 FB60     		str	r3, [r7, #12]
 195:../Generated_Code/MOTTU.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  70              		.loc 1 195 0
  71 0014 FB68     		ldr	r3, [r7, #12]
  72 0016 7A68     		ldr	r2, [r7, #4]
  73 0018 9A60     		str	r2, [r3, #8]
 196:../Generated_Code/MOTTU.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  74              		.loc 1 196 0
  75 001a FB68     		ldr	r3, [r7, #12]
  76 001c 0122     		movs	r2, #1
  77 001e 1A71     		strb	r2, [r3, #4]
 197:../Generated_Code/MOTTU.c ****   }
 198:../Generated_Code/MOTTU.c ****   else {
 199:../Generated_Code/MOTTU.c ****     /* Memory is already allocated */
 200:../Generated_Code/MOTTU.c ****     DeviceDataPrv = (MOTTU_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_MOTTU_ID];
 201:../Generated_Code/MOTTU.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 202:../Generated_Code/MOTTU.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 203:../Generated_Code/MOTTU.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 204:../Generated_Code/MOTTU.c ****   }
 205:../Generated_Code/MOTTU.c ****   /* SIM_SCGC6: FTM0=1 */
 206:../Generated_Code/MOTTU.c ****   SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
  78              		.loc 1 206 0
  79 0020 3C49     		ldr	r1, .L5+8
  80 0022 3C4B     		ldr	r3, .L5+8
  81 0024 03F58153 		add	r3, r3, #4128
  82 0028 1C33     		adds	r3, r3, #28
  83 002a 1B68     		ldr	r3, [r3]
  84 002c 43F08072 		orr	r2, r3, #16777216
  85 0030 01F58153 		add	r3, r1, #4128
  86 0034 1C33     		adds	r3, r3, #28
  87 0036 1A60     		str	r2, [r3]
 207:../Generated_Code/MOTTU.c ****   /* FTM0_MODE: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 208:../Generated_Code/MOTTU.c ****   FTM0_MODE = (FTM_MODE_FAULTM(0x00) | FTM_MODE_WPDIS_MASK); /* Set up mode register */
  88              		.loc 1 208 0
  89 0038 374B     		ldr	r3, .L5+12
  90 003a 0422     		movs	r2, #4
  91 003c 5A65     		str	r2, [r3, #84]
 209:../Generated_Code/MOTTU.c ****   /* FTM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 210:../Generated_Code/MOTTU.c ****   FTM0_SC = (FTM_SC_CLKS(0x00) | FTM_SC_PS(0x00)); /* Clear status and control register */
  92              		.loc 1 210 0
  93 003e 364B     		ldr	r3, .L5+12
  94 0040 0022     		movs	r2, #0
  95 0042 1A60     		str	r2, [r3]
 211:../Generated_Code/MOTTU.c ****   /* FTM0_CNTIN: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,IN
 212:../Generated_Code/MOTTU.c ****   FTM0_CNTIN = FTM_CNTIN_INIT(0x00);   /* Clear counter initial register */
  96              		.loc 1 212 0
  97 0044 344B     		ldr	r3, .L5+12
  98 0046 0022     		movs	r2, #0
  99 0048 DA64     		str	r2, [r3, #76]
 213:../Generated_Code/MOTTU.c ****   /* FTM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 214:../Generated_Code/MOTTU.c ****   FTM0_CNT = FTM_CNT_COUNT(0x00);      /* Reset counter register */
 100              		.loc 1 214 0
 101 004a 334B     		ldr	r3, .L5+12
 102 004c 0022     		movs	r2, #0
 103 004e 5A60     		str	r2, [r3, #4]
 215:../Generated_Code/MOTTU.c ****   /* FTM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 216:../Generated_Code/MOTTU.c ****   FTM0_C0SC = 0x00U;                   /* Clear channel status and control register */
 104              		.loc 1 216 0
 105 0050 314B     		ldr	r3, .L5+12
 106 0052 0022     		movs	r2, #0
 107 0054 DA60     		str	r2, [r3, #12]
 217:../Generated_Code/MOTTU.c ****   /* FTM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 218:../Generated_Code/MOTTU.c ****   FTM0_C1SC = 0x00U;                   /* Clear channel status and control register */
 108              		.loc 1 218 0
 109 0056 304B     		ldr	r3, .L5+12
 110 0058 0022     		movs	r2, #0
 111 005a 5A61     		str	r2, [r3, #20]
 219:../Generated_Code/MOTTU.c ****   /* FTM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 220:../Generated_Code/MOTTU.c ****   FTM0_C2SC = 0x00U;                   /* Clear channel status and control register */
 112              		.loc 1 220 0
 113 005c 2E4B     		ldr	r3, .L5+12
 114 005e 0022     		movs	r2, #0
 115 0060 DA61     		str	r2, [r3, #28]
 221:../Generated_Code/MOTTU.c ****   /* FTM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 222:../Generated_Code/MOTTU.c ****   FTM0_C3SC = 0x00U;                   /* Clear channel status and control register */
 116              		.loc 1 222 0
 117 0062 2D4B     		ldr	r3, .L5+12
 118 0064 0022     		movs	r2, #0
 119 0066 5A62     		str	r2, [r3, #36]
 223:../Generated_Code/MOTTU.c ****   /* FTM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 224:../Generated_Code/MOTTU.c ****   FTM0_C4SC = 0x00U;                   /* Clear channel status and control register */
 120              		.loc 1 224 0
 121 0068 2B4B     		ldr	r3, .L5+12
 122 006a 0022     		movs	r2, #0
 123 006c DA62     		str	r2, [r3, #44]
 225:../Generated_Code/MOTTU.c ****   /* FTM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 226:../Generated_Code/MOTTU.c ****   FTM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 124              		.loc 1 226 0
 125 006e 2A4B     		ldr	r3, .L5+12
 126 0070 0022     		movs	r2, #0
 127 0072 5A63     		str	r2, [r3, #52]
 227:../Generated_Code/MOTTU.c ****   /* FTM0_C6SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 228:../Generated_Code/MOTTU.c ****   FTM0_C6SC = 0x00U;                   /* Clear channel status and control register */
 128              		.loc 1 228 0
 129 0074 284B     		ldr	r3, .L5+12
 130 0076 0022     		movs	r2, #0
 131 0078 DA63     		str	r2, [r3, #60]
 229:../Generated_Code/MOTTU.c ****   /* FTM0_C7SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 230:../Generated_Code/MOTTU.c ****   FTM0_C7SC = 0x00U;                   /* Clear channel status and control register */
 132              		.loc 1 230 0
 133 007a 274B     		ldr	r3, .L5+12
 134 007c 0022     		movs	r2, #0
 135 007e 5A64     		str	r2, [r3, #68]
 231:../Generated_Code/MOTTU.c ****   /* FTM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 232:../Generated_Code/MOTTU.c ****   FTM0_MOD = FTM_MOD_MOD(0x0BB7);      /* Set up modulo register */
 136              		.loc 1 232 0
 137 0080 254B     		ldr	r3, .L5+12
 138 0082 40F6B732 		movw	r2, #2999
 139 0086 9A60     		str	r2, [r3, #8]
 233:../Generated_Code/MOTTU.c ****   /* FTM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 234:../Generated_Code/MOTTU.c ****   FTM0_C0SC = FTM_CnSC_MSA_MASK;       /* Set up channel status and control register */
 140              		.loc 1 234 0
 141 0088 234B     		ldr	r3, .L5+12
 142 008a 1022     		movs	r2, #16
 143 008c DA60     		str	r2, [r3, #12]
 235:../Generated_Code/MOTTU.c ****   /* FTM0_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 236:../Generated_Code/MOTTU.c ****   FTM0_C0V = FTM_CnV_VAL(0x00);        /* Set up channel value register */
 144              		.loc 1 236 0
 145 008e 224B     		ldr	r3, .L5+12
 146 0090 0022     		movs	r2, #0
 147 0092 1A61     		str	r2, [r3, #16]
 237:../Generated_Code/MOTTU.c ****   /* FTM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 238:../Generated_Code/MOTTU.c ****   FTM0_C3SC = (FTM_CnSC_MSB_MASK | FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_MASK); /* Set up channel stat
 148              		.loc 1 238 0
 149 0094 204B     		ldr	r3, .L5+12
 150 0096 2C22     		movs	r2, #44
 151 0098 5A62     		str	r2, [r3, #36]
 239:../Generated_Code/MOTTU.c ****   /* FTM0_C3V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 240:../Generated_Code/MOTTU.c ****   FTM0_C3V = FTM_CnV_VAL(0x00);        /* Set up channel value register */
 152              		.loc 1 240 0
 153 009a 1F4B     		ldr	r3, .L5+12
 154 009c 0022     		movs	r2, #0
 155 009e 9A62     		str	r2, [r3, #40]
 241:../Generated_Code/MOTTU.c ****   /* FTM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 242:../Generated_Code/MOTTU.c ****   FTM0_C2SC = (FTM_CnSC_MSB_MASK | FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_MASK); /* Set up channel stat
 156              		.loc 1 242 0
 157 00a0 1D4B     		ldr	r3, .L5+12
 158 00a2 2C22     		movs	r2, #44
 159 00a4 DA61     		str	r2, [r3, #28]
 243:../Generated_Code/MOTTU.c ****   /* FTM0_C2V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 244:../Generated_Code/MOTTU.c ****   FTM0_C2V = FTM_CnV_VAL(0x00);        /* Set up channel value register */
 160              		.loc 1 244 0
 161 00a6 1C4B     		ldr	r3, .L5+12
 162 00a8 0022     		movs	r2, #0
 163 00aa 1A62     		str	r2, [r3, #32]
 245:../Generated_Code/MOTTU.c ****   /* PORTC_PCR4: ISF=0,MUX=4 */
 246:../Generated_Code/MOTTU.c ****   PORTC_PCR4 = (uint32_t)((PORTC_PCR4 & (uint32_t)~(uint32_t)(
 164              		.loc 1 246 0
 165 00ac 1B4A     		ldr	r2, .L5+16
 166 00ae 1B4B     		ldr	r3, .L5+16
 167 00b0 1B69     		ldr	r3, [r3, #16]
 168 00b2 23F08073 		bic	r3, r3, #16777216
 169 00b6 23F4E063 		bic	r3, r3, #1792
 170 00ba 43F48063 		orr	r3, r3, #1024
 171 00be 1361     		str	r3, [r2, #16]
 247:../Generated_Code/MOTTU.c ****                 PORT_PCR_ISF_MASK |
 248:../Generated_Code/MOTTU.c ****                 PORT_PCR_MUX(0x03)
 249:../Generated_Code/MOTTU.c ****                )) | (uint32_t)(
 250:../Generated_Code/MOTTU.c ****                 PORT_PCR_MUX(0x04)
 251:../Generated_Code/MOTTU.c ****                ));
 252:../Generated_Code/MOTTU.c ****   /* PORTC_PCR5: ISF=0,MUX=7 */
 253:../Generated_Code/MOTTU.c ****   PORTC_PCR5 = (uint32_t)((PORTC_PCR5 & (uint32_t)~(uint32_t)(
 172              		.loc 1 253 0
 173 00c0 164A     		ldr	r2, .L5+16
 174 00c2 164B     		ldr	r3, .L5+16
 175 00c4 5B69     		ldr	r3, [r3, #20]
 176 00c6 23F08073 		bic	r3, r3, #16777216
 177 00ca 23F4E063 		bic	r3, r3, #1792
 178 00ce 43F4E063 		orr	r3, r3, #1792
 179 00d2 5361     		str	r3, [r2, #20]
 254:../Generated_Code/MOTTU.c ****                 PORT_PCR_ISF_MASK
 255:../Generated_Code/MOTTU.c ****                )) | (uint32_t)(
 256:../Generated_Code/MOTTU.c ****                 PORT_PCR_MUX(0x07)
 257:../Generated_Code/MOTTU.c ****                ));
 258:../Generated_Code/MOTTU.c ****   DeviceDataPrv->Source = FTM_PDD_SYSTEM; /* Store clock source */
 180              		.loc 1 258 0
 181 00d4 FB68     		ldr	r3, [r7, #12]
 182 00d6 0822     		movs	r2, #8
 183 00d8 1A60     		str	r2, [r3]
 259:../Generated_Code/MOTTU.c ****   /* Registration of the device structure */
 260:../Generated_Code/MOTTU.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_MOTTU_ID,DeviceDataPrv);
 184              		.loc 1 260 0
 185 00da 0C4B     		ldr	r3, .L5
 186 00dc FA68     		ldr	r2, [r7, #12]
 187 00de 1A64     		str	r2, [r3, #64]
 261:../Generated_Code/MOTTU.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 188              		.loc 1 261 0
 189 00e0 FB68     		ldr	r3, [r7, #12]
 190 00e2 0CE0     		b	.L4
 191              	.L2:
 200:../Generated_Code/MOTTU.c ****     DeviceDataPrv = (MOTTU_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_MOTTU_ID];
 192              		.loc 1 200 0
 193 00e4 094B     		ldr	r3, .L5
 194 00e6 1B6C     		ldr	r3, [r3, #64]
 195 00e8 FB60     		str	r3, [r7, #12]
 201:../Generated_Code/MOTTU.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 196              		.loc 1 201 0
 197 00ea FB68     		ldr	r3, [r7, #12]
 198 00ec 7A68     		ldr	r2, [r7, #4]
 199 00ee 9A60     		str	r2, [r3, #8]
 202:../Generated_Code/MOTTU.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 200              		.loc 1 202 0
 201 00f0 FB68     		ldr	r3, [r7, #12]
 202 00f2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 203 00f4 0133     		adds	r3, r3, #1
 204 00f6 DAB2     		uxtb	r2, r3
 205 00f8 FB68     		ldr	r3, [r7, #12]
 206 00fa 1A71     		strb	r2, [r3, #4]
 203:../Generated_Code/MOTTU.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 207              		.loc 1 203 0
 208 00fc FB68     		ldr	r3, [r7, #12]
 209              	.L4:
 262:../Generated_Code/MOTTU.c **** }
 210              		.loc 1 262 0
 211 00fe 1846     		mov	r0, r3
 212 0100 1437     		adds	r7, r7, #20
 213 0102 BD46     		mov	sp, r7
 214              		@ sp needed
 215 0104 5DF8047B 		ldr	r7, [sp], #4
 216 0108 7047     		bx	lr
 217              	.L6:
 218 010a 00BF     		.align	2
 219              	.L5:
 220 010c 00000000 		.word	PE_LDD_DeviceDataList
 221 0110 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 222 0114 00700440 		.word	1074032640
 223 0118 00800340 		.word	1073971200
 224 011c 00B00440 		.word	1074049024
 225              		.cfi_endproc
 226              	.LFE0:
 228              		.section	.text.MOTTU_Deinit,"ax",%progbits
 229              		.align	2
 230              		.global	MOTTU_Deinit
 231              		.thumb
 232              		.thumb_func
 234              	MOTTU_Deinit:
 235              	.LFB1:
 263:../Generated_Code/MOTTU.c **** 
 264:../Generated_Code/MOTTU.c **** /*
 265:../Generated_Code/MOTTU.c **** ** ===================================================================
 266:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_Deinit (component TimerUnit_LDD)
 267:../Generated_Code/MOTTU.c **** */
 268:../Generated_Code/MOTTU.c **** /*!
 269:../Generated_Code/MOTTU.c **** **     @brief
 270:../Generated_Code/MOTTU.c **** **         Deinitializes the device. Switches off the device, frees the
 271:../Generated_Code/MOTTU.c **** **         device data structure memory, interrupts vectors, etc.
 272:../Generated_Code/MOTTU.c **** **     @param
 273:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 274:../Generated_Code/MOTTU.c **** **                           pointer returned by Init method
 275:../Generated_Code/MOTTU.c **** */
 276:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 277:../Generated_Code/MOTTU.c **** void MOTTU_Deinit(LDD_TDeviceData *DeviceDataPtr)
 278:../Generated_Code/MOTTU.c **** {
 236              		.loc 1 278 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 16
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              		.cfi_def_cfa_offset 24
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 279:../Generated_Code/MOTTU.c ****   MOTTU_TDeviceData *DeviceDataPrv = (MOTTU_TDeviceData *)DeviceDataPtr;
 249              		.loc 1 279 0
 250 0008 7B68     		ldr	r3, [r7, #4]
 251 000a FB60     		str	r3, [r7, #12]
 280:../Generated_Code/MOTTU.c **** 
 281:../Generated_Code/MOTTU.c ****   DeviceDataPrv->InitCntr--;           /* Decrement counter of initialization */
 252              		.loc 1 281 0
 253 000c FB68     		ldr	r3, [r7, #12]
 254 000e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 255 0010 013B     		subs	r3, r3, #1
 256 0012 DAB2     		uxtb	r2, r3
 257 0014 FB68     		ldr	r3, [r7, #12]
 258 0016 1A71     		strb	r2, [r3, #4]
 282:../Generated_Code/MOTTU.c ****   if ((DeviceDataPrv->InitCntr) > 0U) { /* Is the result greater or equal than zero ? */
 259              		.loc 1 282 0
 260 0018 FB68     		ldr	r3, [r7, #12]
 261 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 262 001c 002B     		cmp	r3, #0
 263 001e 00D0     		beq	.L8
 283:../Generated_Code/MOTTU.c ****     return;                            /* If yes then de-initialization isn't complete */
 264              		.loc 1 283 0
 265 0020 08E0     		b	.L7
 266              	.L8:
 284:../Generated_Code/MOTTU.c ****   }
 285:../Generated_Code/MOTTU.c ****   FTM_PDD_SelectPrescalerSource(FTM0_BASE_PTR, FTM_PDD_DISABLED);
 267              		.loc 1 285 0
 268 0022 074B     		ldr	r3, .L10
 269 0024 064A     		ldr	r2, .L10
 270 0026 1268     		ldr	r2, [r2]
 271 0028 22F09802 		bic	r2, r2, #152
 272 002c 1A60     		str	r2, [r3]
 286:../Generated_Code/MOTTU.c ****   /* Unregistration of the device structure */
 287:../Generated_Code/MOTTU.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_MOTTU_ID);
 273              		.loc 1 287 0
 274 002e 054B     		ldr	r3, .L10+4
 275 0030 0022     		movs	r2, #0
 276 0032 1A64     		str	r2, [r3, #64]
 277              	.L7:
 288:../Generated_Code/MOTTU.c ****   /* Deallocation of the device structure */
 289:../Generated_Code/MOTTU.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 290:../Generated_Code/MOTTU.c **** }
 278              		.loc 1 290 0
 279 0034 1437     		adds	r7, r7, #20
 280 0036 BD46     		mov	sp, r7
 281              		@ sp needed
 282 0038 5DF8047B 		ldr	r7, [sp], #4
 283 003c 7047     		bx	lr
 284              	.L11:
 285 003e 00BF     		.align	2
 286              	.L10:
 287 0040 00800340 		.word	1073971200
 288 0044 00000000 		.word	PE_LDD_DeviceDataList
 289              		.cfi_endproc
 290              	.LFE1:
 292              		.section	.text.MOTTU_Enable,"ax",%progbits
 293              		.align	2
 294              		.global	MOTTU_Enable
 295              		.thumb
 296              		.thumb_func
 298              	MOTTU_Enable:
 299              	.LFB2:
 291:../Generated_Code/MOTTU.c **** 
 292:../Generated_Code/MOTTU.c **** /*
 293:../Generated_Code/MOTTU.c **** ** ===================================================================
 294:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_Enable (component TimerUnit_LDD)
 295:../Generated_Code/MOTTU.c **** */
 296:../Generated_Code/MOTTU.c **** /*!
 297:../Generated_Code/MOTTU.c **** **     @brief
 298:../Generated_Code/MOTTU.c **** **         Enables the component - it starts the signal generation.
 299:../Generated_Code/MOTTU.c **** **         Events may be generated (see SetEventMask). The method is
 300:../Generated_Code/MOTTU.c **** **         not available if the counter can't be disabled/enabled by HW.
 301:../Generated_Code/MOTTU.c **** **     @param
 302:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 303:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 304:../Generated_Code/MOTTU.c **** **     @return
 305:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 306:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK
 307:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 308:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 309:../Generated_Code/MOTTU.c **** */
 310:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 311:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_Enable(LDD_TDeviceData *DeviceDataPtr)
 312:../Generated_Code/MOTTU.c **** {
 300              		.loc 1 312 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305 0000 80B4     		push	{r7}
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 85B0     		sub	sp, sp, #20
 309              		.cfi_def_cfa_offset 24
 310 0004 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 312 0006 7860     		str	r0, [r7, #4]
 313:../Generated_Code/MOTTU.c ****   MOTTU_TDeviceData *DeviceDataPrv = (MOTTU_TDeviceData *)DeviceDataPtr;
 313              		.loc 1 313 0
 314 0008 7B68     		ldr	r3, [r7, #4]
 315 000a FB60     		str	r3, [r7, #12]
 314:../Generated_Code/MOTTU.c **** 
 315:../Generated_Code/MOTTU.c ****   FTM_PDD_SelectPrescalerSource(FTM0_BASE_PTR, DeviceDataPrv->Source); /* Enable the device */
 316              		.loc 1 315 0
 317 000c 074B     		ldr	r3, .L14
 318 000e 074A     		ldr	r2, .L14
 319 0010 1268     		ldr	r2, [r2]
 320 0012 22F09801 		bic	r1, r2, #152
 321 0016 FA68     		ldr	r2, [r7, #12]
 322 0018 1268     		ldr	r2, [r2]
 323 001a 0A43     		orrs	r2, r2, r1
 324 001c 1A60     		str	r2, [r3]
 316:../Generated_Code/MOTTU.c ****   return ERR_OK;
 325              		.loc 1 316 0
 326 001e 0023     		movs	r3, #0
 317:../Generated_Code/MOTTU.c **** }
 327              		.loc 1 317 0
 328 0020 1846     		mov	r0, r3
 329 0022 1437     		adds	r7, r7, #20
 330 0024 BD46     		mov	sp, r7
 331              		@ sp needed
 332 0026 5DF8047B 		ldr	r7, [sp], #4
 333 002a 7047     		bx	lr
 334              	.L15:
 335              		.align	2
 336              	.L14:
 337 002c 00800340 		.word	1073971200
 338              		.cfi_endproc
 339              	.LFE2:
 341              		.section	.text.MOTTU_Disable,"ax",%progbits
 342              		.align	2
 343              		.global	MOTTU_Disable
 344              		.thumb
 345              		.thumb_func
 347              	MOTTU_Disable:
 348              	.LFB3:
 318:../Generated_Code/MOTTU.c **** 
 319:../Generated_Code/MOTTU.c **** /*
 320:../Generated_Code/MOTTU.c **** ** ===================================================================
 321:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_Disable (component TimerUnit_LDD)
 322:../Generated_Code/MOTTU.c **** */
 323:../Generated_Code/MOTTU.c **** /*!
 324:../Generated_Code/MOTTU.c **** **     @brief
 325:../Generated_Code/MOTTU.c **** **         Disables the component - it stops signal generation and
 326:../Generated_Code/MOTTU.c **** **         events calling. The method is not available if the counter
 327:../Generated_Code/MOTTU.c **** **         can't be disabled/enabled by HW.
 328:../Generated_Code/MOTTU.c **** **     @param
 329:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 330:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 331:../Generated_Code/MOTTU.c **** **     @return
 332:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 333:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK
 334:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 335:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 336:../Generated_Code/MOTTU.c **** */
 337:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 338:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_Disable(LDD_TDeviceData *DeviceDataPtr)
 339:../Generated_Code/MOTTU.c **** {
 349              		.loc 1 339 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 7, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              		.cfi_def_cfa_offset 16
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 340:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 341:../Generated_Code/MOTTU.c ****   FTM_PDD_SelectPrescalerSource(FTM0_BASE_PTR, FTM_PDD_DISABLED);
 362              		.loc 1 341 0
 363 0008 064B     		ldr	r3, .L18
 364 000a 064A     		ldr	r2, .L18
 365 000c 1268     		ldr	r2, [r2]
 366 000e 22F09802 		bic	r2, r2, #152
 367 0012 1A60     		str	r2, [r3]
 342:../Generated_Code/MOTTU.c ****   return ERR_OK;
 368              		.loc 1 342 0
 369 0014 0023     		movs	r3, #0
 343:../Generated_Code/MOTTU.c **** }
 370              		.loc 1 343 0
 371 0016 1846     		mov	r0, r3
 372 0018 0C37     		adds	r7, r7, #12
 373 001a BD46     		mov	sp, r7
 374              		@ sp needed
 375 001c 5DF8047B 		ldr	r7, [sp], #4
 376 0020 7047     		bx	lr
 377              	.L19:
 378 0022 00BF     		.align	2
 379              	.L18:
 380 0024 00800340 		.word	1073971200
 381              		.cfi_endproc
 382              	.LFE3:
 384              		.section	.text.MOTTU_GetPeriodTicks,"ax",%progbits
 385              		.align	2
 386              		.global	MOTTU_GetPeriodTicks
 387              		.thumb
 388              		.thumb_func
 390              	MOTTU_GetPeriodTicks:
 391              	.LFB4:
 344:../Generated_Code/MOTTU.c **** 
 345:../Generated_Code/MOTTU.c **** /*
 346:../Generated_Code/MOTTU.c **** ** ===================================================================
 347:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_GetPeriodTicks (component TimerUnit_LDD)
 348:../Generated_Code/MOTTU.c **** */
 349:../Generated_Code/MOTTU.c **** /*!
 350:../Generated_Code/MOTTU.c **** **     @brief
 351:../Generated_Code/MOTTU.c **** **         Returns the number of counter ticks before re-initialization.
 352:../Generated_Code/MOTTU.c **** **         See also method [SetPeriodTicks]. This method is available
 353:../Generated_Code/MOTTU.c **** **         only if the property ["Counter restart"] is switched to
 354:../Generated_Code/MOTTU.c **** **         'on-match' value.
 355:../Generated_Code/MOTTU.c **** **     @param
 356:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 357:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 358:../Generated_Code/MOTTU.c **** **     @param
 359:../Generated_Code/MOTTU.c **** **         TicksPtr        - Pointer to return value of the
 360:../Generated_Code/MOTTU.c **** **                           number of counter ticks before
 361:../Generated_Code/MOTTU.c **** **                           re-initialization
 362:../Generated_Code/MOTTU.c **** **     @return
 363:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 364:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK 
 365:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 366:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 367:../Generated_Code/MOTTU.c **** */
 368:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 369:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, MOTTU_TValueType *TicksPtr)
 370:../Generated_Code/MOTTU.c **** {
 392              		.loc 1 370 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 16
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 85B0     		sub	sp, sp, #20
 401              		.cfi_def_cfa_offset 24
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 404 0006 7860     		str	r0, [r7, #4]
 405 0008 3960     		str	r1, [r7]
 371:../Generated_Code/MOTTU.c ****   uint16_t tmp;
 372:../Generated_Code/MOTTU.c **** 
 373:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 374:../Generated_Code/MOTTU.c ****   tmp = (uint16_t)(FTM_PDD_ReadModuloReg(FTM0_BASE_PTR));
 406              		.loc 1 374 0
 407 000a 084B     		ldr	r3, .L22
 408 000c 9B68     		ldr	r3, [r3, #8]
 409 000e FB81     		strh	r3, [r7, #14]	@ movhi
 375:../Generated_Code/MOTTU.c ****   *TicksPtr = (MOTTU_TValueType)++tmp;
 410              		.loc 1 375 0
 411 0010 FB89     		ldrh	r3, [r7, #14]	@ movhi
 412 0012 0133     		adds	r3, r3, #1
 413 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 414 0016 3B68     		ldr	r3, [r7]
 415 0018 FA89     		ldrh	r2, [r7, #14]	@ movhi
 416 001a 1A80     		strh	r2, [r3]	@ movhi
 376:../Generated_Code/MOTTU.c ****   return ERR_OK;                       /* OK */
 417              		.loc 1 376 0
 418 001c 0023     		movs	r3, #0
 377:../Generated_Code/MOTTU.c **** }
 419              		.loc 1 377 0
 420 001e 1846     		mov	r0, r3
 421 0020 1437     		adds	r7, r7, #20
 422 0022 BD46     		mov	sp, r7
 423              		@ sp needed
 424 0024 5DF8047B 		ldr	r7, [sp], #4
 425 0028 7047     		bx	lr
 426              	.L23:
 427 002a 00BF     		.align	2
 428              	.L22:
 429 002c 00800340 		.word	1073971200
 430              		.cfi_endproc
 431              	.LFE4:
 433              		.section	.text.MOTTU_ResetCounter,"ax",%progbits
 434              		.align	2
 435              		.global	MOTTU_ResetCounter
 436              		.thumb
 437              		.thumb_func
 439              	MOTTU_ResetCounter:
 440              	.LFB5:
 378:../Generated_Code/MOTTU.c **** 
 379:../Generated_Code/MOTTU.c **** /*
 380:../Generated_Code/MOTTU.c **** ** ===================================================================
 381:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_ResetCounter (component TimerUnit_LDD)
 382:../Generated_Code/MOTTU.c **** */
 383:../Generated_Code/MOTTU.c **** /*!
 384:../Generated_Code/MOTTU.c **** **     @brief
 385:../Generated_Code/MOTTU.c **** **         Resets counter. If counter is counting up then it is set to
 386:../Generated_Code/MOTTU.c **** **         zero. If counter is counting down then counter is updated to
 387:../Generated_Code/MOTTU.c **** **         the reload value.
 388:../Generated_Code/MOTTU.c **** **         The method is not available if HW doesn't allow resetting of
 389:../Generated_Code/MOTTU.c **** **         the counter.
 390:../Generated_Code/MOTTU.c **** **     @param
 391:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 392:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 393:../Generated_Code/MOTTU.c **** **     @return
 394:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 395:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK 
 396:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 397:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 398:../Generated_Code/MOTTU.c **** */
 399:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 400:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
 401:../Generated_Code/MOTTU.c **** {
 441              		.loc 1 401 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 402:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 403:../Generated_Code/MOTTU.c ****   FTM_PDD_InitializeCounter(FTM0_BASE_PTR);
 454              		.loc 1 403 0
 455 0008 044B     		ldr	r3, .L26
 456 000a 0022     		movs	r2, #0
 457 000c 5A60     		str	r2, [r3, #4]
 404:../Generated_Code/MOTTU.c ****   return ERR_OK;                       /* OK */
 458              		.loc 1 404 0
 459 000e 0023     		movs	r3, #0
 405:../Generated_Code/MOTTU.c **** }
 460              		.loc 1 405 0
 461 0010 1846     		mov	r0, r3
 462 0012 0C37     		adds	r7, r7, #12
 463 0014 BD46     		mov	sp, r7
 464              		@ sp needed
 465 0016 5DF8047B 		ldr	r7, [sp], #4
 466 001a 7047     		bx	lr
 467              	.L27:
 468              		.align	2
 469              	.L26:
 470 001c 00800340 		.word	1073971200
 471              		.cfi_endproc
 472              	.LFE5:
 474              		.section	.text.MOTTU_GetCounterValue,"ax",%progbits
 475              		.align	2
 476              		.global	MOTTU_GetCounterValue
 477              		.thumb
 478              		.thumb_func
 480              	MOTTU_GetCounterValue:
 481              	.LFB6:
 406:../Generated_Code/MOTTU.c **** 
 407:../Generated_Code/MOTTU.c **** /*
 408:../Generated_Code/MOTTU.c **** ** ===================================================================
 409:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_GetCounterValue (component TimerUnit_LDD)
 410:../Generated_Code/MOTTU.c **** */
 411:../Generated_Code/MOTTU.c **** /*!
 412:../Generated_Code/MOTTU.c **** **     @brief
 413:../Generated_Code/MOTTU.c **** **         Returns the content of counter register. This method can be
 414:../Generated_Code/MOTTU.c **** **         used both if counter is enabled and if counter is disabled.
 415:../Generated_Code/MOTTU.c **** **         The method is not available if HW doesn't allow reading of
 416:../Generated_Code/MOTTU.c **** **         the counter.
 417:../Generated_Code/MOTTU.c **** **     @param
 418:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 419:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 420:../Generated_Code/MOTTU.c **** **     @return
 421:../Generated_Code/MOTTU.c **** **                         - Counter value (number of counted ticks).
 422:../Generated_Code/MOTTU.c **** */
 423:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 424:../Generated_Code/MOTTU.c **** MOTTU_TValueType MOTTU_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 425:../Generated_Code/MOTTU.c **** {
 482              		.loc 1 425 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
 426:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 427:../Generated_Code/MOTTU.c ****   return (MOTTU_TValueType)FTM_PDD_ReadCounterReg(FTM0_BASE_PTR);
 495              		.loc 1 427 0
 496 0008 044B     		ldr	r3, .L30
 497 000a 5B68     		ldr	r3, [r3, #4]
 498 000c 9BB2     		uxth	r3, r3
 428:../Generated_Code/MOTTU.c **** }
 499              		.loc 1 428 0
 500 000e 1846     		mov	r0, r3
 501 0010 0C37     		adds	r7, r7, #12
 502 0012 BD46     		mov	sp, r7
 503              		@ sp needed
 504 0014 5DF8047B 		ldr	r7, [sp], #4
 505 0018 7047     		bx	lr
 506              	.L31:
 507 001a 00BF     		.align	2
 508              	.L30:
 509 001c 00800340 		.word	1073971200
 510              		.cfi_endproc
 511              	.LFE6:
 513              		.section	.text.MOTTU_SetOffsetTicks,"ax",%progbits
 514              		.align	2
 515              		.global	MOTTU_SetOffsetTicks
 516              		.thumb
 517              		.thumb_func
 519              	MOTTU_SetOffsetTicks:
 520              	.LFB7:
 429:../Generated_Code/MOTTU.c **** 
 430:../Generated_Code/MOTTU.c **** /*
 431:../Generated_Code/MOTTU.c **** ** ===================================================================
 432:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_SetOffsetTicks (component TimerUnit_LDD)
 433:../Generated_Code/MOTTU.c **** */
 434:../Generated_Code/MOTTU.c **** /*!
 435:../Generated_Code/MOTTU.c **** **     @brief
 436:../Generated_Code/MOTTU.c **** **         Sets the new offset value to channel specified by the
 437:../Generated_Code/MOTTU.c **** **         parameter ChannelIdx. It is user responsibility to use value
 438:../Generated_Code/MOTTU.c **** **         below selected period. This method is available when at
 439:../Generated_Code/MOTTU.c **** **         least one channel is configured.
 440:../Generated_Code/MOTTU.c **** **     @param
 441:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 442:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 443:../Generated_Code/MOTTU.c **** **     @param
 444:../Generated_Code/MOTTU.c **** **         ChannelIdx      - Index of the component
 445:../Generated_Code/MOTTU.c **** **                           channel.
 446:../Generated_Code/MOTTU.c **** **     @param
 447:../Generated_Code/MOTTU.c **** **         Ticks           - Number of counter ticks to compare
 448:../Generated_Code/MOTTU.c **** **                           match.
 449:../Generated_Code/MOTTU.c **** **     @return
 450:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 451:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK 
 452:../Generated_Code/MOTTU.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 453:../Generated_Code/MOTTU.c **** **                           out of possible range.
 454:../Generated_Code/MOTTU.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 455:../Generated_Code/MOTTU.c **** **                           selected for selected channel
 456:../Generated_Code/MOTTU.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 457:../Generated_Code/MOTTU.c **** **                           possible range.
 458:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 459:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 460:../Generated_Code/MOTTU.c **** */
 461:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 462:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, MOTTU_TValueTyp
 463:../Generated_Code/MOTTU.c **** {
 521              		.loc 1 463 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              		.cfi_def_cfa_offset 4
 528              		.cfi_offset 7, -4
 529 0002 83B0     		sub	sp, sp, #12
 530              		.cfi_def_cfa_offset 16
 531 0004 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
 533 0006 7860     		str	r0, [r7, #4]
 534 0008 1346     		mov	r3, r2
 535 000a 0A46     		mov	r2, r1
 536 000c FA70     		strb	r2, [r7, #3]
 537 000e 3B80     		strh	r3, [r7]	@ movhi
 464:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 465:../Generated_Code/MOTTU.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 466:../Generated_Code/MOTTU.c ****      property to the "yes" value in the "Configuration inspector" */
 467:../Generated_Code/MOTTU.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 538              		.loc 1 467 0
 539 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 540 0012 022B     		cmp	r3, #2
 541 0014 01D9     		bls	.L33
 468:../Generated_Code/MOTTU.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 542              		.loc 1 468 0
 543 0016 8223     		movs	r3, #130
 544 0018 10E0     		b	.L34
 545              	.L33:
 469:../Generated_Code/MOTTU.c ****   }
 470:../Generated_Code/MOTTU.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 546              		.loc 1 470 0
 547 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 548 001c 0A4A     		ldr	r2, .L36
 549 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 550 0020 002B     		cmp	r3, #0
 551 0022 01D0     		beq	.L35
 471:../Generated_Code/MOTTU.c ****     return ERR_NOTAVAIL;               /* If not then error */
 552              		.loc 1 471 0
 553 0024 0923     		movs	r3, #9
 554 0026 09E0     		b	.L34
 555              	.L35:
 472:../Generated_Code/MOTTU.c ****   }
 473:../Generated_Code/MOTTU.c ****   FTM_PDD_WriteChannelValueReg(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 556              		.loc 1 473 0
 557 0028 0849     		ldr	r1, .L36+4
 558 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 559 002c 084A     		ldr	r2, .L36+8
 560 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 561 0030 3A88     		ldrh	r2, [r7]
 562 0032 0133     		adds	r3, r3, #1
 563 0034 DB00     		lsls	r3, r3, #3
 564 0036 0B44     		add	r3, r3, r1
 565 0038 9A60     		str	r2, [r3, #8]
 474:../Generated_Code/MOTTU.c ****   return ERR_OK;                       /* OK */
 566              		.loc 1 474 0
 567 003a 0023     		movs	r3, #0
 568              	.L34:
 475:../Generated_Code/MOTTU.c **** }
 569              		.loc 1 475 0
 570 003c 1846     		mov	r0, r3
 571 003e 0C37     		adds	r7, r7, #12
 572 0040 BD46     		mov	sp, r7
 573              		@ sp needed
 574 0042 5DF8047B 		ldr	r7, [sp], #4
 575 0046 7047     		bx	lr
 576              	.L37:
 577              		.align	2
 578              	.L36:
 579 0048 00000000 		.word	ChannelMode
 580 004c 00800340 		.word	1073971200
 581 0050 00000000 		.word	ChannelDevice
 582              		.cfi_endproc
 583              	.LFE7:
 585              		.section	.text.MOTTU_GetOffsetTicks,"ax",%progbits
 586              		.align	2
 587              		.global	MOTTU_GetOffsetTicks
 588              		.thumb
 589              		.thumb_func
 591              	MOTTU_GetOffsetTicks:
 592              	.LFB8:
 476:../Generated_Code/MOTTU.c **** 
 477:../Generated_Code/MOTTU.c **** /*
 478:../Generated_Code/MOTTU.c **** ** ===================================================================
 479:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_GetOffsetTicks (component TimerUnit_LDD)
 480:../Generated_Code/MOTTU.c **** */
 481:../Generated_Code/MOTTU.c **** /*!
 482:../Generated_Code/MOTTU.c **** **     @brief
 483:../Generated_Code/MOTTU.c **** **         Returns the number of counter ticks to compare match channel
 484:../Generated_Code/MOTTU.c **** **         specified by the parameter ChannelIdx. See also method
 485:../Generated_Code/MOTTU.c **** **         [SetOffsetTicks]. This method is available when at least one
 486:../Generated_Code/MOTTU.c **** **         channel is configured.
 487:../Generated_Code/MOTTU.c **** **     @param
 488:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 489:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 490:../Generated_Code/MOTTU.c **** **     @param
 491:../Generated_Code/MOTTU.c **** **         ChannelIdx      - Index of the component
 492:../Generated_Code/MOTTU.c **** **                           channel.
 493:../Generated_Code/MOTTU.c **** **     @param
 494:../Generated_Code/MOTTU.c **** **         TicksPtr        - Pointer to return value of the
 495:../Generated_Code/MOTTU.c **** **                           number of counter ticks to compare match.
 496:../Generated_Code/MOTTU.c **** **     @return
 497:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 498:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK 
 499:../Generated_Code/MOTTU.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 500:../Generated_Code/MOTTU.c **** **                           out of possible range.
 501:../Generated_Code/MOTTU.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 502:../Generated_Code/MOTTU.c **** **                           selected for selected channel.
 503:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 504:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 505:../Generated_Code/MOTTU.c **** */
 506:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 507:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, MOTTU_TValueTyp
 508:../Generated_Code/MOTTU.c **** {
 593              		.loc 1 508 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 16
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598 0000 80B4     		push	{r7}
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 7, -4
 601 0002 85B0     		sub	sp, sp, #20
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 F860     		str	r0, [r7, #12]
 606 0008 0B46     		mov	r3, r1
 607 000a 7A60     		str	r2, [r7, #4]
 608 000c FB72     		strb	r3, [r7, #11]
 509:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 510:../Generated_Code/MOTTU.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 511:../Generated_Code/MOTTU.c ****      property to the "yes" value in the "Configuration inspector" */
 512:../Generated_Code/MOTTU.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 609              		.loc 1 512 0
 610 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 611 0010 022B     		cmp	r3, #2
 612 0012 01D9     		bls	.L39
 513:../Generated_Code/MOTTU.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 613              		.loc 1 513 0
 614 0014 8223     		movs	r3, #130
 615 0016 12E0     		b	.L40
 616              	.L39:
 514:../Generated_Code/MOTTU.c ****   }
 515:../Generated_Code/MOTTU.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 617              		.loc 1 515 0
 618 0018 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 619 001a 0C4A     		ldr	r2, .L42
 620 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 621 001e 002B     		cmp	r3, #0
 622 0020 01D0     		beq	.L41
 516:../Generated_Code/MOTTU.c ****     return ERR_NOTAVAIL;               /* If not then error */
 623              		.loc 1 516 0
 624 0022 0923     		movs	r3, #9
 625 0024 0BE0     		b	.L40
 626              	.L41:
 517:../Generated_Code/MOTTU.c ****   }
 518:../Generated_Code/MOTTU.c ****   *TicksPtr = (MOTTU_TValueType)(FTM_PDD_ReadChannelValueReg(FTM0_BASE_PTR, ChannelDevice[ChannelId
 627              		.loc 1 518 0
 628 0026 0A4A     		ldr	r2, .L42+4
 629 0028 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 630 002a 0A49     		ldr	r1, .L42+8
 631 002c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 632 002e 0133     		adds	r3, r3, #1
 633 0030 DB00     		lsls	r3, r3, #3
 634 0032 1344     		add	r3, r3, r2
 635 0034 9B68     		ldr	r3, [r3, #8]
 636 0036 9AB2     		uxth	r2, r3
 637 0038 7B68     		ldr	r3, [r7, #4]
 638 003a 1A80     		strh	r2, [r3]	@ movhi
 519:../Generated_Code/MOTTU.c ****   return ERR_OK;                       /* OK */
 639              		.loc 1 519 0
 640 003c 0023     		movs	r3, #0
 641              	.L40:
 520:../Generated_Code/MOTTU.c **** }
 642              		.loc 1 520 0
 643 003e 1846     		mov	r0, r3
 644 0040 1437     		adds	r7, r7, #20
 645 0042 BD46     		mov	sp, r7
 646              		@ sp needed
 647 0044 5DF8047B 		ldr	r7, [sp], #4
 648 0048 7047     		bx	lr
 649              	.L43:
 650 004a 00BF     		.align	2
 651              	.L42:
 652 004c 00000000 		.word	ChannelMode
 653 0050 00800340 		.word	1073971200
 654 0054 00000000 		.word	ChannelDevice
 655              		.cfi_endproc
 656              	.LFE8:
 658              		.section	.text.MOTTU_SelectOutputAction,"ax",%progbits
 659              		.align	2
 660              		.global	MOTTU_SelectOutputAction
 661              		.thumb
 662              		.thumb_func
 664              	MOTTU_SelectOutputAction:
 665              	.LFB9:
 521:../Generated_Code/MOTTU.c **** 
 522:../Generated_Code/MOTTU.c **** /*
 523:../Generated_Code/MOTTU.c **** ** ===================================================================
 524:../Generated_Code/MOTTU.c **** **     Method      :  MOTTU_SelectOutputAction (component TimerUnit_LDD)
 525:../Generated_Code/MOTTU.c **** */
 526:../Generated_Code/MOTTU.c **** /*!
 527:../Generated_Code/MOTTU.c **** **     @brief
 528:../Generated_Code/MOTTU.c **** **         Sets the type of compare match and counter overflow action
 529:../Generated_Code/MOTTU.c **** **         on channel output. This method is available when at least
 530:../Generated_Code/MOTTU.c **** **         one channel is configured.
 531:../Generated_Code/MOTTU.c **** **     @param
 532:../Generated_Code/MOTTU.c **** **         DeviceDataPtr   - Device data structure
 533:../Generated_Code/MOTTU.c **** **                           pointer returned by [Init] method.
 534:../Generated_Code/MOTTU.c **** **     @param
 535:../Generated_Code/MOTTU.c **** **         ChannelIdx      - Index of the component
 536:../Generated_Code/MOTTU.c **** **                           channel.
 537:../Generated_Code/MOTTU.c **** **     @param
 538:../Generated_Code/MOTTU.c **** **         CompareAction   - Select output action
 539:../Generated_Code/MOTTU.c **** **                           on compare match
 540:../Generated_Code/MOTTU.c **** **     @param
 541:../Generated_Code/MOTTU.c **** **         CounterAction   - Select output action
 542:../Generated_Code/MOTTU.c **** **                           on counter overflow
 543:../Generated_Code/MOTTU.c **** **     @return
 544:../Generated_Code/MOTTU.c **** **                         - Error code, possible codes:
 545:../Generated_Code/MOTTU.c **** **                           ERR_OK - OK
 546:../Generated_Code/MOTTU.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 547:../Generated_Code/MOTTU.c **** **                           out of possible range
 548:../Generated_Code/MOTTU.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 549:../Generated_Code/MOTTU.c **** **                           selected channel or counter. Supported
 550:../Generated_Code/MOTTU.c **** **                           combinations are HW specific.
 551:../Generated_Code/MOTTU.c **** **                           ERR_SPEED - The component does not work in
 552:../Generated_Code/MOTTU.c **** **                           the active clock configuration
 553:../Generated_Code/MOTTU.c **** */
 554:../Generated_Code/MOTTU.c **** /* ===================================================================*/
 555:../Generated_Code/MOTTU.c **** LDD_TError MOTTU_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUn
 556:../Generated_Code/MOTTU.c **** {
 666              		.loc 1 556 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 90B4     		push	{r4, r7}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 4, -8
 674              		.cfi_offset 7, -4
 675 0002 82B0     		sub	sp, sp, #8
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 680 0008 F970     		strb	r1, [r7, #3]
 681 000a BA70     		strb	r2, [r7, #2]
 682 000c 7B70     		strb	r3, [r7, #1]
 557:../Generated_Code/MOTTU.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 558:../Generated_Code/MOTTU.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 559:../Generated_Code/MOTTU.c ****      property to the "yes" value in the "Configuration inspector" */
 560:../Generated_Code/MOTTU.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 683              		.loc 1 560 0
 684 000e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 685 0010 022B     		cmp	r3, #2
 686 0012 01D9     		bls	.L45
 561:../Generated_Code/MOTTU.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 687              		.loc 1 561 0
 688 0014 8223     		movs	r3, #130
 689 0016 EFE0     		b	.L46
 690              	.L45:
 562:../Generated_Code/MOTTU.c ****   }
 563:../Generated_Code/MOTTU.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 691              		.loc 1 563 0
 692 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 693 001a 7A4A     		ldr	r2, .L63
 694 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 695 001e 002B     		cmp	r3, #0
 696 0020 01D0     		beq	.L47
 564:../Generated_Code/MOTTU.c ****     return ERR_NOTAVAIL;               /* If not then error */
 697              		.loc 1 564 0
 698 0022 0923     		movs	r3, #9
 699 0024 E8E0     		b	.L46
 700              	.L47:
 565:../Generated_Code/MOTTU.c ****   }
 566:../Generated_Code/MOTTU.c ****   switch (CounterAction) {
 701              		.loc 1 566 0
 702 0026 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 703 0028 022B     		cmp	r3, #2
 704 002a 00F08280 		beq	.L49
 705 002e 032B     		cmp	r3, #3
 706 0030 00F0AF80 		beq	.L50
 707 0034 002B     		cmp	r3, #0
 708 0036 40F0DC80 		bne	.L62
 567:../Generated_Code/MOTTU.c ****     case OUTPUT_NONE:
 568:../Generated_Code/MOTTU.c ****       FTM_PDD_SelectChannelMode(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_OUTPUT_TOGGLE);
 709              		.loc 1 568 0
 710 003a 7349     		ldr	r1, .L63+4
 711 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 712 003e 734A     		ldr	r2, .L63+8
 713 0040 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 714 0042 1846     		mov	r0, r3
 715 0044 704A     		ldr	r2, .L63+4
 716 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 717 0048 704C     		ldr	r4, .L63+8
 718 004a E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 719 004c 0133     		adds	r3, r3, #1
 720 004e DB00     		lsls	r3, r3, #3
 721 0050 1344     		add	r3, r3, r2
 722 0052 5B68     		ldr	r3, [r3, #4]
 723 0054 23F0B003 		bic	r3, r3, #176
 724 0058 43F01002 		orr	r2, r3, #16
 725 005c 431C     		adds	r3, r0, #1
 726 005e DB00     		lsls	r3, r3, #3
 727 0060 0B44     		add	r3, r3, r1
 728 0062 5A60     		str	r2, [r3, #4]
 569:../Generated_Code/MOTTU.c ****       switch (CompareAction) {
 729              		.loc 1 569 0
 730 0064 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 731 0066 032B     		cmp	r3, #3
 732 0068 60D8     		bhi	.L52
 733 006a 01A2     		adr	r2, .L54
 734 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 735              		.p2align 2
 736              	.L54:
 737 0070 81000000 		.word	.L53+1
 738 0074 A9000000 		.word	.L55+1
 739 0078 D5000000 		.word	.L56+1
 740 007c 01010000 		.word	.L57+1
 741              		.p2align 1
 742              	.L53:
 570:../Generated_Code/MOTTU.c ****         case OUTPUT_NONE:
 571:../Generated_Code/MOTTU.c ****           FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_NON
 743              		.loc 1 571 0
 744 0080 6149     		ldr	r1, .L63+4
 745 0082 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 746 0084 614A     		ldr	r2, .L63+8
 747 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 748 0088 1846     		mov	r0, r3
 749 008a 5F4A     		ldr	r2, .L63+4
 750 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 751 008e 5F4C     		ldr	r4, .L63+8
 752 0090 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 753 0092 0133     		adds	r3, r3, #1
 754 0094 DB00     		lsls	r3, r3, #3
 755 0096 1344     		add	r3, r3, r2
 756 0098 5B68     		ldr	r3, [r3, #4]
 757 009a 23F08C02 		bic	r2, r3, #140
 758 009e 431C     		adds	r3, r0, #1
 759 00a0 DB00     		lsls	r3, r3, #3
 760 00a2 0B44     		add	r3, r3, r1
 761 00a4 5A60     		str	r2, [r3, #4]
 572:../Generated_Code/MOTTU.c ****           break;
 762              		.loc 1 572 0
 763 00a6 43E0     		b	.L58
 764              	.L55:
 573:../Generated_Code/MOTTU.c ****         case OUTPUT_TOGGLE:
 574:../Generated_Code/MOTTU.c ****           FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_RIS
 765              		.loc 1 574 0
 766 00a8 5749     		ldr	r1, .L63+4
 767 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 768 00ac 574A     		ldr	r2, .L63+8
 769 00ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 770 00b0 1846     		mov	r0, r3
 771 00b2 554A     		ldr	r2, .L63+4
 772 00b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 773 00b6 554C     		ldr	r4, .L63+8
 774 00b8 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 775 00ba 0133     		adds	r3, r3, #1
 776 00bc DB00     		lsls	r3, r3, #3
 777 00be 1344     		add	r3, r3, r2
 778 00c0 5B68     		ldr	r3, [r3, #4]
 779 00c2 23F08C03 		bic	r3, r3, #140
 780 00c6 43F00402 		orr	r2, r3, #4
 781 00ca 431C     		adds	r3, r0, #1
 782 00cc DB00     		lsls	r3, r3, #3
 783 00ce 0B44     		add	r3, r3, r1
 784 00d0 5A60     		str	r2, [r3, #4]
 575:../Generated_Code/MOTTU.c ****           break;
 785              		.loc 1 575 0
 786 00d2 2DE0     		b	.L58
 787              	.L56:
 576:../Generated_Code/MOTTU.c ****         case OUTPUT_CLEAR:
 577:../Generated_Code/MOTTU.c ****           FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_FAL
 788              		.loc 1 577 0
 789 00d4 4C49     		ldr	r1, .L63+4
 790 00d6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 791 00d8 4C4A     		ldr	r2, .L63+8
 792 00da D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 793 00dc 1846     		mov	r0, r3
 794 00de 4A4A     		ldr	r2, .L63+4
 795 00e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 796 00e2 4A4C     		ldr	r4, .L63+8
 797 00e4 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 798 00e6 0133     		adds	r3, r3, #1
 799 00e8 DB00     		lsls	r3, r3, #3
 800 00ea 1344     		add	r3, r3, r2
 801 00ec 5B68     		ldr	r3, [r3, #4]
 802 00ee 23F08C03 		bic	r3, r3, #140
 803 00f2 43F00802 		orr	r2, r3, #8
 804 00f6 431C     		adds	r3, r0, #1
 805 00f8 DB00     		lsls	r3, r3, #3
 806 00fa 0B44     		add	r3, r3, r1
 807 00fc 5A60     		str	r2, [r3, #4]
 578:../Generated_Code/MOTTU.c ****           break;
 808              		.loc 1 578 0
 809 00fe 17E0     		b	.L58
 810              	.L57:
 579:../Generated_Code/MOTTU.c ****         case OUTPUT_SET:
 580:../Generated_Code/MOTTU.c ****           FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_BOT
 811              		.loc 1 580 0
 812 0100 4149     		ldr	r1, .L63+4
 813 0102 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 814 0104 414A     		ldr	r2, .L63+8
 815 0106 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 816 0108 1846     		mov	r0, r3
 817 010a 3F4A     		ldr	r2, .L63+4
 818 010c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 819 010e 3F4C     		ldr	r4, .L63+8
 820 0110 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 821 0112 0133     		adds	r3, r3, #1
 822 0114 DB00     		lsls	r3, r3, #3
 823 0116 1344     		add	r3, r3, r2
 824 0118 5B68     		ldr	r3, [r3, #4]
 825 011a 23F08C03 		bic	r3, r3, #140
 826 011e 43F00C02 		orr	r2, r3, #12
 827 0122 431C     		adds	r3, r0, #1
 828 0124 DB00     		lsls	r3, r3, #3
 829 0126 0B44     		add	r3, r3, r1
 830 0128 5A60     		str	r2, [r3, #4]
 581:../Generated_Code/MOTTU.c ****           break;
 831              		.loc 1 581 0
 832 012a 01E0     		b	.L58
 833              	.L52:
 582:../Generated_Code/MOTTU.c ****         default:
 583:../Generated_Code/MOTTU.c ****           return ERR_NOTAVAIL;
 834              		.loc 1 583 0
 835 012c 0923     		movs	r3, #9
 836 012e 63E0     		b	.L46
 837              	.L58:
 584:../Generated_Code/MOTTU.c ****       }
 585:../Generated_Code/MOTTU.c ****       break;
 838              		.loc 1 585 0
 839 0130 61E0     		b	.L59
 840              	.L49:
 586:../Generated_Code/MOTTU.c ****     case OUTPUT_CLEAR:
 587:../Generated_Code/MOTTU.c ****       if (CompareAction != OUTPUT_SET) {
 841              		.loc 1 587 0
 842 0132 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 843 0134 032B     		cmp	r3, #3
 844 0136 01D0     		beq	.L60
 588:../Generated_Code/MOTTU.c ****         return ERR_NOTAVAIL;
 845              		.loc 1 588 0
 846 0138 0923     		movs	r3, #9
 847 013a 5DE0     		b	.L46
 848              	.L60:
 589:../Generated_Code/MOTTU.c ****       }
 590:../Generated_Code/MOTTU.c ****       FTM_PDD_SelectChannelMode(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_OUTPUT_CLEAR);
 849              		.loc 1 590 0
 850 013c 3249     		ldr	r1, .L63+4
 851 013e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 852 0140 324A     		ldr	r2, .L63+8
 853 0142 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 854 0144 1846     		mov	r0, r3
 855 0146 304A     		ldr	r2, .L63+4
 856 0148 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 857 014a 304C     		ldr	r4, .L63+8
 858 014c E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 859 014e 0133     		adds	r3, r3, #1
 860 0150 DB00     		lsls	r3, r3, #3
 861 0152 1344     		add	r3, r3, r2
 862 0154 5B68     		ldr	r3, [r3, #4]
 863 0156 23F0B003 		bic	r3, r3, #176
 864 015a 43F02002 		orr	r2, r3, #32
 865 015e 431C     		adds	r3, r0, #1
 866 0160 DB00     		lsls	r3, r3, #3
 867 0162 0B44     		add	r3, r3, r1
 868 0164 5A60     		str	r2, [r3, #4]
 591:../Generated_Code/MOTTU.c ****       FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_BOTH);
 869              		.loc 1 591 0
 870 0166 2849     		ldr	r1, .L63+4
 871 0168 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 872 016a 284A     		ldr	r2, .L63+8
 873 016c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 874 016e 1846     		mov	r0, r3
 875 0170 254A     		ldr	r2, .L63+4
 876 0172 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 877 0174 254C     		ldr	r4, .L63+8
 878 0176 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 879 0178 0133     		adds	r3, r3, #1
 880 017a DB00     		lsls	r3, r3, #3
 881 017c 1344     		add	r3, r3, r2
 882 017e 5B68     		ldr	r3, [r3, #4]
 883 0180 23F08C03 		bic	r3, r3, #140
 884 0184 43F00C02 		orr	r2, r3, #12
 885 0188 431C     		adds	r3, r0, #1
 886 018a DB00     		lsls	r3, r3, #3
 887 018c 0B44     		add	r3, r3, r1
 888 018e 5A60     		str	r2, [r3, #4]
 592:../Generated_Code/MOTTU.c ****       break;
 889              		.loc 1 592 0
 890 0190 31E0     		b	.L59
 891              	.L50:
 593:../Generated_Code/MOTTU.c ****     case OUTPUT_SET:
 594:../Generated_Code/MOTTU.c ****       if (CompareAction != OUTPUT_CLEAR) {
 892              		.loc 1 594 0
 893 0192 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 894 0194 022B     		cmp	r3, #2
 895 0196 01D0     		beq	.L61
 595:../Generated_Code/MOTTU.c ****         return ERR_NOTAVAIL;
 896              		.loc 1 595 0
 897 0198 0923     		movs	r3, #9
 898 019a 2DE0     		b	.L46
 899              	.L61:
 596:../Generated_Code/MOTTU.c ****       }
 597:../Generated_Code/MOTTU.c ****       FTM_PDD_SelectChannelMode(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_OUTPUT_SET);
 900              		.loc 1 597 0
 901 019c 1A49     		ldr	r1, .L63+4
 902 019e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 903 01a0 1A4A     		ldr	r2, .L63+8
 904 01a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 905 01a4 1846     		mov	r0, r3
 906 01a6 184A     		ldr	r2, .L63+4
 907 01a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 908 01aa 184C     		ldr	r4, .L63+8
 909 01ac E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 910 01ae 0133     		adds	r3, r3, #1
 911 01b0 DB00     		lsls	r3, r3, #3
 912 01b2 1344     		add	r3, r3, r2
 913 01b4 5B68     		ldr	r3, [r3, #4]
 914 01b6 23F0B003 		bic	r3, r3, #176
 915 01ba 43F03002 		orr	r2, r3, #48
 916 01be 431C     		adds	r3, r0, #1
 917 01c0 DB00     		lsls	r3, r3, #3
 918 01c2 0B44     		add	r3, r3, r1
 919 01c4 5A60     		str	r2, [r3, #4]
 598:../Generated_Code/MOTTU.c ****       FTM_PDD_SelectChannelEdgeLevel(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], FTM_PDD_EDGE_FALLING
 920              		.loc 1 598 0
 921 01c6 1049     		ldr	r1, .L63+4
 922 01c8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 923 01ca 104A     		ldr	r2, .L63+8
 924 01cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 925 01ce 1846     		mov	r0, r3
 926 01d0 0D4A     		ldr	r2, .L63+4
 927 01d2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 928 01d4 0D4C     		ldr	r4, .L63+8
 929 01d6 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 930 01d8 0133     		adds	r3, r3, #1
 931 01da DB00     		lsls	r3, r3, #3
 932 01dc 1344     		add	r3, r3, r2
 933 01de 5B68     		ldr	r3, [r3, #4]
 934 01e0 23F08C03 		bic	r3, r3, #140
 935 01e4 43F00802 		orr	r2, r3, #8
 936 01e8 431C     		adds	r3, r0, #1
 937 01ea DB00     		lsls	r3, r3, #3
 938 01ec 0B44     		add	r3, r3, r1
 939 01ee 5A60     		str	r2, [r3, #4]
 599:../Generated_Code/MOTTU.c ****       break;
 940              		.loc 1 599 0
 941 01f0 01E0     		b	.L59
 942              	.L62:
 600:../Generated_Code/MOTTU.c ****     default:
 601:../Generated_Code/MOTTU.c ****       return ERR_NOTAVAIL;
 943              		.loc 1 601 0
 944 01f2 0923     		movs	r3, #9
 945 01f4 00E0     		b	.L46
 946              	.L59:
 602:../Generated_Code/MOTTU.c ****   }
 603:../Generated_Code/MOTTU.c ****   return ERR_OK;                       /* OK */
 947              		.loc 1 603 0
 948 01f6 0023     		movs	r3, #0
 949              	.L46:
 604:../Generated_Code/MOTTU.c **** }
 950              		.loc 1 604 0
 951 01f8 1846     		mov	r0, r3
 952 01fa 0837     		adds	r7, r7, #8
 953 01fc BD46     		mov	sp, r7
 954              		@ sp needed
 955 01fe 90BC     		pop	{r4, r7}
 956 0200 7047     		bx	lr
 957              	.L64:
 958 0202 00BF     		.align	2
 959              	.L63:
 960 0204 00000000 		.word	ChannelMode
 961 0208 00800340 		.word	1073971200
 962 020c 00000000 		.word	ChannelDevice
 963              		.cfi_endproc
 964              	.LFE9:
 966              		.text
 967              	.Letext0:
 968              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 969              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 970              		.file 4 "../Generated_Code/PE_Types.h"
 971              		.file 5 "C:/INTRO_HS18/IntroAronAlex/TEAM_Robot/Static_Code/IO_Map/MK22F12.h"
 972              		.file 6 "../Generated_Code/MOTTU.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MOTTU.c
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:21     .rodata.ChannelDevice:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:24     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:29     .rodata.ChannelMode:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:32     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:35     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:38     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:41     .text.MOTTU_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:46     .text.MOTTU_Init:00000000 MOTTU_Init
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:220    .text.MOTTU_Init:0000010c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:229    .text.MOTTU_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:234    .text.MOTTU_Deinit:00000000 MOTTU_Deinit
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:287    .text.MOTTU_Deinit:00000040 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:293    .text.MOTTU_Enable:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:298    .text.MOTTU_Enable:00000000 MOTTU_Enable
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:337    .text.MOTTU_Enable:0000002c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:342    .text.MOTTU_Disable:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:347    .text.MOTTU_Disable:00000000 MOTTU_Disable
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:380    .text.MOTTU_Disable:00000024 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:385    .text.MOTTU_GetPeriodTicks:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:390    .text.MOTTU_GetPeriodTicks:00000000 MOTTU_GetPeriodTicks
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:429    .text.MOTTU_GetPeriodTicks:0000002c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:434    .text.MOTTU_ResetCounter:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:439    .text.MOTTU_ResetCounter:00000000 MOTTU_ResetCounter
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:470    .text.MOTTU_ResetCounter:0000001c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:475    .text.MOTTU_GetCounterValue:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:480    .text.MOTTU_GetCounterValue:00000000 MOTTU_GetCounterValue
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:509    .text.MOTTU_GetCounterValue:0000001c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:514    .text.MOTTU_SetOffsetTicks:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:519    .text.MOTTU_SetOffsetTicks:00000000 MOTTU_SetOffsetTicks
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:579    .text.MOTTU_SetOffsetTicks:00000048 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:586    .text.MOTTU_GetOffsetTicks:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:591    .text.MOTTU_GetOffsetTicks:00000000 MOTTU_GetOffsetTicks
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:652    .text.MOTTU_GetOffsetTicks:0000004c $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:659    .text.MOTTU_SelectOutputAction:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:664    .text.MOTTU_SelectOutputAction:00000000 MOTTU_SelectOutputAction
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:737    .text.MOTTU_SelectOutputAction:00000070 $d
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:741    .text.MOTTU_SelectOutputAction:00000080 $t
C:\Users\Aron\AppData\Local\Temp\ccGjFnNx.s:960    .text.MOTTU_SelectOutputAction:00000204 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.FTM_PDD.h.110.491886a8b1fe2265fe9c01e9493601bd
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.MOTTU.h.152.1d52de4d1b458aa1157b5652fe9f0ede

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
