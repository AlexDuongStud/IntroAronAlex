   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"TmDt1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata.TmDt1_DefaultTime,"a",%progbits
  21              		.align	2
  24              	TmDt1_DefaultTime:
  25 0000 11       		.byte	17
  26 0001 33       		.byte	51
  27 0002 1F       		.byte	31
  28 0003 00       		.byte	0
  29              		.section	.rodata.TmDt1_DefaultDate,"a",%progbits
  30              		.align	2
  33              	TmDt1_DefaultDate:
  34 0000 DC07     		.short	2012
  35 0002 07       		.byte	7
  36 0003 16       		.byte	22
  37              		.section	.bss.CntDay,"aw",%nobits
  40              	CntDay:
  41 0000 00       		.space	1
  42              		.section	.bss.CntMonth,"aw",%nobits
  45              	CntMonth:
  46 0000 00       		.space	1
  47              		.section	.bss.CntYear,"aw",%nobits
  48              		.align	1
  51              	CntYear:
  52 0000 0000     		.space	2
  53              		.section	.bss.tickCntr,"aw",%nobits
  54              		.align	2
  57              	tickCntr:
  58 0000 00000000 		.space	4
  59              		.section	.rodata.ULY,"a",%progbits
  60              		.align	2
  63              	ULY:
  64 0000 1F       		.byte	31
  65 0001 1C       		.byte	28
  66 0002 1F       		.byte	31
  67 0003 1E       		.byte	30
  68 0004 1F       		.byte	31
  69 0005 1E       		.byte	30
  70 0006 1F       		.byte	31
  71 0007 1F       		.byte	31
  72 0008 1E       		.byte	30
  73 0009 1F       		.byte	31
  74 000a 1E       		.byte	30
  75 000b 1F       		.byte	31
  76              		.section	.rodata.LY,"a",%progbits
  77              		.align	2
  80              	LY:
  81 0000 1F       		.byte	31
  82 0001 1D       		.byte	29
  83 0002 1F       		.byte	31
  84 0003 1E       		.byte	30
  85 0004 1F       		.byte	31
  86 0005 1E       		.byte	30
  87 0006 1F       		.byte	31
  88 0007 1F       		.byte	31
  89 0008 1E       		.byte	30
  90 0009 1F       		.byte	31
  91 000a 1E       		.byte	30
  92 000b 1F       		.byte	31
  93              		.section	.text.AddDateToBuf,"ax",%progbits
  94              		.align	2
  95              		.thumb
  96              		.thumb_func
  98              	AddDateToBuf:
  99              	.LFB0:
 100              		.file 1 "../Generated_Code/TmDt1.c"
   1:../Generated_Code/TmDt1.c **** /* ###################################################################
   2:../Generated_Code/TmDt1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/TmDt1.c **** **     Filename    : TmDt1.c
   4:../Generated_Code/TmDt1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/TmDt1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/TmDt1.c **** **     Component   : GenericTimeDate
   7:../Generated_Code/TmDt1.c **** **     Version     : Component 01.061, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/TmDt1.c **** **     Repository  : My Components
   9:../Generated_Code/TmDt1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/TmDt1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/TmDt1.c **** **     Abstract    :
  12:../Generated_Code/TmDt1.c **** **         Software date/time module.
  13:../Generated_Code/TmDt1.c **** **     Settings    :
  14:../Generated_Code/TmDt1.c **** **          Component name                                 : TmDt1
  15:../Generated_Code/TmDt1.c **** **          Software RTC                                   : Enabled
  16:../Generated_Code/TmDt1.c **** **            Tick Time (ms)                               : 10
  17:../Generated_Code/TmDt1.c **** **            RTOS                                         : Disabled
  18:../Generated_Code/TmDt1.c **** **          Hardware RTC                                   : Disabled
  19:../Generated_Code/TmDt1.c **** **          Set Time and Date                              : 
  20:../Generated_Code/TmDt1.c **** **            Software RTC                                 : yes
  21:../Generated_Code/TmDt1.c **** **            Internal RTC                                 : yes
  22:../Generated_Code/TmDt1.c **** **            External RTC                                 : yes
  23:../Generated_Code/TmDt1.c **** **          Get Time and Date                              : Software RTC
  24:../Generated_Code/TmDt1.c **** **          Init()                                         : 
  25:../Generated_Code/TmDt1.c **** **            Defaults                                     : 
  26:../Generated_Code/TmDt1.c **** **              Time                                       : 17:51:31
  27:../Generated_Code/TmDt1.c **** **              Date                                       : 2012-07-22
  28:../Generated_Code/TmDt1.c **** **            Call Init() in startup                       : yes
  29:../Generated_Code/TmDt1.c **** **            Software RTC Initialization                  : Init from Defaults
  30:../Generated_Code/TmDt1.c **** **          System                                         : 
  31:../Generated_Code/TmDt1.c **** **            Critical Section                             : CS1
  32:../Generated_Code/TmDt1.c **** **            Utility                                      : UTIL1
  33:../Generated_Code/TmDt1.c **** **            SDK                                          : MCUC1
  34:../Generated_Code/TmDt1.c **** **            Shell                                        : Enabled
  35:../Generated_Code/TmDt1.c **** **              Shell                                      : CLS1
  36:../Generated_Code/TmDt1.c **** **     Contents    :
  37:../Generated_Code/TmDt1.c **** **         AddTick                     - void TmDt1_AddTick(void);
  38:../Generated_Code/TmDt1.c **** **         AddTicks                    - void TmDt1_AddTicks(uint16_t nofTicks);
  39:../Generated_Code/TmDt1.c **** **         TicksToTime                 - uint8_t TmDt1_TicksToTime(uint32_t ticks, TIMEREC *time);
  40:../Generated_Code/TmDt1.c **** **         TimeToTicks                 - uint8_t TmDt1_TimeToTicks(TIMEREC *time, uint32_t *ticks);
  41:../Generated_Code/TmDt1.c **** **         CalculateDayOfWeek          - uint8_t TmDt1_CalculateDayOfWeek(uint16_t Year, uint8_t Mo
  42:../Generated_Code/TmDt1.c **** **         SetTime                     - uint8_t TmDt1_SetTime(uint8_t Hour, uint8_t Min, uint8_t S
  43:../Generated_Code/TmDt1.c **** **         GetTime                     - uint8_t TmDt1_GetTime(TIMEREC *time);
  44:../Generated_Code/TmDt1.c **** **         SetDate                     - uint8_t TmDt1_SetDate(uint16_t Year, uint8_t Month, uint8_
  45:../Generated_Code/TmDt1.c **** **         GetDate                     - uint8_t TmDt1_GetDate(DATEREC *date);
  46:../Generated_Code/TmDt1.c **** **         SetTimeDate                 - uint8_t TmDt1_SetTimeDate(TIMEREC *time, DATEREC *date);
  47:../Generated_Code/TmDt1.c **** **         GetTimeDate                 - uint8_t TmDt1_GetTimeDate(TIMEREC *time, DATEREC *date);
  48:../Generated_Code/TmDt1.c **** **         SetSWTimeDate               - uint8_t TmDt1_SetSWTimeDate(TIMEREC *time, DATEREC *date);
  49:../Generated_Code/TmDt1.c **** **         GetSWTimeDate               - uint8_t TmDt1_GetSWTimeDate(TIMEREC *time, DATEREC *date);
  50:../Generated_Code/TmDt1.c **** **         SetInternalRTCTimeDate      - uint8_t TmDt1_SetInternalRTCTimeDate(TIMEREC *time, DATERE
  51:../Generated_Code/TmDt1.c **** **         GetInternalRTCTimeDate      - uint8_t TmDt1_GetInternalRTCTimeDate(TIMEREC *time, DATERE
  52:../Generated_Code/TmDt1.c **** **         SyncWithInternalRTC         - uint8_t TmDt1_SyncWithInternalRTC(void);
  53:../Generated_Code/TmDt1.c **** **         SyncSWtimeToInternalRTCsec  - uint8_t TmDt1_SyncSWtimeToInternalRTCsec(void);
  54:../Generated_Code/TmDt1.c **** **         SetExternalRTCTimeDate      - uint8_t TmDt1_SetExternalRTCTimeDate(TIMEREC *time, DATERE
  55:../Generated_Code/TmDt1.c **** **         GetExternalRTCTimeDate      - uint8_t TmDt1_GetExternalRTCTimeDate(TIMEREC *time, DATERE
  56:../Generated_Code/TmDt1.c **** **         SyncWithExternalRTC         - uint8_t TmDt1_SyncWithExternalRTC(void);
  57:../Generated_Code/TmDt1.c **** **         UnixSecondsToTimeDateCustom - void TmDt1_UnixSecondsToTimeDateCustom(int32_t seconds, in
  58:../Generated_Code/TmDt1.c **** **         UnixSecondsToTimeDate       - void TmDt1_UnixSecondsToTimeDate(int32_t seconds, int8_t o
  59:../Generated_Code/TmDt1.c **** **         TimeDateToUnixSecondsCustom - int32_t TmDt1_TimeDateToUnixSecondsCustom(TIMEREC *time, D
  60:../Generated_Code/TmDt1.c **** **         TimeDateToUnixSeconds       - int32_t TmDt1_TimeDateToUnixSeconds(TIMEREC *time, DATEREC
  61:../Generated_Code/TmDt1.c **** **         AddDateString               - uint8_t TmDt1_AddDateString(uint8_t *buf, size_t bufSize, 
  62:../Generated_Code/TmDt1.c **** **         AddTimeString               - uint8_t TmDt1_AddTimeString(uint8_t *buf, size_t bufSize, 
  63:../Generated_Code/TmDt1.c **** **         ParseCommand                - uint8_t TmDt1_ParseCommand(const unsigned char *cmd, bool 
  64:../Generated_Code/TmDt1.c **** **         DeInit                      - void TmDt1_DeInit(void);
  65:../Generated_Code/TmDt1.c **** **         Init                        - uint8_t TmDt1_Init(void);
  66:../Generated_Code/TmDt1.c **** **
  67:../Generated_Code/TmDt1.c **** **     * Copyright (c) 2011-2016, Erich Styger
  68:../Generated_Code/TmDt1.c **** **      * Web:         https://mcuoneclipse.com
  69:../Generated_Code/TmDt1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  70:../Generated_Code/TmDt1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  71:../Generated_Code/TmDt1.c **** **      * All rights reserved.
  72:../Generated_Code/TmDt1.c **** **      *
  73:../Generated_Code/TmDt1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  74:../Generated_Code/TmDt1.c **** **      * are permitted provided that the following conditions are met:
  75:../Generated_Code/TmDt1.c **** **      *
  76:../Generated_Code/TmDt1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  77:../Generated_Code/TmDt1.c **** **      *   of conditions and the following disclaimer.
  78:../Generated_Code/TmDt1.c **** **      *
  79:../Generated_Code/TmDt1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  80:../Generated_Code/TmDt1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  81:../Generated_Code/TmDt1.c **** **      *   other materials provided with the distribution.
  82:../Generated_Code/TmDt1.c **** **      *
  83:../Generated_Code/TmDt1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  84:../Generated_Code/TmDt1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  85:../Generated_Code/TmDt1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  86:../Generated_Code/TmDt1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  87:../Generated_Code/TmDt1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  88:../Generated_Code/TmDt1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  89:../Generated_Code/TmDt1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  90:../Generated_Code/TmDt1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  91:../Generated_Code/TmDt1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  92:../Generated_Code/TmDt1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  93:../Generated_Code/TmDt1.c **** ** ###################################################################*/
  94:../Generated_Code/TmDt1.c **** /*!
  95:../Generated_Code/TmDt1.c **** ** @file TmDt1.c
  96:../Generated_Code/TmDt1.c **** ** @version 01.00
  97:../Generated_Code/TmDt1.c **** ** @brief
  98:../Generated_Code/TmDt1.c **** **         Software date/time module.
  99:../Generated_Code/TmDt1.c **** */         
 100:../Generated_Code/TmDt1.c **** /*!
 101:../Generated_Code/TmDt1.c **** **  @addtogroup TmDt1_module TmDt1 module documentation
 102:../Generated_Code/TmDt1.c **** **  @{
 103:../Generated_Code/TmDt1.c **** */         
 104:../Generated_Code/TmDt1.c **** 
 105:../Generated_Code/TmDt1.c **** /* MODULE TmDt1. */
 106:../Generated_Code/TmDt1.c **** 
 107:../Generated_Code/TmDt1.c **** #include "TmDt1.h"
 108:../Generated_Code/TmDt1.c **** #include <stdlib.h> /* for NULL */
 109:../Generated_Code/TmDt1.c **** 
 110:../Generated_Code/TmDt1.c **** #if TmDt1_TICK_TIME_MS==0
 111:../Generated_Code/TmDt1.c ****   #error "Tick period cannot be zero!"
 112:../Generated_Code/TmDt1.c **** #endif
 113:../Generated_Code/TmDt1.c **** #define TmDt1_TICKS_PER_S  (1000/TmDt1_TICK_TIME_MS) /* number of timer ticks per second */
 114:../Generated_Code/TmDt1.c **** 
 115:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 116:../Generated_Code/TmDt1.c ****   /* counters used by software RTC */
 117:../Generated_Code/TmDt1.c ****   static uint8_t CntDay;               /* Day counter */
 118:../Generated_Code/TmDt1.c ****   static uint8_t CntMonth;             /* Month counter */
 119:../Generated_Code/TmDt1.c ****   static uint16_t CntYear;             /* Year Counter */
 120:../Generated_Code/TmDt1.c ****   static uint32_t tickCntr;            /* Software tick counter (1 tick = TmDt1_TICK_TIME_MS ms) */
 121:../Generated_Code/TmDt1.c **** #endif
 122:../Generated_Code/TmDt1.c **** 
 123:../Generated_Code/TmDt1.c **** /* Table of month length (in days) */
 124:../Generated_Code/TmDt1.c **** static const uint8_t ULY[12] = {31U,28U,31U,30U,31U,30U,31U,31U,30U,31U,30U,31U}; /* Un-leap-year *
 125:../Generated_Code/TmDt1.c **** static const uint8_t  LY[12] = {31U,29U,31U,30U,31U,30U,31U,31U,30U,31U,30U,31U}; /* Leap-year */
 126:../Generated_Code/TmDt1.c **** 
 127:../Generated_Code/TmDt1.c **** static uint8_t AddDateToBuf(uint8_t *buf, uint16_t bufSize, DATEREC *tdate) {
 101              		.loc 1 127 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 16
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 86B0     		sub	sp, sp, #24
 110              		.cfi_def_cfa_offset 32
 111 0004 02AF     		add	r7, sp, #8
 112              		.cfi_def_cfa 7, 24
 113 0006 F860     		str	r0, [r7, #12]
 114 0008 0B46     		mov	r3, r1
 115 000a 7A60     		str	r2, [r7, #4]
 116 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 128:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16uFormatted(buf, bufSize, tdate->Day, '0', 2);
 117              		.loc 1 128 0
 118 000e 7A89     		ldrh	r2, [r7, #10]
 119 0010 7B68     		ldr	r3, [r7, #4]
 120 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 121 0014 0221     		movs	r1, #2
 122 0016 0091     		str	r1, [sp]
 123 0018 F868     		ldr	r0, [r7, #12]
 124 001a 1146     		mov	r1, r2
 125 001c 1A46     		mov	r2, r3
 126 001e 3023     		movs	r3, #48
 127 0020 FFF7FEFF 		bl	UTIL1_strcatNum16uFormatted
 129:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, '.');
 128              		.loc 1 129 0
 129 0024 7B89     		ldrh	r3, [r7, #10]
 130 0026 F868     		ldr	r0, [r7, #12]
 131 0028 1946     		mov	r1, r3
 132 002a 2E22     		movs	r2, #46
 133 002c FFF7FEFF 		bl	UTIL1_chcat
 130:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16uFormatted(buf, bufSize, tdate->Month, '0', 2);
 134              		.loc 1 130 0
 135 0030 7A89     		ldrh	r2, [r7, #10]
 136 0032 7B68     		ldr	r3, [r7, #4]
 137 0034 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 138 0036 0221     		movs	r1, #2
 139 0038 0091     		str	r1, [sp]
 140 003a F868     		ldr	r0, [r7, #12]
 141 003c 1146     		mov	r1, r2
 142 003e 1A46     		mov	r2, r3
 143 0040 3023     		movs	r3, #48
 144 0042 FFF7FEFF 		bl	UTIL1_strcatNum16uFormatted
 131:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, '.');
 145              		.loc 1 131 0
 146 0046 7B89     		ldrh	r3, [r7, #10]
 147 0048 F868     		ldr	r0, [r7, #12]
 148 004a 1946     		mov	r1, r3
 149 004c 2E22     		movs	r2, #46
 150 004e FFF7FEFF 		bl	UTIL1_chcat
 132:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16u(buf, bufSize, (uint16_t)tdate->Year);
 151              		.loc 1 132 0
 152 0052 7A89     		ldrh	r2, [r7, #10]
 153 0054 7B68     		ldr	r3, [r7, #4]
 154 0056 1B88     		ldrh	r3, [r3]
 155 0058 F868     		ldr	r0, [r7, #12]
 156 005a 1146     		mov	r1, r2
 157 005c 1A46     		mov	r2, r3
 158 005e FFF7FEFF 		bl	UTIL1_strcatNum16u
 133:../Generated_Code/TmDt1.c ****   return ERR_OK;
 159              		.loc 1 133 0
 160 0062 0023     		movs	r3, #0
 134:../Generated_Code/TmDt1.c **** }
 161              		.loc 1 134 0
 162 0064 1846     		mov	r0, r3
 163 0066 1037     		adds	r7, r7, #16
 164 0068 BD46     		mov	sp, r7
 165              		@ sp needed
 166 006a 80BD     		pop	{r7, pc}
 167              		.cfi_endproc
 168              	.LFE0:
 170              		.section	.text.AddTimeToBuf,"ax",%progbits
 171              		.align	2
 172              		.thumb
 173              		.thumb_func
 175              	AddTimeToBuf:
 176              	.LFB1:
 135:../Generated_Code/TmDt1.c **** 
 136:../Generated_Code/TmDt1.c **** static uint8_t AddTimeToBuf(uint8_t *buf, uint16_t bufSize, TIMEREC *ttime) {
 177              		.loc 1 136 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 16
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 86B0     		sub	sp, sp, #24
 186              		.cfi_def_cfa_offset 32
 187 0004 02AF     		add	r7, sp, #8
 188              		.cfi_def_cfa 7, 24
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 0B46     		mov	r3, r1
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 137:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, ttime->Hour, '0', 2);
 193              		.loc 1 137 0
 194 000e 7A89     		ldrh	r2, [r7, #10]
 195 0010 7B68     		ldr	r3, [r7, #4]
 196 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 0014 1BB2     		sxth	r3, r3
 198 0016 0221     		movs	r1, #2
 199 0018 0091     		str	r1, [sp]
 200 001a F868     		ldr	r0, [r7, #12]
 201 001c 1146     		mov	r1, r2
 202 001e 1A46     		mov	r2, r3
 203 0020 3023     		movs	r3, #48
 204 0022 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
 138:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ':');
 205              		.loc 1 138 0
 206 0026 7B89     		ldrh	r3, [r7, #10]
 207 0028 F868     		ldr	r0, [r7, #12]
 208 002a 1946     		mov	r1, r3
 209 002c 3A22     		movs	r2, #58
 210 002e FFF7FEFF 		bl	UTIL1_chcat
 139:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, ttime->Min, '0', 2);
 211              		.loc 1 139 0
 212 0032 7A89     		ldrh	r2, [r7, #10]
 213 0034 7B68     		ldr	r3, [r7, #4]
 214 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 215 0038 1BB2     		sxth	r3, r3
 216 003a 0221     		movs	r1, #2
 217 003c 0091     		str	r1, [sp]
 218 003e F868     		ldr	r0, [r7, #12]
 219 0040 1146     		mov	r1, r2
 220 0042 1A46     		mov	r2, r3
 221 0044 3023     		movs	r3, #48
 222 0046 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
 140:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ':');
 223              		.loc 1 140 0
 224 004a 7B89     		ldrh	r3, [r7, #10]
 225 004c F868     		ldr	r0, [r7, #12]
 226 004e 1946     		mov	r1, r3
 227 0050 3A22     		movs	r2, #58
 228 0052 FFF7FEFF 		bl	UTIL1_chcat
 141:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, ttime->Sec, '0', 2);
 229              		.loc 1 141 0
 230 0056 7A89     		ldrh	r2, [r7, #10]
 231 0058 7B68     		ldr	r3, [r7, #4]
 232 005a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 233 005c 1BB2     		sxth	r3, r3
 234 005e 0221     		movs	r1, #2
 235 0060 0091     		str	r1, [sp]
 236 0062 F868     		ldr	r0, [r7, #12]
 237 0064 1146     		mov	r1, r2
 238 0066 1A46     		mov	r2, r3
 239 0068 3023     		movs	r3, #48
 240 006a FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
 142:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ',');
 241              		.loc 1 142 0
 242 006e 7B89     		ldrh	r3, [r7, #10]
 243 0070 F868     		ldr	r0, [r7, #12]
 244 0072 1946     		mov	r1, r3
 245 0074 2C22     		movs	r2, #44
 246 0076 FFF7FEFF 		bl	UTIL1_chcat
 143:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
 144:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, ttime->Sec100, '0', 2);
 247              		.loc 1 144 0
 248 007a 7A89     		ldrh	r2, [r7, #10]
 249 007c 7B68     		ldr	r3, [r7, #4]
 250 007e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 251 0080 1BB2     		sxth	r3, r3
 252 0082 0221     		movs	r1, #2
 253 0084 0091     		str	r1, [sp]
 254 0086 F868     		ldr	r0, [r7, #12]
 255 0088 1146     		mov	r1, r2
 256 008a 1A46     		mov	r2, r3
 257 008c 3023     		movs	r3, #48
 258 008e FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
 145:../Generated_Code/TmDt1.c **** #else
 146:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, 0, '0', 2);
 147:../Generated_Code/TmDt1.c **** #endif
 148:../Generated_Code/TmDt1.c ****   return ERR_OK;
 259              		.loc 1 148 0
 260 0092 0023     		movs	r3, #0
 149:../Generated_Code/TmDt1.c **** }
 261              		.loc 1 149 0
 262 0094 1846     		mov	r0, r3
 263 0096 1037     		adds	r7, r7, #16
 264 0098 BD46     		mov	sp, r7
 265              		@ sp needed
 266 009a 80BD     		pop	{r7, pc}
 267              		.cfi_endproc
 268              	.LFE1:
 270              		.section	.text.AddDate,"ax",%progbits
 271              		.align	2
 272              		.thumb
 273              		.thumb_func
 275              	AddDate:
 276              	.LFB2:
 150:../Generated_Code/TmDt1.c **** 
 151:../Generated_Code/TmDt1.c **** 
 152:../Generated_Code/TmDt1.c **** static uint8_t AddDate(uint8_t *buf, uint16_t bufSize, uint8_t (*GetTimeDateFn)(TIMEREC*, DATEREC*)
 277              		.loc 1 152 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 24
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 86B0     		sub	sp, sp, #24
 286              		.cfi_def_cfa_offset 32
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 289 0006 F860     		str	r0, [r7, #12]
 290 0008 0B46     		mov	r3, r1
 291 000a 7A60     		str	r2, [r7, #4]
 292 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 153:../Generated_Code/TmDt1.c ****   DATEREC tdate;
 154:../Generated_Code/TmDt1.c **** 
 155:../Generated_Code/TmDt1.c ****   if (GetTimeDateFn(NULL, &tdate)!=ERR_OK) {
 293              		.loc 1 155 0
 294 000e 07F11402 		add	r2, r7, #20
 295 0012 7B68     		ldr	r3, [r7, #4]
 296 0014 0020     		movs	r0, #0
 297 0016 1146     		mov	r1, r2
 298 0018 9847     		blx	r3
 299 001a 0346     		mov	r3, r0
 300 001c 002B     		cmp	r3, #0
 301 001e 01D0     		beq	.L6
 156:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 302              		.loc 1 156 0
 303 0020 1B23     		movs	r3, #27
 304 0022 08E0     		b	.L8
 305              	.L6:
 157:../Generated_Code/TmDt1.c ****   }
 158:../Generated_Code/TmDt1.c ****   return AddDateToBuf(buf, bufSize, &tdate);
 306              		.loc 1 158 0
 307 0024 7A89     		ldrh	r2, [r7, #10]
 308 0026 07F11403 		add	r3, r7, #20
 309 002a F868     		ldr	r0, [r7, #12]
 310 002c 1146     		mov	r1, r2
 311 002e 1A46     		mov	r2, r3
 312 0030 FFF7FEFF 		bl	AddDateToBuf
 313 0034 0346     		mov	r3, r0
 314              	.L8:
 159:../Generated_Code/TmDt1.c **** }
 315              		.loc 1 159 0
 316 0036 1846     		mov	r0, r3
 317 0038 1837     		adds	r7, r7, #24
 318 003a BD46     		mov	sp, r7
 319              		@ sp needed
 320 003c 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE2:
 324 003e 00BF     		.section	.text.AddTime,"ax",%progbits
 325              		.align	2
 326              		.thumb
 327              		.thumb_func
 329              	AddTime:
 330              	.LFB3:
 160:../Generated_Code/TmDt1.c **** 
 161:../Generated_Code/TmDt1.c **** static uint8_t AddTime(uint8_t *buf, uint16_t bufSize, uint8_t (*GetTimeDateFn)(TIMEREC*, DATEREC*)
 331              		.loc 1 161 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 24
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 86B0     		sub	sp, sp, #24
 340              		.cfi_def_cfa_offset 32
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 F860     		str	r0, [r7, #12]
 344 0008 0B46     		mov	r3, r1
 345 000a 7A60     		str	r2, [r7, #4]
 346 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 162:../Generated_Code/TmDt1.c ****   TIMEREC ttime;
 163:../Generated_Code/TmDt1.c **** 
 164:../Generated_Code/TmDt1.c ****   if (GetTimeDateFn(&ttime, NULL)!=ERR_OK) {
 347              		.loc 1 164 0
 348 000e 07F11402 		add	r2, r7, #20
 349 0012 7B68     		ldr	r3, [r7, #4]
 350 0014 1046     		mov	r0, r2
 351 0016 0021     		movs	r1, #0
 352 0018 9847     		blx	r3
 353 001a 0346     		mov	r3, r0
 354 001c 002B     		cmp	r3, #0
 355 001e 01D0     		beq	.L10
 165:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 356              		.loc 1 165 0
 357 0020 1B23     		movs	r3, #27
 358 0022 08E0     		b	.L12
 359              	.L10:
 166:../Generated_Code/TmDt1.c ****   }
 167:../Generated_Code/TmDt1.c ****   return AddTimeToBuf(buf, bufSize, &ttime);
 360              		.loc 1 167 0
 361 0024 7A89     		ldrh	r2, [r7, #10]
 362 0026 07F11403 		add	r3, r7, #20
 363 002a F868     		ldr	r0, [r7, #12]
 364 002c 1146     		mov	r1, r2
 365 002e 1A46     		mov	r2, r3
 366 0030 FFF7FEFF 		bl	AddTimeToBuf
 367 0034 0346     		mov	r3, r0
 368              	.L12:
 168:../Generated_Code/TmDt1.c **** }
 369              		.loc 1 168 0
 370 0036 1846     		mov	r0, r3
 371 0038 1837     		adds	r7, r7, #24
 372 003a BD46     		mov	sp, r7
 373              		@ sp needed
 374 003c 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE3:
 378 003e 00BF     		.section	.rodata
 379              		.align	2
 380              	.LC1:
 381 0000 2A2A2A20 		.ascii	"*** Failure setting time\015\012\000"
 381      4661696C 
 381      75726520 
 381      73657474 
 381      696E6720 
 382 001b 00       		.align	2
 383              	.LC2:
 384 001c 2A2A2A20 		.ascii	"*** error while reading command! ***\000"
 384      6572726F 
 384      72207768 
 384      696C6520 
 384      72656164 
 385 0041 000000   		.align	2
 386              	.LC3:
 387 0044 0D0A00   		.ascii	"\015\012\000"
 388 0047 00       		.align	2
 389              	.LC4:
 390 0048 5254433A 		.ascii	"RTC: \000"
 390      2000
 391 004e 0000     		.align	2
 392              	.LC5:
 393 0050 2A2A2A46 		.ascii	"***Failed to get date\015\012\000"
 393      61696C65 
 393      6420746F 
 393      20676574 
 393      20646174 
 394              		.section	.text.DateCmd,"ax",%progbits
 395              		.align	2
 396              		.thumb
 397              		.thumb_func
 399              	DateCmd:
 400              	.LFB4:
 169:../Generated_Code/TmDt1.c **** 
 170:../Generated_Code/TmDt1.c **** static uint8_t DateCmd(const unsigned char *cmd, CLS1_ConstStdIOType *io) {
 401              		.loc 1 170 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 56
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 8EB0     		sub	sp, sp, #56
 410              		.cfi_def_cfa_offset 64
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
 414 0008 3960     		str	r1, [r7]
 171:../Generated_Code/TmDt1.c ****   /* precondition: cmd points to "TmDt1 date" */
 172:../Generated_Code/TmDt1.c ****   uint8_t day, month;
 173:../Generated_Code/TmDt1.c ****   uint16_t year;
 174:../Generated_Code/TmDt1.c ****   const unsigned char *p;
 175:../Generated_Code/TmDt1.c ****   uint8_t res = ERR_OK;
 415              		.loc 1 175 0
 416 000a 0023     		movs	r3, #0
 417 000c 87F83730 		strb	r3, [r7, #55]
 176:../Generated_Code/TmDt1.c **** 
 177:../Generated_Code/TmDt1.c ****   p = cmd + sizeof("TmDt1 date")-1;
 418              		.loc 1 177 0
 419 0010 7B68     		ldr	r3, [r7, #4]
 420 0012 0A33     		adds	r3, r3, #10
 421 0014 FB62     		str	r3, [r7, #44]
 178:../Generated_Code/TmDt1.c ****   if (*p==' ') { /* ok, have an argument */
 422              		.loc 1 178 0
 423 0016 FB6A     		ldr	r3, [r7, #44]
 424 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 425 001a 202B     		cmp	r3, #32
 426 001c 3CD1     		bne	.L14
 179:../Generated_Code/TmDt1.c ****     if (UTIL1_ScanDate(&p, &day, &month, &year) == ERR_OK) { /* ok, format fine */
 427              		.loc 1 179 0
 428 001e 07F12C00 		add	r0, r7, #44
 429 0022 07F13601 		add	r1, r7, #54
 430 0026 07F13502 		add	r2, r7, #53
 431 002a 07F13203 		add	r3, r7, #50
 432 002e FFF7FEFF 		bl	UTIL1_ScanDate
 433 0032 0346     		mov	r3, r0
 434 0034 002B     		cmp	r3, #0
 435 0036 1AD1     		bne	.L15
 180:../Generated_Code/TmDt1.c ****       /* update software real time clock */
 181:../Generated_Code/TmDt1.c ****       res = TmDt1_SetDate(year, month, day);
 436              		.loc 1 181 0
 437 0038 798E     		ldrh	r1, [r7, #50]
 438 003a 97F83520 		ldrb	r2, [r7, #53]	@ zero_extendqisi2
 439 003e 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 440 0042 0846     		mov	r0, r1
 441 0044 1146     		mov	r1, r2
 442 0046 1A46     		mov	r2, r3
 443 0048 FFF7FEFF 		bl	TmDt1_SetDate
 444 004c 0346     		mov	r3, r0
 445 004e 87F83730 		strb	r3, [r7, #55]
 182:../Generated_Code/TmDt1.c ****       if (res != ERR_OK) {
 446              		.loc 1 182 0
 447 0052 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 448 0056 002B     		cmp	r3, #0
 449 0058 1ED0     		beq	.L14
 183:../Generated_Code/TmDt1.c ****         CLS1_SendStr((unsigned char*)"*** Failure setting time\r\n", io->stdErr);
 450              		.loc 1 183 0
 451 005a 3B68     		ldr	r3, [r7]
 452 005c 9B68     		ldr	r3, [r3, #8]
 453 005e 2848     		ldr	r0, .L21
 454 0060 1946     		mov	r1, r3
 455 0062 FFF7FEFF 		bl	CLS1_SendStr
 184:../Generated_Code/TmDt1.c ****         res = ERR_FAILED;
 456              		.loc 1 184 0
 457 0066 1B23     		movs	r3, #27
 458 0068 87F83730 		strb	r3, [r7, #55]
 459 006c 14E0     		b	.L14
 460              	.L15:
 185:../Generated_Code/TmDt1.c ****       }
 186:../Generated_Code/TmDt1.c ****     } else {
 187:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"*** error while reading command! ***", io->stdErr);
 461              		.loc 1 187 0
 462 006e 3B68     		ldr	r3, [r7]
 463 0070 9B68     		ldr	r3, [r3, #8]
 464 0072 2448     		ldr	r0, .L21+4
 465 0074 1946     		mov	r1, r3
 466 0076 FFF7FEFF 		bl	CLS1_SendStr
 188:../Generated_Code/TmDt1.c ****       CLS1_SendStr((void *)cmd, io->stdErr);
 467              		.loc 1 188 0
 468 007a 3B68     		ldr	r3, [r7]
 469 007c 9B68     		ldr	r3, [r3, #8]
 470 007e 7868     		ldr	r0, [r7, #4]
 471 0080 1946     		mov	r1, r3
 472 0082 FFF7FEFF 		bl	CLS1_SendStr
 189:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"\r\n", io->stdErr);
 473              		.loc 1 189 0
 474 0086 3B68     		ldr	r3, [r7]
 475 0088 9B68     		ldr	r3, [r3, #8]
 476 008a 1F48     		ldr	r0, .L21+8
 477 008c 1946     		mov	r1, r3
 478 008e FFF7FEFF 		bl	CLS1_SendStr
 190:../Generated_Code/TmDt1.c ****       res = ERR_FAILED;
 479              		.loc 1 190 0
 480 0092 1B23     		movs	r3, #27
 481 0094 87F83730 		strb	r3, [r7, #55]
 482              	.L14:
 191:../Generated_Code/TmDt1.c ****     }
 192:../Generated_Code/TmDt1.c ****   } /* has an argument */
 193:../Generated_Code/TmDt1.c ****   /* print now current date */
 194:../Generated_Code/TmDt1.c ****   if (res==ERR_OK) {
 483              		.loc 1 194 0
 484 0098 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 485 009c 002B     		cmp	r3, #0
 486 009e 29D1     		bne	.L17
 487              	.LBB2:
 195:../Generated_Code/TmDt1.c ****     unsigned char buf[sizeof("RTC: Wednesday dd:mm:yyyy\\r\\n")];
 196:../Generated_Code/TmDt1.c **** 
 197:../Generated_Code/TmDt1.c ****     UTIL1_strcpy(buf, sizeof(buf), (unsigned char*)"RTC: ");
 488              		.loc 1 197 0
 489 00a0 07F10C03 		add	r3, r7, #12
 490 00a4 1846     		mov	r0, r3
 491 00a6 1E21     		movs	r1, #30
 492 00a8 184A     		ldr	r2, .L21+12
 493 00aa FFF7FEFF 		bl	UTIL1_strcpy
 198:../Generated_Code/TmDt1.c ****     if (AddDate(buf, sizeof(buf), TmDt1_GetTimeDate)!=ERR_OK) {
 494              		.loc 1 198 0
 495 00ae 07F10C03 		add	r3, r7, #12
 496 00b2 1846     		mov	r0, r3
 497 00b4 1E21     		movs	r1, #30
 498 00b6 164A     		ldr	r2, .L21+16
 499 00b8 FFF7FEFF 		bl	AddDate
 500 00bc 0346     		mov	r3, r0
 501 00be 002B     		cmp	r3, #0
 502 00c0 09D0     		beq	.L18
 199:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"***Failed to get date\r\n", io->stdErr);
 503              		.loc 1 199 0
 504 00c2 3B68     		ldr	r3, [r7]
 505 00c4 9B68     		ldr	r3, [r3, #8]
 506 00c6 1348     		ldr	r0, .L21+20
 507 00c8 1946     		mov	r1, r3
 508 00ca FFF7FEFF 		bl	CLS1_SendStr
 200:../Generated_Code/TmDt1.c ****       res = ERR_FAILED;
 509              		.loc 1 200 0
 510 00ce 1B23     		movs	r3, #27
 511 00d0 87F83730 		strb	r3, [r7, #55]
 512 00d4 0EE0     		b	.L17
 513              	.L18:
 201:../Generated_Code/TmDt1.c ****     } else {
 202:../Generated_Code/TmDt1.c ****       UTIL1_strcat(buf, sizeof(buf), (unsigned char*)"\r\n");
 514              		.loc 1 202 0
 515 00d6 07F10C03 		add	r3, r7, #12
 516 00da 1846     		mov	r0, r3
 517 00dc 1E21     		movs	r1, #30
 518 00de 0A4A     		ldr	r2, .L21+8
 519 00e0 FFF7FEFF 		bl	UTIL1_strcat
 203:../Generated_Code/TmDt1.c ****       CLS1_SendStr(buf, io->stdOut);
 520              		.loc 1 203 0
 521 00e4 3B68     		ldr	r3, [r7]
 522 00e6 5B68     		ldr	r3, [r3, #4]
 523 00e8 07F10C02 		add	r2, r7, #12
 524 00ec 1046     		mov	r0, r2
 525 00ee 1946     		mov	r1, r3
 526 00f0 FFF7FEFF 		bl	CLS1_SendStr
 527              	.L17:
 528              	.LBE2:
 204:../Generated_Code/TmDt1.c ****     }
 205:../Generated_Code/TmDt1.c ****   }
 206:../Generated_Code/TmDt1.c ****   return res;
 529              		.loc 1 206 0
 530 00f4 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 207:../Generated_Code/TmDt1.c **** }
 531              		.loc 1 207 0
 532 00f8 1846     		mov	r0, r3
 533 00fa 3837     		adds	r7, r7, #56
 534 00fc BD46     		mov	sp, r7
 535              		@ sp needed
 536 00fe 80BD     		pop	{r7, pc}
 537              	.L22:
 538              		.align	2
 539              	.L21:
 540 0100 00000000 		.word	.LC1
 541 0104 1C000000 		.word	.LC2
 542 0108 44000000 		.word	.LC3
 543 010c 48000000 		.word	.LC4
 544 0110 00000000 		.word	TmDt1_GetTimeDate
 545 0114 50000000 		.word	.LC5
 546              		.cfi_endproc
 547              	.LFE4:
 549              		.section	.rodata
 550              		.align	2
 551              	.LC6:
 552 0068 2A2A2A20 		.ascii	"*** Error while reading command: \000"
 552      4572726F 
 552      72207768 
 552      696C6520 
 552      72656164 
 553 008a 0000     		.align	2
 554              	.LC7:
 555 008c 2A2A2A46 		.ascii	"***Failed to get time\015\012\000"
 555      61696C65 
 555      6420746F 
 555      20676574 
 555      2074696D 
 556              		.section	.text.TimeCmd,"ax",%progbits
 557              		.align	2
 558              		.thumb
 559              		.thumb_func
 561              	TimeCmd:
 562              	.LFB5:
 208:../Generated_Code/TmDt1.c **** 
 209:../Generated_Code/TmDt1.c **** static uint8_t TimeCmd(const unsigned char *cmd, CLS1_ConstStdIOType *io) {
 563              		.loc 1 209 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 48
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 90B5     		push	{r4, r7, lr}
 568              		.cfi_def_cfa_offset 12
 569              		.cfi_offset 4, -12
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 8FB0     		sub	sp, sp, #60
 573              		.cfi_def_cfa_offset 72
 574 0004 02AF     		add	r7, sp, #8
 575              		.cfi_def_cfa 7, 64
 576 0006 7860     		str	r0, [r7, #4]
 577 0008 3960     		str	r1, [r7]
 210:../Generated_Code/TmDt1.c ****   uint8_t hour, minute, second, hSecond;
 211:../Generated_Code/TmDt1.c ****   const unsigned char *p;
 212:../Generated_Code/TmDt1.c ****   uint8_t res = ERR_OK;
 578              		.loc 1 212 0
 579 000a 0023     		movs	r3, #0
 580 000c 87F82F30 		strb	r3, [r7, #47]
 213:../Generated_Code/TmDt1.c **** 
 214:../Generated_Code/TmDt1.c ****   p = cmd + sizeof("TmDt1 time")-1;
 581              		.loc 1 214 0
 582 0010 7B68     		ldr	r3, [r7, #4]
 583 0012 0A33     		adds	r3, r3, #10
 584 0014 7B62     		str	r3, [r7, #36]
 215:../Generated_Code/TmDt1.c ****   if (*p==' ') { /* has an argument */
 585              		.loc 1 215 0
 586 0016 7B6A     		ldr	r3, [r7, #36]
 587 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 001a 202B     		cmp	r3, #32
 589 001c 3FD1     		bne	.L24
 216:../Generated_Code/TmDt1.c ****     if (UTIL1_ScanTime(&p, &hour, &minute, &second, &hSecond)==ERR_OK) { /* format fine */
 590              		.loc 1 216 0
 591 001e 07F12400 		add	r0, r7, #36
 592 0022 07F12E01 		add	r1, r7, #46
 593 0026 07F12D02 		add	r2, r7, #45
 594 002a 07F12C03 		add	r3, r7, #44
 595 002e 07F12B04 		add	r4, r7, #43
 596 0032 0094     		str	r4, [sp]
 597 0034 FFF7FEFF 		bl	UTIL1_ScanTime
 598 0038 0346     		mov	r3, r0
 599 003a 002B     		cmp	r3, #0
 600 003c 1AD1     		bne	.L25
 217:../Generated_Code/TmDt1.c ****       /* set SW RTC time */
 218:../Generated_Code/TmDt1.c ****       res = TmDt1_SetTime(hour, minute, second, hSecond);
 601              		.loc 1 218 0
 602 003e 97F82E00 		ldrb	r0, [r7, #46]	@ zero_extendqisi2
 603 0042 97F82D10 		ldrb	r1, [r7, #45]	@ zero_extendqisi2
 604 0046 97F82C20 		ldrb	r2, [r7, #44]	@ zero_extendqisi2
 605 004a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 606 004e FFF7FEFF 		bl	TmDt1_SetTime
 607 0052 0346     		mov	r3, r0
 608 0054 87F82F30 		strb	r3, [r7, #47]
 219:../Generated_Code/TmDt1.c ****       if (res != ERR_OK) {
 609              		.loc 1 219 0
 610 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 611 005c 002B     		cmp	r3, #0
 612 005e 1ED0     		beq	.L24
 220:../Generated_Code/TmDt1.c ****         CLS1_SendStr((unsigned char*)"*** Failure setting time\r\n", io->stdErr);
 613              		.loc 1 220 0
 614 0060 3B68     		ldr	r3, [r7]
 615 0062 9B68     		ldr	r3, [r3, #8]
 616 0064 2848     		ldr	r0, .L31
 617 0066 1946     		mov	r1, r3
 618 0068 FFF7FEFF 		bl	CLS1_SendStr
 221:../Generated_Code/TmDt1.c ****         res = ERR_FAILED;
 619              		.loc 1 221 0
 620 006c 1B23     		movs	r3, #27
 621 006e 87F82F30 		strb	r3, [r7, #47]
 622 0072 14E0     		b	.L24
 623              	.L25:
 222:../Generated_Code/TmDt1.c ****       }
 223:../Generated_Code/TmDt1.c ****     } else {
 224:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"*** Error while reading command: ", io->stdErr);
 624              		.loc 1 224 0
 625 0074 3B68     		ldr	r3, [r7]
 626 0076 9B68     		ldr	r3, [r3, #8]
 627 0078 2448     		ldr	r0, .L31+4
 628 007a 1946     		mov	r1, r3
 629 007c FFF7FEFF 		bl	CLS1_SendStr
 225:../Generated_Code/TmDt1.c ****       CLS1_SendStr(cmd, io->stdErr);
 630              		.loc 1 225 0
 631 0080 3B68     		ldr	r3, [r7]
 632 0082 9B68     		ldr	r3, [r3, #8]
 633 0084 7868     		ldr	r0, [r7, #4]
 634 0086 1946     		mov	r1, r3
 635 0088 FFF7FEFF 		bl	CLS1_SendStr
 226:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"\r\n", io->stdErr);
 636              		.loc 1 226 0
 637 008c 3B68     		ldr	r3, [r7]
 638 008e 9B68     		ldr	r3, [r3, #8]
 639 0090 1F48     		ldr	r0, .L31+8
 640 0092 1946     		mov	r1, r3
 641 0094 FFF7FEFF 		bl	CLS1_SendStr
 227:../Generated_Code/TmDt1.c ****       res = ERR_FAILED;
 642              		.loc 1 227 0
 643 0098 1B23     		movs	r3, #27
 644 009a 87F82F30 		strb	r3, [r7, #47]
 645              	.L24:
 228:../Generated_Code/TmDt1.c ****     }
 229:../Generated_Code/TmDt1.c ****   }
 230:../Generated_Code/TmDt1.c ****   /* print now current time */
 231:../Generated_Code/TmDt1.c ****   if (res==ERR_OK) {
 646              		.loc 1 231 0
 647 009e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 648 00a2 002B     		cmp	r3, #0
 649 00a4 29D1     		bne	.L27
 650              	.LBB3:
 232:../Generated_Code/TmDt1.c ****     unsigned char buf[sizeof("RTC: hh:mm:ss.hh\\r\\n")+5];
 233:../Generated_Code/TmDt1.c **** 
 234:../Generated_Code/TmDt1.c ****     UTIL1_strcpy(buf, sizeof(buf), (unsigned char*)"RTC: ");
 651              		.loc 1 234 0
 652 00a6 07F10803 		add	r3, r7, #8
 653 00aa 1846     		mov	r0, r3
 654 00ac 1A21     		movs	r1, #26
 655 00ae 194A     		ldr	r2, .L31+12
 656 00b0 FFF7FEFF 		bl	UTIL1_strcpy
 235:../Generated_Code/TmDt1.c ****     if (AddTime(buf, sizeof(buf), TmDt1_GetTimeDate)!=ERR_OK) {
 657              		.loc 1 235 0
 658 00b4 07F10803 		add	r3, r7, #8
 659 00b8 1846     		mov	r0, r3
 660 00ba 1A21     		movs	r1, #26
 661 00bc 164A     		ldr	r2, .L31+16
 662 00be FFF7FEFF 		bl	AddTime
 663 00c2 0346     		mov	r3, r0
 664 00c4 002B     		cmp	r3, #0
 665 00c6 09D0     		beq	.L28
 236:../Generated_Code/TmDt1.c ****       CLS1_SendStr((unsigned char*)"***Failed to get time\r\n", io->stdErr);
 666              		.loc 1 236 0
 667 00c8 3B68     		ldr	r3, [r7]
 668 00ca 9B68     		ldr	r3, [r3, #8]
 669 00cc 1348     		ldr	r0, .L31+20
 670 00ce 1946     		mov	r1, r3
 671 00d0 FFF7FEFF 		bl	CLS1_SendStr
 237:../Generated_Code/TmDt1.c ****       res = ERR_FAILED;
 672              		.loc 1 237 0
 673 00d4 1B23     		movs	r3, #27
 674 00d6 87F82F30 		strb	r3, [r7, #47]
 675 00da 0EE0     		b	.L27
 676              	.L28:
 238:../Generated_Code/TmDt1.c ****     } else {
 239:../Generated_Code/TmDt1.c ****       UTIL1_strcat(buf, sizeof(buf), (unsigned char*)"\r\n");
 677              		.loc 1 239 0
 678 00dc 07F10803 		add	r3, r7, #8
 679 00e0 1846     		mov	r0, r3
 680 00e2 1A21     		movs	r1, #26
 681 00e4 0A4A     		ldr	r2, .L31+8
 682 00e6 FFF7FEFF 		bl	UTIL1_strcat
 240:../Generated_Code/TmDt1.c ****       CLS1_SendStr(buf, io->stdOut);
 683              		.loc 1 240 0
 684 00ea 3B68     		ldr	r3, [r7]
 685 00ec 5B68     		ldr	r3, [r3, #4]
 686 00ee 07F10802 		add	r2, r7, #8
 687 00f2 1046     		mov	r0, r2
 688 00f4 1946     		mov	r1, r3
 689 00f6 FFF7FEFF 		bl	CLS1_SendStr
 690              	.L27:
 691              	.LBE3:
 241:../Generated_Code/TmDt1.c ****     }
 242:../Generated_Code/TmDt1.c ****   }
 243:../Generated_Code/TmDt1.c ****   return res;
 692              		.loc 1 243 0
 693 00fa 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 244:../Generated_Code/TmDt1.c **** }
 694              		.loc 1 244 0
 695 00fe 1846     		mov	r0, r3
 696 0100 3437     		adds	r7, r7, #52
 697 0102 BD46     		mov	sp, r7
 698              		@ sp needed
 699 0104 90BD     		pop	{r4, r7, pc}
 700              	.L32:
 701 0106 00BF     		.align	2
 702              	.L31:
 703 0108 00000000 		.word	.LC1
 704 010c 68000000 		.word	.LC6
 705 0110 44000000 		.word	.LC3
 706 0114 48000000 		.word	.LC4
 707 0118 00000000 		.word	TmDt1_GetTimeDate
 708 011c 8C000000 		.word	.LC7
 709              		.cfi_endproc
 710              	.LFE5:
 712              		.section	.rodata
 713              		.align	2
 714              	.LC8:
 715 00a4 546D4474 		.ascii	"TmDt1\000"
 715      3100
 716 00aa 0000     		.align	2
 717              	.LC9:
 718 00ac 20205357 		.ascii	"  SW RTC\000"
 718      20525443 
 718      00
 719 00b5 000000   		.align	2
 720              	.LC10:
 721 00b8 00       		.ascii	"\000"
 722 00b9 000000   		.align	2
 723              	.LC11:
 724 00bc 2A2A2A46 		.ascii	"***Failed to get date!\015\012\000"
 724      61696C65 
 724      6420746F 
 724      20676574 
 724      20646174 
 725 00d5 000000   		.align	2
 726              	.LC12:
 727 00d8 2C2000   		.ascii	", \000"
 728 00db 00       		.align	2
 729              	.LC13:
 730 00dc 2A2A2A46 		.ascii	"***Failed to get time!\015\012\000"
 730      61696C65 
 730      6420746F 
 730      20676574 
 730      2074696D 
 731              		.section	.text.PrintStatus,"ax",%progbits
 732              		.align	2
 733              		.thumb
 734              		.thumb_func
 736              	PrintStatus:
 737              	.LFB6:
 245:../Generated_Code/TmDt1.c **** 
 246:../Generated_Code/TmDt1.c **** static uint8_t PrintStatus(CLS1_ConstStdIOType *io) {
 738              		.loc 1 246 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 32
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 88B0     		sub	sp, sp, #32
 747              		.cfi_def_cfa_offset 40
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 750 0006 7860     		str	r0, [r7, #4]
 247:../Generated_Code/TmDt1.c ****   uint8_t buf[24];
 248:../Generated_Code/TmDt1.c **** 
 249:../Generated_Code/TmDt1.c ****   CLS1_SendStatusStr((unsigned char*)"TmDt1", (const unsigned char*)"\r\n", io->stdOut);
 751              		.loc 1 249 0
 752 0008 7B68     		ldr	r3, [r7, #4]
 753 000a 5B68     		ldr	r3, [r3, #4]
 754 000c 2948     		ldr	r0, .L38
 755 000e 2A49     		ldr	r1, .L38+4
 756 0010 1A46     		mov	r2, r3
 757 0012 FFF7FEFF 		bl	CLS1_SendStatusStr
 250:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 251:../Generated_Code/TmDt1.c ****   CLS1_SendStatusStr((unsigned char*)"  SW RTC", (const unsigned char*)"", io->stdOut);
 758              		.loc 1 251 0
 759 0016 7B68     		ldr	r3, [r7, #4]
 760 0018 5B68     		ldr	r3, [r3, #4]
 761 001a 2848     		ldr	r0, .L38+8
 762 001c 2849     		ldr	r1, .L38+12
 763 001e 1A46     		mov	r2, r3
 764 0020 FFF7FEFF 		bl	CLS1_SendStatusStr
 252:../Generated_Code/TmDt1.c ****   buf[0] = '\0';
 765              		.loc 1 252 0
 766 0024 0023     		movs	r3, #0
 767 0026 3B72     		strb	r3, [r7, #8]
 253:../Generated_Code/TmDt1.c ****   if (AddDate(buf, sizeof(buf), TmDt1_GetSWTimeDate)!=ERR_OK) {
 768              		.loc 1 253 0
 769 0028 07F10803 		add	r3, r7, #8
 770 002c 1846     		mov	r0, r3
 771 002e 1821     		movs	r1, #24
 772 0030 244A     		ldr	r2, .L38+16
 773 0032 FFF7FEFF 		bl	AddDate
 774 0036 0346     		mov	r3, r0
 775 0038 002B     		cmp	r3, #0
 776 003a 07D0     		beq	.L34
 254:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get date!\r\n", io->stdErr);
 777              		.loc 1 254 0
 778 003c 7B68     		ldr	r3, [r7, #4]
 779 003e 9B68     		ldr	r3, [r3, #8]
 780 0040 2148     		ldr	r0, .L38+20
 781 0042 1946     		mov	r1, r3
 782 0044 FFF7FEFF 		bl	CLS1_SendStr
 255:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 783              		.loc 1 255 0
 784 0048 1B23     		movs	r3, #27
 785 004a 2FE0     		b	.L37
 786              	.L34:
 256:../Generated_Code/TmDt1.c ****   }
 257:../Generated_Code/TmDt1.c ****   CLS1_SendStr(buf, io->stdOut);
 787              		.loc 1 257 0
 788 004c 7B68     		ldr	r3, [r7, #4]
 789 004e 5B68     		ldr	r3, [r3, #4]
 790 0050 07F10802 		add	r2, r7, #8
 791 0054 1046     		mov	r0, r2
 792 0056 1946     		mov	r1, r3
 793 0058 FFF7FEFF 		bl	CLS1_SendStr
 258:../Generated_Code/TmDt1.c ****   UTIL1_strcpy(buf, sizeof(buf), (unsigned char*)", ");
 794              		.loc 1 258 0
 795 005c 07F10803 		add	r3, r7, #8
 796 0060 1846     		mov	r0, r3
 797 0062 1821     		movs	r1, #24
 798 0064 194A     		ldr	r2, .L38+24
 799 0066 FFF7FEFF 		bl	UTIL1_strcpy
 259:../Generated_Code/TmDt1.c ****   if (AddTime(buf, sizeof(buf), TmDt1_GetSWTimeDate)!=ERR_OK) {
 800              		.loc 1 259 0
 801 006a 07F10803 		add	r3, r7, #8
 802 006e 1846     		mov	r0, r3
 803 0070 1821     		movs	r1, #24
 804 0072 144A     		ldr	r2, .L38+16
 805 0074 FFF7FEFF 		bl	AddTime
 806 0078 0346     		mov	r3, r0
 807 007a 002B     		cmp	r3, #0
 808 007c 07D0     		beq	.L36
 260:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get time!\r\n", io->stdErr);
 809              		.loc 1 260 0
 810 007e 7B68     		ldr	r3, [r7, #4]
 811 0080 9B68     		ldr	r3, [r3, #8]
 812 0082 1348     		ldr	r0, .L38+28
 813 0084 1946     		mov	r1, r3
 814 0086 FFF7FEFF 		bl	CLS1_SendStr
 261:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 815              		.loc 1 261 0
 816 008a 1B23     		movs	r3, #27
 817 008c 0EE0     		b	.L37
 818              	.L36:
 262:../Generated_Code/TmDt1.c ****   } else {
 263:../Generated_Code/TmDt1.c ****     CLS1_SendStr(buf, io->stdOut);
 819              		.loc 1 263 0
 820 008e 7B68     		ldr	r3, [r7, #4]
 821 0090 5B68     		ldr	r3, [r3, #4]
 822 0092 07F10802 		add	r2, r7, #8
 823 0096 1046     		mov	r0, r2
 824 0098 1946     		mov	r1, r3
 825 009a FFF7FEFF 		bl	CLS1_SendStr
 264:../Generated_Code/TmDt1.c ****   }
 265:../Generated_Code/TmDt1.c ****   CLS1_SendStr((unsigned char*)"\r\n", io->stdOut);
 826              		.loc 1 265 0
 827 009e 7B68     		ldr	r3, [r7, #4]
 828 00a0 5B68     		ldr	r3, [r3, #4]
 829 00a2 0548     		ldr	r0, .L38+4
 830 00a4 1946     		mov	r1, r3
 831 00a6 FFF7FEFF 		bl	CLS1_SendStr
 266:../Generated_Code/TmDt1.c **** #endif
 267:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC_LDD || TmDt1_USE_INTERNAL_HW_RTC_BEAN
 268:../Generated_Code/TmDt1.c ****   CLS1_SendStatusStr((unsigned char*)"  HW RTC", (const unsigned char*)"", io->stdOut);
 269:../Generated_Code/TmDt1.c ****   buf[0] = '\0';
 270:../Generated_Code/TmDt1.c ****   if (AddDate(buf, sizeof(buf), TmDt1_GetInternalRTCTimeDate)!=ERR_OK) {
 271:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get internal RTC date!\r\n", io->stdErr);
 272:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 273:../Generated_Code/TmDt1.c ****   }
 274:../Generated_Code/TmDt1.c ****   CLS1_SendStr(buf, io->stdOut);
 275:../Generated_Code/TmDt1.c ****   UTIL1_strcpy(buf, sizeof(buf), (unsigned char*)", ");
 276:../Generated_Code/TmDt1.c ****   if (AddTime(buf, sizeof(buf), TmDt1_GetInternalRTCTimeDate)!=ERR_OK) {
 277:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get internal RTC time!\r\n", io->stdErr);
 278:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 279:../Generated_Code/TmDt1.c ****   } else {
 280:../Generated_Code/TmDt1.c ****     CLS1_SendStr(buf, io->stdOut);
 281:../Generated_Code/TmDt1.c ****   }
 282:../Generated_Code/TmDt1.c ****   CLS1_SendStr((unsigned char*)"\r\n", io->stdOut);
 283:../Generated_Code/TmDt1.c **** #endif
 284:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC
 285:../Generated_Code/TmDt1.c ****   CLS1_SendStatusStr((unsigned char*)"  Ext. RTC", (const unsigned char*)"", io->stdOut);
 286:../Generated_Code/TmDt1.c ****   buf[0] = '\0';
 287:../Generated_Code/TmDt1.c ****   if (AddDate(buf, sizeof(buf), TmDt1_GetExternalRTCTimeDate)!=ERR_OK) {
 288:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get external RTC date!\r\n", io->stdErr);
 289:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 290:../Generated_Code/TmDt1.c ****   }
 291:../Generated_Code/TmDt1.c ****   CLS1_SendStr(buf, io->stdOut);
 292:../Generated_Code/TmDt1.c ****   UTIL1_strcpy(buf, sizeof(buf), (unsigned char*)", ");
 293:../Generated_Code/TmDt1.c ****   if (AddTime(buf, sizeof(buf), TmDt1_GetExternalRTCTimeDate)!=ERR_OK) {
 294:../Generated_Code/TmDt1.c ****     CLS1_SendStr((unsigned char*)"***Failed to get external RTC time!\r\n", io->stdErr);
 295:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 296:../Generated_Code/TmDt1.c ****   } else {
 297:../Generated_Code/TmDt1.c ****     CLS1_SendStr(buf, io->stdOut);
 298:../Generated_Code/TmDt1.c ****   }
 299:../Generated_Code/TmDt1.c ****   CLS1_SendStr((unsigned char*)"\r\n", io->stdOut);
 300:../Generated_Code/TmDt1.c **** #endif
 301:../Generated_Code/TmDt1.c ****   return ERR_OK;
 832              		.loc 1 301 0
 833 00aa 0023     		movs	r3, #0
 834              	.L37:
 302:../Generated_Code/TmDt1.c **** }
 835              		.loc 1 302 0
 836 00ac 1846     		mov	r0, r3
 837 00ae 2037     		adds	r7, r7, #32
 838 00b0 BD46     		mov	sp, r7
 839              		@ sp needed
 840 00b2 80BD     		pop	{r7, pc}
 841              	.L39:
 842              		.align	2
 843              	.L38:
 844 00b4 A4000000 		.word	.LC8
 845 00b8 44000000 		.word	.LC3
 846 00bc AC000000 		.word	.LC9
 847 00c0 B8000000 		.word	.LC10
 848 00c4 00000000 		.word	TmDt1_GetSWTimeDate
 849 00c8 BC000000 		.word	.LC11
 850 00cc D8000000 		.word	.LC12
 851 00d0 DC000000 		.word	.LC13
 852              		.cfi_endproc
 853              	.LFE6:
 855              		.section	.text.TmDt1_AddTick,"ax",%progbits
 856              		.align	2
 857              		.global	TmDt1_AddTick
 858              		.thumb
 859              		.thumb_func
 861              	TmDt1_AddTick:
 862              	.LFB7:
 303:../Generated_Code/TmDt1.c **** 
 304:../Generated_Code/TmDt1.c **** /*
 305:../Generated_Code/TmDt1.c **** ** ===================================================================
 306:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_AddTick (component GenericTimeDate)
 307:../Generated_Code/TmDt1.c **** **     Description :
 308:../Generated_Code/TmDt1.c **** **         Increments the tick counter of the software RTC. Needs to be
 309:../Generated_Code/TmDt1.c **** **         called periodically by the application to increase the time
 310:../Generated_Code/TmDt1.c **** **         tick count.
 311:../Generated_Code/TmDt1.c **** **     Parameters  : None
 312:../Generated_Code/TmDt1.c **** **     Returns     : Nothing
 313:../Generated_Code/TmDt1.c **** ** ===================================================================
 314:../Generated_Code/TmDt1.c **** */
 315:../Generated_Code/TmDt1.c **** void TmDt1_AddTick(void)
 316:../Generated_Code/TmDt1.c **** {
 863              		.loc 1 316 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 868 0000 80B4     		push	{r7}
 869              		.cfi_def_cfa_offset 4
 870              		.cfi_offset 7, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 317:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 318:../Generated_Code/TmDt1.c ****   const uint8_t *ptr;                  /* Pointer to ULY/LY table */
 319:../Generated_Code/TmDt1.c ****   CS1_CriticalVariable()
 320:../Generated_Code/TmDt1.c **** 
 321:../Generated_Code/TmDt1.c ****   CS1_EnterCritical();                 /* need exclusive access to tick counter */
 875              		.loc 1 321 0
 876              	@ 321 "../Generated_Code/TmDt1.c" 1
 877 0006 EFF31080 		mrs   r0, PRIMASK     
 878 000a 72B6     		cpsid i               
 879 000c F870     		strb r0, [r7, #3]   
 880              		
 881              	@ 0 "" 2
 322:../Generated_Code/TmDt1.c ****   tickCntr++;                          /* Software timer counter increment by timer period */
 882              		.loc 1 322 0
 883              		.thumb
 884 000e 314B     		ldr	r3, .L44
 885 0010 1B68     		ldr	r3, [r3]
 886 0012 5A1C     		adds	r2, r3, #1
 887 0014 2F4B     		ldr	r3, .L44
 888 0016 1A60     		str	r2, [r3]
 323:../Generated_Code/TmDt1.c ****   CS1_ExitCritical();                  /* end of critical section */
 889              		.loc 1 323 0
 890              	@ 323 "../Generated_Code/TmDt1.c" 1
 891 0018 F878     		ldrb r0, [r7, #3]    
 892 001a 80F31088 		msr PRIMASK,r0        
 893              		
 894              	@ 0 "" 2
 324:../Generated_Code/TmDt1.c ****   if (tickCntr >= 24*3600UL*TmDt1_TICKS_PER_S) { /* Does the counter reach 24 hours? */
 895              		.loc 1 324 0
 896              		.thumb
 897 001e 2D4B     		ldr	r3, .L44
 898 0020 1A68     		ldr	r2, [r3]
 899 0022 2D4B     		ldr	r3, .L44+4
 900 0024 9A42     		cmp	r2, r3
 901 0026 4FD9     		bls	.L40
 325:../Generated_Code/TmDt1.c ****     tickCntr -= 24*3600UL*TmDt1_TICKS_PER_S; /* If yes then reset it by subtracting exactly 24 hour
 902              		.loc 1 325 0
 903 0028 2A4B     		ldr	r3, .L44
 904 002a 1B68     		ldr	r3, [r3]
 905 002c A3F50303 		sub	r3, r3, #8585216
 906 0030 A3F55643 		sub	r3, r3, #54784
 907 0034 274A     		ldr	r2, .L44
 908 0036 1360     		str	r3, [r2]
 326:../Generated_Code/TmDt1.c ****     CS1_EnterCritical();
 909              		.loc 1 326 0
 910              	@ 326 "../Generated_Code/TmDt1.c" 1
 911 0038 EFF31080 		mrs   r0, PRIMASK     
 912 003c 72B6     		cpsid i               
 913 003e F870     		strb r0, [r7, #3]   
 914              		
 915              	@ 0 "" 2
 327:../Generated_Code/TmDt1.c ****     CntDay++;                          /* Increment day counter */
 916              		.loc 1 327 0
 917              		.thumb
 918 0040 264B     		ldr	r3, .L44+8
 919 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0044 0133     		adds	r3, r3, #1
 921 0046 DAB2     		uxtb	r2, r3
 922 0048 244B     		ldr	r3, .L44+8
 923 004a 1A70     		strb	r2, [r3]
 328:../Generated_Code/TmDt1.c ****     CS1_ExitCritical();
 924              		.loc 1 328 0
 925              	@ 328 "../Generated_Code/TmDt1.c" 1
 926 004c F878     		ldrb r0, [r7, #3]    
 927 004e 80F31088 		msr PRIMASK,r0        
 928              		
 929              	@ 0 "" 2
 329:../Generated_Code/TmDt1.c ****     if (CntYear & 0x03U) {             /* Is this year un-leap-one? */
 930              		.loc 1 329 0
 931              		.thumb
 932 0052 234B     		ldr	r3, .L44+12
 933 0054 1B88     		ldrh	r3, [r3]
 934 0056 03F00303 		and	r3, r3, #3
 935 005a 002B     		cmp	r3, #0
 936 005c 02D0     		beq	.L42
 330:../Generated_Code/TmDt1.c ****       ptr = ULY;                       /* Set pointer to un-leap-year day table */
 937              		.loc 1 330 0
 938 005e 214B     		ldr	r3, .L44+16
 939 0060 7B60     		str	r3, [r7, #4]
 940 0062 01E0     		b	.L43
 941              	.L42:
 331:../Generated_Code/TmDt1.c ****     } else {                           /* Is this year leap-one? */
 332:../Generated_Code/TmDt1.c ****       ptr = LY;                        /* Set pointer to leap-year day table */
 942              		.loc 1 332 0
 943 0064 204B     		ldr	r3, .L44+20
 944 0066 7B60     		str	r3, [r7, #4]
 945              	.L43:
 333:../Generated_Code/TmDt1.c ****     }
 334:../Generated_Code/TmDt1.c ****     ptr--;                             /* Decrement the pointer */
 946              		.loc 1 334 0
 947 0068 7B68     		ldr	r3, [r7, #4]
 948 006a 013B     		subs	r3, r3, #1
 949 006c 7B60     		str	r3, [r7, #4]
 335:../Generated_Code/TmDt1.c ****     if (CntDay > ptr[CntMonth]) {      /* Day counter overflow? */
 950              		.loc 1 335 0
 951 006e 1F4B     		ldr	r3, .L44+24
 952 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 953 0072 7A68     		ldr	r2, [r7, #4]
 954 0074 1344     		add	r3, r3, r2
 955 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 956 0078 184B     		ldr	r3, .L44+8
 957 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 958 007c 9A42     		cmp	r2, r3
 959 007e 23D2     		bcs	.L40
 336:../Generated_Code/TmDt1.c ****       CntDay = 1U;                     /* Set day counter on 1 */
 960              		.loc 1 336 0
 961 0080 164B     		ldr	r3, .L44+8
 962 0082 0122     		movs	r2, #1
 963 0084 1A70     		strb	r2, [r3]
 337:../Generated_Code/TmDt1.c ****       CS1_EnterCritical();
 964              		.loc 1 337 0
 965              	@ 337 "../Generated_Code/TmDt1.c" 1
 966 0086 EFF31080 		mrs   r0, PRIMASK     
 967 008a 72B6     		cpsid i               
 968 008c F870     		strb r0, [r7, #3]   
 969              		
 970              	@ 0 "" 2
 338:../Generated_Code/TmDt1.c ****       CntMonth++;                      /* Increment month counter */
 971              		.loc 1 338 0
 972              		.thumb
 973 008e 174B     		ldr	r3, .L44+24
 974 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 975 0092 0133     		adds	r3, r3, #1
 976 0094 DAB2     		uxtb	r2, r3
 977 0096 154B     		ldr	r3, .L44+24
 978 0098 1A70     		strb	r2, [r3]
 339:../Generated_Code/TmDt1.c ****       CS1_ExitCritical();
 979              		.loc 1 339 0
 980              	@ 339 "../Generated_Code/TmDt1.c" 1
 981 009a F878     		ldrb r0, [r7, #3]    
 982 009c 80F31088 		msr PRIMASK,r0        
 983              		
 984              	@ 0 "" 2
 340:../Generated_Code/TmDt1.c ****       if (CntMonth > 12U) {            /* Month counter overflow? */
 985              		.loc 1 340 0
 986              		.thumb
 987 00a0 124B     		ldr	r3, .L44+24
 988 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 00a4 0C2B     		cmp	r3, #12
 990 00a6 0FD9     		bls	.L40
 341:../Generated_Code/TmDt1.c ****         CntMonth = 1U;                 /* Set month counter on 1 */
 991              		.loc 1 341 0
 992 00a8 104B     		ldr	r3, .L44+24
 993 00aa 0122     		movs	r2, #1
 994 00ac 1A70     		strb	r2, [r3]
 342:../Generated_Code/TmDt1.c ****         CS1_EnterCritical();
 995              		.loc 1 342 0
 996              	@ 342 "../Generated_Code/TmDt1.c" 1
 997 00ae EFF31080 		mrs   r0, PRIMASK     
 998 00b2 72B6     		cpsid i               
 999 00b4 F870     		strb r0, [r7, #3]   
 1000              		
 1001              	@ 0 "" 2
 343:../Generated_Code/TmDt1.c ****         CntYear++;                     /* Increment year counter */
 1002              		.loc 1 343 0
 1003              		.thumb
 1004 00b6 0A4B     		ldr	r3, .L44+12
 1005 00b8 1B88     		ldrh	r3, [r3]
 1006 00ba 0133     		adds	r3, r3, #1
 1007 00bc 9AB2     		uxth	r2, r3
 1008 00be 084B     		ldr	r3, .L44+12
 1009 00c0 1A80     		strh	r2, [r3]	@ movhi
 344:../Generated_Code/TmDt1.c ****         CS1_ExitCritical();
 1010              		.loc 1 344 0
 1011              	@ 344 "../Generated_Code/TmDt1.c" 1
 1012 00c2 F878     		ldrb r0, [r7, #3]    
 1013 00c4 80F31088 		msr PRIMASK,r0        
 1014              		
 1015              	@ 0 "" 2
 1016              		.thumb
 1017              	.L40:
 345:../Generated_Code/TmDt1.c ****       }
 346:../Generated_Code/TmDt1.c ****     }
 347:../Generated_Code/TmDt1.c ****   }
 348:../Generated_Code/TmDt1.c **** #endif
 349:../Generated_Code/TmDt1.c **** }
 1018              		.loc 1 349 0
 1019 00c8 0C37     		adds	r7, r7, #12
 1020 00ca BD46     		mov	sp, r7
 1021              		@ sp needed
 1022 00cc 5DF8047B 		ldr	r7, [sp], #4
 1023 00d0 7047     		bx	lr
 1024              	.L45:
 1025 00d2 00BF     		.align	2
 1026              	.L44:
 1027 00d4 00000000 		.word	tickCntr
 1028 00d8 FFD58300 		.word	8639999
 1029 00dc 00000000 		.word	CntDay
 1030 00e0 00000000 		.word	CntYear
 1031 00e4 00000000 		.word	ULY
 1032 00e8 00000000 		.word	LY
 1033 00ec 00000000 		.word	CntMonth
 1034              		.cfi_endproc
 1035              	.LFE7:
 1037              		.section	.text.TmDt1_AddTicks,"ax",%progbits
 1038              		.align	2
 1039              		.global	TmDt1_AddTicks
 1040              		.thumb
 1041              		.thumb_func
 1043              	TmDt1_AddTicks:
 1044              	.LFB8:
 350:../Generated_Code/TmDt1.c **** 
 351:../Generated_Code/TmDt1.c **** /*
 352:../Generated_Code/TmDt1.c **** ** ===================================================================
 353:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_AddTicks (component GenericTimeDate)
 354:../Generated_Code/TmDt1.c **** **     Description :
 355:../Generated_Code/TmDt1.c **** **         Same as AddTick(), but multiple ticks can be added in one
 356:../Generated_Code/TmDt1.c **** **         step.
 357:../Generated_Code/TmDt1.c **** **     Parameters  :
 358:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 359:../Generated_Code/TmDt1.c **** **         nofTicks        - Number of ticks to be added
 360:../Generated_Code/TmDt1.c **** **     Returns     : Nothing
 361:../Generated_Code/TmDt1.c **** ** ===================================================================
 362:../Generated_Code/TmDt1.c **** */
 363:../Generated_Code/TmDt1.c **** void TmDt1_AddTicks(uint16_t nofTicks)
 364:../Generated_Code/TmDt1.c **** {
 1045              		.loc 1 364 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 8
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 82B0     		sub	sp, sp, #8
 1054              		.cfi_def_cfa_offset 16
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 0346     		mov	r3, r0
 1058 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 365:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 366:../Generated_Code/TmDt1.c ****   while(nofTicks>0) {
 1059              		.loc 1 366 0
 1060 000a 04E0     		b	.L47
 1061              	.L48:
 367:../Generated_Code/TmDt1.c ****     TmDt1_AddTick();
 1062              		.loc 1 367 0
 1063 000c FFF7FEFF 		bl	TmDt1_AddTick
 368:../Generated_Code/TmDt1.c ****     nofTicks--;
 1064              		.loc 1 368 0
 1065 0010 FB88     		ldrh	r3, [r7, #6]
 1066 0012 013B     		subs	r3, r3, #1
 1067 0014 FB80     		strh	r3, [r7, #6]	@ movhi
 1068              	.L47:
 366:../Generated_Code/TmDt1.c ****   while(nofTicks>0) {
 1069              		.loc 1 366 0 discriminator 1
 1070 0016 FB88     		ldrh	r3, [r7, #6]
 1071 0018 002B     		cmp	r3, #0
 1072 001a F7D1     		bne	.L48
 369:../Generated_Code/TmDt1.c ****   }
 370:../Generated_Code/TmDt1.c **** #else
 371:../Generated_Code/TmDt1.c ****   (void)nofTicks; /* not used */
 372:../Generated_Code/TmDt1.c **** #endif
 373:../Generated_Code/TmDt1.c **** }
 1073              		.loc 1 373 0
 1074 001c 0837     		adds	r7, r7, #8
 1075 001e BD46     		mov	sp, r7
 1076              		@ sp needed
 1077 0020 80BD     		pop	{r7, pc}
 1078              		.cfi_endproc
 1079              	.LFE8:
 1081 0022 00BF     		.section	.text.TmDt1_SetSWTimeDate,"ax",%progbits
 1082              		.align	2
 1083              		.global	TmDt1_SetSWTimeDate
 1084              		.thumb
 1085              		.thumb_func
 1087              	TmDt1_SetSWTimeDate:
 1088              	.LFB9:
 374:../Generated_Code/TmDt1.c **** 
 375:../Generated_Code/TmDt1.c **** /*
 376:../Generated_Code/TmDt1.c **** ** ===================================================================
 377:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetSWTimeDate (component GenericTimeDate)
 378:../Generated_Code/TmDt1.c **** **     Description :
 379:../Generated_Code/TmDt1.c **** **         This method sets a new actual time and date of the software
 380:../Generated_Code/TmDt1.c **** **         RTC.
 381:../Generated_Code/TmDt1.c **** **     Parameters  :
 382:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 383:../Generated_Code/TmDt1.c **** **       * time            - Pointer to struct which contains the
 384:../Generated_Code/TmDt1.c **** **                           time to be set. Can be NULL if time shall
 385:../Generated_Code/TmDt1.c **** **                           not be set.
 386:../Generated_Code/TmDt1.c **** **       * date            - Pointer to struct which contains the
 387:../Generated_Code/TmDt1.c **** **                           date information to be set. Can be NULL if
 388:../Generated_Code/TmDt1.c **** **                           date shall not be set.
 389:../Generated_Code/TmDt1.c **** **     Returns     :
 390:../Generated_Code/TmDt1.c **** **         ---             - Error code
 391:../Generated_Code/TmDt1.c **** ** ===================================================================
 392:../Generated_Code/TmDt1.c **** */
 393:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetSWTimeDate(TIMEREC *time, DATEREC *date)
 394:../Generated_Code/TmDt1.c **** {
 1089              		.loc 1 394 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 24
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093 0000 80B5     		push	{r7, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 7, -8
 1096              		.cfi_offset 14, -4
 1097 0002 86B0     		sub	sp, sp, #24
 1098              		.cfi_def_cfa_offset 32
 1099 0004 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 1101 0006 7860     		str	r0, [r7, #4]
 1102 0008 3960     		str	r1, [r7]
 395:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 396:../Generated_Code/TmDt1.c ****   uint8_t res;
 397:../Generated_Code/TmDt1.c ****   uint32_t nofTicks;
 398:../Generated_Code/TmDt1.c ****   bool failed = FALSE;
 1103              		.loc 1 398 0
 1104 000a 0023     		movs	r3, #0
 1105 000c FB75     		strb	r3, [r7, #23]
 399:../Generated_Code/TmDt1.c ****   CS1_CriticalVariable()
 400:../Generated_Code/TmDt1.c **** 
 401:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 1106              		.loc 1 401 0
 1107 000e 7B68     		ldr	r3, [r7, #4]
 1108 0010 002B     		cmp	r3, #0
 1109 0012 19D0     		beq	.L50
 402:../Generated_Code/TmDt1.c ****     res = TmDt1_TimeToTicks(time, &nofTicks);
 1110              		.loc 1 402 0
 1111 0014 07F11003 		add	r3, r7, #16
 1112 0018 7868     		ldr	r0, [r7, #4]
 1113 001a 1946     		mov	r1, r3
 1114 001c FFF7FEFF 		bl	TmDt1_TimeToTicks
 1115 0020 0346     		mov	r3, r0
 1116 0022 BB75     		strb	r3, [r7, #22]
 403:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 1117              		.loc 1 403 0
 1118 0024 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1119 0026 002B     		cmp	r3, #0
 1120 0028 01D0     		beq	.L51
 404:../Generated_Code/TmDt1.c ****       failed = TRUE;
 1121              		.loc 1 404 0
 1122 002a 0123     		movs	r3, #1
 1123 002c FB75     		strb	r3, [r7, #23]
 1124              	.L51:
 405:../Generated_Code/TmDt1.c ****     }
 406:../Generated_Code/TmDt1.c ****     if (res==ERR_OK) {
 1125              		.loc 1 406 0
 1126 002e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1127 0030 002B     		cmp	r3, #0
 1128 0032 09D1     		bne	.L50
 407:../Generated_Code/TmDt1.c ****       CS1_EnterCritical();
 1129              		.loc 1 407 0
 1130              	@ 407 "../Generated_Code/TmDt1.c" 1
 1131 0034 EFF31080 		mrs   r0, PRIMASK     
 1132 0038 72B6     		cpsid i               
 1133 003a F873     		strb r0, [r7, #15]   
 1134              		
 1135              	@ 0 "" 2
 408:../Generated_Code/TmDt1.c ****       tickCntr = nofTicks;
 1136              		.loc 1 408 0
 1137              		.thumb
 1138 003c 3A69     		ldr	r2, [r7, #16]
 1139 003e 124B     		ldr	r3, .L56
 1140 0040 1A60     		str	r2, [r3]
 409:../Generated_Code/TmDt1.c ****       CS1_ExitCritical();
 1141              		.loc 1 409 0
 1142              	@ 409 "../Generated_Code/TmDt1.c" 1
 1143 0042 F87B     		ldrb r0, [r7, #15]    
 1144 0044 80F31088 		msr PRIMASK,r0        
 1145              		
 1146              	@ 0 "" 2
 1147              		.thumb
 1148              	.L50:
 410:../Generated_Code/TmDt1.c ****     }
 411:../Generated_Code/TmDt1.c ****   }
 412:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 1149              		.loc 1 412 0
 1150 0048 3B68     		ldr	r3, [r7]
 1151 004a 002B     		cmp	r3, #0
 1152 004c 12D0     		beq	.L52
 413:../Generated_Code/TmDt1.c ****     CS1_EnterCritical();
 1153              		.loc 1 413 0
 1154              	@ 413 "../Generated_Code/TmDt1.c" 1
 1155 004e EFF31080 		mrs   r0, PRIMASK     
 1156 0052 72B6     		cpsid i               
 1157 0054 F873     		strb r0, [r7, #15]   
 1158              		
 1159              	@ 0 "" 2
 414:../Generated_Code/TmDt1.c ****     CntDay = date->Day;
 1160              		.loc 1 414 0
 1161              		.thumb
 1162 0056 3B68     		ldr	r3, [r7]
 1163 0058 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1164 005a 0C4B     		ldr	r3, .L56+4
 1165 005c 1A70     		strb	r2, [r3]
 415:../Generated_Code/TmDt1.c ****     CntMonth = date->Month;
 1166              		.loc 1 415 0
 1167 005e 3B68     		ldr	r3, [r7]
 1168 0060 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1169 0062 0B4B     		ldr	r3, .L56+8
 1170 0064 1A70     		strb	r2, [r3]
 416:../Generated_Code/TmDt1.c ****     CntYear = date->Year;
 1171              		.loc 1 416 0
 1172 0066 3B68     		ldr	r3, [r7]
 1173 0068 1A88     		ldrh	r2, [r3]
 1174 006a 0A4B     		ldr	r3, .L56+12
 1175 006c 1A80     		strh	r2, [r3]	@ movhi
 417:../Generated_Code/TmDt1.c ****     CS1_ExitCritical();
 1176              		.loc 1 417 0
 1177              	@ 417 "../Generated_Code/TmDt1.c" 1
 1178 006e F87B     		ldrb r0, [r7, #15]    
 1179 0070 80F31088 		msr PRIMASK,r0        
 1180              		
 1181              	@ 0 "" 2
 1182              		.thumb
 1183              	.L52:
 418:../Generated_Code/TmDt1.c ****   }
 419:../Generated_Code/TmDt1.c ****   if (failed) {
 1184              		.loc 1 419 0
 1185 0074 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1186 0076 002B     		cmp	r3, #0
 1187 0078 01D0     		beq	.L53
 420:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 1188              		.loc 1 420 0
 1189 007a 1B23     		movs	r3, #27
 1190 007c 00E0     		b	.L55
 1191              	.L53:
 421:../Generated_Code/TmDt1.c ****   }
 422:../Generated_Code/TmDt1.c ****   return ERR_OK;
 1192              		.loc 1 422 0
 1193 007e 0023     		movs	r3, #0
 1194              	.L55:
 423:../Generated_Code/TmDt1.c **** #else
 424:../Generated_Code/TmDt1.c ****   return ERR_FAILED;
 425:../Generated_Code/TmDt1.c **** #endif
 426:../Generated_Code/TmDt1.c **** }
 1195              		.loc 1 426 0
 1196 0080 1846     		mov	r0, r3
 1197 0082 1837     		adds	r7, r7, #24
 1198 0084 BD46     		mov	sp, r7
 1199              		@ sp needed
 1200 0086 80BD     		pop	{r7, pc}
 1201              	.L57:
 1202              		.align	2
 1203              	.L56:
 1204 0088 00000000 		.word	tickCntr
 1205 008c 00000000 		.word	CntDay
 1206 0090 00000000 		.word	CntMonth
 1207 0094 00000000 		.word	CntYear
 1208              		.cfi_endproc
 1209              	.LFE9:
 1211              		.section	.text.TmDt1_GetSWTimeDate,"ax",%progbits
 1212              		.align	2
 1213              		.global	TmDt1_GetSWTimeDate
 1214              		.thumb
 1215              		.thumb_func
 1217              	TmDt1_GetSWTimeDate:
 1218              	.LFB10:
 427:../Generated_Code/TmDt1.c **** 
 428:../Generated_Code/TmDt1.c **** /*
 429:../Generated_Code/TmDt1.c **** ** ===================================================================
 430:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetSWTimeDate (component GenericTimeDate)
 431:../Generated_Code/TmDt1.c **** **     Description :
 432:../Generated_Code/TmDt1.c **** **         This method returns current time and date from the software
 433:../Generated_Code/TmDt1.c **** **         RTC.
 434:../Generated_Code/TmDt1.c **** **     Parameters  :
 435:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 436:../Generated_Code/TmDt1.c **** **       * time            - Pointer to the structure to return the
 437:../Generated_Code/TmDt1.c **** **                           time. Can be NULL.
 438:../Generated_Code/TmDt1.c **** **       * date            - Pointer to structure which returns the
 439:../Generated_Code/TmDt1.c **** **                           date information. Can be NULL
 440:../Generated_Code/TmDt1.c **** **     Returns     :
 441:../Generated_Code/TmDt1.c **** **         ---             - Error code
 442:../Generated_Code/TmDt1.c **** ** ===================================================================
 443:../Generated_Code/TmDt1.c **** */
 444:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetSWTimeDate(TIMEREC *time, DATEREC *date)
 445:../Generated_Code/TmDt1.c **** {
 1219              		.loc 1 445 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 24
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 86B0     		sub	sp, sp, #24
 1228              		.cfi_def_cfa_offset 32
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 1232 0008 3960     		str	r1, [r7]
 446:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC
 447:../Generated_Code/TmDt1.c ****   uint8_t res;
 448:../Generated_Code/TmDt1.c ****   uint32_t ticks;
 449:../Generated_Code/TmDt1.c ****   bool failed = FALSE;
 1233              		.loc 1 449 0
 1234 000a 0023     		movs	r3, #0
 1235 000c FB75     		strb	r3, [r7, #23]
 450:../Generated_Code/TmDt1.c ****   CS1_CriticalVariable()
 451:../Generated_Code/TmDt1.c **** 
 452:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 1236              		.loc 1 452 0
 1237 000e 7B68     		ldr	r3, [r7, #4]
 1238 0010 002B     		cmp	r3, #0
 1239 0012 14D0     		beq	.L59
 453:../Generated_Code/TmDt1.c ****     CS1_EnterCritical();
 1240              		.loc 1 453 0
 1241              	@ 453 "../Generated_Code/TmDt1.c" 1
 1242 0014 EFF31080 		mrs   r0, PRIMASK     
 1243 0018 72B6     		cpsid i               
 1244 001a B873     		strb r0, [r7, #14]   
 1245              		
 1246              	@ 0 "" 2
 454:../Generated_Code/TmDt1.c ****     ticks = tickCntr;
 1247              		.loc 1 454 0
 1248              		.thumb
 1249 001c 184B     		ldr	r3, .L64
 1250 001e 1B68     		ldr	r3, [r3]
 1251 0020 3B61     		str	r3, [r7, #16]
 455:../Generated_Code/TmDt1.c ****     CS1_ExitCritical();
 1252              		.loc 1 455 0
 1253              	@ 455 "../Generated_Code/TmDt1.c" 1
 1254 0022 B87B     		ldrb r0, [r7, #14]    
 1255 0024 80F31088 		msr PRIMASK,r0        
 1256              		
 1257              	@ 0 "" 2
 456:../Generated_Code/TmDt1.c ****     res = TmDt1_TicksToTime(ticks, time);
 1258              		.loc 1 456 0
 1259              		.thumb
 1260 0028 3869     		ldr	r0, [r7, #16]
 1261 002a 7968     		ldr	r1, [r7, #4]
 1262 002c FFF7FEFF 		bl	TmDt1_TicksToTime
 1263 0030 0346     		mov	r3, r0
 1264 0032 FB73     		strb	r3, [r7, #15]
 457:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 1265              		.loc 1 457 0
 1266 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1267 0036 002B     		cmp	r3, #0
 1268 0038 01D0     		beq	.L59
 458:../Generated_Code/TmDt1.c ****       failed = TRUE;
 1269              		.loc 1 458 0
 1270 003a 0123     		movs	r3, #1
 1271 003c FB75     		strb	r3, [r7, #23]
 1272              	.L59:
 459:../Generated_Code/TmDt1.c ****     }
 460:../Generated_Code/TmDt1.c ****   }
 461:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 1273              		.loc 1 461 0
 1274 003e 3B68     		ldr	r3, [r7]
 1275 0040 002B     		cmp	r3, #0
 1276 0042 12D0     		beq	.L60
 462:../Generated_Code/TmDt1.c ****     CS1_EnterCritical();
 1277              		.loc 1 462 0
 1278              	@ 462 "../Generated_Code/TmDt1.c" 1
 1279 0044 EFF31080 		mrs   r0, PRIMASK     
 1280 0048 72B6     		cpsid i               
 1281 004a B873     		strb r0, [r7, #14]   
 1282              		
 1283              	@ 0 "" 2
 463:../Generated_Code/TmDt1.c ****     date->Year = CntYear;
 1284              		.loc 1 463 0
 1285              		.thumb
 1286 004c 0D4B     		ldr	r3, .L64+4
 1287 004e 1A88     		ldrh	r2, [r3]
 1288 0050 3B68     		ldr	r3, [r7]
 1289 0052 1A80     		strh	r2, [r3]	@ movhi
 464:../Generated_Code/TmDt1.c ****     date->Month = CntMonth;
 1290              		.loc 1 464 0
 1291 0054 0C4B     		ldr	r3, .L64+8
 1292 0056 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1293 0058 3B68     		ldr	r3, [r7]
 1294 005a 9A70     		strb	r2, [r3, #2]
 465:../Generated_Code/TmDt1.c ****     date->Day = CntDay;
 1295              		.loc 1 465 0
 1296 005c 0B4B     		ldr	r3, .L64+12
 1297 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1298 0060 3B68     		ldr	r3, [r7]
 1299 0062 DA70     		strb	r2, [r3, #3]
 466:../Generated_Code/TmDt1.c ****     CS1_ExitCritical();
 1300              		.loc 1 466 0
 1301              	@ 466 "../Generated_Code/TmDt1.c" 1
 1302 0064 B87B     		ldrb r0, [r7, #14]    
 1303 0066 80F31088 		msr PRIMASK,r0        
 1304              		
 1305              	@ 0 "" 2
 1306              		.thumb
 1307              	.L60:
 467:../Generated_Code/TmDt1.c ****   }
 468:../Generated_Code/TmDt1.c ****   if (failed) {
 1308              		.loc 1 468 0
 1309 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1310 006c 002B     		cmp	r3, #0
 1311 006e 01D0     		beq	.L61
 469:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 1312              		.loc 1 469 0
 1313 0070 1B23     		movs	r3, #27
 1314 0072 00E0     		b	.L63
 1315              	.L61:
 470:../Generated_Code/TmDt1.c ****   }
 471:../Generated_Code/TmDt1.c ****   return ERR_OK;
 1316              		.loc 1 471 0
 1317 0074 0023     		movs	r3, #0
 1318              	.L63:
 472:../Generated_Code/TmDt1.c **** #else
 473:../Generated_Code/TmDt1.c ****   return ERR_FAILED;
 474:../Generated_Code/TmDt1.c **** #endif
 475:../Generated_Code/TmDt1.c **** }
 1319              		.loc 1 475 0
 1320 0076 1846     		mov	r0, r3
 1321 0078 1837     		adds	r7, r7, #24
 1322 007a BD46     		mov	sp, r7
 1323              		@ sp needed
 1324 007c 80BD     		pop	{r7, pc}
 1325              	.L65:
 1326 007e 00BF     		.align	2
 1327              	.L64:
 1328 0080 00000000 		.word	tickCntr
 1329 0084 00000000 		.word	CntYear
 1330 0088 00000000 		.word	CntMonth
 1331 008c 00000000 		.word	CntDay
 1332              		.cfi_endproc
 1333              	.LFE10:
 1335              		.section	.text.TmDt1_SetTime,"ax",%progbits
 1336              		.align	2
 1337              		.global	TmDt1_SetTime
 1338              		.thumb
 1339              		.thumb_func
 1341              	TmDt1_SetTime:
 1342              	.LFB11:
 476:../Generated_Code/TmDt1.c **** 
 477:../Generated_Code/TmDt1.c **** /*
 478:../Generated_Code/TmDt1.c **** ** ===================================================================
 479:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetTime (component GenericTimeDate)
 480:../Generated_Code/TmDt1.c **** **     Description :
 481:../Generated_Code/TmDt1.c **** **         This method sets a new actual time of the software RTC.
 482:../Generated_Code/TmDt1.c **** **     Parameters  :
 483:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 484:../Generated_Code/TmDt1.c **** **         Hour            - Hours (0 - 23)
 485:../Generated_Code/TmDt1.c **** **         Min             - Minutes (0 - 59)
 486:../Generated_Code/TmDt1.c **** **         Sec             - Seconds (0 - 59)
 487:../Generated_Code/TmDt1.c **** **         Sec100          - Hundredth of seconds (0 - 99)
 488:../Generated_Code/TmDt1.c **** **     Returns     :
 489:../Generated_Code/TmDt1.c **** **         ---             - Error code
 490:../Generated_Code/TmDt1.c **** ** ===================================================================
 491:../Generated_Code/TmDt1.c **** */
 492:../Generated_Code/TmDt1.c **** #ifdef __HIWARE__
 493:../Generated_Code/TmDt1.c ****   #pragma MESSAGE DISABLE C5905 /* multiplication with one (happens if TmDt1_TICKS_PER_S is 100) */
 494:../Generated_Code/TmDt1.c **** #endif
 495:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetTime(uint8_t Hour, uint8_t Min, uint8_t Sec, uint8_t Sec100)
 496:../Generated_Code/TmDt1.c **** {
 1343              		.loc 1 496 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 16
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347 0000 80B5     		push	{r7, lr}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 84B0     		sub	sp, sp, #16
 1352              		.cfi_def_cfa_offset 24
 1353 0004 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 1355 0006 F871     		strb	r0, [r7, #7]
 1356 0008 B971     		strb	r1, [r7, #6]
 1357 000a 7A71     		strb	r2, [r7, #5]
 1358 000c 3B71     		strb	r3, [r7, #4]
 497:../Generated_Code/TmDt1.c ****   uint8_t res = ERR_FAILED;
 1359              		.loc 1 497 0
 1360 000e 1B23     		movs	r3, #27
 1361 0010 FB73     		strb	r3, [r7, #15]
 498:../Generated_Code/TmDt1.c ****   TIMEREC time;
 499:../Generated_Code/TmDt1.c ****   bool failed = FALSE;
 1362              		.loc 1 499 0
 1363 0012 0023     		movs	r3, #0
 1364 0014 BB73     		strb	r3, [r7, #14]
 500:../Generated_Code/TmDt1.c **** 
 501:../Generated_Code/TmDt1.c ****   if ((Sec100>99U) || (Sec>59U) || (Min>59U) || (Hour>23U)) {
 1365              		.loc 1 501 0
 1366 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1367 0018 632B     		cmp	r3, #99
 1368 001a 08D8     		bhi	.L67
 1369              		.loc 1 501 0 is_stmt 0 discriminator 1
 1370 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1371 001e 3B2B     		cmp	r3, #59
 1372 0020 05D8     		bhi	.L67
 1373 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1374 0024 3B2B     		cmp	r3, #59
 1375 0026 02D8     		bhi	.L67
 1376 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1377 002a 172B     		cmp	r3, #23
 1378 002c 01D9     		bls	.L68
 1379              	.L67:
 502:../Generated_Code/TmDt1.c ****     return ERR_RANGE;
 1380              		.loc 1 502 0 is_stmt 1
 1381 002e 0223     		movs	r3, #2
 1382 0030 1AE0     		b	.L72
 1383              	.L68:
 503:../Generated_Code/TmDt1.c ****   }
 504:../Generated_Code/TmDt1.c ****   time.Hour = Hour;
 1384              		.loc 1 504 0
 1385 0032 FB79     		ldrb	r3, [r7, #7]
 1386 0034 3B72     		strb	r3, [r7, #8]
 505:../Generated_Code/TmDt1.c ****   time.Min = Min;
 1387              		.loc 1 505 0
 1388 0036 BB79     		ldrb	r3, [r7, #6]
 1389 0038 7B72     		strb	r3, [r7, #9]
 506:../Generated_Code/TmDt1.c ****   time.Sec = Sec;
 1390              		.loc 1 506 0
 1391 003a 7B79     		ldrb	r3, [r7, #5]
 1392 003c BB72     		strb	r3, [r7, #10]
 507:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
 508:../Generated_Code/TmDt1.c ****   time.Sec100 = Sec100;
 1393              		.loc 1 508 0
 1394 003e 3B79     		ldrb	r3, [r7, #4]
 1395 0040 FB72     		strb	r3, [r7, #11]
 509:../Generated_Code/TmDt1.c **** #endif
 510:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_SOFTWARE_RTC
 511:../Generated_Code/TmDt1.c ****   res = TmDt1_SetSWTimeDate(&time, NULL);
 1396              		.loc 1 511 0
 1397 0042 07F10803 		add	r3, r7, #8
 1398 0046 1846     		mov	r0, r3
 1399 0048 0021     		movs	r1, #0
 1400 004a FFF7FEFF 		bl	TmDt1_SetSWTimeDate
 1401 004e 0346     		mov	r3, r0
 1402 0050 FB73     		strb	r3, [r7, #15]
 512:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 1403              		.loc 1 512 0
 1404 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1405 0054 002B     		cmp	r3, #0
 1406 0056 01D0     		beq	.L70
 513:../Generated_Code/TmDt1.c ****     failed = TRUE;
 1407              		.loc 1 513 0
 1408 0058 0123     		movs	r3, #1
 1409 005a BB73     		strb	r3, [r7, #14]
 1410              	.L70:
 514:../Generated_Code/TmDt1.c ****   }
 515:../Generated_Code/TmDt1.c **** #endif
 516:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_INTERNAL_RTC
 517:../Generated_Code/TmDt1.c ****   res = TmDt1_SetInternalRTCTimeDate(&time, NULL);
 518:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 519:../Generated_Code/TmDt1.c ****     failed = TRUE;
 520:../Generated_Code/TmDt1.c ****   }
 521:../Generated_Code/TmDt1.c **** #endif
 522:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_EXTERNAL_RTC
 523:../Generated_Code/TmDt1.c ****   res = TmDt1_SetExternalRTCTimeDate(&time, NULL);
 524:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 525:../Generated_Code/TmDt1.c ****     failed = TRUE;
 526:../Generated_Code/TmDt1.c ****   }
 527:../Generated_Code/TmDt1.c **** #endif
 528:../Generated_Code/TmDt1.c **** #if TmDt1_ON_TIME_SET_EVENT
 529:../Generated_Code/TmDt1.c ****   TmDt1_ON_TIME_SET_EVENT_NAME(Hour, Min, Sec, Sec100); /* call user event */
 530:../Generated_Code/TmDt1.c **** #endif
 531:../Generated_Code/TmDt1.c ****   if (failed) {
 1411              		.loc 1 531 0
 1412 005c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1413 005e 002B     		cmp	r3, #0
 1414 0060 01D0     		beq	.L71
 532:../Generated_Code/TmDt1.c ****     res = ERR_FAILED;
 1415              		.loc 1 532 0
 1416 0062 1B23     		movs	r3, #27
 1417 0064 FB73     		strb	r3, [r7, #15]
 1418              	.L71:
 533:../Generated_Code/TmDt1.c ****   }
 534:../Generated_Code/TmDt1.c ****   return res;
 1419              		.loc 1 534 0
 1420 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1421              	.L72:
 535:../Generated_Code/TmDt1.c **** }
 1422              		.loc 1 535 0
 1423 0068 1846     		mov	r0, r3
 1424 006a 1037     		adds	r7, r7, #16
 1425 006c BD46     		mov	sp, r7
 1426              		@ sp needed
 1427 006e 80BD     		pop	{r7, pc}
 1428              		.cfi_endproc
 1429              	.LFE11:
 1431              		.section	.text.TmDt1_GetTime,"ax",%progbits
 1432              		.align	2
 1433              		.global	TmDt1_GetTime
 1434              		.thumb
 1435              		.thumb_func
 1437              	TmDt1_GetTime:
 1438              	.LFB12:
 536:../Generated_Code/TmDt1.c **** #ifdef __HIWARE__
 537:../Generated_Code/TmDt1.c ****   #pragma MESSAGE DEFAULT C5905 /* multiplication with one  */
 538:../Generated_Code/TmDt1.c **** #endif
 539:../Generated_Code/TmDt1.c **** 
 540:../Generated_Code/TmDt1.c **** /*
 541:../Generated_Code/TmDt1.c **** ** ===================================================================
 542:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetTime (component GenericTimeDate)
 543:../Generated_Code/TmDt1.c **** **     Description :
 544:../Generated_Code/TmDt1.c **** **         This method returns current time from the software RTC.
 545:../Generated_Code/TmDt1.c **** **     Parameters  :
 546:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 547:../Generated_Code/TmDt1.c **** **       * time            - Pointer to the structure TIMEREC. It
 548:../Generated_Code/TmDt1.c **** **                           contains actual number of hours, minutes,
 549:../Generated_Code/TmDt1.c **** **                           seconds and hundredth of seconds.
 550:../Generated_Code/TmDt1.c **** **     Returns     :
 551:../Generated_Code/TmDt1.c **** **         ---             - Error code
 552:../Generated_Code/TmDt1.c **** ** ===================================================================
 553:../Generated_Code/TmDt1.c **** */
 554:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetTime(TIMEREC *time)
 555:../Generated_Code/TmDt1.c **** {
 1439              		.loc 1 555 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 16
 1442              		@ frame_needed = 1, uses_anonymous_args = 0
 1443 0000 80B5     		push	{r7, lr}
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 84B0     		sub	sp, sp, #16
 1448              		.cfi_def_cfa_offset 24
 1449 0004 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 556:../Generated_Code/TmDt1.c ****   uint8_t res;
 557:../Generated_Code/TmDt1.c **** 
 558:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_SOFTWARE_R
 559:../Generated_Code/TmDt1.c ****   res = TmDt1_GetSWTimeDate(time, NULL);
 1452              		.loc 1 559 0
 1453 0008 7868     		ldr	r0, [r7, #4]
 1454 000a 0021     		movs	r1, #0
 1455 000c FFF7FEFF 		bl	TmDt1_GetSWTimeDate
 1456 0010 0346     		mov	r3, r0
 1457 0012 FB73     		strb	r3, [r7, #15]
 560:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_INTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_INTER
 561:../Generated_Code/TmDt1.c ****   res = TmDt1_GetInternalRTCTimeDate(time, NULL);
 562:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_EXTER
 563:../Generated_Code/TmDt1.c ****   res = TmDt1_GetExternalRTCTimeDate(time, NULL);
 564:../Generated_Code/TmDt1.c **** #else
 565:../Generated_Code/TmDt1.c ****   #error "invalid configuration!"
 566:../Generated_Code/TmDt1.c ****   res = ERR_FAILED;
 567:../Generated_Code/TmDt1.c **** #endif
 568:../Generated_Code/TmDt1.c ****   /* call user event */
 569:../Generated_Code/TmDt1.c **** #if TmDt1_ON_TIME_GET_EVENT
 570:../Generated_Code/TmDt1.c ****   #if TmDt1_HAS_SEC100_IN_TIMEREC
 571:../Generated_Code/TmDt1.c ****     TmDt1_ON_TIME_GET_EVENT_NAME(&time->Hour, &time->Min, &time->Sec, &time->Sec100);
 572:../Generated_Code/TmDt1.c ****   #else
 573:../Generated_Code/TmDt1.c ****     TmDt1_ON_TIME_GET_EVENT_NAME(&time->Hour, &time->Min, &time->Sec, 0);
 574:../Generated_Code/TmDt1.c ****   #endif
 575:../Generated_Code/TmDt1.c **** #endif
 576:../Generated_Code/TmDt1.c ****   return res;
 1458              		.loc 1 576 0
 1459 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 577:../Generated_Code/TmDt1.c **** }
 1460              		.loc 1 577 0
 1461 0016 1846     		mov	r0, r3
 1462 0018 1037     		adds	r7, r7, #16
 1463 001a BD46     		mov	sp, r7
 1464              		@ sp needed
 1465 001c 80BD     		pop	{r7, pc}
 1466              		.cfi_endproc
 1467              	.LFE12:
 1469 001e 00BF     		.section	.text.TmDt1_SetDate,"ax",%progbits
 1470              		.align	2
 1471              		.global	TmDt1_SetDate
 1472              		.thumb
 1473              		.thumb_func
 1475              	TmDt1_SetDate:
 1476              	.LFB13:
 578:../Generated_Code/TmDt1.c **** 
 579:../Generated_Code/TmDt1.c **** /*
 580:../Generated_Code/TmDt1.c **** ** ===================================================================
 581:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetDate (component GenericTimeDate)
 582:../Generated_Code/TmDt1.c **** **     Description :
 583:../Generated_Code/TmDt1.c **** **         This method sets a new actual date of the software RTC.
 584:../Generated_Code/TmDt1.c **** **     Parameters  :
 585:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 586:../Generated_Code/TmDt1.c **** **         Year            - Years (16-bit unsigned integer)
 587:../Generated_Code/TmDt1.c **** **         Month           - Months (8-bit unsigned integer)
 588:../Generated_Code/TmDt1.c **** **         Day             - Days (8-bit unsigned integer)
 589:../Generated_Code/TmDt1.c **** **     Returns     :
 590:../Generated_Code/TmDt1.c **** **         ---             - Error code
 591:../Generated_Code/TmDt1.c **** ** ===================================================================
 592:../Generated_Code/TmDt1.c **** */
 593:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetDate(uint16_t Year, uint8_t Month, uint8_t Day)
 594:../Generated_Code/TmDt1.c **** {
 1477              		.loc 1 594 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 24
 1480              		@ frame_needed = 1, uses_anonymous_args = 0
 1481 0000 80B5     		push	{r7, lr}
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 7, -8
 1484              		.cfi_offset 14, -4
 1485 0002 86B0     		sub	sp, sp, #24
 1486              		.cfi_def_cfa_offset 32
 1487 0004 00AF     		add	r7, sp, #0
 1488              		.cfi_def_cfa_register 7
 1489 0006 1346     		mov	r3, r2
 1490 0008 0246     		mov	r2, r0	@ movhi
 1491 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1492 000c 0A46     		mov	r2, r1
 1493 000e 7A71     		strb	r2, [r7, #5]
 1494 0010 3B71     		strb	r3, [r7, #4]
 595:../Generated_Code/TmDt1.c ****   const uint8_t* ptr;                  /* Pointer to ULY/LY table */
 596:../Generated_Code/TmDt1.c ****   uint8_t res = ERR_FAILED;
 1495              		.loc 1 596 0
 1496 0012 1B23     		movs	r3, #27
 1497 0014 FB75     		strb	r3, [r7, #23]
 597:../Generated_Code/TmDt1.c ****   bool failed = FALSE;
 1498              		.loc 1 597 0
 1499 0016 0023     		movs	r3, #0
 1500 0018 BB75     		strb	r3, [r7, #22]
 598:../Generated_Code/TmDt1.c ****   DATEREC date;
 599:../Generated_Code/TmDt1.c **** 
 600:../Generated_Code/TmDt1.c ****   if ((Year < 1998U) || (Year > 2099U) || (Month > 12U) || (Month == 0U) || (Day > 31U) || (Day == 
 1501              		.loc 1 600 0
 1502 001a FA88     		ldrh	r2, [r7, #6]
 1503 001c 40F2CD73 		movw	r3, #1997
 1504 0020 9A42     		cmp	r2, r3
 1505 0022 10D9     		bls	.L76
 1506              		.loc 1 600 0 is_stmt 0 discriminator 1
 1507 0024 FA88     		ldrh	r2, [r7, #6]
 1508 0026 40F63303 		movw	r3, #2099
 1509 002a 9A42     		cmp	r2, r3
 1510 002c 0BD8     		bhi	.L76
 1511 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1512 0030 0C2B     		cmp	r3, #12
 1513 0032 08D8     		bhi	.L76
 1514 0034 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1515 0036 002B     		cmp	r3, #0
 1516 0038 05D0     		beq	.L76
 1517 003a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1518 003c 1F2B     		cmp	r3, #31
 1519 003e 02D8     		bhi	.L76
 1520 0040 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1521 0042 002B     		cmp	r3, #0
 1522 0044 01D1     		bne	.L77
 1523              	.L76:
 601:../Generated_Code/TmDt1.c ****     return ERR_RANGE;
 1524              		.loc 1 601 0 is_stmt 1
 1525 0046 0223     		movs	r3, #2
 1526 0048 2BE0     		b	.L84
 1527              	.L77:
 602:../Generated_Code/TmDt1.c ****   }
 603:../Generated_Code/TmDt1.c ****   ptr = (((Year&0x03U)!=0U)?ULY:LY); /* Set pointer to leap-year or un-leap-year day table */
 1528              		.loc 1 603 0
 1529 004a FB88     		ldrh	r3, [r7, #6]
 1530 004c 03F00303 		and	r3, r3, #3
 1531 0050 002B     		cmp	r3, #0
 1532 0052 01D0     		beq	.L79
 1533              		.loc 1 603 0 is_stmt 0 discriminator 1
 1534 0054 154B     		ldr	r3, .L85
 1535 0056 00E0     		b	.L80
 1536              	.L79:
 1537              		.loc 1 603 0 discriminator 2
 1538 0058 154B     		ldr	r3, .L85+4
 1539              	.L80:
 1540              		.loc 1 603 0 discriminator 3
 1541 005a 3B61     		str	r3, [r7, #16]
 604:../Generated_Code/TmDt1.c ****   if (ptr[Month - 1U] < Day) { /* Does the obtained number of days exceed number of days in the app
 1542              		.loc 1 604 0 is_stmt 1 discriminator 3
 1543 005c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1544 005e 013B     		subs	r3, r3, #1
 1545 0060 3A69     		ldr	r2, [r7, #16]
 1546 0062 1344     		add	r3, r3, r2
 1547 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 0066 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1549 0068 9A42     		cmp	r2, r3
 1550 006a 01D9     		bls	.L81
 605:../Generated_Code/TmDt1.c ****     return ERR_RANGE;
 1551              		.loc 1 605 0
 1552 006c 0223     		movs	r3, #2
 1553 006e 18E0     		b	.L84
 1554              	.L81:
 606:../Generated_Code/TmDt1.c ****   }
 607:../Generated_Code/TmDt1.c ****   date.Year = Year;
 1555              		.loc 1 607 0
 1556 0070 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1557 0072 BB81     		strh	r3, [r7, #12]	@ movhi
 608:../Generated_Code/TmDt1.c ****   date.Month = Month;
 1558              		.loc 1 608 0
 1559 0074 7B79     		ldrb	r3, [r7, #5]
 1560 0076 BB73     		strb	r3, [r7, #14]
 609:../Generated_Code/TmDt1.c ****   date.Day = Day;
 1561              		.loc 1 609 0
 1562 0078 3B79     		ldrb	r3, [r7, #4]
 1563 007a FB73     		strb	r3, [r7, #15]
 610:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_SOFTWARE_RTC
 611:../Generated_Code/TmDt1.c ****   res = TmDt1_SetSWTimeDate(NULL, &date);
 1564              		.loc 1 611 0
 1565 007c 07F10C03 		add	r3, r7, #12
 1566 0080 0020     		movs	r0, #0
 1567 0082 1946     		mov	r1, r3
 1568 0084 FFF7FEFF 		bl	TmDt1_SetSWTimeDate
 1569 0088 0346     		mov	r3, r0
 1570 008a FB75     		strb	r3, [r7, #23]
 612:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 1571              		.loc 1 612 0
 1572 008c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1573 008e 002B     		cmp	r3, #0
 1574 0090 01D0     		beq	.L82
 613:../Generated_Code/TmDt1.c ****     failed = TRUE;
 1575              		.loc 1 613 0
 1576 0092 0123     		movs	r3, #1
 1577 0094 BB75     		strb	r3, [r7, #22]
 1578              	.L82:
 614:../Generated_Code/TmDt1.c ****   }
 615:../Generated_Code/TmDt1.c **** #endif
 616:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_INTERNAL_RTC
 617:../Generated_Code/TmDt1.c ****   res = TmDt1_SetInternalRTCTimeDate(NULL, &date);
 618:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 619:../Generated_Code/TmDt1.c ****     failed = TRUE;
 620:../Generated_Code/TmDt1.c ****   }
 621:../Generated_Code/TmDt1.c **** #endif
 622:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_EXTERNAL_RTC
 623:../Generated_Code/TmDt1.c ****   res = TmDt1_SetExternalRTCTimeDate(NULL, &date);
 624:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 625:../Generated_Code/TmDt1.c ****     failed = TRUE;
 626:../Generated_Code/TmDt1.c ****   }
 627:../Generated_Code/TmDt1.c **** #endif
 628:../Generated_Code/TmDt1.c **** #if TmDt1_ON_DATE_SET_EVENT
 629:../Generated_Code/TmDt1.c ****   TmDt1_ON_DATE_SET_EVENT_NAME(Day, Month, Year); /* call user event */
 630:../Generated_Code/TmDt1.c **** #endif
 631:../Generated_Code/TmDt1.c ****   if (failed) {
 1579              		.loc 1 631 0
 1580 0096 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1581 0098 002B     		cmp	r3, #0
 1582 009a 01D0     		beq	.L83
 632:../Generated_Code/TmDt1.c ****     res = ERR_FAILED;
 1583              		.loc 1 632 0
 1584 009c 1B23     		movs	r3, #27
 1585 009e FB75     		strb	r3, [r7, #23]
 1586              	.L83:
 633:../Generated_Code/TmDt1.c ****   }
 634:../Generated_Code/TmDt1.c ****   return res;
 1587              		.loc 1 634 0
 1588 00a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1589              	.L84:
 635:../Generated_Code/TmDt1.c **** }
 1590              		.loc 1 635 0
 1591 00a2 1846     		mov	r0, r3
 1592 00a4 1837     		adds	r7, r7, #24
 1593 00a6 BD46     		mov	sp, r7
 1594              		@ sp needed
 1595 00a8 80BD     		pop	{r7, pc}
 1596              	.L86:
 1597 00aa 00BF     		.align	2
 1598              	.L85:
 1599 00ac 00000000 		.word	ULY
 1600 00b0 00000000 		.word	LY
 1601              		.cfi_endproc
 1602              	.LFE13:
 1604              		.section	.text.TmDt1_GetDate,"ax",%progbits
 1605              		.align	2
 1606              		.global	TmDt1_GetDate
 1607              		.thumb
 1608              		.thumb_func
 1610              	TmDt1_GetDate:
 1611              	.LFB14:
 636:../Generated_Code/TmDt1.c **** 
 637:../Generated_Code/TmDt1.c **** /*
 638:../Generated_Code/TmDt1.c **** ** ===================================================================
 639:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetDate (component GenericTimeDate)
 640:../Generated_Code/TmDt1.c **** **     Description :
 641:../Generated_Code/TmDt1.c **** **         This method returns current date from the software RTC.
 642:../Generated_Code/TmDt1.c **** **     Parameters  :
 643:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 644:../Generated_Code/TmDt1.c **** **       * date            - Pointer to DATEREC
 645:../Generated_Code/TmDt1.c **** **     Returns     :
 646:../Generated_Code/TmDt1.c **** **         ---             - Error code
 647:../Generated_Code/TmDt1.c **** ** ===================================================================
 648:../Generated_Code/TmDt1.c **** */
 649:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetDate(DATEREC *date)
 650:../Generated_Code/TmDt1.c **** {
 1612              		.loc 1 650 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 16
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616 0000 80B5     		push	{r7, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 84B0     		sub	sp, sp, #16
 1621              		.cfi_def_cfa_offset 24
 1622 0004 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 1624 0006 7860     		str	r0, [r7, #4]
 651:../Generated_Code/TmDt1.c ****   uint8_t res;
 652:../Generated_Code/TmDt1.c **** 
 653:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_SOFTWARE_R
 654:../Generated_Code/TmDt1.c ****   res = TmDt1_GetSWTimeDate(NULL, date);
 1625              		.loc 1 654 0
 1626 0008 0020     		movs	r0, #0
 1627 000a 7968     		ldr	r1, [r7, #4]
 1628 000c FFF7FEFF 		bl	TmDt1_GetSWTimeDate
 1629 0010 0346     		mov	r3, r0
 1630 0012 FB73     		strb	r3, [r7, #15]
 655:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_INTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_INTER
 656:../Generated_Code/TmDt1.c ****   res = TmDt1_GetInternalRTCTimeDate(NULL, date);
 657:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_EXTER
 658:../Generated_Code/TmDt1.c ****   res = TmDt1_GetExternalRTCTimeDate(NULL, date);
 659:../Generated_Code/TmDt1.c **** #else
 660:../Generated_Code/TmDt1.c ****   #error "invalid configuration!"
 661:../Generated_Code/TmDt1.c ****   res = ERR_FAILED;
 662:../Generated_Code/TmDt1.c **** #endif
 663:../Generated_Code/TmDt1.c **** #if TmDt1_ON_DATE_GET_EVENT && TmDt1_USE_SOFTWARE_RTC
 664:../Generated_Code/TmDt1.c ****   TmDt1_ON_DATE_GET_EVENT_NAME(&CntDay, &CntMonth, &CntYear); /* call user event */
 665:../Generated_Code/TmDt1.c **** #endif
 666:../Generated_Code/TmDt1.c ****   return res;
 1631              		.loc 1 666 0
 1632 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 667:../Generated_Code/TmDt1.c **** }
 1633              		.loc 1 667 0
 1634 0016 1846     		mov	r0, r3
 1635 0018 1037     		adds	r7, r7, #16
 1636 001a BD46     		mov	sp, r7
 1637              		@ sp needed
 1638 001c 80BD     		pop	{r7, pc}
 1639              		.cfi_endproc
 1640              	.LFE14:
 1642 001e 00BF     		.section	.text.TmDt1_Init,"ax",%progbits
 1643              		.align	2
 1644              		.global	TmDt1_Init
 1645              		.thumb
 1646              		.thumb_func
 1648              	TmDt1_Init:
 1649              	.LFB15:
 668:../Generated_Code/TmDt1.c **** 
 669:../Generated_Code/TmDt1.c **** /*
 670:../Generated_Code/TmDt1.c **** ** ===================================================================
 671:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_Init (component GenericTimeDate)
 672:../Generated_Code/TmDt1.c **** **     Description :
 673:../Generated_Code/TmDt1.c **** **         Initialization method
 674:../Generated_Code/TmDt1.c **** **     Parameters  : None
 675:../Generated_Code/TmDt1.c **** **     Returns     :
 676:../Generated_Code/TmDt1.c **** **         ---             - Error code
 677:../Generated_Code/TmDt1.c **** ** ===================================================================
 678:../Generated_Code/TmDt1.c **** */
 679:../Generated_Code/TmDt1.c **** uint8_t TmDt1_Init(void)
 680:../Generated_Code/TmDt1.c **** {
 1650              		.loc 1 680 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 681:../Generated_Code/TmDt1.c ****   /* initialize software RTC time and date */
 682:../Generated_Code/TmDt1.c **** #if TmDt1_INIT_SOFTWARE_RTC_METHOD==TmDt1_INIT_SOFTWARE_RTC_FROM_DEFAULTS
 683:../Generated_Code/TmDt1.c ****   return TmDt1_SetSWTimeDate((TIMEREC*)&TmDt1_DefaultTime, (DATEREC*)&TmDt1_DefaultDate);
 1660              		.loc 1 683 0
 1661 0004 0348     		ldr	r0, .L91
 1662 0006 0449     		ldr	r1, .L91+4
 1663 0008 FFF7FEFF 		bl	TmDt1_SetSWTimeDate
 1664 000c 0346     		mov	r3, r0
 684:../Generated_Code/TmDt1.c **** #elif TmDt1_INIT_SOFTWARE_RTC_METHOD==TmDt1_INIT_SOFTWARE_RTC_FROM_INTERNAL_RTC
 685:../Generated_Code/TmDt1.c ****   return TmDt1_SyncWithInternalRTC();
 686:../Generated_Code/TmDt1.c **** #elif TmDt1_INIT_SOFTWARE_RTC_METHOD==TmDt1_INIT_SOFTWARE_RTC_FROM_EXTERNAL_RTC
 687:../Generated_Code/TmDt1.c ****   return TmDt1_SyncWithExternalRTC();
 688:../Generated_Code/TmDt1.c **** #else
 689:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* wrong or no init specified? */
 690:../Generated_Code/TmDt1.c **** #endif
 691:../Generated_Code/TmDt1.c **** }
 1665              		.loc 1 691 0
 1666 000e 1846     		mov	r0, r3
 1667 0010 80BD     		pop	{r7, pc}
 1668              	.L92:
 1669 0012 00BF     		.align	2
 1670              	.L91:
 1671 0014 00000000 		.word	TmDt1_DefaultTime
 1672 0018 00000000 		.word	TmDt1_DefaultDate
 1673              		.cfi_endproc
 1674              	.LFE15:
 1676              		.section	.rodata
 1677 00f5 000000   		.align	2
 1678              	.LC14:
 1679 00f8 68656C70 		.ascii	"help\000"
 1679      00
 1680 00fd 000000   		.align	2
 1681              	.LC15:
 1682 0100 546D4474 		.ascii	"TmDt1 help\000"
 1682      31206865 
 1682      6C7000
 1683 010b 00       		.align	2
 1684              	.LC16:
 1685 010c 47726F75 		.ascii	"Group of TmDt1 commands\015\012\000"
 1685      70206F66 
 1685      20546D44 
 1685      74312063 
 1685      6F6D6D61 
 1686 0126 0000     		.align	2
 1687              	.LC17:
 1688 0128 20206865 		.ascii	"  help|status\000"
 1688      6C707C73 
 1688      74617475 
 1688      7300
 1689 0136 0000     		.align	2
 1690              	.LC18:
 1691 0138 5072696E 		.ascii	"Print help or status information\015\012\000"
 1691      74206865 
 1691      6C70206F 
 1691      72207374 
 1691      61747573 
 1692 015b 00       		.align	2
 1693              	.LC19:
 1694 015c 20207469 		.ascii	"  time [hh:mm:ss[,z]]\000"
 1694      6D65205B 
 1694      68683A6D 
 1694      6D3A7373 
 1694      5B2C7A5D 
 1695 0172 0000     		.align	2
 1696              	.LC20:
 1697 0174 53657420 		.ascii	"Set the current time. Prints the current time if no"
 1697      74686520 
 1697      63757272 
 1697      656E7420 
 1697      74696D65 
 1698 01a7 20617267 		.ascii	" argument\015\012\000"
 1698      756D656E 
 1698      740D0A00 
 1699 01b3 00       		.align	2
 1700              	.LC21:
 1701 01b4 20206461 		.ascii	"  date [dd.mm.yyyy]\000"
 1701      7465205B 
 1701      64642E6D 
 1701      6D2E7979 
 1701      79795D00 
 1702              		.align	2
 1703              	.LC22:
 1704 01c8 53657420 		.ascii	"Set the current date. Prints the current date if no"
 1704      74686520 
 1704      63757272 
 1704      656E7420 
 1704      64617465 
 1705 01fb 20617267 		.ascii	" argument\015\012\000"
 1705      756D656E 
 1705      740D0A00 
 1706 0207 00       		.align	2
 1707              	.LC23:
 1708 0208 20206461 		.ascii	"  dateToSec <datetime>\000"
 1708      7465546F 
 1708      53656320 
 1708      3C646174 
 1708      6574696D 
 1709 021f 00       		.align	2
 1710              	.LC24:
 1711 0220 436F6E76 		.ascii	"Convert date/time int UNIX timestamp (seconds after"
 1711      65727420 
 1711      64617465 
 1711      2F74696D 
 1711      6520696E 
 1712 0253 20313937 		.ascii	" 1970)\015\012\000"
 1712      30290D0A 
 1712      00
 1713              		.align	2
 1714              	.LC25:
 1715 025c 20207365 		.ascii	"  secToDate <secs>\000"
 1715      63546F44 
 1715      61746520 
 1715      3C736563 
 1715      733E00
 1716 026f 00       		.align	2
 1717              	.LC26:
 1718 0270 436F6E76 		.ascii	"Convert UNIX timestamp to date/time\015\012\000"
 1718      65727420 
 1718      554E4958 
 1718      2074696D 
 1718      65737461 
 1719 0296 0000     		.align	2
 1720              	.LC27:
 1721 0298 73746174 		.ascii	"status\000"
 1721      757300
 1722 029f 00       		.align	2
 1723              	.LC28:
 1724 02a0 546D4474 		.ascii	"TmDt1 status\000"
 1724      31207374 
 1724      61747573 
 1724      00
 1725 02ad 000000   		.align	2
 1726              	.LC29:
 1727 02b0 546D4474 		.ascii	"TmDt1 secToDate \000"
 1727      31207365 
 1727      63546F44 
 1727      61746520 
 1727      00
 1728 02c1 000000   		.align	2
 1729              	.LC30:
 1730 02c4 2000     		.ascii	" \000"
 1731 02c6 0000     		.align	2
 1732              	.LC31:
 1733 02c8 57726F6E 		.ascii	"Wrong second format.\015\012\000"
 1733      67207365 
 1733      636F6E64 
 1733      20666F72 
 1733      6D61742E 
 1734 02df 00       		.align	2
 1735              	.LC32:
 1736 02e0 546D4474 		.ascii	"TmDt1 dateToSec \000"
 1736      31206461 
 1736      7465546F 
 1736      53656320 
 1736      00
 1737 02f1 000000   		.align	2
 1738              	.LC33:
 1739 02f4 20736563 		.ascii	" sec\015\012\000"
 1739      0D0A00
 1740 02fb 00       		.align	2
 1741              	.LC34:
 1742 02fc 57726F6E 		.ascii	"Wrong time format.\015\012\000"
 1742      67207469 
 1742      6D652066 
 1742      6F726D61 
 1742      742E0D0A 
 1743 0311 000000   		.align	2
 1744              	.LC35:
 1745 0314 57726F6E 		.ascii	"Wrong date format.\015\012\000"
 1745      67206461 
 1745      74652066 
 1745      6F726D61 
 1745      742E0D0A 
 1746 0329 000000   		.align	2
 1747              	.LC36:
 1748 032c 546D4474 		.ascii	"TmDt1 date\000"
 1748      31206461 
 1748      746500
 1749 0337 00       		.align	2
 1750              	.LC37:
 1751 0338 546D4474 		.ascii	"TmDt1 time\000"
 1751      31207469 
 1751      6D6500
 1752              		.section	.text.TmDt1_ParseCommand,"ax",%progbits
 1753              		.align	2
 1754              		.global	TmDt1_ParseCommand
 1755              		.thumb
 1756              		.thumb_func
 1758              	TmDt1_ParseCommand:
 1759              	.LFB16:
 692:../Generated_Code/TmDt1.c **** 
 693:../Generated_Code/TmDt1.c **** /*
 694:../Generated_Code/TmDt1.c **** ** ===================================================================
 695:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_ParseCommand (component GenericTimeDate)
 696:../Generated_Code/TmDt1.c **** **     Description :
 697:../Generated_Code/TmDt1.c **** **         Shell Command Line parser
 698:../Generated_Code/TmDt1.c **** **     Parameters  :
 699:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 700:../Generated_Code/TmDt1.c **** **       * cmd             - Pointer to command line
 701:../Generated_Code/TmDt1.c **** **       * handled         - Pointer to variable which tells if
 702:../Generated_Code/TmDt1.c **** **                           the command has been handled or not
 703:../Generated_Code/TmDt1.c **** **       * io              - Pointer to I/O structure
 704:../Generated_Code/TmDt1.c **** **     Returns     :
 705:../Generated_Code/TmDt1.c **** **         ---             - Error code
 706:../Generated_Code/TmDt1.c **** ** ===================================================================
 707:../Generated_Code/TmDt1.c **** */
 708:../Generated_Code/TmDt1.c **** uint8_t TmDt1_ParseCommand(const unsigned char *cmd, bool *handled, const CLS1_StdIOType *io)
 709:../Generated_Code/TmDt1.c **** {
 1760              		.loc 1 709 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 56
 1763              		@ frame_needed = 1, uses_anonymous_args = 0
 1764 0000 90B5     		push	{r4, r7, lr}
 1765              		.cfi_def_cfa_offset 12
 1766              		.cfi_offset 4, -12
 1767              		.cfi_offset 7, -8
 1768              		.cfi_offset 14, -4
 1769 0002 91B0     		sub	sp, sp, #68
 1770              		.cfi_def_cfa_offset 80
 1771 0004 02AF     		add	r7, sp, #8
 1772              		.cfi_def_cfa 7, 72
 1773 0006 F860     		str	r0, [r7, #12]
 1774 0008 B960     		str	r1, [r7, #8]
 1775 000a 7A60     		str	r2, [r7, #4]
 710:../Generated_Code/TmDt1.c ****   const uint8_t *p;
 711:../Generated_Code/TmDt1.c ****   uint8_t hour, minute, second, hsec;
 712:../Generated_Code/TmDt1.c ****   uint8_t month, day;
 713:../Generated_Code/TmDt1.c ****   uint16_t year;
 714:../Generated_Code/TmDt1.c ****   TIMEREC time;
 715:../Generated_Code/TmDt1.c ****   DATEREC date;
 716:../Generated_Code/TmDt1.c ****   int32_t unixSecs;
 717:../Generated_Code/TmDt1.c ****   uint8_t buf[16];
 718:../Generated_Code/TmDt1.c **** 
 719:../Generated_Code/TmDt1.c ****   if (UTIL1_strcmp((char*)cmd, CLS1_CMD_HELP)==0 || UTIL1_strcmp((char*)cmd, "TmDt1 help")==0) {
 1776              		.loc 1 719 0
 1777 000c F868     		ldr	r0, [r7, #12]
 1778 000e A149     		ldr	r1, .L108
 1779 0010 FFF7FEFF 		bl	strcmp
 1780 0014 0346     		mov	r3, r0
 1781 0016 002B     		cmp	r3, #0
 1782 0018 06D0     		beq	.L94
 1783              		.loc 1 719 0 is_stmt 0 discriminator 1
 1784 001a F868     		ldr	r0, [r7, #12]
 1785 001c 9E49     		ldr	r1, .L108+4
 1786 001e FFF7FEFF 		bl	strcmp
 1787 0022 0346     		mov	r3, r0
 1788 0024 002B     		cmp	r3, #0
 1789 0026 2ED1     		bne	.L95
 1790              	.L94:
 720:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"TmDt1", (const unsigned char*)"Group of TmDt1 commands\r\n", 
 1791              		.loc 1 720 0 is_stmt 1
 1792 0028 7B68     		ldr	r3, [r7, #4]
 1793 002a 5B68     		ldr	r3, [r3, #4]
 1794 002c 9B48     		ldr	r0, .L108+8
 1795 002e 9C49     		ldr	r1, .L108+12
 1796 0030 1A46     		mov	r2, r3
 1797 0032 FFF7FEFF 		bl	CLS1_SendHelpStr
 721:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"  help|status", (const unsigned char*)"Print help or status i
 1798              		.loc 1 721 0
 1799 0036 7B68     		ldr	r3, [r7, #4]
 1800 0038 5B68     		ldr	r3, [r3, #4]
 1801 003a 9A48     		ldr	r0, .L108+16
 1802 003c 9A49     		ldr	r1, .L108+20
 1803 003e 1A46     		mov	r2, r3
 1804 0040 FFF7FEFF 		bl	CLS1_SendHelpStr
 722:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"  time [hh:mm:ss[,z]]", (const unsigned char*)"Set the curren
 1805              		.loc 1 722 0
 1806 0044 7B68     		ldr	r3, [r7, #4]
 1807 0046 5B68     		ldr	r3, [r3, #4]
 1808 0048 9848     		ldr	r0, .L108+24
 1809 004a 9949     		ldr	r1, .L108+28
 1810 004c 1A46     		mov	r2, r3
 1811 004e FFF7FEFF 		bl	CLS1_SendHelpStr
 723:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"  date [dd.mm.yyyy]", (const unsigned char*)"Set the current 
 1812              		.loc 1 723 0
 1813 0052 7B68     		ldr	r3, [r7, #4]
 1814 0054 5B68     		ldr	r3, [r3, #4]
 1815 0056 9748     		ldr	r0, .L108+32
 1816 0058 9749     		ldr	r1, .L108+36
 1817 005a 1A46     		mov	r2, r3
 1818 005c FFF7FEFF 		bl	CLS1_SendHelpStr
 724:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"  dateToSec <datetime>", (const unsigned char*)"Convert date/
 1819              		.loc 1 724 0
 1820 0060 7B68     		ldr	r3, [r7, #4]
 1821 0062 5B68     		ldr	r3, [r3, #4]
 1822 0064 9548     		ldr	r0, .L108+40
 1823 0066 9649     		ldr	r1, .L108+44
 1824 0068 1A46     		mov	r2, r3
 1825 006a FFF7FEFF 		bl	CLS1_SendHelpStr
 725:../Generated_Code/TmDt1.c ****     CLS1_SendHelpStr((unsigned char*)"  secToDate <secs>", (const unsigned char*)"Convert UNIX time
 1826              		.loc 1 725 0
 1827 006e 7B68     		ldr	r3, [r7, #4]
 1828 0070 5B68     		ldr	r3, [r3, #4]
 1829 0072 9448     		ldr	r0, .L108+48
 1830 0074 9449     		ldr	r1, .L108+52
 1831 0076 1A46     		mov	r2, r3
 1832 0078 FFF7FEFF 		bl	CLS1_SendHelpStr
 726:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 1833              		.loc 1 726 0
 1834 007c BB68     		ldr	r3, [r7, #8]
 1835 007e 0122     		movs	r2, #1
 1836 0080 1A70     		strb	r2, [r3]
 727:../Generated_Code/TmDt1.c ****     return ERR_OK;
 1837              		.loc 1 727 0
 1838 0082 0023     		movs	r3, #0
 1839 0084 01E1     		b	.L107
 1840              	.L95:
 728:../Generated_Code/TmDt1.c ****   } else if ((UTIL1_strcmp((char*)cmd, CLS1_CMD_STATUS)==0) || (UTIL1_strcmp((char*)cmd, "TmDt1 sta
 1841              		.loc 1 728 0
 1842 0086 F868     		ldr	r0, [r7, #12]
 1843 0088 9049     		ldr	r1, .L108+56
 1844 008a FFF7FEFF 		bl	strcmp
 1845 008e 0346     		mov	r3, r0
 1846 0090 002B     		cmp	r3, #0
 1847 0092 06D0     		beq	.L97
 1848              		.loc 1 728 0 is_stmt 0 discriminator 1
 1849 0094 F868     		ldr	r0, [r7, #12]
 1850 0096 8E49     		ldr	r1, .L108+60
 1851 0098 FFF7FEFF 		bl	strcmp
 1852 009c 0346     		mov	r3, r0
 1853 009e 002B     		cmp	r3, #0
 1854 00a0 07D1     		bne	.L98
 1855              	.L97:
 729:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 1856              		.loc 1 729 0 is_stmt 1
 1857 00a2 BB68     		ldr	r3, [r7, #8]
 1858 00a4 0122     		movs	r2, #1
 1859 00a6 1A70     		strb	r2, [r3]
 730:../Generated_Code/TmDt1.c ****     return PrintStatus(io);
 1860              		.loc 1 730 0
 1861 00a8 7868     		ldr	r0, [r7, #4]
 1862 00aa FFF7FEFF 		bl	PrintStatus
 1863 00ae 0346     		mov	r3, r0
 1864 00b0 EBE0     		b	.L107
 1865              	.L98:
 731:../Generated_Code/TmDt1.c ****   } else if (UTIL1_strncmp((char*)cmd, "TmDt1 secToDate ", sizeof("TmDt1 secToDate ")-1)==0) {
 1866              		.loc 1 731 0
 1867 00b2 F868     		ldr	r0, [r7, #12]
 1868 00b4 8749     		ldr	r1, .L108+64
 1869 00b6 1022     		movs	r2, #16
 1870 00b8 FFF7FEFF 		bl	strncmp
 1871 00bc 0346     		mov	r3, r0
 1872 00be 002B     		cmp	r3, #0
 1873 00c0 53D1     		bne	.L99
 732:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 1874              		.loc 1 732 0
 1875 00c2 BB68     		ldr	r3, [r7, #8]
 1876 00c4 0122     		movs	r2, #1
 1877 00c6 1A70     		strb	r2, [r3]
 733:../Generated_Code/TmDt1.c ****     p = cmd+sizeof("TmDt1 secToDate ")-1;
 1878              		.loc 1 733 0
 1879 00c8 FB68     		ldr	r3, [r7, #12]
 1880 00ca 1033     		adds	r3, r3, #16
 1881 00cc 7B63     		str	r3, [r7, #52]
 734:../Generated_Code/TmDt1.c ****     if (UTIL1_ScanDecimal32sNumber(&p, &unixSecs)==ERR_OK) {
 1882              		.loc 1 734 0
 1883 00ce 07F13402 		add	r2, r7, #52
 1884 00d2 07F12003 		add	r3, r7, #32
 1885 00d6 1046     		mov	r0, r2
 1886 00d8 1946     		mov	r1, r3
 1887 00da FFF7FEFF 		bl	UTIL1_ScanDecimal32sNumber
 1888 00de 0346     		mov	r3, r0
 1889 00e0 002B     		cmp	r3, #0
 1890 00e2 3BD1     		bne	.L100
 735:../Generated_Code/TmDt1.c ****       TmDt1_UnixSecondsToTimeDate(unixSecs, 0, &time, &date);
 1891              		.loc 1 735 0
 1892 00e4 396A     		ldr	r1, [r7, #32]
 1893 00e6 07F12802 		add	r2, r7, #40
 1894 00ea 07F12403 		add	r3, r7, #36
 1895 00ee 0846     		mov	r0, r1
 1896 00f0 0021     		movs	r1, #0
 1897 00f2 FFF7FEFF 		bl	TmDt1_UnixSecondsToTimeDate
 736:../Generated_Code/TmDt1.c ****       buf[0] = '\0';
 1898              		.loc 1 736 0
 1899 00f6 0023     		movs	r3, #0
 1900 00f8 3B74     		strb	r3, [r7, #16]
 737:../Generated_Code/TmDt1.c ****       AddDateToBuf(buf, sizeof(buf), &date);
 1901              		.loc 1 737 0
 1902 00fa 07F11002 		add	r2, r7, #16
 1903 00fe 07F12403 		add	r3, r7, #36
 1904 0102 1046     		mov	r0, r2
 1905 0104 1021     		movs	r1, #16
 1906 0106 1A46     		mov	r2, r3
 1907 0108 FFF7FEFF 		bl	AddDateToBuf
 738:../Generated_Code/TmDt1.c ****       CLS1_SendStr(buf, io->stdOut);
 1908              		.loc 1 738 0
 1909 010c 7B68     		ldr	r3, [r7, #4]
 1910 010e 5B68     		ldr	r3, [r3, #4]
 1911 0110 07F11002 		add	r2, r7, #16
 1912 0114 1046     		mov	r0, r2
 1913 0116 1946     		mov	r1, r3
 1914 0118 FFF7FEFF 		bl	CLS1_SendStr
 739:../Generated_Code/TmDt1.c ****       CLS1_SendStr((uint8_t*)" ", io->stdOut);
 1915              		.loc 1 739 0
 1916 011c 7B68     		ldr	r3, [r7, #4]
 1917 011e 5B68     		ldr	r3, [r3, #4]
 1918 0120 6D48     		ldr	r0, .L108+68
 1919 0122 1946     		mov	r1, r3
 1920 0124 FFF7FEFF 		bl	CLS1_SendStr
 740:../Generated_Code/TmDt1.c ****       buf[0] = '\0';
 1921              		.loc 1 740 0
 1922 0128 0023     		movs	r3, #0
 1923 012a 3B74     		strb	r3, [r7, #16]
 741:../Generated_Code/TmDt1.c ****       AddTimeToBuf(buf, sizeof(buf), &time);
 1924              		.loc 1 741 0
 1925 012c 07F11002 		add	r2, r7, #16
 1926 0130 07F12803 		add	r3, r7, #40
 1927 0134 1046     		mov	r0, r2
 1928 0136 1021     		movs	r1, #16
 1929 0138 1A46     		mov	r2, r3
 1930 013a FFF7FEFF 		bl	AddTimeToBuf
 742:../Generated_Code/TmDt1.c ****       CLS1_SendStr(buf, io->stdOut);
 1931              		.loc 1 742 0
 1932 013e 7B68     		ldr	r3, [r7, #4]
 1933 0140 5B68     		ldr	r3, [r3, #4]
 1934 0142 07F11002 		add	r2, r7, #16
 1935 0146 1046     		mov	r0, r2
 1936 0148 1946     		mov	r1, r3
 1937 014a FFF7FEFF 		bl	CLS1_SendStr
 743:../Generated_Code/TmDt1.c ****       CLS1_SendStr((uint8_t*)"\r\n", io->stdOut);
 1938              		.loc 1 743 0
 1939 014e 7B68     		ldr	r3, [r7, #4]
 1940 0150 5B68     		ldr	r3, [r3, #4]
 1941 0152 6248     		ldr	r0, .L108+72
 1942 0154 1946     		mov	r1, r3
 1943 0156 FFF7FEFF 		bl	CLS1_SendStr
 1944 015a 95E0     		b	.L102
 1945              	.L100:
 744:../Generated_Code/TmDt1.c ****     } else {
 745:../Generated_Code/TmDt1.c ****       CLS1_SendStr((uint8_t*)"Wrong second format.\r\n", io->stdErr);
 1946              		.loc 1 745 0
 1947 015c 7B68     		ldr	r3, [r7, #4]
 1948 015e 9B68     		ldr	r3, [r3, #8]
 1949 0160 5F48     		ldr	r0, .L108+76
 1950 0162 1946     		mov	r1, r3
 1951 0164 FFF7FEFF 		bl	CLS1_SendStr
 1952 0168 8EE0     		b	.L102
 1953              	.L99:
 746:../Generated_Code/TmDt1.c ****     }
 747:../Generated_Code/TmDt1.c ****   } else if (UTIL1_strncmp((char*)cmd, "TmDt1 dateToSec ", sizeof("TmDt1 dateToSec ")-1)==0) {
 1954              		.loc 1 747 0
 1955 016a F868     		ldr	r0, [r7, #12]
 1956 016c 5D49     		ldr	r1, .L108+80
 1957 016e 1022     		movs	r2, #16
 1958 0170 FFF7FEFF 		bl	strncmp
 1959 0174 0346     		mov	r3, r0
 1960 0176 002B     		cmp	r3, #0
 1961 0178 64D1     		bne	.L103
 748:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 1962              		.loc 1 748 0
 1963 017a BB68     		ldr	r3, [r7, #8]
 1964 017c 0122     		movs	r2, #1
 1965 017e 1A70     		strb	r2, [r3]
 749:../Generated_Code/TmDt1.c ****     p = cmd+sizeof("TmDt1 dateToSec ")-1;
 1966              		.loc 1 749 0
 1967 0180 FB68     		ldr	r3, [r7, #12]
 1968 0182 1033     		adds	r3, r3, #16
 1969 0184 7B63     		str	r3, [r7, #52]
 750:../Generated_Code/TmDt1.c ****     if (UTIL1_ScanDate(&p, &day, &month, &year)==ERR_OK) { /* format fine */
 1970              		.loc 1 750 0
 1971 0186 07F13400 		add	r0, r7, #52
 1972 018a 07F12E01 		add	r1, r7, #46
 1973 018e 07F12F02 		add	r2, r7, #47
 1974 0192 07F12C03 		add	r3, r7, #44
 1975 0196 FFF7FEFF 		bl	UTIL1_ScanDate
 1976 019a 0346     		mov	r3, r0
 1977 019c 002B     		cmp	r3, #0
 1978 019e 49D1     		bne	.L104
 751:../Generated_Code/TmDt1.c ****       if (UTIL1_ScanTime(&p, &hour, &minute, &second, &hsec)==ERR_OK) { /* format fine */
 1979              		.loc 1 751 0
 1980 01a0 07F13400 		add	r0, r7, #52
 1981 01a4 07F13301 		add	r1, r7, #51
 1982 01a8 07F13202 		add	r2, r7, #50
 1983 01ac 07F13103 		add	r3, r7, #49
 1984 01b0 07F13004 		add	r4, r7, #48
 1985 01b4 0094     		str	r4, [sp]
 1986 01b6 FFF7FEFF 		bl	UTIL1_ScanTime
 1987 01ba 0346     		mov	r3, r0
 1988 01bc 002B     		cmp	r3, #0
 1989 01be 31D1     		bne	.L105
 752:../Generated_Code/TmDt1.c ****         time.Hour = hour;
 1990              		.loc 1 752 0
 1991 01c0 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1992 01c4 87F82830 		strb	r3, [r7, #40]
 753:../Generated_Code/TmDt1.c ****         time.Min = minute;
 1993              		.loc 1 753 0
 1994 01c8 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 1995 01cc 87F82930 		strb	r3, [r7, #41]
 754:../Generated_Code/TmDt1.c ****         time.Sec = second;
 1996              		.loc 1 754 0
 1997 01d0 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1998 01d4 87F82A30 		strb	r3, [r7, #42]
 755:../Generated_Code/TmDt1.c ****         time.Sec100 = 0;
 1999              		.loc 1 755 0
 2000 01d8 0023     		movs	r3, #0
 2001 01da 87F82B30 		strb	r3, [r7, #43]
 756:../Generated_Code/TmDt1.c ****         date.Day = day;
 2002              		.loc 1 756 0
 2003 01de 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 2004 01e2 87F82730 		strb	r3, [r7, #39]
 757:../Generated_Code/TmDt1.c ****         date.Month = month;
 2005              		.loc 1 757 0
 2006 01e6 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2007 01ea 87F82630 		strb	r3, [r7, #38]
 758:../Generated_Code/TmDt1.c ****         date.Year = year;
 2008              		.loc 1 758 0
 2009 01ee BB8D     		ldrh	r3, [r7, #44]
 2010 01f0 BB84     		strh	r3, [r7, #36]	@ movhi
 759:../Generated_Code/TmDt1.c ****         unixSecs = TmDt1_TimeDateToUnixSeconds(&time, &date, 0);
 2011              		.loc 1 759 0
 2012 01f2 07F12802 		add	r2, r7, #40
 2013 01f6 07F12403 		add	r3, r7, #36
 2014 01fa 1046     		mov	r0, r2
 2015 01fc 1946     		mov	r1, r3
 2016 01fe 0022     		movs	r2, #0
 2017 0200 FFF7FEFF 		bl	TmDt1_TimeDateToUnixSeconds
 2018 0204 0346     		mov	r3, r0
 2019 0206 3B62     		str	r3, [r7, #32]
 760:../Generated_Code/TmDt1.c ****         CLS1_SendNum32s(unixSecs, io->stdOut);
 2020              		.loc 1 760 0
 2021 0208 3A6A     		ldr	r2, [r7, #32]
 2022 020a 7B68     		ldr	r3, [r7, #4]
 2023 020c 5B68     		ldr	r3, [r3, #4]
 2024 020e 1046     		mov	r0, r2
 2025 0210 1946     		mov	r1, r3
 2026 0212 FFF7FEFF 		bl	CLS1_SendNum32s
 761:../Generated_Code/TmDt1.c ****         CLS1_SendStr((uint8_t*)" sec\r\n", io->stdOut);
 2027              		.loc 1 761 0
 2028 0216 7B68     		ldr	r3, [r7, #4]
 2029 0218 5B68     		ldr	r3, [r3, #4]
 2030 021a 3348     		ldr	r0, .L108+84
 2031 021c 1946     		mov	r1, r3
 2032 021e FFF7FEFF 		bl	CLS1_SendStr
 2033 0222 31E0     		b	.L102
 2034              	.L105:
 762:../Generated_Code/TmDt1.c ****       } else {
 763:../Generated_Code/TmDt1.c ****         CLS1_SendStr((uint8_t*)"Wrong time format.\r\n", io->stdErr);
 2035              		.loc 1 763 0
 2036 0224 7B68     		ldr	r3, [r7, #4]
 2037 0226 9B68     		ldr	r3, [r3, #8]
 2038 0228 3048     		ldr	r0, .L108+88
 2039 022a 1946     		mov	r1, r3
 2040 022c FFF7FEFF 		bl	CLS1_SendStr
 764:../Generated_Code/TmDt1.c ****         return ERR_FAILED;
 2041              		.loc 1 764 0
 2042 0230 1B23     		movs	r3, #27
 2043 0232 2AE0     		b	.L107
 2044              	.L104:
 765:../Generated_Code/TmDt1.c ****       }
 766:../Generated_Code/TmDt1.c ****     } else {
 767:../Generated_Code/TmDt1.c ****       CLS1_SendStr((uint8_t*)"Wrong date format.\r\n", io->stdErr);
 2045              		.loc 1 767 0
 2046 0234 7B68     		ldr	r3, [r7, #4]
 2047 0236 9B68     		ldr	r3, [r3, #8]
 2048 0238 2D48     		ldr	r0, .L108+92
 2049 023a 1946     		mov	r1, r3
 2050 023c FFF7FEFF 		bl	CLS1_SendStr
 768:../Generated_Code/TmDt1.c ****       return ERR_FAILED;
 2051              		.loc 1 768 0
 2052 0240 1B23     		movs	r3, #27
 2053 0242 22E0     		b	.L107
 2054              	.L103:
 769:../Generated_Code/TmDt1.c ****     }
 770:../Generated_Code/TmDt1.c ****   } else if (UTIL1_strncmp((char*)cmd, "TmDt1 date", sizeof("TmDt1 date")-1)==0) {
 2055              		.loc 1 770 0
 2056 0244 F868     		ldr	r0, [r7, #12]
 2057 0246 2B49     		ldr	r1, .L108+96
 2058 0248 0A22     		movs	r2, #10
 2059 024a FFF7FEFF 		bl	strncmp
 2060 024e 0346     		mov	r3, r0
 2061 0250 002B     		cmp	r3, #0
 2062 0252 08D1     		bne	.L106
 771:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 2063              		.loc 1 771 0
 2064 0254 BB68     		ldr	r3, [r7, #8]
 2065 0256 0122     		movs	r2, #1
 2066 0258 1A70     		strb	r2, [r3]
 772:../Generated_Code/TmDt1.c ****     return DateCmd(cmd, io);
 2067              		.loc 1 772 0
 2068 025a F868     		ldr	r0, [r7, #12]
 2069 025c 7968     		ldr	r1, [r7, #4]
 2070 025e FFF7FEFF 		bl	DateCmd
 2071 0262 0346     		mov	r3, r0
 2072 0264 11E0     		b	.L107
 2073              	.L106:
 773:../Generated_Code/TmDt1.c ****   } else if (UTIL1_strncmp((char*)cmd, "TmDt1 time", sizeof("TmDt1 time")-1)==0) {
 2074              		.loc 1 773 0
 2075 0266 F868     		ldr	r0, [r7, #12]
 2076 0268 2349     		ldr	r1, .L108+100
 2077 026a 0A22     		movs	r2, #10
 2078 026c FFF7FEFF 		bl	strncmp
 2079 0270 0346     		mov	r3, r0
 2080 0272 002B     		cmp	r3, #0
 2081 0274 08D1     		bne	.L102
 774:../Generated_Code/TmDt1.c ****     *handled = TRUE;
 2082              		.loc 1 774 0
 2083 0276 BB68     		ldr	r3, [r7, #8]
 2084 0278 0122     		movs	r2, #1
 2085 027a 1A70     		strb	r2, [r3]
 775:../Generated_Code/TmDt1.c ****     return TimeCmd(cmd, io);
 2086              		.loc 1 775 0
 2087 027c F868     		ldr	r0, [r7, #12]
 2088 027e 7968     		ldr	r1, [r7, #4]
 2089 0280 FFF7FEFF 		bl	TimeCmd
 2090 0284 0346     		mov	r3, r0
 2091 0286 00E0     		b	.L107
 2092              	.L102:
 776:../Generated_Code/TmDt1.c ****   }
 777:../Generated_Code/TmDt1.c ****   return ERR_OK;
 2093              		.loc 1 777 0
 2094 0288 0023     		movs	r3, #0
 2095              	.L107:
 778:../Generated_Code/TmDt1.c **** }
 2096              		.loc 1 778 0
 2097 028a 1846     		mov	r0, r3
 2098 028c 3C37     		adds	r7, r7, #60
 2099 028e BD46     		mov	sp, r7
 2100              		@ sp needed
 2101 0290 90BD     		pop	{r4, r7, pc}
 2102              	.L109:
 2103 0292 00BF     		.align	2
 2104              	.L108:
 2105 0294 F8000000 		.word	.LC14
 2106 0298 00010000 		.word	.LC15
 2107 029c A4000000 		.word	.LC8
 2108 02a0 0C010000 		.word	.LC16
 2109 02a4 28010000 		.word	.LC17
 2110 02a8 38010000 		.word	.LC18
 2111 02ac 5C010000 		.word	.LC19
 2112 02b0 74010000 		.word	.LC20
 2113 02b4 B4010000 		.word	.LC21
 2114 02b8 C8010000 		.word	.LC22
 2115 02bc 08020000 		.word	.LC23
 2116 02c0 20020000 		.word	.LC24
 2117 02c4 5C020000 		.word	.LC25
 2118 02c8 70020000 		.word	.LC26
 2119 02cc 98020000 		.word	.LC27
 2120 02d0 A0020000 		.word	.LC28
 2121 02d4 B0020000 		.word	.LC29
 2122 02d8 C4020000 		.word	.LC30
 2123 02dc 44000000 		.word	.LC3
 2124 02e0 C8020000 		.word	.LC31
 2125 02e4 E0020000 		.word	.LC32
 2126 02e8 F4020000 		.word	.LC33
 2127 02ec FC020000 		.word	.LC34
 2128 02f0 14030000 		.word	.LC35
 2129 02f4 2C030000 		.word	.LC36
 2130 02f8 38030000 		.word	.LC37
 2131              		.cfi_endproc
 2132              	.LFE16:
 2134              		.section	.text.TmDt1_DeInit,"ax",%progbits
 2135              		.align	2
 2136              		.global	TmDt1_DeInit
 2137              		.thumb
 2138              		.thumb_func
 2140              	TmDt1_DeInit:
 2141              	.LFB17:
 779:../Generated_Code/TmDt1.c **** 
 780:../Generated_Code/TmDt1.c **** /*
 781:../Generated_Code/TmDt1.c **** ** ===================================================================
 782:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_DeInit (component GenericTimeDate)
 783:../Generated_Code/TmDt1.c **** **     Description :
 784:../Generated_Code/TmDt1.c **** **         Deinitializes the driver.
 785:../Generated_Code/TmDt1.c **** **     Parameters  : None
 786:../Generated_Code/TmDt1.c **** **     Returns     : Nothing
 787:../Generated_Code/TmDt1.c **** ** ===================================================================
 788:../Generated_Code/TmDt1.c **** */
 789:../Generated_Code/TmDt1.c **** void TmDt1_DeInit(void)
 790:../Generated_Code/TmDt1.c **** {
 2142              		.loc 1 790 0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 1, uses_anonymous_args = 0
 2146              		@ link register save eliminated.
 2147 0000 80B4     		push	{r7}
 2148              		.cfi_def_cfa_offset 4
 2149              		.cfi_offset 7, -4
 2150 0002 00AF     		add	r7, sp, #0
 2151              		.cfi_def_cfa_register 7
 791:../Generated_Code/TmDt1.c ****   /* Nothing to do */
 792:../Generated_Code/TmDt1.c **** }
 2152              		.loc 1 792 0
 2153 0004 BD46     		mov	sp, r7
 2154              		@ sp needed
 2155 0006 5DF8047B 		ldr	r7, [sp], #4
 2156 000a 7047     		bx	lr
 2157              		.cfi_endproc
 2158              	.LFE17:
 2160              		.section	.text.TmDt1_TicksToTime,"ax",%progbits
 2161              		.align	2
 2162              		.global	TmDt1_TicksToTime
 2163              		.thumb
 2164              		.thumb_func
 2166              	TmDt1_TicksToTime:
 2167              	.LFB18:
 793:../Generated_Code/TmDt1.c **** 
 794:../Generated_Code/TmDt1.c **** /*
 795:../Generated_Code/TmDt1.c **** ** ===================================================================
 796:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_TicksToTime (component GenericTimeDate)
 797:../Generated_Code/TmDt1.c **** **     Description :
 798:../Generated_Code/TmDt1.c **** **         Transforms ticks into time information
 799:../Generated_Code/TmDt1.c **** **     Parameters  :
 800:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 801:../Generated_Code/TmDt1.c **** **         ticks           - 
 802:../Generated_Code/TmDt1.c **** **       * time            - Pointer where to store the time
 803:../Generated_Code/TmDt1.c **** **                           information
 804:../Generated_Code/TmDt1.c **** **     Returns     :
 805:../Generated_Code/TmDt1.c **** **         ---             - Error code
 806:../Generated_Code/TmDt1.c **** ** ===================================================================
 807:../Generated_Code/TmDt1.c **** */
 808:../Generated_Code/TmDt1.c **** uint8_t TmDt1_TicksToTime(uint32_t ticks, TIMEREC *time)
 809:../Generated_Code/TmDt1.c **** {
 2168              		.loc 1 809 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 8
 2171              		@ frame_needed = 1, uses_anonymous_args = 0
 2172              		@ link register save eliminated.
 2173 0000 80B4     		push	{r7}
 2174              		.cfi_def_cfa_offset 4
 2175              		.cfi_offset 7, -4
 2176 0002 83B0     		sub	sp, sp, #12
 2177              		.cfi_def_cfa_offset 16
 2178 0004 00AF     		add	r7, sp, #0
 2179              		.cfi_def_cfa_register 7
 2180 0006 7860     		str	r0, [r7, #4]
 2181 0008 3960     		str	r1, [r7]
 810:../Generated_Code/TmDt1.c ****   time->Hour = (uint8_t)(ticks/(3600*TmDt1_TICKS_PER_S)); /* number of hours */
 2182              		.loc 1 810 0
 2183 000a 7B68     		ldr	r3, [r7, #4]
 2184 000c 9A09     		lsrs	r2, r3, #6
 2185 000e 254B     		ldr	r3, .L113
 2186 0010 A3FB0203 		umull	r0, r3, r3, r2
 2187 0014 9B08     		lsrs	r3, r3, #2
 2188 0016 DAB2     		uxtb	r2, r3
 2189 0018 3B68     		ldr	r3, [r7]
 2190 001a 1A70     		strb	r2, [r3]
 811:../Generated_Code/TmDt1.c ****   ticks %= (3600*TmDt1_TICKS_PER_S);   /* remainder of ticks inside hour */
 2191              		.loc 1 811 0
 2192 001c 7B68     		ldr	r3, [r7, #4]
 2193 001e 9909     		lsrs	r1, r3, #6
 2194 0020 204A     		ldr	r2, .L113
 2195 0022 A2FB0102 		umull	r0, r2, r2, r1
 2196 0026 9208     		lsrs	r2, r2, #2
 2197 0028 1F49     		ldr	r1, .L113+4
 2198 002a 01FB02F2 		mul	r2, r1, r2
 2199 002e 9B1A     		subs	r3, r3, r2
 2200 0030 7B60     		str	r3, [r7, #4]
 812:../Generated_Code/TmDt1.c ****   time->Min = (uint8_t)(ticks/(60*TmDt1_TICKS_PER_S)); /* number of minutes */
 2201              		.loc 1 812 0
 2202 0032 7A68     		ldr	r2, [r7, #4]
 2203 0034 1D4B     		ldr	r3, .L113+8
 2204 0036 A3FB0213 		umull	r1, r3, r3, r2
 2205 003a DB09     		lsrs	r3, r3, #7
 2206 003c DAB2     		uxtb	r2, r3
 2207 003e 3B68     		ldr	r3, [r7]
 2208 0040 5A70     		strb	r2, [r3, #1]
 813:../Generated_Code/TmDt1.c ****   ticks %= (60*TmDt1_TICKS_PER_S);     /* remainder of ticks inside minute */
 2209              		.loc 1 813 0
 2210 0042 7B68     		ldr	r3, [r7, #4]
 2211 0044 194A     		ldr	r2, .L113+8
 2212 0046 A2FB0302 		umull	r0, r2, r2, r3
 2213 004a D209     		lsrs	r2, r2, #7
 2214 004c 41F27071 		movw	r1, #6000
 2215 0050 01FB02F2 		mul	r2, r1, r2
 2216 0054 9B1A     		subs	r3, r3, r2
 2217 0056 7B60     		str	r3, [r7, #4]
 814:../Generated_Code/TmDt1.c ****   time->Sec = (uint8_t)(ticks/TmDt1_TICKS_PER_S); /* number of seconds */
 2218              		.loc 1 814 0
 2219 0058 7A68     		ldr	r2, [r7, #4]
 2220 005a 154B     		ldr	r3, .L113+12
 2221 005c A3FB0213 		umull	r1, r3, r3, r2
 2222 0060 5B09     		lsrs	r3, r3, #5
 2223 0062 DAB2     		uxtb	r2, r3
 2224 0064 3B68     		ldr	r3, [r7]
 2225 0066 9A70     		strb	r2, [r3, #2]
 815:../Generated_Code/TmDt1.c ****   ticks %= TmDt1_TICKS_PER_S;
 2226              		.loc 1 815 0
 2227 0068 7B68     		ldr	r3, [r7, #4]
 2228 006a 114A     		ldr	r2, .L113+12
 2229 006c A2FB0302 		umull	r0, r2, r2, r3
 2230 0070 5209     		lsrs	r2, r2, #5
 2231 0072 6421     		movs	r1, #100
 2232 0074 01FB02F2 		mul	r2, r1, r2
 2233 0078 9B1A     		subs	r3, r3, r2
 2234 007a 7B60     		str	r3, [r7, #4]
 816:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
 817:../Generated_Code/TmDt1.c ****   time->Sec100 = (uint8_t)((ticks*(1000/TmDt1_TICKS_PER_S))/10); /* number of 1/100 seconds */
 2235              		.loc 1 817 0
 2236 007c 7A68     		ldr	r2, [r7, #4]
 2237 007e 1346     		mov	r3, r2
 2238 0080 9B00     		lsls	r3, r3, #2
 2239 0082 1344     		add	r3, r3, r2
 2240 0084 5B00     		lsls	r3, r3, #1
 2241 0086 1A46     		mov	r2, r3
 2242 0088 0A4B     		ldr	r3, .L113+16
 2243 008a A3FB0213 		umull	r1, r3, r3, r2
 2244 008e DB08     		lsrs	r3, r3, #3
 2245 0090 DAB2     		uxtb	r2, r3
 2246 0092 3B68     		ldr	r3, [r7]
 2247 0094 DA70     		strb	r2, [r3, #3]
 818:../Generated_Code/TmDt1.c **** #endif
 819:../Generated_Code/TmDt1.c ****   return ERR_OK;
 2248              		.loc 1 819 0
 2249 0096 0023     		movs	r3, #0
 820:../Generated_Code/TmDt1.c **** }
 2250              		.loc 1 820 0
 2251 0098 1846     		mov	r0, r3
 2252 009a 0C37     		adds	r7, r7, #12
 2253 009c BD46     		mov	sp, r7
 2254              		@ sp needed
 2255 009e 5DF8047B 		ldr	r7, [sp], #4
 2256 00a2 7047     		bx	lr
 2257              	.L114:
 2258              		.align	2
 2259              	.L113:
 2260 00a4 779A2E00 		.word	3054199
 2261 00a8 407E0500 		.word	360000
 2262 00ac F1197605 		.word	91625969
 2263 00b0 1F85EB51 		.word	1374389535
 2264 00b4 CDCCCCCC 		.word	-858993459
 2265              		.cfi_endproc
 2266              	.LFE18:
 2268              		.section	.text.TmDt1_TimeToTicks,"ax",%progbits
 2269              		.align	2
 2270              		.global	TmDt1_TimeToTicks
 2271              		.thumb
 2272              		.thumb_func
 2274              	TmDt1_TimeToTicks:
 2275              	.LFB19:
 821:../Generated_Code/TmDt1.c **** 
 822:../Generated_Code/TmDt1.c **** /*
 823:../Generated_Code/TmDt1.c **** ** ===================================================================
 824:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_TimeToTicks (component GenericTimeDate)
 825:../Generated_Code/TmDt1.c **** **     Description :
 826:../Generated_Code/TmDt1.c **** **         Transforms time information into ticks
 827:../Generated_Code/TmDt1.c **** **     Parameters  :
 828:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 829:../Generated_Code/TmDt1.c **** **       * time            - Pointer where to time information
 830:../Generated_Code/TmDt1.c **** **       * ticks           - Pointer to where to store the ticks
 831:../Generated_Code/TmDt1.c **** **     Returns     :
 832:../Generated_Code/TmDt1.c **** **         ---             - Error code
 833:../Generated_Code/TmDt1.c **** ** ===================================================================
 834:../Generated_Code/TmDt1.c **** */
 835:../Generated_Code/TmDt1.c **** uint8_t TmDt1_TimeToTicks(TIMEREC *time, uint32_t *ticks)
 836:../Generated_Code/TmDt1.c **** {
 2276              		.loc 1 836 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 16
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281 0000 80B4     		push	{r7}
 2282              		.cfi_def_cfa_offset 4
 2283              		.cfi_offset 7, -4
 2284 0002 85B0     		sub	sp, sp, #20
 2285              		.cfi_def_cfa_offset 24
 2286 0004 00AF     		add	r7, sp, #0
 2287              		.cfi_def_cfa_register 7
 2288 0006 7860     		str	r0, [r7, #4]
 2289 0008 3960     		str	r1, [r7]
 837:../Generated_Code/TmDt1.c ****   uint32_t cntr;
 838:../Generated_Code/TmDt1.c **** 
 839:../Generated_Code/TmDt1.c ****   /* Load given time re-calculated to TmDt1_TICK_TIME_MS ms ticks into software tick counter */
 840:../Generated_Code/TmDt1.c ****   cntr = (3600UL*TmDt1_TICKS_PER_S*(uint32_t)time->Hour)
 2290              		.loc 1 840 0
 2291 000a 7B68     		ldr	r3, [r7, #4]
 2292 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2293 000e 0F4A     		ldr	r2, .L117
 2294 0010 02FB03F2 		mul	r2, r2, r3
 841:../Generated_Code/TmDt1.c ****               + (60UL*TmDt1_TICKS_PER_S*(uint32_t)time->Min)
 2295              		.loc 1 841 0
 2296 0014 7B68     		ldr	r3, [r7, #4]
 2297 0016 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2298 0018 41F27071 		movw	r1, #6000
 2299 001c 01FB03F3 		mul	r3, r1, r3
 2300 0020 1A44     		add	r2, r2, r3
 842:../Generated_Code/TmDt1.c ****               + (TmDt1_TICKS_PER_S*(uint32_t)time->Sec)
 2301              		.loc 1 842 0
 2302 0022 7B68     		ldr	r3, [r7, #4]
 2303 0024 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2304 0026 6421     		movs	r1, #100
 2305 0028 01FB03F3 		mul	r3, r1, r3
 2306 002c 1A44     		add	r2, r2, r3
 843:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
 844:../Generated_Code/TmDt1.c ****               + ((TmDt1_TICKS_PER_S/100)*(uint32_t)time->Sec100)
 2307              		.loc 1 844 0
 2308 002e 7B68     		ldr	r3, [r7, #4]
 2309 0030 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 840:../Generated_Code/TmDt1.c ****   cntr = (3600UL*TmDt1_TICKS_PER_S*(uint32_t)time->Hour)
 2310              		.loc 1 840 0
 2311 0032 1344     		add	r3, r3, r2
 2312 0034 FB60     		str	r3, [r7, #12]
 845:../Generated_Code/TmDt1.c **** #endif
 846:../Generated_Code/TmDt1.c ****               ;
 847:../Generated_Code/TmDt1.c ****   *ticks = cntr;
 2313              		.loc 1 847 0
 2314 0036 3B68     		ldr	r3, [r7]
 2315 0038 FA68     		ldr	r2, [r7, #12]
 2316 003a 1A60     		str	r2, [r3]
 848:../Generated_Code/TmDt1.c ****   return ERR_OK;
 2317              		.loc 1 848 0
 2318 003c 0023     		movs	r3, #0
 849:../Generated_Code/TmDt1.c **** }
 2319              		.loc 1 849 0
 2320 003e 1846     		mov	r0, r3
 2321 0040 1437     		adds	r7, r7, #20
 2322 0042 BD46     		mov	sp, r7
 2323              		@ sp needed
 2324 0044 5DF8047B 		ldr	r7, [sp], #4
 2325 0048 7047     		bx	lr
 2326              	.L118:
 2327 004a 00BF     		.align	2
 2328              	.L117:
 2329 004c 407E0500 		.word	360000
 2330              		.cfi_endproc
 2331              	.LFE19:
 2333              		.section	.text.TmDt1_SetInternalRTCTimeDate,"ax",%progbits
 2334              		.align	2
 2335              		.global	TmDt1_SetInternalRTCTimeDate
 2336              		.thumb
 2337              		.thumb_func
 2339              	TmDt1_SetInternalRTCTimeDate:
 2340              	.LFB20:
 850:../Generated_Code/TmDt1.c **** 
 851:../Generated_Code/TmDt1.c **** /*
 852:../Generated_Code/TmDt1.c **** ** ===================================================================
 853:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetInternalRTCTimeDate (component GenericTimeDate)
 854:../Generated_Code/TmDt1.c **** **     Description :
 855:../Generated_Code/TmDt1.c **** **         This method sets a new actual time and date of the internal
 856:../Generated_Code/TmDt1.c **** **         hardware RTC.
 857:../Generated_Code/TmDt1.c **** **     Parameters  :
 858:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 859:../Generated_Code/TmDt1.c **** **       * time            - Pointer to struct which contains the
 860:../Generated_Code/TmDt1.c **** **                           time to be set. Can be NULL if time shall
 861:../Generated_Code/TmDt1.c **** **                           not be set.
 862:../Generated_Code/TmDt1.c **** **       * date            - Pointer to struct which contains the
 863:../Generated_Code/TmDt1.c **** **                           date information to be set. Can be NULL if
 864:../Generated_Code/TmDt1.c **** **                           date shall not be set.
 865:../Generated_Code/TmDt1.c **** **     Returns     :
 866:../Generated_Code/TmDt1.c **** **         ---             - Error code
 867:../Generated_Code/TmDt1.c **** ** ===================================================================
 868:../Generated_Code/TmDt1.c **** */
 869:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetInternalRTCTimeDate(TIMEREC *time, DATEREC *date)
 870:../Generated_Code/TmDt1.c **** {
 2341              		.loc 1 870 0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 8
 2344              		@ frame_needed = 1, uses_anonymous_args = 0
 2345              		@ link register save eliminated.
 2346 0000 80B4     		push	{r7}
 2347              		.cfi_def_cfa_offset 4
 2348              		.cfi_offset 7, -4
 2349 0002 83B0     		sub	sp, sp, #12
 2350              		.cfi_def_cfa_offset 16
 2351 0004 00AF     		add	r7, sp, #0
 2352              		.cfi_def_cfa_register 7
 2353 0006 7860     		str	r0, [r7, #4]
 2354 0008 3960     		str	r1, [r7]
 871:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC_LDD
 872:../Generated_Code/TmDt1.c ****   LDD_RTC_TTime timeDate;
 873:../Generated_Code/TmDt1.c **** 
 874:../Generated_Code/TmDt1.c ****   /* get current time/date */
 875:../Generated_Code/TmDt1.c ****   RTC1_GetTime(RTC1_DeviceData, &timeDate); /* get information from HW RTC */
 876:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 877:../Generated_Code/TmDt1.c ****     timeDate.Hour = time->Hour;
 878:../Generated_Code/TmDt1.c ****     timeDate.Minute = time->Min;
 879:../Generated_Code/TmDt1.c ****     timeDate.Second = time->Sec;
 880:../Generated_Code/TmDt1.c ****   }
 881:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 882:../Generated_Code/TmDt1.c ****     timeDate.Year = date->Year;
 883:../Generated_Code/TmDt1.c ****     timeDate.Month = date->Month;
 884:../Generated_Code/TmDt1.c ****     timeDate.Day = date->Day;
 885:../Generated_Code/TmDt1.c ****     timeDate.DayOfWeek = TmDt1_CalculateDayOfWeek(date->Year, date->Month, date->Day);
 886:../Generated_Code/TmDt1.c ****   }
 887:../Generated_Code/TmDt1.c ****   return RTC1_SetTime(RTC1_DeviceData, &timeDate); /* get information from HW RTC */
 888:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_INTERNAL_HW_RTC_BEAN
 889:../Generated_Code/TmDt1.c ****   uint8_t res;
 890:../Generated_Code/TmDt1.c **** 
 891:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 892:../Generated_Code/TmDt1.c ****     res = RTC1_SetTime(time->Hour, time->Min, time->Sec); /* set information in HW RTC */
 893:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 894:../Generated_Code/TmDt1.c ****       return res;
 895:../Generated_Code/TmDt1.c ****     }
 896:../Generated_Code/TmDt1.c ****   }
 897:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 898:../Generated_Code/TmDt1.c ****     res = RTC1_SetDate(date); /* set information in HW RTC */
 899:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 900:../Generated_Code/TmDt1.c ****       return res;
 901:../Generated_Code/TmDt1.c ****     }
 902:../Generated_Code/TmDt1.c ****   }
 903:../Generated_Code/TmDt1.c ****   return ERR_OK;
 904:../Generated_Code/TmDt1.c **** #else
 905:../Generated_Code/TmDt1.c ****   (void)time;
 906:../Generated_Code/TmDt1.c ****   (void)date;
 907:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no HW RTC configured */
 2355              		.loc 1 907 0
 2356 000a 1B23     		movs	r3, #27
 908:../Generated_Code/TmDt1.c **** #endif
 909:../Generated_Code/TmDt1.c **** }
 2357              		.loc 1 909 0
 2358 000c 1846     		mov	r0, r3
 2359 000e 0C37     		adds	r7, r7, #12
 2360 0010 BD46     		mov	sp, r7
 2361              		@ sp needed
 2362 0012 5DF8047B 		ldr	r7, [sp], #4
 2363 0016 7047     		bx	lr
 2364              		.cfi_endproc
 2365              	.LFE20:
 2367              		.section	.text.TmDt1_GetInternalRTCTimeDate,"ax",%progbits
 2368              		.align	2
 2369              		.global	TmDt1_GetInternalRTCTimeDate
 2370              		.thumb
 2371              		.thumb_func
 2373              	TmDt1_GetInternalRTCTimeDate:
 2374              	.LFB21:
 910:../Generated_Code/TmDt1.c **** 
 911:../Generated_Code/TmDt1.c **** /*
 912:../Generated_Code/TmDt1.c **** ** ===================================================================
 913:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetInternalRTCTimeDate (component GenericTimeDate)
 914:../Generated_Code/TmDt1.c **** **     Description :
 915:../Generated_Code/TmDt1.c **** **         This method returns current time and date from the hardware
 916:../Generated_Code/TmDt1.c **** **         RTC.
 917:../Generated_Code/TmDt1.c **** **     Parameters  :
 918:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 919:../Generated_Code/TmDt1.c **** **       * time            - Pointer to the structure to return the
 920:../Generated_Code/TmDt1.c **** **                           time. Can be NULL.
 921:../Generated_Code/TmDt1.c **** **       * date            - Pointer to structure which returns the
 922:../Generated_Code/TmDt1.c **** **                           date information. Can be NULL
 923:../Generated_Code/TmDt1.c **** **     Returns     :
 924:../Generated_Code/TmDt1.c **** **         ---             - Error code
 925:../Generated_Code/TmDt1.c **** ** ===================================================================
 926:../Generated_Code/TmDt1.c **** */
 927:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetInternalRTCTimeDate(TIMEREC *time, DATEREC *date)
 928:../Generated_Code/TmDt1.c **** {
 2375              		.loc 1 928 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 8
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379              		@ link register save eliminated.
 2380 0000 80B4     		push	{r7}
 2381              		.cfi_def_cfa_offset 4
 2382              		.cfi_offset 7, -4
 2383 0002 83B0     		sub	sp, sp, #12
 2384              		.cfi_def_cfa_offset 16
 2385 0004 00AF     		add	r7, sp, #0
 2386              		.cfi_def_cfa_register 7
 2387 0006 7860     		str	r0, [r7, #4]
 2388 0008 3960     		str	r1, [r7]
 929:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC_LDD
 930:../Generated_Code/TmDt1.c ****   LDD_RTC_TTime timeDate;
 931:../Generated_Code/TmDt1.c **** 
 932:../Generated_Code/TmDt1.c ****   RTC1_GetTime(RTC1_DeviceData, &timeDate); /* get information from HW RTC */
 933:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 934:../Generated_Code/TmDt1.c ****     time->Hour = timeDate.Hour;
 935:../Generated_Code/TmDt1.c ****     time->Min = timeDate.Minute;
 936:../Generated_Code/TmDt1.c ****     time->Sec = timeDate.Second;
 937:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
 938:../Generated_Code/TmDt1.c ****     time->Sec100 = 0;
 939:../Generated_Code/TmDt1.c **** #endif
 940:../Generated_Code/TmDt1.c ****   }
 941:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 942:../Generated_Code/TmDt1.c ****     date->Year = timeDate.Year;
 943:../Generated_Code/TmDt1.c ****     date->Month = timeDate.Month;
 944:../Generated_Code/TmDt1.c ****     date->Day = timeDate.Day;
 945:../Generated_Code/TmDt1.c ****   }
 946:../Generated_Code/TmDt1.c ****   return ERR_OK;
 947:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_INTERNAL_HW_RTC_BEAN
 948:../Generated_Code/TmDt1.c ****   TIMEREC t;
 949:../Generated_Code/TmDt1.c ****   DATEREC d;
 950:../Generated_Code/TmDt1.c ****   uint8_t res;
 951:../Generated_Code/TmDt1.c **** 
 952:../Generated_Code/TmDt1.c ****   if (Time!=NULL) {
 953:../Generated_Code/TmDt1.c ****     res = RTC1_GetTime(&t); /* get information from HW RTC */
 954:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 955:../Generated_Code/TmDt1.c ****       return res;
 956:../Generated_Code/TmDt1.c ****     }
 957:../Generated_Code/TmDt1.c ****     *time = t; /* struct copy */
 958:../Generated_Code/TmDt1.c ****   }
 959:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 960:../Generated_Code/TmDt1.c ****     res = RTC1_GetDate(&d); /* get information from HW RTC */
 961:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
 962:../Generated_Code/TmDt1.c ****       return res;
 963:../Generated_Code/TmDt1.c ****     }
 964:../Generated_Code/TmDt1.c ****     *date = d; /* struct copy */
 965:../Generated_Code/TmDt1.c ****   }
 966:../Generated_Code/TmDt1.c ****   return ERR_OK;
 967:../Generated_Code/TmDt1.c **** #else
 968:../Generated_Code/TmDt1.c ****   (void)time;
 969:../Generated_Code/TmDt1.c ****   (void)date;
 970:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no HW RTC configured */
 2389              		.loc 1 970 0
 2390 000a 1B23     		movs	r3, #27
 971:../Generated_Code/TmDt1.c **** #endif
 972:../Generated_Code/TmDt1.c **** }
 2391              		.loc 1 972 0
 2392 000c 1846     		mov	r0, r3
 2393 000e 0C37     		adds	r7, r7, #12
 2394 0010 BD46     		mov	sp, r7
 2395              		@ sp needed
 2396 0012 5DF8047B 		ldr	r7, [sp], #4
 2397 0016 7047     		bx	lr
 2398              		.cfi_endproc
 2399              	.LFE21:
 2401              		.section	.text.TmDt1_CalculateDayOfWeek,"ax",%progbits
 2402              		.align	2
 2403              		.global	TmDt1_CalculateDayOfWeek
 2404              		.thumb
 2405              		.thumb_func
 2407              	TmDt1_CalculateDayOfWeek:
 2408              	.LFB22:
 973:../Generated_Code/TmDt1.c **** 
 974:../Generated_Code/TmDt1.c **** /*
 975:../Generated_Code/TmDt1.c **** ** ===================================================================
 976:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_CalculateDayOfWeek (component GenericTimeDate)
 977:../Generated_Code/TmDt1.c **** **     Description :
 978:../Generated_Code/TmDt1.c **** **         Returns the day of the week, Sunday starting as zero. Monday
 979:../Generated_Code/TmDt1.c **** **         is 1, ...
 980:../Generated_Code/TmDt1.c **** **     Parameters  :
 981:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
 982:../Generated_Code/TmDt1.c **** **         Year            - Years (16-bit unsigned integer)
 983:../Generated_Code/TmDt1.c **** **         Month           - Months (8-bit unsigned integer)
 984:../Generated_Code/TmDt1.c **** **         Day             - Days (8-bit unsigned integer)
 985:../Generated_Code/TmDt1.c **** **     Returns     :
 986:../Generated_Code/TmDt1.c **** **         ---             - Error code
 987:../Generated_Code/TmDt1.c **** ** ===================================================================
 988:../Generated_Code/TmDt1.c **** */
 989:../Generated_Code/TmDt1.c **** uint8_t TmDt1_CalculateDayOfWeek(uint16_t Year, uint8_t Month, uint8_t Day)
 990:../Generated_Code/TmDt1.c **** {
 2409              		.loc 1 990 0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 40
 2412              		@ frame_needed = 1, uses_anonymous_args = 0
 2413              		@ link register save eliminated.
 2414 0000 80B4     		push	{r7}
 2415              		.cfi_def_cfa_offset 4
 2416              		.cfi_offset 7, -4
 2417 0002 8BB0     		sub	sp, sp, #44
 2418              		.cfi_def_cfa_offset 48
 2419 0004 00AF     		add	r7, sp, #0
 2420              		.cfi_def_cfa_register 7
 2421 0006 1346     		mov	r3, r2
 2422 0008 0246     		mov	r2, r0	@ movhi
 2423 000a FA80     		strh	r2, [r7, #6]	@ movhi
 2424 000c 0A46     		mov	r2, r1
 2425 000e 7A71     		strb	r2, [r7, #5]
 2426 0010 3B71     		strb	r3, [r7, #4]
 991:../Generated_Code/TmDt1.c ****   /* see http://stackoverflow.com/questions/478694/what-is-the-easiest-algorithm-to-find-the-day-of
 992:../Generated_Code/TmDt1.c ****   int32_t c, y, cc, yy, m, d;
 993:../Generated_Code/TmDt1.c ****   uint8_t dayOfWeek;
 994:../Generated_Code/TmDt1.c **** 
 995:../Generated_Code/TmDt1.c ****   cc = Year/100;
 2427              		.loc 1 995 0
 2428 0012 FA88     		ldrh	r2, [r7, #6]
 2429 0014 2C4B     		ldr	r3, .L127
 2430 0016 A3FB0203 		umull	r0, r3, r3, r2
 2431 001a 5B09     		lsrs	r3, r3, #5
 2432 001c 9BB2     		uxth	r3, r3
 2433 001e 7B62     		str	r3, [r7, #36]
 996:../Generated_Code/TmDt1.c ****   yy = Year-((Year/100)*100);
 2434              		.loc 1 996 0
 2435 0020 FA88     		ldrh	r2, [r7, #6]
 2436 0022 F988     		ldrh	r1, [r7, #6]
 2437 0024 284B     		ldr	r3, .L127
 2438 0026 A3FB0103 		umull	r0, r3, r3, r1
 2439 002a 5B09     		lsrs	r3, r3, #5
 2440 002c 9BB2     		uxth	r3, r3
 2441 002e 6FF06301 		mvn	r1, #99
 2442 0032 01FB03F3 		mul	r3, r1, r3
 2443 0036 1344     		add	r3, r3, r2
 2444 0038 3B62     		str	r3, [r7, #32]
 997:../Generated_Code/TmDt1.c ****   c = (cc/4) - 2*cc-1;
 2445              		.loc 1 997 0
 2446 003a 7B6A     		ldr	r3, [r7, #36]
 2447 003c 002B     		cmp	r3, #0
 2448 003e 00DA     		bge	.L124
 2449 0040 0333     		adds	r3, r3, #3
 2450              	.L124:
 2451 0042 9B10     		asrs	r3, r3, #2
 2452 0044 1946     		mov	r1, r3
 2453 0046 7A6A     		ldr	r2, [r7, #36]
 2454 0048 1346     		mov	r3, r2
 2455 004a DB07     		lsls	r3, r3, #31
 2456 004c 9B1A     		subs	r3, r3, r2
 2457 004e 5B00     		lsls	r3, r3, #1
 2458 0050 0B44     		add	r3, r3, r1
 2459 0052 013B     		subs	r3, r3, #1
 2460 0054 FB61     		str	r3, [r7, #28]
 998:../Generated_Code/TmDt1.c ****   y = 5*yy/4;
 2461              		.loc 1 998 0
 2462 0056 3A6A     		ldr	r2, [r7, #32]
 2463 0058 1346     		mov	r3, r2
 2464 005a 9B00     		lsls	r3, r3, #2
 2465 005c 1344     		add	r3, r3, r2
 2466 005e 002B     		cmp	r3, #0
 2467 0060 00DA     		bge	.L125
 2468 0062 0333     		adds	r3, r3, #3
 2469              	.L125:
 2470 0064 9B10     		asrs	r3, r3, #2
 2471 0066 BB61     		str	r3, [r7, #24]
 999:../Generated_Code/TmDt1.c ****   m = 26*(Month+1)/10;
 2472              		.loc 1 999 0
 2473 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2474 006a 0133     		adds	r3, r3, #1
 2475 006c 1A22     		movs	r2, #26
 2476 006e 02FB03F3 		mul	r3, r2, r3
 2477 0072 164A     		ldr	r2, .L127+4
 2478 0074 82FB0312 		smull	r1, r2, r2, r3
 2479 0078 9210     		asrs	r2, r2, #2
 2480 007a DB17     		asrs	r3, r3, #31
 2481 007c D31A     		subs	r3, r2, r3
 2482 007e 7B61     		str	r3, [r7, #20]
1000:../Generated_Code/TmDt1.c ****   d = Day;
 2483              		.loc 1 1000 0
 2484 0080 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2485 0082 3B61     		str	r3, [r7, #16]
1001:../Generated_Code/TmDt1.c **** 
1002:../Generated_Code/TmDt1.c ****   dayOfWeek = (uint8_t)(c+y+m+d)%7;
 2486              		.loc 1 1002 0
 2487 0084 FB69     		ldr	r3, [r7, #28]
 2488 0086 DAB2     		uxtb	r2, r3
 2489 0088 BB69     		ldr	r3, [r7, #24]
 2490 008a DBB2     		uxtb	r3, r3
 2491 008c 1344     		add	r3, r3, r2
 2492 008e DAB2     		uxtb	r2, r3
 2493 0090 7B69     		ldr	r3, [r7, #20]
 2494 0092 DBB2     		uxtb	r3, r3
 2495 0094 1344     		add	r3, r3, r2
 2496 0096 DAB2     		uxtb	r2, r3
 2497 0098 3B69     		ldr	r3, [r7, #16]
 2498 009a DBB2     		uxtb	r3, r3
 2499 009c 1344     		add	r3, r3, r2
 2500 009e DAB2     		uxtb	r2, r3
 2501 00a0 0B4B     		ldr	r3, .L127+8
 2502 00a2 A2FB0301 		umull	r0, r1, r2, r3
 2503 00a6 531A     		subs	r3, r2, r1
 2504 00a8 5B08     		lsrs	r3, r3, #1
 2505 00aa 0B44     		add	r3, r3, r1
 2506 00ac 9908     		lsrs	r1, r3, #2
 2507 00ae 0B46     		mov	r3, r1
 2508 00b0 DB00     		lsls	r3, r3, #3
 2509 00b2 5B1A     		subs	r3, r3, r1
 2510 00b4 D31A     		subs	r3, r2, r3
 2511 00b6 FB73     		strb	r3, [r7, #15]
1003:../Generated_Code/TmDt1.c ****   return dayOfWeek; /* 0: Sunday, 1: Monday, ... 6: Saturday */
 2512              		.loc 1 1003 0
 2513 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1004:../Generated_Code/TmDt1.c **** }
 2514              		.loc 1 1004 0
 2515 00ba 1846     		mov	r0, r3
 2516 00bc 2C37     		adds	r7, r7, #44
 2517 00be BD46     		mov	sp, r7
 2518              		@ sp needed
 2519 00c0 5DF8047B 		ldr	r7, [sp], #4
 2520 00c4 7047     		bx	lr
 2521              	.L128:
 2522 00c6 00BF     		.align	2
 2523              	.L127:
 2524 00c8 1F85EB51 		.word	1374389535
 2525 00cc 67666666 		.word	1717986919
 2526 00d0 25499224 		.word	613566757
 2527              		.cfi_endproc
 2528              	.LFE22:
 2530              		.section	.text.TmDt1_SyncSWtimeToInternalRTCsec,"ax",%progbits
 2531              		.align	2
 2532              		.global	TmDt1_SyncSWtimeToInternalRTCsec
 2533              		.thumb
 2534              		.thumb_func
 2536              	TmDt1_SyncSWtimeToInternalRTCsec:
 2537              	.LFB23:
1005:../Generated_Code/TmDt1.c **** 
1006:../Generated_Code/TmDt1.c **** /*
1007:../Generated_Code/TmDt1.c **** ** ===================================================================
1008:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SyncSWtimeToInternalRTCsec (component GenericTimeDate)
1009:../Generated_Code/TmDt1.c **** **     Description :
1010:../Generated_Code/TmDt1.c **** **         This method synchronizes the software RTC with the internal
1011:../Generated_Code/TmDt1.c **** **         HW RTC. Because the internal RTC only counts seconds, we
1012:../Generated_Code/TmDt1.c **** **         sync on a second change.
1013:../Generated_Code/TmDt1.c **** **     Parameters  : None
1014:../Generated_Code/TmDt1.c **** **     Returns     :
1015:../Generated_Code/TmDt1.c **** **         ---             - Error code
1016:../Generated_Code/TmDt1.c **** ** ===================================================================
1017:../Generated_Code/TmDt1.c **** */
1018:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SyncSWtimeToInternalRTCsec(void)
1019:../Generated_Code/TmDt1.c **** {
 2538              		.loc 1 1019 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 8
 2541              		@ frame_needed = 1, uses_anonymous_args = 0
 2542 0000 80B5     		push	{r7, lr}
 2543              		.cfi_def_cfa_offset 8
 2544              		.cfi_offset 7, -8
 2545              		.cfi_offset 14, -4
 2546 0002 82B0     		sub	sp, sp, #8
 2547              		.cfi_def_cfa_offset 16
 2548 0004 00AF     		add	r7, sp, #0
 2549              		.cfi_def_cfa_register 7
1020:../Generated_Code/TmDt1.c ****   /* This method synchronizes the software RTC with the internal HW RTC.
1021:../Generated_Code/TmDt1.c ****    * Because the internal RTC only counts seconds, we sync on a second change.
1022:../Generated_Code/TmDt1.c ****    */
1023:../Generated_Code/TmDt1.c ****   TIMEREC time;
1024:../Generated_Code/TmDt1.c ****   uint8_t secs;
1025:../Generated_Code/TmDt1.c **** 
1026:../Generated_Code/TmDt1.c ****   if (TmDt1_GetInternalRTCTimeDate(&time, NULL)!=ERR_OK) {
 2550              		.loc 1 1026 0
 2551 0006 3B46     		mov	r3, r7
 2552 0008 1846     		mov	r0, r3
 2553 000a 0021     		movs	r1, #0
 2554 000c FFF7FEFF 		bl	TmDt1_GetInternalRTCTimeDate
 2555 0010 0346     		mov	r3, r0
 2556 0012 002B     		cmp	r3, #0
 2557 0014 01D0     		beq	.L130
1027:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 2558              		.loc 1 1027 0
 2559 0016 1B23     		movs	r3, #27
 2560 0018 1AE0     		b	.L135
 2561              	.L130:
1028:../Generated_Code/TmDt1.c ****   }
1029:../Generated_Code/TmDt1.c ****   secs = time.Sec; /* remember current second counter */
 2562              		.loc 1 1029 0
 2563 001a BB78     		ldrb	r3, [r7, #2]
 2564 001c FB71     		strb	r3, [r7, #7]
 2565              	.L133:
1030:../Generated_Code/TmDt1.c ****   do {
1031:../Generated_Code/TmDt1.c ****     if (TmDt1_GetInternalRTCTimeDate(&time, NULL)!=ERR_OK) {
 2566              		.loc 1 1031 0
 2567 001e 3B46     		mov	r3, r7
 2568 0020 1846     		mov	r0, r3
 2569 0022 0021     		movs	r1, #0
 2570 0024 FFF7FEFF 		bl	TmDt1_GetInternalRTCTimeDate
 2571 0028 0346     		mov	r3, r0
 2572 002a 002B     		cmp	r3, #0
 2573 002c 01D0     		beq	.L132
1032:../Generated_Code/TmDt1.c ****       return ERR_FAILED;
 2574              		.loc 1 1032 0
 2575 002e 1B23     		movs	r3, #27
 2576 0030 0EE0     		b	.L135
 2577              	.L132:
1033:../Generated_Code/TmDt1.c ****     }
1034:../Generated_Code/TmDt1.c ****   } while(secs==time.Sec);
 2578              		.loc 1 1034 0
 2579 0032 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2580 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2581 0036 9A42     		cmp	r2, r3
 2582 0038 F1D0     		beq	.L133
1035:../Generated_Code/TmDt1.c ****   /* internal RTC has switched to the new second: sync internal RTC with it */
1036:../Generated_Code/TmDt1.c ****   if (TmDt1_SetSWTimeDate(&time, NULL)!=ERR_OK) { /* sync software RTC from HW RTC */
 2583              		.loc 1 1036 0
 2584 003a 3B46     		mov	r3, r7
 2585 003c 1846     		mov	r0, r3
 2586 003e 0021     		movs	r1, #0
 2587 0040 FFF7FEFF 		bl	TmDt1_SetSWTimeDate
 2588 0044 0346     		mov	r3, r0
 2589 0046 002B     		cmp	r3, #0
 2590 0048 01D0     		beq	.L134
1037:../Generated_Code/TmDt1.c ****     return ERR_FAILED;
 2591              		.loc 1 1037 0
 2592 004a 1B23     		movs	r3, #27
 2593 004c 00E0     		b	.L135
 2594              	.L134:
1038:../Generated_Code/TmDt1.c ****   }
1039:../Generated_Code/TmDt1.c ****   return ERR_OK;
 2595              		.loc 1 1039 0
 2596 004e 0023     		movs	r3, #0
 2597              	.L135:
1040:../Generated_Code/TmDt1.c **** }
 2598              		.loc 1 1040 0
 2599 0050 1846     		mov	r0, r3
 2600 0052 0837     		adds	r7, r7, #8
 2601 0054 BD46     		mov	sp, r7
 2602              		@ sp needed
 2603 0056 80BD     		pop	{r7, pc}
 2604              		.cfi_endproc
 2605              	.LFE23:
 2607              		.section	.text.TmDt1_SyncWithInternalRTC,"ax",%progbits
 2608              		.align	2
 2609              		.global	TmDt1_SyncWithInternalRTC
 2610              		.thumb
 2611              		.thumb_func
 2613              	TmDt1_SyncWithInternalRTC:
 2614              	.LFB24:
1041:../Generated_Code/TmDt1.c **** 
1042:../Generated_Code/TmDt1.c **** /*
1043:../Generated_Code/TmDt1.c **** ** ===================================================================
1044:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SyncWithInternalRTC (component GenericTimeDate)
1045:../Generated_Code/TmDt1.c **** **     Description :
1046:../Generated_Code/TmDt1.c **** **         Synchronizes the software RTC with date and time from the
1047:../Generated_Code/TmDt1.c **** **         internal hardware RTC
1048:../Generated_Code/TmDt1.c **** **     Parameters  : None
1049:../Generated_Code/TmDt1.c **** **     Returns     :
1050:../Generated_Code/TmDt1.c **** **         ---             - Error code
1051:../Generated_Code/TmDt1.c **** ** ===================================================================
1052:../Generated_Code/TmDt1.c **** */
1053:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SyncWithInternalRTC(void)
1054:../Generated_Code/TmDt1.c **** {
 2615              		.loc 1 1054 0
 2616              		.cfi_startproc
 2617              		@ args = 0, pretend = 0, frame = 0
 2618              		@ frame_needed = 1, uses_anonymous_args = 0
 2619              		@ link register save eliminated.
 2620 0000 80B4     		push	{r7}
 2621              		.cfi_def_cfa_offset 4
 2622              		.cfi_offset 7, -4
 2623 0002 00AF     		add	r7, sp, #0
 2624              		.cfi_def_cfa_register 7
1055:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC_LDD || TmDt1_USE_INTERNAL_HW_RTC_BEAN
1056:../Generated_Code/TmDt1.c ****   TIMEREC time;
1057:../Generated_Code/TmDt1.c ****   DATEREC date;
1058:../Generated_Code/TmDt1.c ****   uint8_t res;
1059:../Generated_Code/TmDt1.c **** 
1060:../Generated_Code/TmDt1.c ****   res = TmDt1_GetInternalRTCTimeDate(&time, &date);
1061:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1062:../Generated_Code/TmDt1.c ****     return res;
1063:../Generated_Code/TmDt1.c ****   }
1064:../Generated_Code/TmDt1.c ****   /* update software time from hardware information */
1065:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
1066:../Generated_Code/TmDt1.c ****   res = TmDt1_SetTime(time.Hour, time.Min, time.Sec, time.Sec100);
1067:../Generated_Code/TmDt1.c **** #else
1068:../Generated_Code/TmDt1.c ****   res = TmDt1_SetTime(time.Hour, time.Min, time.Sec, 0);
1069:../Generated_Code/TmDt1.c **** #endif
1070:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1071:../Generated_Code/TmDt1.c ****     return res;
1072:../Generated_Code/TmDt1.c ****   }
1073:../Generated_Code/TmDt1.c ****   res = TmDt1_SetDate(date.Year, date.Month, date.Day);
1074:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1075:../Generated_Code/TmDt1.c ****     return res;
1076:../Generated_Code/TmDt1.c ****   }
1077:../Generated_Code/TmDt1.c ****   /* now sync to the second of the internal RTC */
1078:../Generated_Code/TmDt1.c ****   res = TmDt1_SyncSWtimeToInternalRTCsec();
1079:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1080:../Generated_Code/TmDt1.c ****     return res;
1081:../Generated_Code/TmDt1.c ****   }
1082:../Generated_Code/TmDt1.c ****   return ERR_OK;
1083:../Generated_Code/TmDt1.c **** #else
1084:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no hardware RTC available */
 2625              		.loc 1 1084 0
 2626 0004 1B23     		movs	r3, #27
1085:../Generated_Code/TmDt1.c **** #endif
1086:../Generated_Code/TmDt1.c **** }
 2627              		.loc 1 1086 0
 2628 0006 1846     		mov	r0, r3
 2629 0008 BD46     		mov	sp, r7
 2630              		@ sp needed
 2631 000a 5DF8047B 		ldr	r7, [sp], #4
 2632 000e 7047     		bx	lr
 2633              		.cfi_endproc
 2634              	.LFE24:
 2636              		.section	.text.TmDt1_SyncWithExternalRTC,"ax",%progbits
 2637              		.align	2
 2638              		.global	TmDt1_SyncWithExternalRTC
 2639              		.thumb
 2640              		.thumb_func
 2642              	TmDt1_SyncWithExternalRTC:
 2643              	.LFB25:
1087:../Generated_Code/TmDt1.c **** 
1088:../Generated_Code/TmDt1.c **** /*
1089:../Generated_Code/TmDt1.c **** ** ===================================================================
1090:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SyncWithExternalRTC (component GenericTimeDate)
1091:../Generated_Code/TmDt1.c **** **     Description :
1092:../Generated_Code/TmDt1.c **** **         Synchronizes the software RTC with date and time from the
1093:../Generated_Code/TmDt1.c **** **         hardware RTC. Note that if that RTC interface requires
1094:../Generated_Code/TmDt1.c **** **         interrupts, this function should be called only when
1095:../Generated_Code/TmDt1.c **** **         interrupts are enabled.
1096:../Generated_Code/TmDt1.c **** **     Parameters  : None
1097:../Generated_Code/TmDt1.c **** **     Returns     :
1098:../Generated_Code/TmDt1.c **** **         ---             - Error code
1099:../Generated_Code/TmDt1.c **** ** ===================================================================
1100:../Generated_Code/TmDt1.c **** */
1101:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SyncWithExternalRTC(void)
1102:../Generated_Code/TmDt1.c **** {
 2644              		.loc 1 1102 0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 0
 2647              		@ frame_needed = 1, uses_anonymous_args = 0
 2648              		@ link register save eliminated.
 2649 0000 80B4     		push	{r7}
 2650              		.cfi_def_cfa_offset 4
 2651              		.cfi_offset 7, -4
 2652 0002 00AF     		add	r7, sp, #0
 2653              		.cfi_def_cfa_register 7
1103:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC
1104:../Generated_Code/TmDt1.c ****   TIMEREC time;
1105:../Generated_Code/TmDt1.c ****   DATEREC date;
1106:../Generated_Code/TmDt1.c ****   uint8_t res;
1107:../Generated_Code/TmDt1.c **** 
1108:../Generated_Code/TmDt1.c ****   res = TmDt1_GetExternalRTCTimeDate(&time, &date);
1109:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1110:../Generated_Code/TmDt1.c ****     return res;
1111:../Generated_Code/TmDt1.c ****   }
1112:../Generated_Code/TmDt1.c ****   /* update software time from hardware information */
1113:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
1114:../Generated_Code/TmDt1.c ****   res = TmDt1_SetTime(time.Hour, time.Min, time.Sec, time.Sec100);
1115:../Generated_Code/TmDt1.c **** #else
1116:../Generated_Code/TmDt1.c ****   res = TmDt1_SetTime(time.Hour, time.Min, time.Sec, 0);
1117:../Generated_Code/TmDt1.c **** #endif
1118:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1119:../Generated_Code/TmDt1.c ****     return res;
1120:../Generated_Code/TmDt1.c ****   }
1121:../Generated_Code/TmDt1.c ****   return TmDt1_SetDate(date.Year, date.Month, date.Day);
1122:../Generated_Code/TmDt1.c **** #else
1123:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no external RTC available */
 2654              		.loc 1 1123 0
 2655 0004 1B23     		movs	r3, #27
1124:../Generated_Code/TmDt1.c **** #endif
1125:../Generated_Code/TmDt1.c **** }
 2656              		.loc 1 1125 0
 2657 0006 1846     		mov	r0, r3
 2658 0008 BD46     		mov	sp, r7
 2659              		@ sp needed
 2660 000a 5DF8047B 		ldr	r7, [sp], #4
 2661 000e 7047     		bx	lr
 2662              		.cfi_endproc
 2663              	.LFE25:
 2665              		.section	.text.TmDt1_SetExternalRTCTimeDate,"ax",%progbits
 2666              		.align	2
 2667              		.global	TmDt1_SetExternalRTCTimeDate
 2668              		.thumb
 2669              		.thumb_func
 2671              	TmDt1_SetExternalRTCTimeDate:
 2672              	.LFB26:
1126:../Generated_Code/TmDt1.c **** 
1127:../Generated_Code/TmDt1.c **** /*
1128:../Generated_Code/TmDt1.c **** ** ===================================================================
1129:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetExternalRTCTimeDate (component GenericTimeDate)
1130:../Generated_Code/TmDt1.c **** **     Description :
1131:../Generated_Code/TmDt1.c **** **         This method sets a new actual time and date of the external
1132:../Generated_Code/TmDt1.c **** **         hardware RTC.
1133:../Generated_Code/TmDt1.c **** **     Parameters  :
1134:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1135:../Generated_Code/TmDt1.c **** **       * time            - Pointer to struct which contains the
1136:../Generated_Code/TmDt1.c **** **                           time to be set. Can be NULL if time shall
1137:../Generated_Code/TmDt1.c **** **                           not be set.
1138:../Generated_Code/TmDt1.c **** **       * date            - Pointer to struct which contains the
1139:../Generated_Code/TmDt1.c **** **                           date information to be set. Can be NULL if
1140:../Generated_Code/TmDt1.c **** **                           date shall not be set.
1141:../Generated_Code/TmDt1.c **** **     Returns     :
1142:../Generated_Code/TmDt1.c **** **         ---             - Error code
1143:../Generated_Code/TmDt1.c **** ** ===================================================================
1144:../Generated_Code/TmDt1.c **** */
1145:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetExternalRTCTimeDate(TIMEREC *time, DATEREC *date)
1146:../Generated_Code/TmDt1.c **** {
 2673              		.loc 1 1146 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 8
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678 0000 80B4     		push	{r7}
 2679              		.cfi_def_cfa_offset 4
 2680              		.cfi_offset 7, -4
 2681 0002 83B0     		sub	sp, sp, #12
 2682              		.cfi_def_cfa_offset 16
 2683 0004 00AF     		add	r7, sp, #0
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
 2686 0008 3960     		str	r1, [r7]
1147:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC
1148:../Generated_Code/TmDt1.c ****   uint8_t res;
1149:../Generated_Code/TmDt1.c **** 
1150:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
1151:../Generated_Code/TmDt1.c ****     res = RTC2_SetTime(time->Hour, time->Min, time->Sec,
1152:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
1153:../Generated_Code/TmDt1.c ****         time->Sec100
1154:../Generated_Code/TmDt1.c **** #else
1155:../Generated_Code/TmDt1.c ****         0
1156:../Generated_Code/TmDt1.c **** #endif
1157:../Generated_Code/TmDt1.c ****     );
1158:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
1159:../Generated_Code/TmDt1.c ****       return res;
1160:../Generated_Code/TmDt1.c ****     }
1161:../Generated_Code/TmDt1.c ****   }
1162:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
1163:../Generated_Code/TmDt1.c ****     res = RTC2_SetDate(date->Year, date->Month, date->Day);
1164:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
1165:../Generated_Code/TmDt1.c ****       return res;
1166:../Generated_Code/TmDt1.c ****     }
1167:../Generated_Code/TmDt1.c ****   }
1168:../Generated_Code/TmDt1.c ****   return ERR_OK;
1169:../Generated_Code/TmDt1.c **** #else
1170:../Generated_Code/TmDt1.c ****   (void)time;
1171:../Generated_Code/TmDt1.c ****   (void)date;
1172:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no external RTC available */
 2687              		.loc 1 1172 0
 2688 000a 1B23     		movs	r3, #27
1173:../Generated_Code/TmDt1.c **** #endif
1174:../Generated_Code/TmDt1.c **** }
 2689              		.loc 1 1174 0
 2690 000c 1846     		mov	r0, r3
 2691 000e 0C37     		adds	r7, r7, #12
 2692 0010 BD46     		mov	sp, r7
 2693              		@ sp needed
 2694 0012 5DF8047B 		ldr	r7, [sp], #4
 2695 0016 7047     		bx	lr
 2696              		.cfi_endproc
 2697              	.LFE26:
 2699              		.section	.text.TmDt1_GetExternalRTCTimeDate,"ax",%progbits
 2700              		.align	2
 2701              		.global	TmDt1_GetExternalRTCTimeDate
 2702              		.thumb
 2703              		.thumb_func
 2705              	TmDt1_GetExternalRTCTimeDate:
 2706              	.LFB27:
1175:../Generated_Code/TmDt1.c **** 
1176:../Generated_Code/TmDt1.c **** /*
1177:../Generated_Code/TmDt1.c **** ** ===================================================================
1178:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetExternalRTCTimeDate (component GenericTimeDate)
1179:../Generated_Code/TmDt1.c **** **     Description :
1180:../Generated_Code/TmDt1.c **** **         This method returns current time and date from the external
1181:../Generated_Code/TmDt1.c **** **         hardware RTC.
1182:../Generated_Code/TmDt1.c **** **     Parameters  :
1183:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1184:../Generated_Code/TmDt1.c **** **       * time            - Pointer to the structure to return the
1185:../Generated_Code/TmDt1.c **** **                           time. Can be NULL.
1186:../Generated_Code/TmDt1.c **** **       * date            - Pointer to structure which returns the
1187:../Generated_Code/TmDt1.c **** **                           date information. Can be NULL
1188:../Generated_Code/TmDt1.c **** **     Returns     :
1189:../Generated_Code/TmDt1.c **** **         ---             - Error code
1190:../Generated_Code/TmDt1.c **** ** ===================================================================
1191:../Generated_Code/TmDt1.c **** */
1192:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetExternalRTCTimeDate(TIMEREC *time, DATEREC *date)
1193:../Generated_Code/TmDt1.c **** {
 2707              		.loc 1 1193 0
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 8
 2710              		@ frame_needed = 1, uses_anonymous_args = 0
 2711              		@ link register save eliminated.
 2712 0000 80B4     		push	{r7}
 2713              		.cfi_def_cfa_offset 4
 2714              		.cfi_offset 7, -4
 2715 0002 83B0     		sub	sp, sp, #12
 2716              		.cfi_def_cfa_offset 16
 2717 0004 00AF     		add	r7, sp, #0
 2718              		.cfi_def_cfa_register 7
 2719 0006 7860     		str	r0, [r7, #4]
 2720 0008 3960     		str	r1, [r7]
1194:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC
1195:../Generated_Code/TmDt1.c ****   uint8_t res;
1196:../Generated_Code/TmDt1.c **** 
1197:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
1198:../Generated_Code/TmDt1.c ****     res = RTC2_GetTime(time);
1199:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
1200:../Generated_Code/TmDt1.c ****       return res;
1201:../Generated_Code/TmDt1.c ****     }
1202:../Generated_Code/TmDt1.c ****   }
1203:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
1204:../Generated_Code/TmDt1.c ****     res = RTC2_GetDate(date);
1205:../Generated_Code/TmDt1.c ****     if (res!=ERR_OK) {
1206:../Generated_Code/TmDt1.c ****       return res;
1207:../Generated_Code/TmDt1.c ****     }
1208:../Generated_Code/TmDt1.c ****   }
1209:../Generated_Code/TmDt1.c ****   return ERR_OK;
1210:../Generated_Code/TmDt1.c **** #else
1211:../Generated_Code/TmDt1.c ****   (void)time;
1212:../Generated_Code/TmDt1.c ****   (void)date;
1213:../Generated_Code/TmDt1.c ****   return ERR_FAILED; /* no external RTC available */
 2721              		.loc 1 1213 0
 2722 000a 1B23     		movs	r3, #27
1214:../Generated_Code/TmDt1.c **** #endif
1215:../Generated_Code/TmDt1.c **** }
 2723              		.loc 1 1215 0
 2724 000c 1846     		mov	r0, r3
 2725 000e 0C37     		adds	r7, r7, #12
 2726 0010 BD46     		mov	sp, r7
 2727              		@ sp needed
 2728 0012 5DF8047B 		ldr	r7, [sp], #4
 2729 0016 7047     		bx	lr
 2730              		.cfi_endproc
 2731              	.LFE27:
 2733              		.section	.text.TmDt1_SetTimeDate,"ax",%progbits
 2734              		.align	2
 2735              		.global	TmDt1_SetTimeDate
 2736              		.thumb
 2737              		.thumb_func
 2739              	TmDt1_SetTimeDate:
 2740              	.LFB28:
1216:../Generated_Code/TmDt1.c **** 
1217:../Generated_Code/TmDt1.c **** /*
1218:../Generated_Code/TmDt1.c **** ** ===================================================================
1219:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_SetTimeDate (component GenericTimeDate)
1220:../Generated_Code/TmDt1.c **** **     Description :
1221:../Generated_Code/TmDt1.c **** **         This method sets a new actual time and date of the RTC.
1222:../Generated_Code/TmDt1.c **** **     Parameters  :
1223:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1224:../Generated_Code/TmDt1.c **** **       * time            - Pointer to struct which contains the
1225:../Generated_Code/TmDt1.c **** **                           time to be set. Can be NULL if time shall
1226:../Generated_Code/TmDt1.c **** **                           not be set.
1227:../Generated_Code/TmDt1.c **** **       * date            - Pointer to struct which contains the
1228:../Generated_Code/TmDt1.c **** **                           date information to be set. Can be NULL if
1229:../Generated_Code/TmDt1.c **** **                           date shall not be set.
1230:../Generated_Code/TmDt1.c **** **     Returns     :
1231:../Generated_Code/TmDt1.c **** **         ---             - Error code
1232:../Generated_Code/TmDt1.c **** ** ===================================================================
1233:../Generated_Code/TmDt1.c **** */
1234:../Generated_Code/TmDt1.c **** uint8_t TmDt1_SetTimeDate(TIMEREC *time, DATEREC *date)
1235:../Generated_Code/TmDt1.c **** {
 2741              		.loc 1 1235 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 16
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745 0000 80B5     		push	{r7, lr}
 2746              		.cfi_def_cfa_offset 8
 2747              		.cfi_offset 7, -8
 2748              		.cfi_offset 14, -4
 2749 0002 84B0     		sub	sp, sp, #16
 2750              		.cfi_def_cfa_offset 24
 2751 0004 00AF     		add	r7, sp, #0
 2752              		.cfi_def_cfa_register 7
 2753 0006 7860     		str	r0, [r7, #4]
 2754 0008 3960     		str	r1, [r7]
1236:../Generated_Code/TmDt1.c ****   uint8_t res = ERR_OK;
 2755              		.loc 1 1236 0
 2756 000a 0023     		movs	r3, #0
 2757 000c FB73     		strb	r3, [r7, #15]
1237:../Generated_Code/TmDt1.c ****   bool failed = FALSE;
 2758              		.loc 1 1237 0
 2759 000e 0023     		movs	r3, #0
 2760 0010 BB73     		strb	r3, [r7, #14]
1238:../Generated_Code/TmDt1.c **** 
1239:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_SOFTWARE_RTC
1240:../Generated_Code/TmDt1.c ****   res = TmDt1_SetSWTimeDate(time, date);
 2761              		.loc 1 1240 0
 2762 0012 7868     		ldr	r0, [r7, #4]
 2763 0014 3968     		ldr	r1, [r7]
 2764 0016 FFF7FEFF 		bl	TmDt1_SetSWTimeDate
 2765 001a 0346     		mov	r3, r0
 2766 001c FB73     		strb	r3, [r7, #15]
1241:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
 2767              		.loc 1 1241 0
 2768 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2769 0020 002B     		cmp	r3, #0
 2770 0022 01D0     		beq	.L145
1242:../Generated_Code/TmDt1.c ****     failed = TRUE;
 2771              		.loc 1 1242 0
 2772 0024 0123     		movs	r3, #1
 2773 0026 BB73     		strb	r3, [r7, #14]
 2774              	.L145:
1243:../Generated_Code/TmDt1.c ****   }
1244:../Generated_Code/TmDt1.c **** #endif
1245:../Generated_Code/TmDt1.c **** #if TmDt1_USE_INTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_INTERNAL_RTC
1246:../Generated_Code/TmDt1.c ****   res = TmDt1_SetInternalRTCTimeDate(time, date);
1247:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1248:../Generated_Code/TmDt1.c ****     failed = TRUE;
1249:../Generated_Code/TmDt1.c ****   }
1250:../Generated_Code/TmDt1.c **** #endif
1251:../Generated_Code/TmDt1.c **** #if TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_SET_TIME_DATE_METHOD_USES_EXTERNAL_RTC
1252:../Generated_Code/TmDt1.c ****   res = TmDt1_SetExternalRTCTimeDate(time, date);
1253:../Generated_Code/TmDt1.c ****   if (res!=ERR_OK) {
1254:../Generated_Code/TmDt1.c ****     failed = TRUE;
1255:../Generated_Code/TmDt1.c ****   }
1256:../Generated_Code/TmDt1.c **** #endif
1257:../Generated_Code/TmDt1.c ****   if (failed) {
 2775              		.loc 1 1257 0
 2776 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2777 002a 002B     		cmp	r3, #0
 2778 002c 01D0     		beq	.L146
1258:../Generated_Code/TmDt1.c ****     res = ERR_FAILED;
 2779              		.loc 1 1258 0
 2780 002e 1B23     		movs	r3, #27
 2781 0030 FB73     		strb	r3, [r7, #15]
 2782              	.L146:
1259:../Generated_Code/TmDt1.c ****   }
1260:../Generated_Code/TmDt1.c ****   return res;
 2783              		.loc 1 1260 0
 2784 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1261:../Generated_Code/TmDt1.c **** }
 2785              		.loc 1 1261 0
 2786 0034 1846     		mov	r0, r3
 2787 0036 1037     		adds	r7, r7, #16
 2788 0038 BD46     		mov	sp, r7
 2789              		@ sp needed
 2790 003a 80BD     		pop	{r7, pc}
 2791              		.cfi_endproc
 2792              	.LFE28:
 2794              		.section	.text.TmDt1_GetTimeDate,"ax",%progbits
 2795              		.align	2
 2796              		.global	TmDt1_GetTimeDate
 2797              		.thumb
 2798              		.thumb_func
 2800              	TmDt1_GetTimeDate:
 2801              	.LFB29:
1262:../Generated_Code/TmDt1.c **** 
1263:../Generated_Code/TmDt1.c **** /*
1264:../Generated_Code/TmDt1.c **** ** ===================================================================
1265:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_GetTimeDate (component GenericTimeDate)
1266:../Generated_Code/TmDt1.c **** **     Description :
1267:../Generated_Code/TmDt1.c **** **         This method returns current time and date from the RTC.
1268:../Generated_Code/TmDt1.c **** **     Parameters  :
1269:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1270:../Generated_Code/TmDt1.c **** **       * time            - Pointer to the structure to return the
1271:../Generated_Code/TmDt1.c **** **                           time. Can be NULL.
1272:../Generated_Code/TmDt1.c **** **       * date            - Pointer to structure which returns the
1273:../Generated_Code/TmDt1.c **** **                           date information. Can be NULL
1274:../Generated_Code/TmDt1.c **** **     Returns     :
1275:../Generated_Code/TmDt1.c **** **         ---             - Error code
1276:../Generated_Code/TmDt1.c **** ** ===================================================================
1277:../Generated_Code/TmDt1.c **** */
1278:../Generated_Code/TmDt1.c **** uint8_t TmDt1_GetTimeDate(TIMEREC *time, DATEREC *date)
1279:../Generated_Code/TmDt1.c **** {
 2802              		.loc 1 1279 0
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 16
 2805              		@ frame_needed = 1, uses_anonymous_args = 0
 2806 0000 80B5     		push	{r7, lr}
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 7, -8
 2809              		.cfi_offset 14, -4
 2810 0002 84B0     		sub	sp, sp, #16
 2811              		.cfi_def_cfa_offset 24
 2812 0004 00AF     		add	r7, sp, #0
 2813              		.cfi_def_cfa_register 7
 2814 0006 7860     		str	r0, [r7, #4]
 2815 0008 3960     		str	r1, [r7]
1280:../Generated_Code/TmDt1.c ****   uint8_t res;
1281:../Generated_Code/TmDt1.c **** 
1282:../Generated_Code/TmDt1.c **** #if TmDt1_USE_SOFTWARE_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_SOFTWARE_R
1283:../Generated_Code/TmDt1.c ****   res = TmDt1_GetSWTimeDate(time, date);
 2816              		.loc 1 1283 0
 2817 000a 7868     		ldr	r0, [r7, #4]
 2818 000c 3968     		ldr	r1, [r7]
 2819 000e FFF7FEFF 		bl	TmDt1_GetSWTimeDate
 2820 0012 0346     		mov	r3, r0
 2821 0014 FB73     		strb	r3, [r7, #15]
1284:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_INTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_INTER
1285:../Generated_Code/TmDt1.c ****   res = TmDt1_GetInternalRTCTimeDate(time, date);
1286:../Generated_Code/TmDt1.c **** #elif TmDt1_USE_EXTERNAL_HW_RTC && TmDt1_USE_GET_TIME_DATE_METHOD==TmDt1_GET_TIME_DATE_METHOD_EXTER
1287:../Generated_Code/TmDt1.c ****   res = TmDt1_GetExternalRTCTimeDate(time, date);
1288:../Generated_Code/TmDt1.c **** #else
1289:../Generated_Code/TmDt1.c ****   #error "invalid configuration!"
1290:../Generated_Code/TmDt1.c ****   res = ERR_FAILED;
1291:../Generated_Code/TmDt1.c **** #endif
1292:../Generated_Code/TmDt1.c ****   return res;
 2822              		.loc 1 1292 0
 2823 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1293:../Generated_Code/TmDt1.c **** }
 2824              		.loc 1 1293 0
 2825 0018 1846     		mov	r0, r3
 2826 001a 1037     		adds	r7, r7, #16
 2827 001c BD46     		mov	sp, r7
 2828              		@ sp needed
 2829 001e 80BD     		pop	{r7, pc}
 2830              		.cfi_endproc
 2831              	.LFE29:
 2833              		.section	.rodata
 2834 0343 00       		.align	2
 2835              	.LC0:
 2836 0344 00       		.byte	0
 2837 0345 1F       		.byte	31
 2838 0346 1C       		.byte	28
 2839 0347 1F       		.byte	31
 2840 0348 1E       		.byte	30
 2841 0349 1F       		.byte	31
 2842 034a 1E       		.byte	30
 2843 034b 1F       		.byte	31
 2844 034c 1F       		.byte	31
 2845 034d 1E       		.byte	30
 2846 034e 1F       		.byte	31
 2847 034f 1E       		.byte	30
 2848 0350 1F       		.byte	31
 2849 0351 000000   		.section	.text.TmDt1_UnixSecondsToTimeDateCustom,"ax",%progbits
 2850              		.align	2
 2851              		.global	TmDt1_UnixSecondsToTimeDateCustom
 2852              		.thumb
 2853              		.thumb_func
 2855              	TmDt1_UnixSecondsToTimeDateCustom:
 2856              	.LFB30:
1294:../Generated_Code/TmDt1.c **** 
1295:../Generated_Code/TmDt1.c **** /*
1296:../Generated_Code/TmDt1.c **** ** ===================================================================
1297:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_UnixSecondsToTimeDateCustom (component GenericTimeDate)
1298:../Generated_Code/TmDt1.c **** **     Description :
1299:../Generated_Code/TmDt1.c **** **         Transforms a given time/date into the Unix time stamp, with
1300:../Generated_Code/TmDt1.c **** **         the number of seconds from a starting date
1301:../Generated_Code/TmDt1.c **** **     Parameters  :
1302:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1303:../Generated_Code/TmDt1.c **** **         seconds         - Unix time stamp in seconds after
1304:../Generated_Code/TmDt1.c **** **                           the given base year and base month
1305:../Generated_Code/TmDt1.c **** **         offset_hours    - Optional time zone
1306:../Generated_Code/TmDt1.c **** **                           offset, use 0 for no offset
1307:../Generated_Code/TmDt1.c **** **       * time            - Pointer to TIMEREC struct where the
1308:../Generated_Code/TmDt1.c **** **                           result is stored. Can be NULL.
1309:../Generated_Code/TmDt1.c **** **       * date            - Pointer to DATEREC struct where the
1310:../Generated_Code/TmDt1.c **** **                           result is stored. Can be NULL.
1311:../Generated_Code/TmDt1.c **** **         baseYear        - Base year from which is used as
1312:../Generated_Code/TmDt1.c **** **                           base to count the seconds, in YYYY format.
1313:../Generated_Code/TmDt1.c **** **     Returns     : Nothing
1314:../Generated_Code/TmDt1.c **** ** ===================================================================
1315:../Generated_Code/TmDt1.c **** */
1316:../Generated_Code/TmDt1.c **** void TmDt1_UnixSecondsToTimeDateCustom(int32_t seconds, int8_t offset_hours, TIMEREC *time, DATEREC
1317:../Generated_Code/TmDt1.c **** {
 2857              		.loc 1 1317 0
 2858              		.cfi_startproc
 2859              		@ args = 4, pretend = 0, frame = 48
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 90B5     		push	{r4, r7, lr}
 2862              		.cfi_def_cfa_offset 12
 2863              		.cfi_offset 4, -12
 2864              		.cfi_offset 7, -8
 2865              		.cfi_offset 14, -4
 2866 0002 8DB0     		sub	sp, sp, #52
 2867              		.cfi_def_cfa_offset 64
 2868 0004 00AF     		add	r7, sp, #0
 2869              		.cfi_def_cfa_register 7
 2870 0006 F860     		str	r0, [r7, #12]
 2871 0008 7A60     		str	r2, [r7, #4]
 2872 000a 3B60     		str	r3, [r7]
 2873 000c 0B46     		mov	r3, r1
 2874 000e FB72     		strb	r3, [r7, #11]
1318:../Generated_Code/TmDt1.c ****   /* Implementation based on https://www.experts-exchange.com/questions/26868405/convert-unix-time-
1319:../Generated_Code/TmDt1.c ****   uint8_t daysmonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
 2875              		.loc 1 1319 0
 2876 0010 684A     		ldr	r2, .L162
 2877 0012 07F11403 		add	r3, r7, #20
 2878 0016 1446     		mov	r4, r2
 2879 0018 2068     		ldr	r0, [r4]	@ unaligned
 2880 001a 6168     		ldr	r1, [r4, #4]	@ unaligned
 2881 001c A268     		ldr	r2, [r4, #8]	@ unaligned
 2882 001e 07C3     		stmia	r3!, {r0, r1, r2}
 2883 0020 227B     		ldrb	r2, [r4, #12]
 2884 0022 1A70     		strb	r2, [r3]
1320:../Generated_Code/TmDt1.c ****   int32_t secs_per_year;
1321:../Generated_Code/TmDt1.c ****   int32_t secs_per_month;
1322:../Generated_Code/TmDt1.c ****   uint16_t year;
1323:../Generated_Code/TmDt1.c ****   uint8_t month;
1324:../Generated_Code/TmDt1.c ****   uint8_t day;
1325:../Generated_Code/TmDt1.c ****   uint8_t hours;
1326:../Generated_Code/TmDt1.c ****   uint8_t minutes;
1327:../Generated_Code/TmDt1.c **** 
1328:../Generated_Code/TmDt1.c ****   /* adjust seconds to localtime */
1329:../Generated_Code/TmDt1.c ****   seconds -= (int32_t)offset_hours*3600;
 2885              		.loc 1 1329 0
 2886 0024 97F90B30 		ldrsb	r3, [r7, #11]
 2887 0028 634A     		ldr	r2, .L162+4
 2888 002a 02FB03F3 		mul	r3, r2, r3
 2889 002e FA68     		ldr	r2, [r7, #12]
 2890 0030 1344     		add	r3, r3, r2
 2891 0032 FB60     		str	r3, [r7, #12]
1330:../Generated_Code/TmDt1.c ****   /* year */
1331:../Generated_Code/TmDt1.c ****   year = baseYear;
 2892              		.loc 1 1331 0
 2893 0034 B7F84030 		ldrh	r3, [r7, #64]	@ movhi
 2894 0038 FB84     		strh	r3, [r7, #38]	@ movhi
1332:../Generated_Code/TmDt1.c ****   if (UTIL1_IsLeapYear(year)) {
 2895              		.loc 1 1332 0
 2896 003a FB8C     		ldrh	r3, [r7, #38]
 2897 003c 1846     		mov	r0, r3
 2898 003e FFF7FEFF 		bl	UTIL1_IsLeapYear
 2899 0042 0346     		mov	r3, r0
 2900 0044 002B     		cmp	r3, #0
 2901 0046 02D0     		beq	.L151
1333:../Generated_Code/TmDt1.c ****     secs_per_year = (365+1)*24*3600;
 2902              		.loc 1 1333 0
 2903 0048 5C4B     		ldr	r3, .L162+8
 2904 004a FB62     		str	r3, [r7, #44]
1334:../Generated_Code/TmDt1.c ****   } else {
1335:../Generated_Code/TmDt1.c ****     secs_per_year = 365*24*3600;
1336:../Generated_Code/TmDt1.c ****   }
1337:../Generated_Code/TmDt1.c ****   while (seconds>=secs_per_year) {
 2905              		.loc 1 1337 0
 2906 004c 15E0     		b	.L153
 2907              	.L151:
1335:../Generated_Code/TmDt1.c ****     secs_per_year = 365*24*3600;
 2908              		.loc 1 1335 0
 2909 004e 5C4B     		ldr	r3, .L162+12
 2910 0050 FB62     		str	r3, [r7, #44]
 2911              		.loc 1 1337 0
 2912 0052 12E0     		b	.L153
 2913              	.L155:
1338:../Generated_Code/TmDt1.c ****     seconds -= secs_per_year;
 2914              		.loc 1 1338 0
 2915 0054 FA68     		ldr	r2, [r7, #12]
 2916 0056 FB6A     		ldr	r3, [r7, #44]
 2917 0058 D31A     		subs	r3, r2, r3
 2918 005a FB60     		str	r3, [r7, #12]
1339:../Generated_Code/TmDt1.c ****     year++;
 2919              		.loc 1 1339 0
 2920 005c FB8C     		ldrh	r3, [r7, #38]
 2921 005e 0133     		adds	r3, r3, #1
 2922 0060 FB84     		strh	r3, [r7, #38]	@ movhi
1340:../Generated_Code/TmDt1.c ****     if (UTIL1_IsLeapYear(year)) {
 2923              		.loc 1 1340 0
 2924 0062 FB8C     		ldrh	r3, [r7, #38]
 2925 0064 1846     		mov	r0, r3
 2926 0066 FFF7FEFF 		bl	UTIL1_IsLeapYear
 2927 006a 0346     		mov	r3, r0
 2928 006c 002B     		cmp	r3, #0
 2929 006e 02D0     		beq	.L154
1341:../Generated_Code/TmDt1.c ****       secs_per_year = (365+1)*24*3600;
 2930              		.loc 1 1341 0
 2931 0070 524B     		ldr	r3, .L162+8
 2932 0072 FB62     		str	r3, [r7, #44]
 2933 0074 01E0     		b	.L153
 2934              	.L154:
1342:../Generated_Code/TmDt1.c ****     } else {
1343:../Generated_Code/TmDt1.c ****       secs_per_year = 365*24*3600;
 2935              		.loc 1 1343 0
 2936 0076 524B     		ldr	r3, .L162+12
 2937 0078 FB62     		str	r3, [r7, #44]
 2938              	.L153:
1337:../Generated_Code/TmDt1.c ****   while (seconds>=secs_per_year) {
 2939              		.loc 1 1337 0 discriminator 1
 2940 007a FA68     		ldr	r2, [r7, #12]
 2941 007c FB6A     		ldr	r3, [r7, #44]
 2942 007e 9A42     		cmp	r2, r3
 2943 0080 E8DA     		bge	.L155
1344:../Generated_Code/TmDt1.c ****     }
1345:../Generated_Code/TmDt1.c ****   }
1346:../Generated_Code/TmDt1.c ****   /* month update based on leap year */
1347:../Generated_Code/TmDt1.c ****   if (UTIL1_IsLeapYear(year)) { /* adjust leap year month days */
 2944              		.loc 1 1347 0
 2945 0082 FB8C     		ldrh	r3, [r7, #38]
 2946 0084 1846     		mov	r0, r3
 2947 0086 FFF7FEFF 		bl	UTIL1_IsLeapYear
 2948 008a 0346     		mov	r3, r0
 2949 008c 002B     		cmp	r3, #0
 2950 008e 02D0     		beq	.L156
1348:../Generated_Code/TmDt1.c ****     daysmonth[2] = 29;
 2951              		.loc 1 1348 0
 2952 0090 1D23     		movs	r3, #29
 2953 0092 BB75     		strb	r3, [r7, #22]
 2954 0094 01E0     		b	.L157
 2955              	.L156:
1349:../Generated_Code/TmDt1.c ****   } else {
1350:../Generated_Code/TmDt1.c ****     daysmonth[2] = 28;
 2956              		.loc 1 1350 0
 2957 0096 1C23     		movs	r3, #28
 2958 0098 BB75     		strb	r3, [r7, #22]
 2959              	.L157:
1351:../Generated_Code/TmDt1.c ****   }
1352:../Generated_Code/TmDt1.c ****   /* month */
1353:../Generated_Code/TmDt1.c ****   month = 1;
 2960              		.loc 1 1353 0
 2961 009a 0123     		movs	r3, #1
 2962 009c 87F82530 		strb	r3, [r7, #37]
1354:../Generated_Code/TmDt1.c ****   secs_per_month = (int32_t)daysmonth[1]*24*3600;
 2963              		.loc 1 1354 0
 2964 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2965 00a2 484A     		ldr	r2, .L162+16
 2966 00a4 02FB03F3 		mul	r3, r2, r3
 2967 00a8 BB62     		str	r3, [r7, #40]
1355:../Generated_Code/TmDt1.c ****   while (seconds >= secs_per_month) {
 2968              		.loc 1 1355 0
 2969 00aa 13E0     		b	.L158
 2970              	.L159:
1356:../Generated_Code/TmDt1.c ****     seconds -= secs_per_month;
 2971              		.loc 1 1356 0
 2972 00ac FA68     		ldr	r2, [r7, #12]
 2973 00ae BB6A     		ldr	r3, [r7, #40]
 2974 00b0 D31A     		subs	r3, r2, r3
 2975 00b2 FB60     		str	r3, [r7, #12]
1357:../Generated_Code/TmDt1.c ****     month++;
 2976              		.loc 1 1357 0
 2977 00b4 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 2978 00b8 0133     		adds	r3, r3, #1
 2979 00ba 87F82530 		strb	r3, [r7, #37]
1358:../Generated_Code/TmDt1.c ****     secs_per_month = (int32_t)daysmonth[month]*24*3600;
 2980              		.loc 1 1358 0
 2981 00be 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 2982 00c2 07F13001 		add	r1, r7, #48
 2983 00c6 0B44     		add	r3, r3, r1
 2984 00c8 13F81C3C 		ldrb	r3, [r3, #-28]	@ zero_extendqisi2
 2985 00cc 3D4A     		ldr	r2, .L162+16
 2986 00ce 02FB03F3 		mul	r3, r2, r3
 2987 00d2 BB62     		str	r3, [r7, #40]
 2988              	.L158:
1355:../Generated_Code/TmDt1.c ****   while (seconds >= secs_per_month) {
 2989              		.loc 1 1355 0 discriminator 1
 2990 00d4 FA68     		ldr	r2, [r7, #12]
 2991 00d6 BB6A     		ldr	r3, [r7, #40]
 2992 00d8 9A42     		cmp	r2, r3
 2993 00da E7DA     		bge	.L159
1359:../Generated_Code/TmDt1.c ****   }
1360:../Generated_Code/TmDt1.c ****   /* day */
1361:../Generated_Code/TmDt1.c ****   day = (uint8_t)(seconds/(24*3600))+1;
 2994              		.loc 1 1361 0
 2995 00dc FB68     		ldr	r3, [r7, #12]
 2996 00de 3A4A     		ldr	r2, .L162+20
 2997 00e0 82FB0312 		smull	r1, r2, r2, r3
 2998 00e4 1A44     		add	r2, r2, r3
 2999 00e6 1214     		asrs	r2, r2, #16
 3000 00e8 DB17     		asrs	r3, r3, #31
 3001 00ea D31A     		subs	r3, r2, r3
 3002 00ec DBB2     		uxtb	r3, r3
 3003 00ee 0133     		adds	r3, r3, #1
 3004 00f0 87F82430 		strb	r3, [r7, #36]
1362:../Generated_Code/TmDt1.c ****   seconds = seconds%(24*3600);
 3005              		.loc 1 1362 0
 3006 00f4 FB68     		ldr	r3, [r7, #12]
 3007 00f6 344A     		ldr	r2, .L162+20
 3008 00f8 82FB0312 		smull	r1, r2, r2, r3
 3009 00fc 1A44     		add	r2, r2, r3
 3010 00fe 1114     		asrs	r1, r2, #16
 3011 0100 DA17     		asrs	r2, r3, #31
 3012 0102 8A1A     		subs	r2, r1, r2
 3013 0104 2F49     		ldr	r1, .L162+16
 3014 0106 01FB02F2 		mul	r2, r1, r2
 3015 010a 9B1A     		subs	r3, r3, r2
 3016 010c FB60     		str	r3, [r7, #12]
1363:../Generated_Code/TmDt1.c **** 
1364:../Generated_Code/TmDt1.c ****   hours   = (uint8_t)(seconds/3600);
 3017              		.loc 1 1364 0
 3018 010e FB68     		ldr	r3, [r7, #12]
 3019 0110 2E4A     		ldr	r2, .L162+24
 3020 0112 82FB0312 		smull	r1, r2, r2, r3
 3021 0116 1A44     		add	r2, r2, r3
 3022 0118 D212     		asrs	r2, r2, #11
 3023 011a DB17     		asrs	r3, r3, #31
 3024 011c D31A     		subs	r3, r2, r3
 3025 011e 87F82330 		strb	r3, [r7, #35]
1365:../Generated_Code/TmDt1.c ****   seconds = seconds%3600;
 3026              		.loc 1 1365 0
 3027 0122 FB68     		ldr	r3, [r7, #12]
 3028 0124 294A     		ldr	r2, .L162+24
 3029 0126 82FB0312 		smull	r1, r2, r2, r3
 3030 012a 1A44     		add	r2, r2, r3
 3031 012c D112     		asrs	r1, r2, #11
 3032 012e DA17     		asrs	r2, r3, #31
 3033 0130 8A1A     		subs	r2, r1, r2
 3034 0132 4FF46161 		mov	r1, #3600
 3035 0136 01FB02F2 		mul	r2, r1, r2
 3036 013a 9B1A     		subs	r3, r3, r2
 3037 013c FB60     		str	r3, [r7, #12]
1366:../Generated_Code/TmDt1.c **** 
1367:../Generated_Code/TmDt1.c ****   minutes = (uint8_t)(seconds/60);
 3038              		.loc 1 1367 0
 3039 013e FB68     		ldr	r3, [r7, #12]
 3040 0140 234A     		ldr	r2, .L162+28
 3041 0142 82FB0312 		smull	r1, r2, r2, r3
 3042 0146 1A44     		add	r2, r2, r3
 3043 0148 5211     		asrs	r2, r2, #5
 3044 014a DB17     		asrs	r3, r3, #31
 3045 014c D31A     		subs	r3, r2, r3
 3046 014e 87F82230 		strb	r3, [r7, #34]
1368:../Generated_Code/TmDt1.c ****   seconds = seconds%60;
 3047              		.loc 1 1368 0
 3048 0152 FA68     		ldr	r2, [r7, #12]
 3049 0154 1E4B     		ldr	r3, .L162+28
 3050 0156 83FB0213 		smull	r1, r3, r3, r2
 3051 015a 1344     		add	r3, r3, r2
 3052 015c 5911     		asrs	r1, r3, #5
 3053 015e D317     		asrs	r3, r2, #31
 3054 0160 C91A     		subs	r1, r1, r3
 3055 0162 0B46     		mov	r3, r1
 3056 0164 1B01     		lsls	r3, r3, #4
 3057 0166 5B1A     		subs	r3, r3, r1
 3058 0168 9B00     		lsls	r3, r3, #2
 3059 016a D31A     		subs	r3, r2, r3
 3060 016c FB60     		str	r3, [r7, #12]
1369:../Generated_Code/TmDt1.c **** 
1370:../Generated_Code/TmDt1.c ****   if (date!=NULL) {
 3061              		.loc 1 1370 0
 3062 016e 3B68     		ldr	r3, [r7]
 3063 0170 002B     		cmp	r3, #0
 3064 0172 0AD0     		beq	.L160
1371:../Generated_Code/TmDt1.c ****     date->Day = day;
 3065              		.loc 1 1371 0
 3066 0174 3B68     		ldr	r3, [r7]
 3067 0176 97F82420 		ldrb	r2, [r7, #36]
 3068 017a DA70     		strb	r2, [r3, #3]
1372:../Generated_Code/TmDt1.c ****     date->Month = month;
 3069              		.loc 1 1372 0
 3070 017c 3B68     		ldr	r3, [r7]
 3071 017e 97F82520 		ldrb	r2, [r7, #37]
 3072 0182 9A70     		strb	r2, [r3, #2]
1373:../Generated_Code/TmDt1.c ****     date->Year = year;
 3073              		.loc 1 1373 0
 3074 0184 3B68     		ldr	r3, [r7]
 3075 0186 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 3076 0188 1A80     		strh	r2, [r3]	@ movhi
 3077              	.L160:
1374:../Generated_Code/TmDt1.c ****   }
1375:../Generated_Code/TmDt1.c ****   if (time!=NULL) {
 3078              		.loc 1 1375 0
 3079 018a 7B68     		ldr	r3, [r7, #4]
 3080 018c 002B     		cmp	r3, #0
 3081 018e 0ED0     		beq	.L150
1376:../Generated_Code/TmDt1.c ****     time->Hour = hours;
 3082              		.loc 1 1376 0
 3083 0190 7B68     		ldr	r3, [r7, #4]
 3084 0192 97F82320 		ldrb	r2, [r7, #35]
 3085 0196 1A70     		strb	r2, [r3]
1377:../Generated_Code/TmDt1.c ****     time->Min = minutes;
 3086              		.loc 1 1377 0
 3087 0198 7B68     		ldr	r3, [r7, #4]
 3088 019a 97F82220 		ldrb	r2, [r7, #34]
 3089 019e 5A70     		strb	r2, [r3, #1]
1378:../Generated_Code/TmDt1.c ****     time->Sec = (uint8_t)seconds;
 3090              		.loc 1 1378 0
 3091 01a0 FB68     		ldr	r3, [r7, #12]
 3092 01a2 DAB2     		uxtb	r2, r3
 3093 01a4 7B68     		ldr	r3, [r7, #4]
 3094 01a6 9A70     		strb	r2, [r3, #2]
1379:../Generated_Code/TmDt1.c ****     time->Sec100 = 0;
 3095              		.loc 1 1379 0
 3096 01a8 7B68     		ldr	r3, [r7, #4]
 3097 01aa 0022     		movs	r2, #0
 3098 01ac DA70     		strb	r2, [r3, #3]
 3099              	.L150:
1380:../Generated_Code/TmDt1.c ****   }
1381:../Generated_Code/TmDt1.c **** }
 3100              		.loc 1 1381 0
 3101 01ae 3437     		adds	r7, r7, #52
 3102 01b0 BD46     		mov	sp, r7
 3103              		@ sp needed
 3104 01b2 90BD     		pop	{r4, r7, pc}
 3105              	.L163:
 3106              		.align	2
 3107              	.L162:
 3108 01b4 44030000 		.word	.LC0
 3109 01b8 F0F1FFFF 		.word	-3600
 3110 01bc 0085E201 		.word	31622400
 3111 01c0 8033E101 		.word	31536000
 3112 01c4 80510100 		.word	86400
 3113 01c8 07452EC2 		.word	-1037155065
 3114 01cc C5B3A291 		.word	-1851608123
 3115 01d0 89888888 		.word	-2004318071
 3116              		.cfi_endproc
 3117              	.LFE30:
 3119              		.section	.text.TmDt1_TimeDateToUnixSecondsCustom,"ax",%progbits
 3120              		.align	2
 3121              		.global	TmDt1_TimeDateToUnixSecondsCustom
 3122              		.thumb
 3123              		.thumb_func
 3125              	TmDt1_TimeDateToUnixSecondsCustom:
 3126              	.LFB31:
1382:../Generated_Code/TmDt1.c **** 
1383:../Generated_Code/TmDt1.c **** /*
1384:../Generated_Code/TmDt1.c **** ** ===================================================================
1385:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_TimeDateToUnixSecondsCustom (component GenericTimeDate)
1386:../Generated_Code/TmDt1.c **** **     Description :
1387:../Generated_Code/TmDt1.c **** **         Returns for a given time/date the corresponding UNIX time
1388:../Generated_Code/TmDt1.c **** **         stamp with a custom base date.
1389:../Generated_Code/TmDt1.c **** **     Parameters  :
1390:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1391:../Generated_Code/TmDt1.c **** **       * time            - Pointer to TIMEREC which holds the time
1392:../Generated_Code/TmDt1.c **** **                           to convert
1393:../Generated_Code/TmDt1.c **** **       * date            - Pointer to DATEREC with the date to
1394:../Generated_Code/TmDt1.c **** **                           convert
1395:../Generated_Code/TmDt1.c **** **         offset_hours    - Optional number of
1396:../Generated_Code/TmDt1.c **** **                           offset hours to adjust for the time zone.
1397:../Generated_Code/TmDt1.c **** **                           Use 0 for no adjustment.
1398:../Generated_Code/TmDt1.c **** **         baseYear        - Base year from which is used as
1399:../Generated_Code/TmDt1.c **** **                           base to count the seconds, in YYYY format
1400:../Generated_Code/TmDt1.c **** **     Returns     :
1401:../Generated_Code/TmDt1.c **** **         ---             - number of seconds after given base
1402:../Generated_Code/TmDt1.c **** **                           month/year
1403:../Generated_Code/TmDt1.c **** ** ===================================================================
1404:../Generated_Code/TmDt1.c **** */
1405:../Generated_Code/TmDt1.c **** int32_t TmDt1_TimeDateToUnixSecondsCustom(TIMEREC *time, DATEREC *date, int8_t offset_hours, uint16
1406:../Generated_Code/TmDt1.c **** {
 3127              		.loc 1 1406 0
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 40
 3130              		@ frame_needed = 1, uses_anonymous_args = 0
 3131 0000 90B5     		push	{r4, r7, lr}
 3132              		.cfi_def_cfa_offset 12
 3133              		.cfi_offset 4, -12
 3134              		.cfi_offset 7, -8
 3135              		.cfi_offset 14, -4
 3136 0002 8BB0     		sub	sp, sp, #44
 3137              		.cfi_def_cfa_offset 56
 3138 0004 00AF     		add	r7, sp, #0
 3139              		.cfi_def_cfa_register 7
 3140 0006 F860     		str	r0, [r7, #12]
 3141 0008 B960     		str	r1, [r7, #8]
 3142 000a FA71     		strb	r2, [r7, #7]
 3143 000c BB80     		strh	r3, [r7, #4]	@ movhi
1407:../Generated_Code/TmDt1.c ****   /* implementation based on https://www.experts-exchange.com/questions/26868405/convert-unix-time-
1408:../Generated_Code/TmDt1.c ****   uint8_t daysmonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
 3144              		.loc 1 1408 0
 3145 000e 3F4A     		ldr	r2, .L174
 3146 0010 07F11403 		add	r3, r7, #20
 3147 0014 1446     		mov	r4, r2
 3148 0016 2068     		ldr	r0, [r4]	@ unaligned
 3149 0018 6168     		ldr	r1, [r4, #4]	@ unaligned
 3150 001a A268     		ldr	r2, [r4, #8]	@ unaligned
 3151 001c 07C3     		stmia	r3!, {r0, r1, r2}
 3152 001e 227B     		ldrb	r2, [r4, #12]
 3153 0020 1A70     		strb	r2, [r3]
1409:../Generated_Code/TmDt1.c ****   int32_t nofSecs;
1410:../Generated_Code/TmDt1.c ****   uint16_t year;
1411:../Generated_Code/TmDt1.c ****   uint8_t month;
1412:../Generated_Code/TmDt1.c **** 
1413:../Generated_Code/TmDt1.c ****   /* calculate the seconds for the given day */
1414:../Generated_Code/TmDt1.c ****   nofSecs = (int32_t)time->Sec;
 3154              		.loc 1 1414 0
 3155 0022 FB68     		ldr	r3, [r7, #12]
 3156 0024 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3157 0026 7B62     		str	r3, [r7, #36]
1415:../Generated_Code/TmDt1.c ****   nofSecs += ((int32_t)time->Min)*60;
 3158              		.loc 1 1415 0
 3159 0028 FB68     		ldr	r3, [r7, #12]
 3160 002a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3161 002c 1A46     		mov	r2, r3
 3162 002e 1346     		mov	r3, r2
 3163 0030 1B01     		lsls	r3, r3, #4
 3164 0032 9B1A     		subs	r3, r3, r2
 3165 0034 9B00     		lsls	r3, r3, #2
 3166 0036 7A6A     		ldr	r2, [r7, #36]
 3167 0038 1344     		add	r3, r3, r2
 3168 003a 7B62     		str	r3, [r7, #36]
1416:../Generated_Code/TmDt1.c ****   nofSecs += (int32_t)time->Hour*3600;
 3169              		.loc 1 1416 0
 3170 003c FB68     		ldr	r3, [r7, #12]
 3171 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3172 0040 4FF46162 		mov	r2, #3600
 3173 0044 02FB03F3 		mul	r3, r2, r3
 3174 0048 7A6A     		ldr	r2, [r7, #36]
 3175 004a 1344     		add	r3, r3, r2
 3176 004c 7B62     		str	r3, [r7, #36]
1417:../Generated_Code/TmDt1.c ****   nofSecs += (int32_t)offset_hours*3600;
 3177              		.loc 1 1417 0
 3178 004e 97F90730 		ldrsb	r3, [r7, #7]
 3179 0052 4FF46162 		mov	r2, #3600
 3180 0056 02FB03F3 		mul	r3, r2, r3
 3181 005a 7A6A     		ldr	r2, [r7, #36]
 3182 005c 1344     		add	r3, r3, r2
 3183 005e 7B62     		str	r3, [r7, #36]
1418:../Generated_Code/TmDt1.c ****   nofSecs += (int32_t)(date->Day-1)*24*3600;
 3184              		.loc 1 1418 0
 3185 0060 BB68     		ldr	r3, [r7, #8]
 3186 0062 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3187 0064 013B     		subs	r3, r3, #1
 3188 0066 2A4A     		ldr	r2, .L174+4
 3189 0068 02FB03F3 		mul	r3, r2, r3
 3190 006c 7A6A     		ldr	r2, [r7, #36]
 3191 006e 1344     		add	r3, r3, r2
 3192 0070 7B62     		str	r3, [r7, #36]
1419:../Generated_Code/TmDt1.c ****   /* month update based on leap year */
1420:../Generated_Code/TmDt1.c ****   if (UTIL1_IsLeapYear(date->Year)) { /* adjust leap year month days */
 3193              		.loc 1 1420 0
 3194 0072 BB68     		ldr	r3, [r7, #8]
 3195 0074 1B88     		ldrh	r3, [r3]
 3196 0076 1846     		mov	r0, r3
 3197 0078 FFF7FEFF 		bl	UTIL1_IsLeapYear
 3198 007c 0346     		mov	r3, r0
 3199 007e 002B     		cmp	r3, #0
 3200 0080 02D0     		beq	.L165
1421:../Generated_Code/TmDt1.c ****     daysmonth[2] = 29;
 3201              		.loc 1 1421 0
 3202 0082 1D23     		movs	r3, #29
 3203 0084 BB75     		strb	r3, [r7, #22]
 3204 0086 01E0     		b	.L166
 3205              	.L165:
1422:../Generated_Code/TmDt1.c ****   } else {
1423:../Generated_Code/TmDt1.c ****     daysmonth[2] = 28;
 3206              		.loc 1 1423 0
 3207 0088 1C23     		movs	r3, #28
 3208 008a BB75     		strb	r3, [r7, #22]
 3209              	.L166:
1424:../Generated_Code/TmDt1.c ****   }
1425:../Generated_Code/TmDt1.c ****   /* calculate the seconds for the months in the given date */
1426:../Generated_Code/TmDt1.c ****   for (month = date->Month-1; month>0; month--) {
 3210              		.loc 1 1426 0
 3211 008c BB68     		ldr	r3, [r7, #8]
 3212 008e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3213 0090 013B     		subs	r3, r3, #1
 3214 0092 87F82130 		strb	r3, [r7, #33]
 3215 0096 11E0     		b	.L167
 3216              	.L168:
1427:../Generated_Code/TmDt1.c ****     nofSecs += (int32_t)daysmonth[month]*24*3600;
 3217              		.loc 1 1427 0 discriminator 2
 3218 0098 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 3219 009c 07F12802 		add	r2, r7, #40
 3220 00a0 1344     		add	r3, r3, r2
 3221 00a2 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3222 00a6 1A4A     		ldr	r2, .L174+4
 3223 00a8 02FB03F3 		mul	r3, r2, r3
 3224 00ac 7A6A     		ldr	r2, [r7, #36]
 3225 00ae 1344     		add	r3, r3, r2
 3226 00b0 7B62     		str	r3, [r7, #36]
1426:../Generated_Code/TmDt1.c ****   for (month = date->Month-1; month>0; month--) {
 3227              		.loc 1 1426 0 discriminator 2
 3228 00b2 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 3229 00b6 013B     		subs	r3, r3, #1
 3230 00b8 87F82130 		strb	r3, [r7, #33]
 3231              	.L167:
1426:../Generated_Code/TmDt1.c ****   for (month = date->Month-1; month>0; month--) {
 3232              		.loc 1 1426 0 is_stmt 0 discriminator 1
 3233 00bc 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 3234 00c0 002B     		cmp	r3, #0
 3235 00c2 E9D1     		bne	.L168
1428:../Generated_Code/TmDt1.c ****   }
1429:../Generated_Code/TmDt1.c ****   /* count the years back to the base year */
1430:../Generated_Code/TmDt1.c ****   for (year=date->Year-1; year>=baseYear; year--) {
 3236              		.loc 1 1430 0 is_stmt 1
 3237 00c4 BB68     		ldr	r3, [r7, #8]
 3238 00c6 1B88     		ldrh	r3, [r3]
 3239 00c8 013B     		subs	r3, r3, #1
 3240 00ca 7B84     		strh	r3, [r7, #34]	@ movhi
 3241 00cc 14E0     		b	.L169
 3242              	.L172:
1431:../Generated_Code/TmDt1.c ****     if (UTIL1_IsLeapYear(year)) {
 3243              		.loc 1 1431 0
 3244 00ce 7B8C     		ldrh	r3, [r7, #34]
 3245 00d0 1846     		mov	r0, r3
 3246 00d2 FFF7FEFF 		bl	UTIL1_IsLeapYear
 3247 00d6 0346     		mov	r3, r0
 3248 00d8 002B     		cmp	r3, #0
 3249 00da 06D0     		beq	.L170
1432:../Generated_Code/TmDt1.c ****       nofSecs += (365+1)*24*3600;
 3250              		.loc 1 1432 0
 3251 00dc 7B6A     		ldr	r3, [r7, #36]
 3252 00de 03F1F173 		add	r3, r3, #31588352
 3253 00e2 03F50543 		add	r3, r3, #34048
 3254 00e6 7B62     		str	r3, [r7, #36]
 3255 00e8 03E0     		b	.L171
 3256              	.L170:
1433:../Generated_Code/TmDt1.c ****     } else {
1434:../Generated_Code/TmDt1.c ****       nofSecs += 365*24*3600;
 3257              		.loc 1 1434 0
 3258 00ea 7A6A     		ldr	r2, [r7, #36]
 3259 00ec 094B     		ldr	r3, .L174+8
 3260 00ee 1344     		add	r3, r3, r2
 3261 00f0 7B62     		str	r3, [r7, #36]
 3262              	.L171:
1430:../Generated_Code/TmDt1.c ****   for (year=date->Year-1; year>=baseYear; year--) {
 3263              		.loc 1 1430 0
 3264 00f2 7B8C     		ldrh	r3, [r7, #34]
 3265 00f4 013B     		subs	r3, r3, #1
 3266 00f6 7B84     		strh	r3, [r7, #34]	@ movhi
 3267              	.L169:
1430:../Generated_Code/TmDt1.c ****   for (year=date->Year-1; year>=baseYear; year--) {
 3268              		.loc 1 1430 0 is_stmt 0 discriminator 1
 3269 00f8 7A8C     		ldrh	r2, [r7, #34]
 3270 00fa BB88     		ldrh	r3, [r7, #4]
 3271 00fc 9A42     		cmp	r2, r3
 3272 00fe E6D2     		bcs	.L172
1435:../Generated_Code/TmDt1.c ****     }
1436:../Generated_Code/TmDt1.c ****   }
1437:../Generated_Code/TmDt1.c ****   return nofSecs;
 3273              		.loc 1 1437 0 is_stmt 1
 3274 0100 7B6A     		ldr	r3, [r7, #36]
1438:../Generated_Code/TmDt1.c **** }
 3275              		.loc 1 1438 0
 3276 0102 1846     		mov	r0, r3
 3277 0104 2C37     		adds	r7, r7, #44
 3278 0106 BD46     		mov	sp, r7
 3279              		@ sp needed
 3280 0108 90BD     		pop	{r4, r7, pc}
 3281              	.L175:
 3282 010a 00BF     		.align	2
 3283              	.L174:
 3284 010c 44030000 		.word	.LC0
 3285 0110 80510100 		.word	86400
 3286 0114 8033E101 		.word	31536000
 3287              		.cfi_endproc
 3288              	.LFE31:
 3290              		.section	.text.TmDt1_UnixSecondsToTimeDate,"ax",%progbits
 3291              		.align	2
 3292              		.global	TmDt1_UnixSecondsToTimeDate
 3293              		.thumb
 3294              		.thumb_func
 3296              	TmDt1_UnixSecondsToTimeDate:
 3297              	.LFB32:
1439:../Generated_Code/TmDt1.c **** 
1440:../Generated_Code/TmDt1.c **** /*
1441:../Generated_Code/TmDt1.c **** ** ===================================================================
1442:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_UnixSecondsToTimeDate (component GenericTimeDate)
1443:../Generated_Code/TmDt1.c **** **     Description :
1444:../Generated_Code/TmDt1.c **** **         Transforms a given time/date into the Unix time stamp, with
1445:../Generated_Code/TmDt1.c **** **         the number of seconds after 1-Jan-1970
1446:../Generated_Code/TmDt1.c **** **     Parameters  :
1447:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1448:../Generated_Code/TmDt1.c **** **         seconds         - Unix time stamp in seconds after
1449:../Generated_Code/TmDt1.c **** **                           the given base year and base month
1450:../Generated_Code/TmDt1.c **** **         offset_hours    - Optional time zone
1451:../Generated_Code/TmDt1.c **** **                           offset, use 0 for no offset
1452:../Generated_Code/TmDt1.c **** **       * time            - Pointer to TIMEREC struct where the
1453:../Generated_Code/TmDt1.c **** **                           result is stored. Can be NULL.
1454:../Generated_Code/TmDt1.c **** **       * date            - Pointer to DATEREC struct where the
1455:../Generated_Code/TmDt1.c **** **                           result is stored. Can be NULL.
1456:../Generated_Code/TmDt1.c **** **     Returns     : Nothing
1457:../Generated_Code/TmDt1.c **** ** ===================================================================
1458:../Generated_Code/TmDt1.c **** */
1459:../Generated_Code/TmDt1.c **** void TmDt1_UnixSecondsToTimeDate(int32_t seconds, int8_t offset_hours, TIMEREC *time, DATEREC *date
1460:../Generated_Code/TmDt1.c **** {
 3298              		.loc 1 1460 0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 16
 3301              		@ frame_needed = 1, uses_anonymous_args = 0
 3302 0000 80B5     		push	{r7, lr}
 3303              		.cfi_def_cfa_offset 8
 3304              		.cfi_offset 7, -8
 3305              		.cfi_offset 14, -4
 3306 0002 86B0     		sub	sp, sp, #24
 3307              		.cfi_def_cfa_offset 32
 3308 0004 02AF     		add	r7, sp, #8
 3309              		.cfi_def_cfa 7, 24
 3310 0006 F860     		str	r0, [r7, #12]
 3311 0008 7A60     		str	r2, [r7, #4]
 3312 000a 3B60     		str	r3, [r7]
 3313 000c 0B46     		mov	r3, r1
 3314 000e FB72     		strb	r3, [r7, #11]
1461:../Generated_Code/TmDt1.c ****   TmDt1_UnixSecondsToTimeDateCustom(seconds, offset_hours, time, date, 1970);
 3315              		.loc 1 1461 0
 3316 0010 97F90B30 		ldrsb	r3, [r7, #11]
 3317 0014 40F2B272 		movw	r2, #1970
 3318 0018 0092     		str	r2, [sp]
 3319 001a F868     		ldr	r0, [r7, #12]
 3320 001c 1946     		mov	r1, r3
 3321 001e 7A68     		ldr	r2, [r7, #4]
 3322 0020 3B68     		ldr	r3, [r7]
 3323 0022 FFF7FEFF 		bl	TmDt1_UnixSecondsToTimeDateCustom
1462:../Generated_Code/TmDt1.c **** }
 3324              		.loc 1 1462 0
 3325 0026 1037     		adds	r7, r7, #16
 3326 0028 BD46     		mov	sp, r7
 3327              		@ sp needed
 3328 002a 80BD     		pop	{r7, pc}
 3329              		.cfi_endproc
 3330              	.LFE32:
 3332              		.section	.text.TmDt1_TimeDateToUnixSeconds,"ax",%progbits
 3333              		.align	2
 3334              		.global	TmDt1_TimeDateToUnixSeconds
 3335              		.thumb
 3336              		.thumb_func
 3338              	TmDt1_TimeDateToUnixSeconds:
 3339              	.LFB33:
1463:../Generated_Code/TmDt1.c **** 
1464:../Generated_Code/TmDt1.c **** /*
1465:../Generated_Code/TmDt1.c **** ** ===================================================================
1466:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_TimeDateToUnixSeconds (component GenericTimeDate)
1467:../Generated_Code/TmDt1.c **** **     Description :
1468:../Generated_Code/TmDt1.c **** **         Returns for a given time/date the corresponding UNIX time
1469:../Generated_Code/TmDt1.c **** **         stamp, starting at 1-Jan-1970.
1470:../Generated_Code/TmDt1.c **** **     Parameters  :
1471:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1472:../Generated_Code/TmDt1.c **** **       * time            - Pointer to TIMEREC which holds the time
1473:../Generated_Code/TmDt1.c **** **                           to convert
1474:../Generated_Code/TmDt1.c **** **       * date            - Pointer to DATEREC with the date to
1475:../Generated_Code/TmDt1.c **** **                           convert
1476:../Generated_Code/TmDt1.c **** **         offset_hours    - Optional number of
1477:../Generated_Code/TmDt1.c **** **                           offset hours to adjust for the time zone.
1478:../Generated_Code/TmDt1.c **** **                           Use 0 for no adjustment.
1479:../Generated_Code/TmDt1.c **** **     Returns     :
1480:../Generated_Code/TmDt1.c **** **         ---             - number of seconds after given base
1481:../Generated_Code/TmDt1.c **** **                           month/year
1482:../Generated_Code/TmDt1.c **** ** ===================================================================
1483:../Generated_Code/TmDt1.c **** */
1484:../Generated_Code/TmDt1.c **** int32_t TmDt1_TimeDateToUnixSeconds(TIMEREC *time, DATEREC *date, int8_t offset_hours)
1485:../Generated_Code/TmDt1.c **** {
 3340              		.loc 1 1485 0
 3341              		.cfi_startproc
 3342              		@ args = 0, pretend = 0, frame = 16
 3343              		@ frame_needed = 1, uses_anonymous_args = 0
 3344 0000 80B5     		push	{r7, lr}
 3345              		.cfi_def_cfa_offset 8
 3346              		.cfi_offset 7, -8
 3347              		.cfi_offset 14, -4
 3348 0002 84B0     		sub	sp, sp, #16
 3349              		.cfi_def_cfa_offset 24
 3350 0004 00AF     		add	r7, sp, #0
 3351              		.cfi_def_cfa_register 7
 3352 0006 F860     		str	r0, [r7, #12]
 3353 0008 B960     		str	r1, [r7, #8]
 3354 000a 1346     		mov	r3, r2
 3355 000c FB71     		strb	r3, [r7, #7]
1486:../Generated_Code/TmDt1.c ****   return TmDt1_TimeDateToUnixSecondsCustom(time, date, offset_hours, 1970);
 3356              		.loc 1 1486 0
 3357 000e 97F90730 		ldrsb	r3, [r7, #7]
 3358 0012 F868     		ldr	r0, [r7, #12]
 3359 0014 B968     		ldr	r1, [r7, #8]
 3360 0016 1A46     		mov	r2, r3
 3361 0018 40F2B273 		movw	r3, #1970
 3362 001c FFF7FEFF 		bl	TmDt1_TimeDateToUnixSecondsCustom
 3363 0020 0346     		mov	r3, r0
1487:../Generated_Code/TmDt1.c **** }
 3364              		.loc 1 1487 0
 3365 0022 1846     		mov	r0, r3
 3366 0024 1037     		adds	r7, r7, #16
 3367 0026 BD46     		mov	sp, r7
 3368              		@ sp needed
 3369 0028 80BD     		pop	{r7, pc}
 3370              		.cfi_endproc
 3371              	.LFE33:
 3373 002a 00BF     		.section	.text.TmDt1_AddDateString,"ax",%progbits
 3374              		.align	2
 3375              		.global	TmDt1_AddDateString
 3376              		.thumb
 3377              		.thumb_func
 3379              	TmDt1_AddDateString:
 3380              	.LFB34:
1488:../Generated_Code/TmDt1.c **** 
1489:../Generated_Code/TmDt1.c **** /*
1490:../Generated_Code/TmDt1.c **** ** ===================================================================
1491:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_AddDateString (component GenericTimeDate)
1492:../Generated_Code/TmDt1.c **** **     Description :
1493:../Generated_Code/TmDt1.c **** **         Adds a formatted date string to a buffer
1494:../Generated_Code/TmDt1.c **** **     Parameters  :
1495:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1496:../Generated_Code/TmDt1.c **** **       * buf             - Pointer to zero terminated buffer where to
1497:../Generated_Code/TmDt1.c **** **                           append the string
1498:../Generated_Code/TmDt1.c **** **         bufSize         - Size of the buffer in bytes
1499:../Generated_Code/TmDt1.c **** **       * date            - Pointer to date information
1500:../Generated_Code/TmDt1.c **** **       * format          - Pointer to the format string.
1501:../Generated_Code/TmDt1.c **** **                           Supported formats: "dd.mm.yyyy"
1502:../Generated_Code/TmDt1.c **** **     Returns     :
1503:../Generated_Code/TmDt1.c **** **         ---             - Error code, ERR_OK for no error
1504:../Generated_Code/TmDt1.c **** ** ===================================================================
1505:../Generated_Code/TmDt1.c **** */
1506:../Generated_Code/TmDt1.c **** uint8_t TmDt1_AddDateString(uint8_t *buf, size_t bufSize, DATEREC *date, uint8_t *format)
1507:../Generated_Code/TmDt1.c **** {
 3381              		.loc 1 1507 0
 3382              		.cfi_startproc
 3383              		@ args = 0, pretend = 0, frame = 16
 3384              		@ frame_needed = 1, uses_anonymous_args = 0
 3385 0000 80B5     		push	{r7, lr}
 3386              		.cfi_def_cfa_offset 8
 3387              		.cfi_offset 7, -8
 3388              		.cfi_offset 14, -4
 3389 0002 86B0     		sub	sp, sp, #24
 3390              		.cfi_def_cfa_offset 32
 3391 0004 02AF     		add	r7, sp, #8
 3392              		.cfi_def_cfa 7, 24
 3393 0006 F860     		str	r0, [r7, #12]
 3394 0008 B960     		str	r1, [r7, #8]
 3395 000a 7A60     		str	r2, [r7, #4]
 3396 000c 3B60     		str	r3, [r7]
1508:../Generated_Code/TmDt1.c ****   /* currently only the following format is supported: "dd.mm.yyyy" */
1509:../Generated_Code/TmDt1.c ****   (void)format; /* not supported yet */
1510:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16uFormatted(buf, bufSize, date->Day, '0', 2);
 3397              		.loc 1 1510 0
 3398 000e 7B68     		ldr	r3, [r7, #4]
 3399 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3400 0012 0222     		movs	r2, #2
 3401 0014 0092     		str	r2, [sp]
 3402 0016 F868     		ldr	r0, [r7, #12]
 3403 0018 B968     		ldr	r1, [r7, #8]
 3404 001a 1A46     		mov	r2, r3
 3405 001c 3023     		movs	r3, #48
 3406 001e FFF7FEFF 		bl	UTIL1_strcatNum16uFormatted
1511:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, '.');
 3407              		.loc 1 1511 0
 3408 0022 F868     		ldr	r0, [r7, #12]
 3409 0024 B968     		ldr	r1, [r7, #8]
 3410 0026 2E22     		movs	r2, #46
 3411 0028 FFF7FEFF 		bl	UTIL1_chcat
1512:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16uFormatted(buf, bufSize, date->Month, '0', 2);
 3412              		.loc 1 1512 0
 3413 002c 7B68     		ldr	r3, [r7, #4]
 3414 002e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3415 0030 0222     		movs	r2, #2
 3416 0032 0092     		str	r2, [sp]
 3417 0034 F868     		ldr	r0, [r7, #12]
 3418 0036 B968     		ldr	r1, [r7, #8]
 3419 0038 1A46     		mov	r2, r3
 3420 003a 3023     		movs	r3, #48
 3421 003c FFF7FEFF 		bl	UTIL1_strcatNum16uFormatted
1513:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, '.');
 3422              		.loc 1 1513 0
 3423 0040 F868     		ldr	r0, [r7, #12]
 3424 0042 B968     		ldr	r1, [r7, #8]
 3425 0044 2E22     		movs	r2, #46
 3426 0046 FFF7FEFF 		bl	UTIL1_chcat
1514:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16u(buf, bufSize, (uint16_t)date->Year);
 3427              		.loc 1 1514 0
 3428 004a 7B68     		ldr	r3, [r7, #4]
 3429 004c 1B88     		ldrh	r3, [r3]
 3430 004e F868     		ldr	r0, [r7, #12]
 3431 0050 B968     		ldr	r1, [r7, #8]
 3432 0052 1A46     		mov	r2, r3
 3433 0054 FFF7FEFF 		bl	UTIL1_strcatNum16u
1515:../Generated_Code/TmDt1.c ****   return ERR_OK;
 3434              		.loc 1 1515 0
 3435 0058 0023     		movs	r3, #0
1516:../Generated_Code/TmDt1.c **** }
 3436              		.loc 1 1516 0
 3437 005a 1846     		mov	r0, r3
 3438 005c 1037     		adds	r7, r7, #16
 3439 005e BD46     		mov	sp, r7
 3440              		@ sp needed
 3441 0060 80BD     		pop	{r7, pc}
 3442              		.cfi_endproc
 3443              	.LFE34:
 3445 0062 00BF     		.section	.text.TmDt1_AddTimeString,"ax",%progbits
 3446              		.align	2
 3447              		.global	TmDt1_AddTimeString
 3448              		.thumb
 3449              		.thumb_func
 3451              	TmDt1_AddTimeString:
 3452              	.LFB35:
1517:../Generated_Code/TmDt1.c **** 
1518:../Generated_Code/TmDt1.c **** /*
1519:../Generated_Code/TmDt1.c **** ** ===================================================================
1520:../Generated_Code/TmDt1.c **** **     Method      :  TmDt1_AddTimeString (component GenericTimeDate)
1521:../Generated_Code/TmDt1.c **** **     Description :
1522:../Generated_Code/TmDt1.c **** **         Adds a formatted time string to a buffer
1523:../Generated_Code/TmDt1.c **** **     Parameters  :
1524:../Generated_Code/TmDt1.c **** **         NAME            - DESCRIPTION
1525:../Generated_Code/TmDt1.c **** **       * buf             - Pointer to zero terminated buffer where to
1526:../Generated_Code/TmDt1.c **** **                           append the string
1527:../Generated_Code/TmDt1.c **** **         bufSize         - Size of the buffer in bytes
1528:../Generated_Code/TmDt1.c **** **       * time            - Pointer to time information
1529:../Generated_Code/TmDt1.c **** **       * format          - Pointer to the format string.
1530:../Generated_Code/TmDt1.c **** **                           Supported formats: "hh:mm.ss,cc"
1531:../Generated_Code/TmDt1.c **** **     Returns     :
1532:../Generated_Code/TmDt1.c **** **         ---             - Error code, ERR_OK for no error
1533:../Generated_Code/TmDt1.c **** ** ===================================================================
1534:../Generated_Code/TmDt1.c **** */
1535:../Generated_Code/TmDt1.c **** uint8_t TmDt1_AddTimeString(uint8_t *buf, size_t bufSize, TIMEREC *time, uint8_t *format)
1536:../Generated_Code/TmDt1.c **** {
 3453              		.loc 1 1536 0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 16
 3456              		@ frame_needed = 1, uses_anonymous_args = 0
 3457 0000 80B5     		push	{r7, lr}
 3458              		.cfi_def_cfa_offset 8
 3459              		.cfi_offset 7, -8
 3460              		.cfi_offset 14, -4
 3461 0002 86B0     		sub	sp, sp, #24
 3462              		.cfi_def_cfa_offset 32
 3463 0004 02AF     		add	r7, sp, #8
 3464              		.cfi_def_cfa 7, 24
 3465 0006 F860     		str	r0, [r7, #12]
 3466 0008 B960     		str	r1, [r7, #8]
 3467 000a 7A60     		str	r2, [r7, #4]
 3468 000c 3B60     		str	r3, [r7]
1537:../Generated_Code/TmDt1.c ****   /* currently only the following format is supported: hh:mm:ss,cc" */
1538:../Generated_Code/TmDt1.c ****   (void)format; /* not supported yet */
1539:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, time->Hour, '0', 2);
 3469              		.loc 1 1539 0
 3470 000e 7B68     		ldr	r3, [r7, #4]
 3471 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 0012 1BB2     		sxth	r3, r3
 3473 0014 0222     		movs	r2, #2
 3474 0016 0092     		str	r2, [sp]
 3475 0018 F868     		ldr	r0, [r7, #12]
 3476 001a B968     		ldr	r1, [r7, #8]
 3477 001c 1A46     		mov	r2, r3
 3478 001e 3023     		movs	r3, #48
 3479 0020 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
1540:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ':');
 3480              		.loc 1 1540 0
 3481 0024 F868     		ldr	r0, [r7, #12]
 3482 0026 B968     		ldr	r1, [r7, #8]
 3483 0028 3A22     		movs	r2, #58
 3484 002a FFF7FEFF 		bl	UTIL1_chcat
1541:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, time->Min, '0', 2);
 3485              		.loc 1 1541 0
 3486 002e 7B68     		ldr	r3, [r7, #4]
 3487 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3488 0032 1BB2     		sxth	r3, r3
 3489 0034 0222     		movs	r2, #2
 3490 0036 0092     		str	r2, [sp]
 3491 0038 F868     		ldr	r0, [r7, #12]
 3492 003a B968     		ldr	r1, [r7, #8]
 3493 003c 1A46     		mov	r2, r3
 3494 003e 3023     		movs	r3, #48
 3495 0040 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
1542:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ':');
 3496              		.loc 1 1542 0
 3497 0044 F868     		ldr	r0, [r7, #12]
 3498 0046 B968     		ldr	r1, [r7, #8]
 3499 0048 3A22     		movs	r2, #58
 3500 004a FFF7FEFF 		bl	UTIL1_chcat
1543:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, time->Sec, '0', 2);
 3501              		.loc 1 1543 0
 3502 004e 7B68     		ldr	r3, [r7, #4]
 3503 0050 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3504 0052 1BB2     		sxth	r3, r3
 3505 0054 0222     		movs	r2, #2
 3506 0056 0092     		str	r2, [sp]
 3507 0058 F868     		ldr	r0, [r7, #12]
 3508 005a B968     		ldr	r1, [r7, #8]
 3509 005c 1A46     		mov	r2, r3
 3510 005e 3023     		movs	r3, #48
 3511 0060 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
1544:../Generated_Code/TmDt1.c ****   UTIL1_chcat(buf, bufSize, ',');
 3512              		.loc 1 1544 0
 3513 0064 F868     		ldr	r0, [r7, #12]
 3514 0066 B968     		ldr	r1, [r7, #8]
 3515 0068 2C22     		movs	r2, #44
 3516 006a FFF7FEFF 		bl	UTIL1_chcat
1545:../Generated_Code/TmDt1.c **** #if TmDt1_HAS_SEC100_IN_TIMEREC
1546:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, time->Sec100, '0', 2);
 3517              		.loc 1 1546 0
 3518 006e 7B68     		ldr	r3, [r7, #4]
 3519 0070 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3520 0072 1BB2     		sxth	r3, r3
 3521 0074 0222     		movs	r2, #2
 3522 0076 0092     		str	r2, [sp]
 3523 0078 F868     		ldr	r0, [r7, #12]
 3524 007a B968     		ldr	r1, [r7, #8]
 3525 007c 1A46     		mov	r2, r3
 3526 007e 3023     		movs	r3, #48
 3527 0080 FFF7FEFF 		bl	UTIL1_strcatNum16sFormatted
1547:../Generated_Code/TmDt1.c **** #else
1548:../Generated_Code/TmDt1.c ****   UTIL1_strcatNum16sFormatted(buf, bufSize, 0, '0', 2);
1549:../Generated_Code/TmDt1.c **** #endif
1550:../Generated_Code/TmDt1.c ****   return ERR_OK;
 3528              		.loc 1 1550 0
 3529 0084 0023     		movs	r3, #0
1551:../Generated_Code/TmDt1.c **** }
 3530              		.loc 1 1551 0
 3531 0086 1846     		mov	r0, r3
 3532 0088 1037     		adds	r7, r7, #16
 3533 008a BD46     		mov	sp, r7
 3534              		@ sp needed
 3535 008c 80BD     		pop	{r7, pc}
 3536              		.cfi_endproc
 3537              	.LFE35:
 3539 008e 00BF     		.text
 3540              	.Letext0:
 3541              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 3542              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 3543              		.file 4 "../Generated_Code/PE_Types.h"
 3544              		.file 5 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stddef.h"
 3545              		.file 6 "../Generated_Code/CLS1.h"
 3546              		.file 7 "../Generated_Code/TmDt1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TmDt1.c
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:21     .rodata.TmDt1_DefaultTime:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:24     .rodata.TmDt1_DefaultTime:00000000 TmDt1_DefaultTime
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:30     .rodata.TmDt1_DefaultDate:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:33     .rodata.TmDt1_DefaultDate:00000000 TmDt1_DefaultDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:40     .bss.CntDay:00000000 CntDay
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:41     .bss.CntDay:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:45     .bss.CntMonth:00000000 CntMonth
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:46     .bss.CntMonth:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:48     .bss.CntYear:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:51     .bss.CntYear:00000000 CntYear
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:54     .bss.tickCntr:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:57     .bss.tickCntr:00000000 tickCntr
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:60     .rodata.ULY:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:63     .rodata.ULY:00000000 ULY
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:77     .rodata.LY:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:80     .rodata.LY:00000000 LY
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:94     .text.AddDateToBuf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:98     .text.AddDateToBuf:00000000 AddDateToBuf
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:171    .text.AddTimeToBuf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:175    .text.AddTimeToBuf:00000000 AddTimeToBuf
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:271    .text.AddDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:275    .text.AddDate:00000000 AddDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:325    .text.AddTime:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:329    .text.AddTime:00000000 AddTime
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:379    .rodata:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:395    .text.DateCmd:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:399    .text.DateCmd:00000000 DateCmd
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1475   .text.TmDt1_SetDate:00000000 TmDt1_SetDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:540    .text.DateCmd:00000100 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2800   .text.TmDt1_GetTimeDate:00000000 TmDt1_GetTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:557    .text.TimeCmd:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:561    .text.TimeCmd:00000000 TimeCmd
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1341   .text.TmDt1_SetTime:00000000 TmDt1_SetTime
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:703    .text.TimeCmd:00000108 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:732    .text.PrintStatus:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:736    .text.PrintStatus:00000000 PrintStatus
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:844    .text.PrintStatus:000000b4 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1217   .text.TmDt1_GetSWTimeDate:00000000 TmDt1_GetSWTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:856    .text.TmDt1_AddTick:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:861    .text.TmDt1_AddTick:00000000 TmDt1_AddTick
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1027   .text.TmDt1_AddTick:000000d4 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1038   .text.TmDt1_AddTicks:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1043   .text.TmDt1_AddTicks:00000000 TmDt1_AddTicks
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1082   .text.TmDt1_SetSWTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1087   .text.TmDt1_SetSWTimeDate:00000000 TmDt1_SetSWTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2274   .text.TmDt1_TimeToTicks:00000000 TmDt1_TimeToTicks
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1204   .text.TmDt1_SetSWTimeDate:00000088 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1212   .text.TmDt1_GetSWTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2166   .text.TmDt1_TicksToTime:00000000 TmDt1_TicksToTime
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1328   .text.TmDt1_GetSWTimeDate:00000080 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1336   .text.TmDt1_SetTime:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1432   .text.TmDt1_GetTime:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1437   .text.TmDt1_GetTime:00000000 TmDt1_GetTime
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1470   .text.TmDt1_SetDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1599   .text.TmDt1_SetDate:000000ac $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1605   .text.TmDt1_GetDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1610   .text.TmDt1_GetDate:00000000 TmDt1_GetDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1643   .text.TmDt1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1648   .text.TmDt1_Init:00000000 TmDt1_Init
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1671   .text.TmDt1_Init:00000014 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1753   .text.TmDt1_ParseCommand:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:1758   .text.TmDt1_ParseCommand:00000000 TmDt1_ParseCommand
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3296   .text.TmDt1_UnixSecondsToTimeDate:00000000 TmDt1_UnixSecondsToTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3338   .text.TmDt1_TimeDateToUnixSeconds:00000000 TmDt1_TimeDateToUnixSeconds
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2105   .text.TmDt1_ParseCommand:00000294 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2135   .text.TmDt1_DeInit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2140   .text.TmDt1_DeInit:00000000 TmDt1_DeInit
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2161   .text.TmDt1_TicksToTime:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2260   .text.TmDt1_TicksToTime:000000a4 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2269   .text.TmDt1_TimeToTicks:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2329   .text.TmDt1_TimeToTicks:0000004c $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2334   .text.TmDt1_SetInternalRTCTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2339   .text.TmDt1_SetInternalRTCTimeDate:00000000 TmDt1_SetInternalRTCTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2368   .text.TmDt1_GetInternalRTCTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2373   .text.TmDt1_GetInternalRTCTimeDate:00000000 TmDt1_GetInternalRTCTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2402   .text.TmDt1_CalculateDayOfWeek:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2407   .text.TmDt1_CalculateDayOfWeek:00000000 TmDt1_CalculateDayOfWeek
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2524   .text.TmDt1_CalculateDayOfWeek:000000c8 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2531   .text.TmDt1_SyncSWtimeToInternalRTCsec:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2536   .text.TmDt1_SyncSWtimeToInternalRTCsec:00000000 TmDt1_SyncSWtimeToInternalRTCsec
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2608   .text.TmDt1_SyncWithInternalRTC:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2613   .text.TmDt1_SyncWithInternalRTC:00000000 TmDt1_SyncWithInternalRTC
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2637   .text.TmDt1_SyncWithExternalRTC:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2642   .text.TmDt1_SyncWithExternalRTC:00000000 TmDt1_SyncWithExternalRTC
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2666   .text.TmDt1_SetExternalRTCTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2671   .text.TmDt1_SetExternalRTCTimeDate:00000000 TmDt1_SetExternalRTCTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2700   .text.TmDt1_GetExternalRTCTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2705   .text.TmDt1_GetExternalRTCTimeDate:00000000 TmDt1_GetExternalRTCTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2734   .text.TmDt1_SetTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2739   .text.TmDt1_SetTimeDate:00000000 TmDt1_SetTimeDate
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2795   .text.TmDt1_GetTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2850   .text.TmDt1_UnixSecondsToTimeDateCustom:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:2855   .text.TmDt1_UnixSecondsToTimeDateCustom:00000000 TmDt1_UnixSecondsToTimeDateCustom
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3108   .text.TmDt1_UnixSecondsToTimeDateCustom:000001b4 $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3120   .text.TmDt1_TimeDateToUnixSecondsCustom:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3125   .text.TmDt1_TimeDateToUnixSecondsCustom:00000000 TmDt1_TimeDateToUnixSecondsCustom
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3284   .text.TmDt1_TimeDateToUnixSecondsCustom:0000010c $d
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3291   .text.TmDt1_UnixSecondsToTimeDate:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3333   .text.TmDt1_TimeDateToUnixSeconds:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3374   .text.TmDt1_AddDateString:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3379   .text.TmDt1_AddDateString:00000000 TmDt1_AddDateString
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3446   .text.TmDt1_AddTimeString:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccDh2Pqf.s:3451   .text.TmDt1_AddTimeString:00000000 TmDt1_AddTimeString
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.CS1config.h.2.e5153cf58e5fe0ee6ea0dc776d94aafd
                           .group:00000000 wm4.CS1.h.86.71773cc9f7a1189b60d5af00334fca8e
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.CLS1config.h.2.854bb35357facad932898800d8509913
                           .group:00000000 wm4.CLS1.h.122.6dfe00e3ccac8c27c20e405bc6b8e609
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.CLS1.h.172.83b9daee286b58c7d453522f7dba0b4f
                           .group:00000000 wm4.TmDt1.h.123.693fa6f195c7fc631f6dcf3a45c64eb4
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a

UNDEFINED SYMBOLS
UTIL1_strcatNum16uFormatted
UTIL1_chcat
UTIL1_strcatNum16u
UTIL1_strcatNum16sFormatted
UTIL1_ScanDate
CLS1_SendStr
UTIL1_strcpy
UTIL1_strcat
UTIL1_ScanTime
CLS1_SendStatusStr
strcmp
CLS1_SendHelpStr
strncmp
UTIL1_ScanDecimal32sNumber
CLS1_SendNum32s
UTIL1_IsLeapYear
