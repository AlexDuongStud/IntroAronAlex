   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"TimerIntLdd2.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  21              		.align	2
  24              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  25 0000 00000000 		.space	12
  25      00000000 
  25      00000000 
  26              		.section	.text.TimerIntLdd2_Init,"ax",%progbits
  27              		.align	2
  28              		.global	TimerIntLdd2_Init
  29              		.thumb
  30              		.thumb_func
  32              	TimerIntLdd2_Init:
  33              	.LFB0:
  34              		.file 1 "../Generated_Code/TimerIntLdd2.c"
   1:../Generated_Code/TimerIntLdd2.c **** /* ###################################################################
   2:../Generated_Code/TimerIntLdd2.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/TimerIntLdd2.c **** **     Filename    : TimerIntLdd2.c
   4:../Generated_Code/TimerIntLdd2.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/TimerIntLdd2.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/TimerIntLdd2.c **** **     Component   : TimerInt_LDD
   7:../Generated_Code/TimerIntLdd2.c **** **     Version     : Component 01.018, Driver 01.02, CPU db: 3.00.000
   8:../Generated_Code/TimerIntLdd2.c **** **     Repository  : Kinetis
   9:../Generated_Code/TimerIntLdd2.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/TimerIntLdd2.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/TimerIntLdd2.c **** **     Abstract    :
  12:../Generated_Code/TimerIntLdd2.c **** **          This TimerInt component implements a periodic interrupt.
  13:../Generated_Code/TimerIntLdd2.c **** **          When the component and its events are enabled, the "OnInterrupt"
  14:../Generated_Code/TimerIntLdd2.c **** **          event is called periodically with the period that you specify.
  15:../Generated_Code/TimerIntLdd2.c **** **          TimerInt supports also changing the period in runtime.
  16:../Generated_Code/TimerIntLdd2.c **** **          This TimerInt component provides a high level API for unified
  17:../Generated_Code/TimerIntLdd2.c **** **          hardware access to various timer devices using the TimerUnit
  18:../Generated_Code/TimerIntLdd2.c **** **          component.
  19:../Generated_Code/TimerIntLdd2.c **** **     Settings    :
  20:../Generated_Code/TimerIntLdd2.c **** **          Component name                                 : TimerIntLdd2
  21:../Generated_Code/TimerIntLdd2.c **** **          Periodic interrupt source                      : PIT_LDVAL1
  22:../Generated_Code/TimerIntLdd2.c **** **          Counter                                        : PIT_CVAL1
  23:../Generated_Code/TimerIntLdd2.c **** **          Interrupt service/event                        : Enabled
  24:../Generated_Code/TimerIntLdd2.c **** **            Interrupt                                    : INT_PIT1
  25:../Generated_Code/TimerIntLdd2.c **** **            Interrupt priority                           : minimal priority
  26:../Generated_Code/TimerIntLdd2.c **** **          Interrupt period                               : 10 ms
  27:../Generated_Code/TimerIntLdd2.c **** **          Initialization                                 : 
  28:../Generated_Code/TimerIntLdd2.c **** **            Enabled in init. code                        : yes
  29:../Generated_Code/TimerIntLdd2.c **** **            Auto initialization                          : yes
  30:../Generated_Code/TimerIntLdd2.c **** **            Event mask                                   : 
  31:../Generated_Code/TimerIntLdd2.c **** **              OnInterrupt                                : Enabled
  32:../Generated_Code/TimerIntLdd2.c **** **          CPU clock/configuration selection              : 
  33:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 0                        : This component enabled
  34:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 1                        : This component disabled
  35:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 2                        : This component disabled
  36:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 3                        : This component disabled
  37:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 4                        : This component disabled
  38:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 5                        : This component disabled
  39:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 6                        : This component disabled
  40:../Generated_Code/TimerIntLdd2.c **** **            Clock configuration 7                        : This component disabled
  41:../Generated_Code/TimerIntLdd2.c **** **          Referenced components                          : 
  42:../Generated_Code/TimerIntLdd2.c **** **            Linked TimerUnit                             : TU_QuadInt
  43:../Generated_Code/TimerIntLdd2.c **** **     Contents    :
  44:../Generated_Code/TimerIntLdd2.c **** **         Init - LDD_TDeviceData* TimerIntLdd2_Init(LDD_TUserData *UserDataPtr);
  45:../Generated_Code/TimerIntLdd2.c **** **
  46:../Generated_Code/TimerIntLdd2.c **** **     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
  47:../Generated_Code/TimerIntLdd2.c **** **     All Rights Reserved.
  48:../Generated_Code/TimerIntLdd2.c **** **     
  49:../Generated_Code/TimerIntLdd2.c **** **     Redistribution and use in source and binary forms, with or without modification,
  50:../Generated_Code/TimerIntLdd2.c **** **     are permitted provided that the following conditions are met:
  51:../Generated_Code/TimerIntLdd2.c **** **     
  52:../Generated_Code/TimerIntLdd2.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  53:../Generated_Code/TimerIntLdd2.c **** **       of conditions and the following disclaimer.
  54:../Generated_Code/TimerIntLdd2.c **** **     
  55:../Generated_Code/TimerIntLdd2.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  56:../Generated_Code/TimerIntLdd2.c **** **       list of conditions and the following disclaimer in the documentation and/or
  57:../Generated_Code/TimerIntLdd2.c **** **       other materials provided with the distribution.
  58:../Generated_Code/TimerIntLdd2.c **** **     
  59:../Generated_Code/TimerIntLdd2.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  60:../Generated_Code/TimerIntLdd2.c **** **       contributors may be used to endorse or promote products derived from this
  61:../Generated_Code/TimerIntLdd2.c **** **       software without specific prior written permission.
  62:../Generated_Code/TimerIntLdd2.c **** **     
  63:../Generated_Code/TimerIntLdd2.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  64:../Generated_Code/TimerIntLdd2.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  65:../Generated_Code/TimerIntLdd2.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  66:../Generated_Code/TimerIntLdd2.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  67:../Generated_Code/TimerIntLdd2.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  68:../Generated_Code/TimerIntLdd2.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  69:../Generated_Code/TimerIntLdd2.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  70:../Generated_Code/TimerIntLdd2.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  71:../Generated_Code/TimerIntLdd2.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  72:../Generated_Code/TimerIntLdd2.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  73:../Generated_Code/TimerIntLdd2.c **** **     
  74:../Generated_Code/TimerIntLdd2.c **** **     http: www.freescale.com
  75:../Generated_Code/TimerIntLdd2.c **** **     mail: support@freescale.com
  76:../Generated_Code/TimerIntLdd2.c **** ** ###################################################################*/
  77:../Generated_Code/TimerIntLdd2.c **** /*!
  78:../Generated_Code/TimerIntLdd2.c **** ** @file TimerIntLdd2.c
  79:../Generated_Code/TimerIntLdd2.c **** ** @version 01.02
  80:../Generated_Code/TimerIntLdd2.c **** ** @brief
  81:../Generated_Code/TimerIntLdd2.c **** **          This TimerInt component implements a periodic interrupt.
  82:../Generated_Code/TimerIntLdd2.c **** **          When the component and its events are enabled, the "OnInterrupt"
  83:../Generated_Code/TimerIntLdd2.c **** **          event is called periodically with the period that you specify.
  84:../Generated_Code/TimerIntLdd2.c **** **          TimerInt supports also changing the period in runtime.
  85:../Generated_Code/TimerIntLdd2.c **** **          This TimerInt component provides a high level API for unified
  86:../Generated_Code/TimerIntLdd2.c **** **          hardware access to various timer devices using the TimerUnit
  87:../Generated_Code/TimerIntLdd2.c **** **          component.
  88:../Generated_Code/TimerIntLdd2.c **** */         
  89:../Generated_Code/TimerIntLdd2.c **** /*!
  90:../Generated_Code/TimerIntLdd2.c **** **  @addtogroup TimerIntLdd2_module TimerIntLdd2 module documentation
  91:../Generated_Code/TimerIntLdd2.c **** **  @{
  92:../Generated_Code/TimerIntLdd2.c **** */         
  93:../Generated_Code/TimerIntLdd2.c **** 
  94:../Generated_Code/TimerIntLdd2.c **** /* MODULE TimerIntLdd2. */
  95:../Generated_Code/TimerIntLdd2.c **** 
  96:../Generated_Code/TimerIntLdd2.c **** #include "QuadInt.h"
  97:../Generated_Code/TimerIntLdd2.c **** #include "TimerIntLdd2.h"
  98:../Generated_Code/TimerIntLdd2.c **** /* {Default RTOS Adapter} No RTOS includes */
  99:../Generated_Code/TimerIntLdd2.c **** 
 100:../Generated_Code/TimerIntLdd2.c **** #ifdef __cplusplus
 101:../Generated_Code/TimerIntLdd2.c **** extern "C" {
 102:../Generated_Code/TimerIntLdd2.c **** #endif 
 103:../Generated_Code/TimerIntLdd2.c **** 
 104:../Generated_Code/TimerIntLdd2.c **** typedef struct {
 105:../Generated_Code/TimerIntLdd2.c ****   LDD_TDeviceData *LinkedDeviceDataPtr;
 106:../Generated_Code/TimerIntLdd2.c ****   bool EnUser;                         /* Enable/Disable device */
 107:../Generated_Code/TimerIntLdd2.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 108:../Generated_Code/TimerIntLdd2.c **** } TimerIntLdd2_TDeviceData;
 109:../Generated_Code/TimerIntLdd2.c **** 
 110:../Generated_Code/TimerIntLdd2.c **** typedef TimerIntLdd2_TDeviceData *TimerIntLdd2_TDeviceDataPtr; /* Pointer to the device data struct
 111:../Generated_Code/TimerIntLdd2.c **** 
 112:../Generated_Code/TimerIntLdd2.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 113:../Generated_Code/TimerIntLdd2.c **** static TimerIntLdd2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 114:../Generated_Code/TimerIntLdd2.c **** 
 115:../Generated_Code/TimerIntLdd2.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERINT_ON_INTERRUPT)
 116:../Generated_Code/TimerIntLdd2.c **** /* Internal method prototypes */
 117:../Generated_Code/TimerIntLdd2.c **** /*
 118:../Generated_Code/TimerIntLdd2.c **** ** ===================================================================
 119:../Generated_Code/TimerIntLdd2.c **** **     Method      :  TimerIntLdd2_Init (component TimerInt_LDD)
 120:../Generated_Code/TimerIntLdd2.c **** */
 121:../Generated_Code/TimerIntLdd2.c **** /*!
 122:../Generated_Code/TimerIntLdd2.c **** **     @brief
 123:../Generated_Code/TimerIntLdd2.c **** **         Initializes the device. Allocates memory for the device data
 124:../Generated_Code/TimerIntLdd2.c **** **         structure, allocates interrupt vectors and sets interrupt
 125:../Generated_Code/TimerIntLdd2.c **** **         priority, sets pin routing, sets timing, etc. If the
 126:../Generated_Code/TimerIntLdd2.c **** **         property ["Enable in init. code"] is set to "yes" value then
 127:../Generated_Code/TimerIntLdd2.c **** **         the device is also enabled (see the description of the
 128:../Generated_Code/TimerIntLdd2.c **** **         [Enable] method). In this case the [Enable] method is not
 129:../Generated_Code/TimerIntLdd2.c **** **         necessary and needn't to be generated. This method can be
 130:../Generated_Code/TimerIntLdd2.c **** **         called only once. Before the second call of Init the [Deinit]
 131:../Generated_Code/TimerIntLdd2.c **** **         must be called first.
 132:../Generated_Code/TimerIntLdd2.c **** **     @param
 133:../Generated_Code/TimerIntLdd2.c **** **         UserDataPtr     - Pointer to the user or
 134:../Generated_Code/TimerIntLdd2.c **** **                           RTOS specific data. This pointer will be
 135:../Generated_Code/TimerIntLdd2.c **** **                           passed as an event or callback parameter.
 136:../Generated_Code/TimerIntLdd2.c **** **     @return
 137:../Generated_Code/TimerIntLdd2.c **** **                         - Pointer to the dynamically allocated private
 138:../Generated_Code/TimerIntLdd2.c **** **                           structure or NULL if there was an error.
 139:../Generated_Code/TimerIntLdd2.c **** */
 140:../Generated_Code/TimerIntLdd2.c **** /* ===================================================================*/
 141:../Generated_Code/TimerIntLdd2.c **** LDD_TDeviceData* TimerIntLdd2_Init(LDD_TUserData *UserDataPtr)
 142:../Generated_Code/TimerIntLdd2.c **** {
  35              		.loc 1 142 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 16
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 84B0     		sub	sp, sp, #16
  44              		.cfi_def_cfa_offset 24
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  47 0006 7860     		str	r0, [r7, #4]
 143:../Generated_Code/TimerIntLdd2.c ****   /* Allocate device structure */
 144:../Generated_Code/TimerIntLdd2.c ****   TimerIntLdd2_TDeviceData *DeviceDataPrv;
 145:../Generated_Code/TimerIntLdd2.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 146:../Generated_Code/TimerIntLdd2.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  48              		.loc 1 146 0
  49 0008 0F4B     		ldr	r3, .L4
  50 000a FB60     		str	r3, [r7, #12]
 147:../Generated_Code/TimerIntLdd2.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  51              		.loc 1 147 0
  52 000c FB68     		ldr	r3, [r7, #12]
  53 000e 7A68     		ldr	r2, [r7, #4]
  54 0010 9A60     		str	r2, [r3, #8]
 148:../Generated_Code/TimerIntLdd2.c ****   DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
  55              		.loc 1 148 0
  56 0012 FB68     		ldr	r3, [r7, #12]
  57 0014 0122     		movs	r2, #1
  58 0016 1A71     		strb	r2, [r3, #4]
 149:../Generated_Code/TimerIntLdd2.c ****   /* Registration of the device structure */
 150:../Generated_Code/TimerIntLdd2.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd2_ID,DeviceDataPrv);
  59              		.loc 1 150 0
  60 0018 0C4B     		ldr	r3, .L4+4
  61 001a FA68     		ldr	r2, [r7, #12]
  62 001c 9A65     		str	r2, [r3, #88]
 151:../Generated_Code/TimerIntLdd2.c ****   DeviceDataPrv->LinkedDeviceDataPtr = TU_QuadInt_Init((LDD_TUserData *)NULL);
  63              		.loc 1 151 0
  64 001e 0020     		movs	r0, #0
  65 0020 FFF7FEFF 		bl	TU_QuadInt_Init
  66 0024 0246     		mov	r2, r0
  67 0026 FB68     		ldr	r3, [r7, #12]
  68 0028 1A60     		str	r2, [r3]
 152:../Generated_Code/TimerIntLdd2.c ****   if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful?
  69              		.loc 1 152 0
  70 002a FB68     		ldr	r3, [r7, #12]
  71 002c 1B68     		ldr	r3, [r3]
  72 002e 002B     		cmp	r3, #0
  73 0030 04D1     		bne	.L2
 153:../Generated_Code/TimerIntLdd2.c ****     /* Unregistration of the device structure */
 154:../Generated_Code/TimerIntLdd2.c ****     PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd2_ID);
  74              		.loc 1 154 0
  75 0032 064B     		ldr	r3, .L4+4
  76 0034 0022     		movs	r2, #0
  77 0036 9A65     		str	r2, [r3, #88]
 155:../Generated_Code/TimerIntLdd2.c ****     /* Deallocation of the device structure */
 156:../Generated_Code/TimerIntLdd2.c ****     /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deall
 157:../Generated_Code/TimerIntLdd2.c ****     return NULL;                       /* If so, then the TimerInt initialization is also unsuccess
  78              		.loc 1 157 0
  79 0038 0023     		movs	r3, #0
  80 003a 00E0     		b	.L3
  81              	.L2:
 158:../Generated_Code/TimerIntLdd2.c ****   }
 159:../Generated_Code/TimerIntLdd2.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  82              		.loc 1 159 0
  83 003c FB68     		ldr	r3, [r7, #12]
  84              	.L3:
 160:../Generated_Code/TimerIntLdd2.c **** }
  85              		.loc 1 160 0
  86 003e 1846     		mov	r0, r3
  87 0040 1037     		adds	r7, r7, #16
  88 0042 BD46     		mov	sp, r7
  89              		@ sp needed
  90 0044 80BD     		pop	{r7, pc}
  91              	.L5:
  92 0046 00BF     		.align	2
  93              	.L4:
  94 0048 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
  95 004c 00000000 		.word	PE_LDD_DeviceDataList
  96              		.cfi_endproc
  97              	.LFE0:
  99              		.section	.text.TU_QuadInt_OnCounterRestart,"ax",%progbits
 100              		.align	2
 101              		.global	TU_QuadInt_OnCounterRestart
 102              		.thumb
 103              		.thumb_func
 105              	TU_QuadInt_OnCounterRestart:
 106              	.LFB1:
 161:../Generated_Code/TimerIntLdd2.c **** 
 162:../Generated_Code/TimerIntLdd2.c **** /*
 163:../Generated_Code/TimerIntLdd2.c **** ** ===================================================================
 164:../Generated_Code/TimerIntLdd2.c **** **     Method      :  TU_QuadInt_OnCounterRestart (component TimerInt_LDD)
 165:../Generated_Code/TimerIntLdd2.c **** **
 166:../Generated_Code/TimerIntLdd2.c **** **     Description :
 167:../Generated_Code/TimerIntLdd2.c **** **         The method services the event of the linked component 
 168:../Generated_Code/TimerIntLdd2.c **** **         TU_QuadInt and eventually invokes event 
 169:../Generated_Code/TimerIntLdd2.c **** **         TimerIntLdd2_OnInterrupt.
 170:../Generated_Code/TimerIntLdd2.c **** **         This method is internal. It is used by Processor Expert only.
 171:../Generated_Code/TimerIntLdd2.c **** ** ===================================================================
 172:../Generated_Code/TimerIntLdd2.c **** */
 173:../Generated_Code/TimerIntLdd2.c **** void TU_QuadInt_OnCounterRestart(LDD_TUserData *UserDataPtr)
 174:../Generated_Code/TimerIntLdd2.c **** {
 107              		.loc 1 174 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 16
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 84B0     		sub	sp, sp, #16
 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
 175:../Generated_Code/TimerIntLdd2.c ****   TimerIntLdd2_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd2_ID]
 120              		.loc 1 175 0
 121 0008 054B     		ldr	r3, .L7
 122 000a 9B6D     		ldr	r3, [r3, #88]
 123 000c FB60     		str	r3, [r7, #12]
 176:../Generated_Code/TimerIntLdd2.c **** 
 177:../Generated_Code/TimerIntLdd2.c ****   (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning *
 178:../Generated_Code/TimerIntLdd2.c ****   TimerIntLdd2_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
 124              		.loc 1 178 0
 125 000e FB68     		ldr	r3, [r7, #12]
 126 0010 9B68     		ldr	r3, [r3, #8]
 127 0012 1846     		mov	r0, r3
 128 0014 FFF7FEFF 		bl	TimerIntLdd2_OnInterrupt
 179:../Generated_Code/TimerIntLdd2.c **** }
 129              		.loc 1 179 0
 130 0018 1037     		adds	r7, r7, #16
 131 001a BD46     		mov	sp, r7
 132              		@ sp needed
 133 001c 80BD     		pop	{r7, pc}
 134              	.L8:
 135 001e 00BF     		.align	2
 136              	.L7:
 137 0020 00000000 		.word	PE_LDD_DeviceDataList
 138              		.cfi_endproc
 139              	.LFE1:
 141              		.text
 142              	.Letext0:
 143              		.file 2 "../Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TimerIntLdd2.c
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:24     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:27     .text.TimerIntLdd2_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:32     .text.TimerIntLdd2_Init:00000000 TimerIntLdd2_Init
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:94     .text.TimerIntLdd2_Init:00000048 $d
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:100    .text.TU_QuadInt_OnCounterRestart:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:105    .text.TU_QuadInt_OnCounterRestart:00000000 TU_QuadInt_OnCounterRestart
C:\Users\Aron\AppData\Local\Temp\ccXziBHa.s:137    .text.TU_QuadInt_OnCounterRestart:00000020 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.PIT_PDD.h.121.41c7561053a77002fd646f2e4d7503df
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.TU_QuadInt.h.119.c95e3fe39b4be442ba105baa4ac336a5
                           .group:00000000 wm4.TimerIntLdd2.h.115.d2bfa8e5c6927b3e9f2311b6b5c7077a

UNDEFINED SYMBOLS
TU_QuadInt_Init
PE_LDD_DeviceDataList
TimerIntLdd2_OnInterrupt
