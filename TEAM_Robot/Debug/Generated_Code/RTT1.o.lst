   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"RTT1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.global	RTT1_stdio
  21              		.section	.rodata.RTT1_stdio,"a",%progbits
  22              		.align	2
  25              	RTT1_stdio:
  26 0000 00000000 		.word	RTT1_StdIOReadChar
  27 0004 00000000 		.word	RTT1_StdIOSendChar
  28 0008 00000000 		.word	RTT1_StdIOSendChar
  29 000c 00000000 		.word	RTT1_StdIOKeyPressed
  30              		.comm	RTT1_DefaultShellBuffer,48,4
  31              		.section	.text.RTT1_StdIOKeyPressed,"ax",%progbits
  32              		.align	2
  33              		.global	RTT1_StdIOKeyPressed
  34              		.thumb
  35              		.thumb_func
  37              	RTT1_StdIOKeyPressed:
  38              	.LFB0:
  39              		.file 1 "../Generated_Code/RTT1.c"
   1:../Generated_Code/RTT1.c **** /* ###################################################################
   2:../Generated_Code/RTT1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/RTT1.c **** **     Filename    : RTT1.c
   4:../Generated_Code/RTT1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/RTT1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/RTT1.c **** **     Component   : SeggerRTT
   7:../Generated_Code/RTT1.c **** **     Version     : Component 01.086, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/RTT1.c **** **     Repository  : My Components
   9:../Generated_Code/RTT1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/RTT1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/RTT1.c **** **     Abstract    :
  12:../Generated_Code/RTT1.c **** **
  13:../Generated_Code/RTT1.c **** **     Settings    :
  14:../Generated_Code/RTT1.c **** **          Component name                                 : RTT1
  15:../Generated_Code/RTT1.c **** **          Version                                        : V6.32b
  16:../Generated_Code/RTT1.c **** **          Number of Up Channels                          : 3
  17:../Generated_Code/RTT1.c **** **          Number of Down Channels                        : 3
  18:../Generated_Code/RTT1.c **** **          Max Blocked Interrupt Level                    : 3
  19:../Generated_Code/RTT1.c **** **          Syscalls                                       : no
  20:../Generated_Code/RTT1.c **** **          Channel 0                                      : Enabled
  21:../Generated_Code/RTT1.c **** **            Name                                         : "Terminal"
  22:../Generated_Code/RTT1.c **** **            Up Buffer Size (Tx)                          : 512
  23:../Generated_Code/RTT1.c **** **            Down Buffer Size (Rx)                        : 64
  24:../Generated_Code/RTT1.c **** **            Up Buffer Mode                               : Skip (Default)
  25:../Generated_Code/RTT1.c **** **            Down Buffer Mode                             : Skip (Default)
  26:../Generated_Code/RTT1.c **** **            Blocking Send                                : Enabled
  27:../Generated_Code/RTT1.c **** **              Timeout (ms)                               : 10
  28:../Generated_Code/RTT1.c **** **              Wait                                       : WAIT1
  29:../Generated_Code/RTT1.c **** **              Wait Time (ms)                             : 1
  30:../Generated_Code/RTT1.c **** **            Printf Buffer Size                           : 64
  31:../Generated_Code/RTT1.c **** **          SDK                                            : MCUC1
  32:../Generated_Code/RTT1.c **** **          Shell                                          : CLS1
  33:../Generated_Code/RTT1.c **** **          Source Folders                                 : 
  34:../Generated_Code/RTT1.c **** **            Source Folder                                : 
  35:../Generated_Code/RTT1.c **** **            Config Folder                                : 
  36:../Generated_Code/RTT1.c **** **     Contents    :
  37:../Generated_Code/RTT1.c **** **         Read             - int RTT1_Read(unsigned BufferIndex, const char* pBuffer, unsigned Num
  38:../Generated_Code/RTT1.c **** **         Write            - int RTT1_Write(unsigned BufferIndex, char* pBuffer, unsigned BufferSi
  39:../Generated_Code/RTT1.c **** **         WriteString      - unsigned RTT1_WriteString(unsigned BufferIndex, const char* s);
  40:../Generated_Code/RTT1.c **** **         printf           - int RTT1_printf(unsigned BufferIndex, const char* sFormat, ...);
  41:../Generated_Code/RTT1.c **** **         GetKey           - dword RTT1_GetKey(void);
  42:../Generated_Code/RTT1.c **** **         WaitKey          - long RTT1_WaitKey(void);
  43:../Generated_Code/RTT1.c **** **         HasKey           - long RTT1_HasKey(void);
  44:../Generated_Code/RTT1.c **** **         SetTerminal      - int RTT1_SetTerminal(char TerminalId);
  45:../Generated_Code/RTT1.c **** **         TerminalOut      - int RTT1_TerminalOut(char TerminalId, const char* s);
  46:../Generated_Code/RTT1.c **** **         ConfigUpBuffer   - int RTT1_ConfigUpBuffer(unsigned BufferIndex, const char* sName, char
  47:../Generated_Code/RTT1.c **** **         ConfigDownBuffer - int RTT1_ConfigDownBuffer(unsigned BufferIndex, const char* sName, ch
  48:../Generated_Code/RTT1.c **** **         RecvChar         - uint8_t RTT1_RecvChar(uint8_t *c);
  49:../Generated_Code/RTT1.c **** **         SendChar         - uint8_t RTT1_SendChar(uint8_t ch);
  50:../Generated_Code/RTT1.c **** **         GetCharsInRxBuf  - uint16_t RTT1_GetCharsInRxBuf(void);
  51:../Generated_Code/RTT1.c **** **         StdIOKeyPressed  - bool RTT1_StdIOKeyPressed(void);
  52:../Generated_Code/RTT1.c **** **         StdIOReadChar    - void RTT1_StdIOReadChar(uint8_t *c);
  53:../Generated_Code/RTT1.c **** **         StdIOSendChar    - void RTT1_StdIOSendChar(uint8_t ch);
  54:../Generated_Code/RTT1.c **** **         GetStdio         - %@Shell@'ModuleName'%.ConstStdIOTypePtr RTT1_GetStdio(void);
  55:../Generated_Code/RTT1.c **** **         Deinit           - void RTT1_Deinit(void);
  56:../Generated_Code/RTT1.c **** **         Init             - void RTT1_Init(void);
  57:../Generated_Code/RTT1.c **** **
  58:../Generated_Code/RTT1.c **** **     * (c) Copyright Segger, 2018
  59:../Generated_Code/RTT1.c **** **      * http      : www.segger.com
  60:../Generated_Code/RTT1.c **** **      * See separate Segger licensing terms.
  61:../Generated_Code/RTT1.c **** **      *
  62:../Generated_Code/RTT1.c **** **      * Processor Expert port: Copyright (c) 2016-2018, Erich Styger
  63:../Generated_Code/RTT1.c **** **      * Web:         https://mcuoneclipse.com
  64:../Generated_Code/RTT1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  65:../Generated_Code/RTT1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  66:../Generated_Code/RTT1.c **** **      * All rights reserved.
  67:../Generated_Code/RTT1.c **** **      *
  68:../Generated_Code/RTT1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  69:../Generated_Code/RTT1.c **** **      * are permitted provided that the following conditions are met:
  70:../Generated_Code/RTT1.c **** **      *
  71:../Generated_Code/RTT1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  72:../Generated_Code/RTT1.c **** **      *   of conditions and the following disclaimer.
  73:../Generated_Code/RTT1.c **** **      *
  74:../Generated_Code/RTT1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  75:../Generated_Code/RTT1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  76:../Generated_Code/RTT1.c **** **      *   other materials provided with the distribution.
  77:../Generated_Code/RTT1.c **** **      *
  78:../Generated_Code/RTT1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  79:../Generated_Code/RTT1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  80:../Generated_Code/RTT1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  81:../Generated_Code/RTT1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  82:../Generated_Code/RTT1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  83:../Generated_Code/RTT1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  84:../Generated_Code/RTT1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  85:../Generated_Code/RTT1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  86:../Generated_Code/RTT1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  87:../Generated_Code/RTT1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  88:../Generated_Code/RTT1.c **** ** ###################################################################*/
  89:../Generated_Code/RTT1.c **** /*!
  90:../Generated_Code/RTT1.c **** ** @file RTT1.c
  91:../Generated_Code/RTT1.c **** ** @version 01.00
  92:../Generated_Code/RTT1.c **** ** @brief
  93:../Generated_Code/RTT1.c **** **
  94:../Generated_Code/RTT1.c **** */         
  95:../Generated_Code/RTT1.c **** /*!
  96:../Generated_Code/RTT1.c **** **  @addtogroup RTT1_module RTT1 module documentation
  97:../Generated_Code/RTT1.c **** **  @{
  98:../Generated_Code/RTT1.c **** */         
  99:../Generated_Code/RTT1.c **** 
 100:../Generated_Code/RTT1.c **** /* MODULE RTT1. */
 101:../Generated_Code/RTT1.c **** 
 102:../Generated_Code/RTT1.c **** #include "RTT1.h"
 103:../Generated_Code/RTT1.c **** 
 104:../Generated_Code/RTT1.c **** /* default standard I/O struct */
 105:../Generated_Code/RTT1.c **** CLS1_ConstStdIOType RTT1_stdio = {
 106:../Generated_Code/RTT1.c ****     (CLS1_StdIO_In_FctType)RTT1_StdIOReadChar, /* stdin */
 107:../Generated_Code/RTT1.c ****     (CLS1_StdIO_OutErr_FctType)RTT1_StdIOSendChar, /* stdout */
 108:../Generated_Code/RTT1.c ****     (CLS1_StdIO_OutErr_FctType)RTT1_StdIOSendChar, /* stderr */
 109:../Generated_Code/RTT1.c ****     RTT1_StdIOKeyPressed /* if input is not empty */
 110:../Generated_Code/RTT1.c ****   };
 111:../Generated_Code/RTT1.c **** uint8_t RTT1_DefaultShellBuffer[CLS1_DEFAULT_SHELL_BUFFER_SIZE]; /* default buffer which can be use
 112:../Generated_Code/RTT1.c **** 
 113:../Generated_Code/RTT1.c **** /*
 114:../Generated_Code/RTT1.c **** ** ===================================================================
 115:../Generated_Code/RTT1.c **** **     Method      :  RTT1_Read (component SeggerRTT)
 116:../Generated_Code/RTT1.c **** **     Description :
 117:../Generated_Code/RTT1.c **** **         Read from buffer
 118:../Generated_Code/RTT1.c **** **     Parameters  :
 119:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 120:../Generated_Code/RTT1.c **** **         BufferIndex     - Buffer/channel to be used.
 121:../Generated_Code/RTT1.c **** **                           0 for terminal.
 122:../Generated_Code/RTT1.c **** **       * pBuffer         - Pointer to buffer
 123:../Generated_Code/RTT1.c **** **         BufferSize      - Number of bytes to write
 124:../Generated_Code/RTT1.c **** **     Returns     :
 125:../Generated_Code/RTT1.c **** **         ---             - Number of bytes that have been read
 126:../Generated_Code/RTT1.c **** ** ===================================================================
 127:../Generated_Code/RTT1.c **** */
 128:../Generated_Code/RTT1.c **** /**
 129:../Generated_Code/RTT1.c **** int RTT1_Read(unsigned BufferIndex, const char* pBuffer, unsigned NumBytes)
 130:../Generated_Code/RTT1.c **** {
 131:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 132:../Generated_Code/RTT1.c **** }
 133:../Generated_Code/RTT1.c **** */
 134:../Generated_Code/RTT1.c **** 
 135:../Generated_Code/RTT1.c **** /*
 136:../Generated_Code/RTT1.c **** ** ===================================================================
 137:../Generated_Code/RTT1.c **** **     Method      :  RTT1_Write (component SeggerRTT)
 138:../Generated_Code/RTT1.c **** **     Description :
 139:../Generated_Code/RTT1.c **** **         Write to buffer
 140:../Generated_Code/RTT1.c **** **     Parameters  :
 141:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 142:../Generated_Code/RTT1.c **** **         BufferIndex     - Buffer/channel to be used.
 143:../Generated_Code/RTT1.c **** **                           0 for terminal.
 144:../Generated_Code/RTT1.c **** **       * pBuffer         - Pointer to buffer
 145:../Generated_Code/RTT1.c **** **         BufferSize      - Size of buffer
 146:../Generated_Code/RTT1.c **** **     Returns     :
 147:../Generated_Code/RTT1.c **** **         ---             - Number of bytes which have been written to
 148:../Generated_Code/RTT1.c **** **                           the up buffer
 149:../Generated_Code/RTT1.c **** ** ===================================================================
 150:../Generated_Code/RTT1.c **** */
 151:../Generated_Code/RTT1.c **** /**
 152:../Generated_Code/RTT1.c **** int RTT1_Write(unsigned BufferIndex, char* pBuffer, unsigned BufferSize)
 153:../Generated_Code/RTT1.c **** {
 154:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 155:../Generated_Code/RTT1.c **** }
 156:../Generated_Code/RTT1.c **** */
 157:../Generated_Code/RTT1.c **** 
 158:../Generated_Code/RTT1.c **** /*
 159:../Generated_Code/RTT1.c **** ** ===================================================================
 160:../Generated_Code/RTT1.c **** **     Method      :  RTT1_WriteString (component SeggerRTT)
 161:../Generated_Code/RTT1.c **** **     Description :
 162:../Generated_Code/RTT1.c **** **         Write to buffer
 163:../Generated_Code/RTT1.c **** **     Parameters  :
 164:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 165:../Generated_Code/RTT1.c **** **         BufferIndex     - Buffer/channel to be used.
 166:../Generated_Code/RTT1.c **** **                           0 for terminal.
 167:../Generated_Code/RTT1.c **** **       * s               - Pointer to 
 168:../Generated_Code/RTT1.c **** **     Returns     :
 169:../Generated_Code/RTT1.c **** **         ---             - Number of bytes which have been stored in
 170:../Generated_Code/RTT1.c **** **                           the "Up"-buffer.
 171:../Generated_Code/RTT1.c **** ** ===================================================================
 172:../Generated_Code/RTT1.c **** */
 173:../Generated_Code/RTT1.c **** /**
 174:../Generated_Code/RTT1.c **** unsigned RTT1_WriteString(unsigned BufferIndex, const char* s)
 175:../Generated_Code/RTT1.c **** {
 176:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 177:../Generated_Code/RTT1.c **** }
 178:../Generated_Code/RTT1.c **** */
 179:../Generated_Code/RTT1.c **** 
 180:../Generated_Code/RTT1.c **** /*
 181:../Generated_Code/RTT1.c **** ** ===================================================================
 182:../Generated_Code/RTT1.c **** **     Method      :  RTT1_GetKey (component SeggerRTT)
 183:../Generated_Code/RTT1.c **** **     Description :
 184:../Generated_Code/RTT1.c **** **         Returns a character/key
 185:../Generated_Code/RTT1.c **** **     Parameters  : None
 186:../Generated_Code/RTT1.c **** **     Returns     :
 187:../Generated_Code/RTT1.c **** **         ---             - character code
 188:../Generated_Code/RTT1.c **** ** ===================================================================
 189:../Generated_Code/RTT1.c **** */
 190:../Generated_Code/RTT1.c **** /**
 191:../Generated_Code/RTT1.c **** dword RTT1_GetKey(void)
 192:../Generated_Code/RTT1.c **** {
 193:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 194:../Generated_Code/RTT1.c **** }
 195:../Generated_Code/RTT1.c **** */
 196:../Generated_Code/RTT1.c **** 
 197:../Generated_Code/RTT1.c **** /*
 198:../Generated_Code/RTT1.c **** ** ===================================================================
 199:../Generated_Code/RTT1.c **** **     Method      :  RTT1_WaitKey (component SeggerRTT)
 200:../Generated_Code/RTT1.c **** **     Description :
 201:../Generated_Code/RTT1.c **** **         Waits for a key and returns it.
 202:../Generated_Code/RTT1.c **** **     Parameters  : None
 203:../Generated_Code/RTT1.c **** **     Returns     :
 204:../Generated_Code/RTT1.c **** **         ---             - >=0    Character which has been read.
 205:../Generated_Code/RTT1.c **** ** ===================================================================
 206:../Generated_Code/RTT1.c **** */
 207:../Generated_Code/RTT1.c **** /**
 208:../Generated_Code/RTT1.c **** long RTT1_WaitKey(void)
 209:../Generated_Code/RTT1.c **** {
 210:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 211:../Generated_Code/RTT1.c **** }
 212:../Generated_Code/RTT1.c **** */
 213:../Generated_Code/RTT1.c **** 
 214:../Generated_Code/RTT1.c **** /*
 215:../Generated_Code/RTT1.c **** ** ===================================================================
 216:../Generated_Code/RTT1.c **** **     Method      :  RTT1_HasKey (component SeggerRTT)
 217:../Generated_Code/RTT1.c **** **     Description :
 218:../Generated_Code/RTT1.c **** **         Checks if at least one character for reading is available in
 219:../Generated_Code/RTT1.c **** **         the SEGGER RTT buffer
 220:../Generated_Code/RTT1.c **** **     Parameters  : None
 221:../Generated_Code/RTT1.c **** **     Returns     :
 222:../Generated_Code/RTT1.c **** **         ---             - 0: No characters are available to read; 1:
 223:../Generated_Code/RTT1.c **** **                           At least one character is available.
 224:../Generated_Code/RTT1.c **** ** ===================================================================
 225:../Generated_Code/RTT1.c **** */
 226:../Generated_Code/RTT1.c **** /**
 227:../Generated_Code/RTT1.c **** long RTT1_HasKey(void)
 228:../Generated_Code/RTT1.c **** {
 229:../Generated_Code/RTT1.c ****   Implemented as macro in the header file.
 230:../Generated_Code/RTT1.c **** }
 231:../Generated_Code/RTT1.c **** */
 232:../Generated_Code/RTT1.c **** 
 233:../Generated_Code/RTT1.c **** /*
 234:../Generated_Code/RTT1.c **** ** ===================================================================
 235:../Generated_Code/RTT1.c **** **     Method      :  RTT1_StdIOKeyPressed (component SeggerRTT)
 236:../Generated_Code/RTT1.c **** **     Description :
 237:../Generated_Code/RTT1.c **** **         StdIO handler for Shell
 238:../Generated_Code/RTT1.c **** **     Parameters  : None
 239:../Generated_Code/RTT1.c **** **     Returns     :
 240:../Generated_Code/RTT1.c **** **         ---             - True if there are characters in teh input
 241:../Generated_Code/RTT1.c **** **                           buffer
 242:../Generated_Code/RTT1.c **** ** ===================================================================
 243:../Generated_Code/RTT1.c **** */
 244:../Generated_Code/RTT1.c **** bool RTT1_StdIOKeyPressed(void)
 245:../Generated_Code/RTT1.c **** {
  40              		.loc 1 245 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
 246:../Generated_Code/RTT1.c ****   return RTT1_HasKey()!=0;
  50              		.loc 1 246 0
  51 0004 FFF7FEFF 		bl	SEGGER_RTT_HasKey
  52 0008 0346     		mov	r3, r0
  53 000a 002B     		cmp	r3, #0
  54 000c 0CBF     		ite	eq
  55 000e 0023     		moveq	r3, #0
  56 0010 0123     		movne	r3, #1
  57 0012 DBB2     		uxtb	r3, r3
 247:../Generated_Code/RTT1.c **** }
  58              		.loc 1 247 0
  59 0014 1846     		mov	r0, r3
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE0:
  64              		.section	.text.RTT1_StdIOReadChar,"ax",%progbits
  65              		.align	2
  66              		.global	RTT1_StdIOReadChar
  67              		.thumb
  68              		.thumb_func
  70              	RTT1_StdIOReadChar:
  71              	.LFB1:
 248:../Generated_Code/RTT1.c **** 
 249:../Generated_Code/RTT1.c **** /*
 250:../Generated_Code/RTT1.c **** ** ===================================================================
 251:../Generated_Code/RTT1.c **** **     Method      :  RTT1_StdIOReadChar (component SeggerRTT)
 252:../Generated_Code/RTT1.c **** **     Description :
 253:../Generated_Code/RTT1.c **** **         StdIO Handler for reading a character. It returns a zero
 254:../Generated_Code/RTT1.c **** **         byte if there is no character in input buffer.
 255:../Generated_Code/RTT1.c **** **     Parameters  :
 256:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 257:../Generated_Code/RTT1.c **** **       * c               - Pointer to where to store the received
 258:../Generated_Code/RTT1.c **** **                           character
 259:../Generated_Code/RTT1.c **** **     Returns     : Nothing
 260:../Generated_Code/RTT1.c **** ** ===================================================================
 261:../Generated_Code/RTT1.c **** */
 262:../Generated_Code/RTT1.c **** void RTT1_StdIOReadChar(uint8_t *c)
 263:../Generated_Code/RTT1.c **** {
  72              		.loc 1 263 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 84B0     		sub	sp, sp, #16
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 264:../Generated_Code/RTT1.c ****   int res;
 265:../Generated_Code/RTT1.c **** 
 266:../Generated_Code/RTT1.c ****   res = RTT1_GetKey();
  85              		.loc 1 266 0
  86 0008 FFF7FEFF 		bl	SEGGER_RTT_GetKey
  87 000c F860     		str	r0, [r7, #12]
 267:../Generated_Code/RTT1.c ****   if (res==-1) { /* no character present */
  88              		.loc 1 267 0
  89 000e FB68     		ldr	r3, [r7, #12]
  90 0010 B3F1FF3F 		cmp	r3, #-1
  91 0014 03D1     		bne	.L4
 268:../Generated_Code/RTT1.c ****     *c = '\0';
  92              		.loc 1 268 0
  93 0016 7B68     		ldr	r3, [r7, #4]
  94 0018 0022     		movs	r2, #0
  95 001a 1A70     		strb	r2, [r3]
  96 001c 03E0     		b	.L3
  97              	.L4:
 269:../Generated_Code/RTT1.c ****   } else {
 270:../Generated_Code/RTT1.c ****     *c = (uint8_t)res; /* return character */
  98              		.loc 1 270 0
  99 001e FB68     		ldr	r3, [r7, #12]
 100 0020 DAB2     		uxtb	r2, r3
 101 0022 7B68     		ldr	r3, [r7, #4]
 102 0024 1A70     		strb	r2, [r3]
 103              	.L3:
 271:../Generated_Code/RTT1.c ****   }
 272:../Generated_Code/RTT1.c **** }
 104              		.loc 1 272 0
 105 0026 1037     		adds	r7, r7, #16
 106 0028 BD46     		mov	sp, r7
 107              		@ sp needed
 108 002a 80BD     		pop	{r7, pc}
 109              		.cfi_endproc
 110              	.LFE1:
 112              		.section	.text.RTT1_StdIOSendChar,"ax",%progbits
 113              		.align	2
 114              		.global	RTT1_StdIOSendChar
 115              		.thumb
 116              		.thumb_func
 118              	RTT1_StdIOSendChar:
 119              	.LFB2:
 273:../Generated_Code/RTT1.c **** 
 274:../Generated_Code/RTT1.c **** /*
 275:../Generated_Code/RTT1.c **** ** ===================================================================
 276:../Generated_Code/RTT1.c **** **     Method      :  RTT1_StdIOSendChar (component SeggerRTT)
 277:../Generated_Code/RTT1.c **** **     Description :
 278:../Generated_Code/RTT1.c **** **         StdIO handler to sends a character.
 279:../Generated_Code/RTT1.c **** **     Parameters  :
 280:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 281:../Generated_Code/RTT1.c **** **         ch              - Character to send
 282:../Generated_Code/RTT1.c **** **     Returns     : Nothing
 283:../Generated_Code/RTT1.c **** ** ===================================================================
 284:../Generated_Code/RTT1.c **** */
 285:../Generated_Code/RTT1.c **** void RTT1_StdIOSendChar(uint8_t ch)
 286:../Generated_Code/RTT1.c **** {
 120              		.loc 1 286 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 16
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 84B0     		sub	sp, sp, #16
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 0346     		mov	r3, r0
 133 0008 FB71     		strb	r3, [r7, #7]
 287:../Generated_Code/RTT1.c ****   int timeoutMs = 10;
 134              		.loc 1 287 0
 135 000a 0A23     		movs	r3, #10
 136 000c FB60     		str	r3, [r7, #12]
 137              	.L10:
 288:../Generated_Code/RTT1.c **** 
 289:../Generated_Code/RTT1.c ****   for(;;) { /* will break */
 290:../Generated_Code/RTT1.c ****     if (RTT1_Write(0, (const char*)&ch, 1)==1) { /* non blocking send, check that we were able to s
 138              		.loc 1 290 0
 139 000e FB1D     		adds	r3, r7, #7
 140 0010 0020     		movs	r0, #0
 141 0012 1946     		mov	r1, r3
 142 0014 0122     		movs	r2, #1
 143 0016 FFF7FEFF 		bl	SEGGER_RTT_Write
 144 001a 0346     		mov	r3, r0
 145 001c 012B     		cmp	r3, #1
 146 001e 00D1     		bne	.L7
 291:../Generated_Code/RTT1.c ****       break; /* was able to send character, get out of waiting loop */
 147              		.loc 1 291 0
 148 0020 0AE0     		b	.L6
 149              	.L7:
 292:../Generated_Code/RTT1.c ****     }
 293:../Generated_Code/RTT1.c ****     WAIT1_WaitOSms(1);
 150              		.loc 1 293 0
 151 0022 0120     		movs	r0, #1
 152 0024 FFF7FEFF 		bl	WAIT1_Waitms
 294:../Generated_Code/RTT1.c ****     if(timeoutMs<=0) {
 153              		.loc 1 294 0
 154 0028 FB68     		ldr	r3, [r7, #12]
 155 002a 002B     		cmp	r3, #0
 156 002c 00DC     		bgt	.L9
 295:../Generated_Code/RTT1.c ****       break; /* timeout */
 157              		.loc 1 295 0
 158 002e 03E0     		b	.L6
 159              	.L9:
 296:../Generated_Code/RTT1.c ****     }
 297:../Generated_Code/RTT1.c ****     timeoutMs -= 1;
 160              		.loc 1 297 0
 161 0030 FB68     		ldr	r3, [r7, #12]
 162 0032 013B     		subs	r3, r3, #1
 163 0034 FB60     		str	r3, [r7, #12]
 298:../Generated_Code/RTT1.c ****   } /* for */
 164              		.loc 1 298 0
 165 0036 EAE7     		b	.L10
 166              	.L6:
 299:../Generated_Code/RTT1.c **** }
 167              		.loc 1 299 0
 168 0038 1037     		adds	r7, r7, #16
 169 003a BD46     		mov	sp, r7
 170              		@ sp needed
 171 003c 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE2:
 175 003e 00BF     		.section	.text.RTT1_RecvChar,"ax",%progbits
 176              		.align	2
 177              		.global	RTT1_RecvChar
 178              		.thumb
 179              		.thumb_func
 181              	RTT1_RecvChar:
 182              	.LFB3:
 300:../Generated_Code/RTT1.c **** 
 301:../Generated_Code/RTT1.c **** /*
 302:../Generated_Code/RTT1.c **** ** ===================================================================
 303:../Generated_Code/RTT1.c **** **     Method      :  RTT1_RecvChar (component SeggerRTT)
 304:../Generated_Code/RTT1.c **** **     Description :
 305:../Generated_Code/RTT1.c **** **         Receives a character from channel 0. Returns ERR_RXEMPTY if
 306:../Generated_Code/RTT1.c **** **         no character available
 307:../Generated_Code/RTT1.c **** **     Parameters  :
 308:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 309:../Generated_Code/RTT1.c **** **       * c               - Pointer to where to store the received
 310:../Generated_Code/RTT1.c **** **                           character
 311:../Generated_Code/RTT1.c **** **     Returns     :
 312:../Generated_Code/RTT1.c **** **         ---             - Error code
 313:../Generated_Code/RTT1.c **** ** ===================================================================
 314:../Generated_Code/RTT1.c **** */
 315:../Generated_Code/RTT1.c **** uint8_t RTT1_RecvChar(uint8_t *c)
 316:../Generated_Code/RTT1.c **** {
 183              		.loc 1 316 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 84B0     		sub	sp, sp, #16
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
 317:../Generated_Code/RTT1.c ****   int res;
 318:../Generated_Code/RTT1.c **** 
 319:../Generated_Code/RTT1.c ****   res = RTT1_GetKey();
 196              		.loc 1 319 0
 197 0008 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 198 000c F860     		str	r0, [r7, #12]
 320:../Generated_Code/RTT1.c ****   if (res==-1) { /* no character present */
 199              		.loc 1 320 0
 200 000e FB68     		ldr	r3, [r7, #12]
 201 0010 B3F1FF3F 		cmp	r3, #-1
 202 0014 01D1     		bne	.L12
 321:../Generated_Code/RTT1.c ****     return ERR_RXEMPTY;
 203              		.loc 1 321 0
 204 0016 0A23     		movs	r3, #10
 205 0018 04E0     		b	.L13
 206              	.L12:
 322:../Generated_Code/RTT1.c ****   }
 323:../Generated_Code/RTT1.c ****   *c = (uint8_t)res; /* return character */
 207              		.loc 1 323 0
 208 001a FB68     		ldr	r3, [r7, #12]
 209 001c DAB2     		uxtb	r2, r3
 210 001e 7B68     		ldr	r3, [r7, #4]
 211 0020 1A70     		strb	r2, [r3]
 324:../Generated_Code/RTT1.c ****   return ERR_OK;
 212              		.loc 1 324 0
 213 0022 0023     		movs	r3, #0
 214              	.L13:
 325:../Generated_Code/RTT1.c **** }
 215              		.loc 1 325 0
 216 0024 1846     		mov	r0, r3
 217 0026 1037     		adds	r7, r7, #16
 218 0028 BD46     		mov	sp, r7
 219              		@ sp needed
 220 002a 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE3:
 224              		.section	.text.RTT1_SendChar,"ax",%progbits
 225              		.align	2
 226              		.global	RTT1_SendChar
 227              		.thumb
 228              		.thumb_func
 230              	RTT1_SendChar:
 231              	.LFB4:
 326:../Generated_Code/RTT1.c **** 
 327:../Generated_Code/RTT1.c **** /*
 328:../Generated_Code/RTT1.c **** ** ===================================================================
 329:../Generated_Code/RTT1.c **** **     Method      :  RTT1_SendChar (component SeggerRTT)
 330:../Generated_Code/RTT1.c **** **     Description :
 331:../Generated_Code/RTT1.c **** **         Sends a character to channel 0.
 332:../Generated_Code/RTT1.c **** **     Parameters  :
 333:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 334:../Generated_Code/RTT1.c **** **         ch              - Character to send
 335:../Generated_Code/RTT1.c **** **     Returns     :
 336:../Generated_Code/RTT1.c **** **         ---             - Error code. ERR_OK if character has been
 337:../Generated_Code/RTT1.c **** **                           sent, ERR_TXFULL otherwise.
 338:../Generated_Code/RTT1.c **** ** ===================================================================
 339:../Generated_Code/RTT1.c **** */
 340:../Generated_Code/RTT1.c **** uint8_t RTT1_SendChar(uint8_t ch)
 341:../Generated_Code/RTT1.c **** {
 232              		.loc 1 341 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 16
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 84B0     		sub	sp, sp, #16
 241              		.cfi_def_cfa_offset 24
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 244 0006 0346     		mov	r3, r0
 245 0008 FB71     		strb	r3, [r7, #7]
 342:../Generated_Code/RTT1.c ****   int res;
 343:../Generated_Code/RTT1.c **** 
 344:../Generated_Code/RTT1.c ****   res = SEGGER_RTT_Write(0, (const char*)&ch, 1);
 246              		.loc 1 344 0
 247 000a FB1D     		adds	r3, r7, #7
 248 000c 0020     		movs	r0, #0
 249 000e 1946     		mov	r1, r3
 250 0010 0122     		movs	r2, #1
 251 0012 FFF7FEFF 		bl	SEGGER_RTT_Write
 252 0016 0346     		mov	r3, r0
 253 0018 FB60     		str	r3, [r7, #12]
 345:../Generated_Code/RTT1.c ****   if (res!=1) {
 254              		.loc 1 345 0
 255 001a FB68     		ldr	r3, [r7, #12]
 256 001c 012B     		cmp	r3, #1
 257 001e 01D0     		beq	.L15
 346:../Generated_Code/RTT1.c ****     return ERR_TXFULL; /* character not sent? */
 258              		.loc 1 346 0
 259 0020 0B23     		movs	r3, #11
 260 0022 00E0     		b	.L16
 261              	.L15:
 347:../Generated_Code/RTT1.c ****   }
 348:../Generated_Code/RTT1.c ****   return ERR_OK;
 262              		.loc 1 348 0
 263 0024 0023     		movs	r3, #0
 264              	.L16:
 349:../Generated_Code/RTT1.c **** }
 265              		.loc 1 349 0
 266 0026 1846     		mov	r0, r3
 267 0028 1037     		adds	r7, r7, #16
 268 002a BD46     		mov	sp, r7
 269              		@ sp needed
 270 002c 80BD     		pop	{r7, pc}
 271              		.cfi_endproc
 272              	.LFE4:
 274 002e 00BF     		.section	.text.RTT1_Deinit,"ax",%progbits
 275              		.align	2
 276              		.global	RTT1_Deinit
 277              		.thumb
 278              		.thumb_func
 280              	RTT1_Deinit:
 281              	.LFB5:
 350:../Generated_Code/RTT1.c **** 
 351:../Generated_Code/RTT1.c **** /*
 352:../Generated_Code/RTT1.c **** ** ===================================================================
 353:../Generated_Code/RTT1.c **** **     Method      :  RTT1_GetCharsInRxBuf (component SeggerRTT)
 354:../Generated_Code/RTT1.c **** **     Description :
 355:../Generated_Code/RTT1.c **** **         Returns the number of characters in the receive buffer.
 356:../Generated_Code/RTT1.c **** **     Parameters  : None
 357:../Generated_Code/RTT1.c **** **     Returns     :
 358:../Generated_Code/RTT1.c **** **         ---             - Number of characters in the input buffer,
 359:../Generated_Code/RTT1.c **** **                           zero for none available.
 360:../Generated_Code/RTT1.c **** ** ===================================================================
 361:../Generated_Code/RTT1.c **** */
 362:../Generated_Code/RTT1.c **** /**
 363:../Generated_Code/RTT1.c **** uint16_t RTT1_GetCharsInRxBuf(void)
 364:../Generated_Code/RTT1.c **** {
 365:../Generated_Code/RTT1.c ****   // Function is implemented as macro in the header file
 366:../Generated_Code/RTT1.c ****   if (SEGGER_RTT_HasKey()) {
 367:../Generated_Code/RTT1.c ****     return 1; // at least one available
 368:../Generated_Code/RTT1.c ****   }
 369:../Generated_Code/RTT1.c ****   return 0; // none available
 370:../Generated_Code/RTT1.c **** }
 371:../Generated_Code/RTT1.c **** */
 372:../Generated_Code/RTT1.c **** 
 373:../Generated_Code/RTT1.c **** /*
 374:../Generated_Code/RTT1.c **** ** ===================================================================
 375:../Generated_Code/RTT1.c **** **     Method      :  RTT1_TerminalOut (component SeggerRTT)
 376:../Generated_Code/RTT1.c **** **     Description :
 377:../Generated_Code/RTT1.c **** **         Writes a string to the given terminal without changing the
 378:../Generated_Code/RTT1.c **** **         terminal for channel 0.
 379:../Generated_Code/RTT1.c **** **     Parameters  :
 380:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 381:../Generated_Code/RTT1.c **** **         TerminalId      - TerminalId, 0..15
 382:../Generated_Code/RTT1.c **** **       * s               - Pointer to string
 383:../Generated_Code/RTT1.c **** **     Returns     :
 384:../Generated_Code/RTT1.c **** **         ---             - Error code
 385:../Generated_Code/RTT1.c **** ** ===================================================================
 386:../Generated_Code/RTT1.c **** */
 387:../Generated_Code/RTT1.c **** /**
 388:../Generated_Code/RTT1.c **** int RTT1_TerminalOut(char TerminalId, const char* s)
 389:../Generated_Code/RTT1.c **** {
 390:../Generated_Code/RTT1.c ****   Function is implemented as macro in the header file
 391:../Generated_Code/RTT1.c **** }
 392:../Generated_Code/RTT1.c **** */
 393:../Generated_Code/RTT1.c **** 
 394:../Generated_Code/RTT1.c **** /*
 395:../Generated_Code/RTT1.c **** ** ===================================================================
 396:../Generated_Code/RTT1.c **** **     Method      :  RTT1_SetTerminal (component SeggerRTT)
 397:../Generated_Code/RTT1.c **** **     Description :
 398:../Generated_Code/RTT1.c **** **          Sets the terminal to be used for output on channel 0.
 399:../Generated_Code/RTT1.c **** **     Parameters  :
 400:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 401:../Generated_Code/RTT1.c **** **         TerminalId      - Terminal ID, 0..15
 402:../Generated_Code/RTT1.c **** **     Returns     :
 403:../Generated_Code/RTT1.c **** **         ---             - Error code
 404:../Generated_Code/RTT1.c **** ** ===================================================================
 405:../Generated_Code/RTT1.c **** */
 406:../Generated_Code/RTT1.c **** /**
 407:../Generated_Code/RTT1.c **** int RTT1_SetTerminal(char TerminalId)
 408:../Generated_Code/RTT1.c **** {
 409:../Generated_Code/RTT1.c ****   Function is implemented as macro in the header file
 410:../Generated_Code/RTT1.c **** }
 411:../Generated_Code/RTT1.c **** */
 412:../Generated_Code/RTT1.c **** 
 413:../Generated_Code/RTT1.c **** /*
 414:../Generated_Code/RTT1.c **** ** ===================================================================
 415:../Generated_Code/RTT1.c **** **     Method      :  RTT1_ConfigUpBuffer (component SeggerRTT)
 416:../Generated_Code/RTT1.c **** **     Description :
 417:../Generated_Code/RTT1.c **** **         Configures the Up (device to host) buffer
 418:../Generated_Code/RTT1.c **** **     Parameters  :
 419:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 420:../Generated_Code/RTT1.c **** **         BufferIndex     - Buffer index
 421:../Generated_Code/RTT1.c **** **         sName           - Buffer name
 422:../Generated_Code/RTT1.c **** **       * pBuffer         - Pointer to buffer
 423:../Generated_Code/RTT1.c **** **         intBufferSize   - Size of buffer in bytes
 424:../Generated_Code/RTT1.c **** **         Flags           - SEGGER_RTT_MODE_NO_BLOCK_SKIP,
 425:../Generated_Code/RTT1.c **** **                           SEGGER_RTT_MODE_NO_BLOCK_TRIM or
 426:../Generated_Code/RTT1.c **** **                           SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL
 427:../Generated_Code/RTT1.c **** **     Returns     :
 428:../Generated_Code/RTT1.c **** **         ---             - Error code, >=0 OK, <0 Error
 429:../Generated_Code/RTT1.c **** ** ===================================================================
 430:../Generated_Code/RTT1.c **** */
 431:../Generated_Code/RTT1.c **** /**
 432:../Generated_Code/RTT1.c **** int RTT1_ConfigUpBuffer(unsigned BufferIndex, const char* sName, char* pBuffer, int BufferSize, int
 433:../Generated_Code/RTT1.c **** {
 434:../Generated_Code/RTT1.c ****   Function is implemented as macro in the header file
 435:../Generated_Code/RTT1.c **** }
 436:../Generated_Code/RTT1.c **** */
 437:../Generated_Code/RTT1.c **** 
 438:../Generated_Code/RTT1.c **** /*
 439:../Generated_Code/RTT1.c **** ** ===================================================================
 440:../Generated_Code/RTT1.c **** **     Method      :  RTT1_ConfigDownBuffer (component SeggerRTT)
 441:../Generated_Code/RTT1.c **** **     Description :
 442:../Generated_Code/RTT1.c **** **         Configures the Down (host to device) buffer
 443:../Generated_Code/RTT1.c **** **     Parameters  :
 444:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 445:../Generated_Code/RTT1.c **** **         BufferIndex     - Buffer index
 446:../Generated_Code/RTT1.c **** **         sName           - Buffer name
 447:../Generated_Code/RTT1.c **** **       * pBuffer         - Pointer to buffer
 448:../Generated_Code/RTT1.c **** **         intBufferSize   - Size of buffer in bytes
 449:../Generated_Code/RTT1.c **** **         Flags           - SEGGER_RTT_MODE_NO_BLOCK_SKIP,
 450:../Generated_Code/RTT1.c **** **                           SEGGER_RTT_MODE_NO_BLOCK_TRIM or
 451:../Generated_Code/RTT1.c **** **                           SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL
 452:../Generated_Code/RTT1.c **** **     Returns     :
 453:../Generated_Code/RTT1.c **** **         ---             - Error code, >=0 OK, <0 Error
 454:../Generated_Code/RTT1.c **** ** ===================================================================
 455:../Generated_Code/RTT1.c **** */
 456:../Generated_Code/RTT1.c **** /**
 457:../Generated_Code/RTT1.c **** int RTT1_ConfigDownBuffer(unsigned BufferIndex, const char* sName, char* pBuffer, int BufferSize, i
 458:../Generated_Code/RTT1.c **** {
 459:../Generated_Code/RTT1.c ****   Function is implemented as macro in the header file
 460:../Generated_Code/RTT1.c **** }
 461:../Generated_Code/RTT1.c **** */
 462:../Generated_Code/RTT1.c **** 
 463:../Generated_Code/RTT1.c **** /*
 464:../Generated_Code/RTT1.c **** ** ===================================================================
 465:../Generated_Code/RTT1.c **** **     Method      :  RTT1_printf (component SeggerRTT)
 466:../Generated_Code/RTT1.c **** **     Description :
 467:../Generated_Code/RTT1.c **** **         Stores a formatted string in SEGGER RTT control block. This
 468:../Generated_Code/RTT1.c **** **         data is sent to the host.
 469:../Generated_Code/RTT1.c **** **     Parameters  :
 470:../Generated_Code/RTT1.c **** **         NAME            - DESCRIPTION
 471:../Generated_Code/RTT1.c **** **         BufferIndex     - Index of "Up"-buffer to be
 472:../Generated_Code/RTT1.c **** **                           used. (e.g. 0 for "Terminal")
 473:../Generated_Code/RTT1.c **** **         sFormat         - Pointer to format string, followed
 474:../Generated_Code/RTT1.c **** **                           by the arguments for conversion
 475:../Generated_Code/RTT1.c **** **     Returns     :
 476:../Generated_Code/RTT1.c **** **         ---             - Error code
 477:../Generated_Code/RTT1.c **** ** ===================================================================
 478:../Generated_Code/RTT1.c **** */
 479:../Generated_Code/RTT1.c **** /**
 480:../Generated_Code/RTT1.c **** int RTT1_printf(unsigned BufferIndex, const char* sFormat, ...)
 481:../Generated_Code/RTT1.c **** {
 482:../Generated_Code/RTT1.c ****   Function is implemented as macro in the header file
 483:../Generated_Code/RTT1.c **** }
 484:../Generated_Code/RTT1.c **** */
 485:../Generated_Code/RTT1.c **** 
 486:../Generated_Code/RTT1.c **** /*
 487:../Generated_Code/RTT1.c **** ** ===================================================================
 488:../Generated_Code/RTT1.c **** **     Method      :  RTT1_Deinit (component SeggerRTT)
 489:../Generated_Code/RTT1.c **** **     Description :
 490:../Generated_Code/RTT1.c **** **         Driver deinitialization
 491:../Generated_Code/RTT1.c **** **     Parameters  : None
 492:../Generated_Code/RTT1.c **** **     Returns     : Nothing
 493:../Generated_Code/RTT1.c **** ** ===================================================================
 494:../Generated_Code/RTT1.c **** */
 495:../Generated_Code/RTT1.c **** void RTT1_Deinit(void)
 496:../Generated_Code/RTT1.c **** {
 282              		.loc 1 496 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 497:../Generated_Code/RTT1.c ****   /* noting to de-initialize */
 498:../Generated_Code/RTT1.c **** }
 292              		.loc 1 498 0
 293 0004 BD46     		mov	sp, r7
 294              		@ sp needed
 295 0006 5DF8047B 		ldr	r7, [sp], #4
 296 000a 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE5:
 300              		.section	.text.RTT1_Init,"ax",%progbits
 301              		.align	2
 302              		.global	RTT1_Init
 303              		.thumb
 304              		.thumb_func
 306              	RTT1_Init:
 307              	.LFB6:
 499:../Generated_Code/RTT1.c **** 
 500:../Generated_Code/RTT1.c **** /*
 501:../Generated_Code/RTT1.c **** ** ===================================================================
 502:../Generated_Code/RTT1.c **** **     Method      :  RTT1_Init (component SeggerRTT)
 503:../Generated_Code/RTT1.c **** **     Description :
 504:../Generated_Code/RTT1.c **** **         Initializes the RTT Control Block.
 505:../Generated_Code/RTT1.c **** **     Parameters  : None
 506:../Generated_Code/RTT1.c **** **     Returns     : Nothing
 507:../Generated_Code/RTT1.c **** ** ===================================================================
 508:../Generated_Code/RTT1.c **** */
 509:../Generated_Code/RTT1.c **** void RTT1_Init(void)
 510:../Generated_Code/RTT1.c **** {
 308              		.loc 1 510 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 511:../Generated_Code/RTT1.c ****   SEGGER_RTT_Init();
 318              		.loc 1 511 0
 319 0004 FFF7FEFF 		bl	SEGGER_RTT_Init
 512:../Generated_Code/RTT1.c **** }
 320              		.loc 1 512 0
 321 0008 80BD     		pop	{r7, pc}
 322              		.cfi_endproc
 323              	.LFE6:
 325 000a 00BF     		.section	.text.RTT1_GetStdio,"ax",%progbits
 326              		.align	2
 327              		.global	RTT1_GetStdio
 328              		.thumb
 329              		.thumb_func
 331              	RTT1_GetStdio:
 332              	.LFB7:
 513:../Generated_Code/RTT1.c **** 
 514:../Generated_Code/RTT1.c **** /*
 515:../Generated_Code/RTT1.c **** ** ===================================================================
 516:../Generated_Code/RTT1.c **** **     Method      :  RTT1_GetStdio (component SeggerRTT)
 517:../Generated_Code/RTT1.c **** **     Description :
 518:../Generated_Code/RTT1.c **** **         Returns a pointer to the standard I/O
 519:../Generated_Code/RTT1.c **** **     Parameters  : None
 520:../Generated_Code/RTT1.c **** **     Returns     :
 521:../Generated_Code/RTT1.c **** **         ---             - Error code
 522:../Generated_Code/RTT1.c **** ** ===================================================================
 523:../Generated_Code/RTT1.c **** */
 524:../Generated_Code/RTT1.c **** CLS1_ConstStdIOTypePtr RTT1_GetStdio(void)
 525:../Generated_Code/RTT1.c **** {
 333              		.loc 1 525 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 0002 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 526:../Generated_Code/RTT1.c ****   return &RTT1_stdio;
 343              		.loc 1 526 0
 344 0004 024B     		ldr	r3, .L21
 527:../Generated_Code/RTT1.c **** }
 345              		.loc 1 527 0
 346 0006 1846     		mov	r0, r3
 347 0008 BD46     		mov	sp, r7
 348              		@ sp needed
 349 000a 5DF8047B 		ldr	r7, [sp], #4
 350 000e 7047     		bx	lr
 351              	.L22:
 352              		.align	2
 353              	.L21:
 354 0010 00000000 		.word	RTT1_stdio
 355              		.cfi_endproc
 356              	.LFE7:
 358              		.text
 359              	.Letext0:
 360              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 361              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 362              		.file 4 "../Generated_Code/PE_Types.h"
 363              		.file 5 "../Generated_Code/CLS1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RTT1.c
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:25     .rodata.RTT1_stdio:00000000 RTT1_stdio
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:22     .rodata.RTT1_stdio:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:70     .text.RTT1_StdIOReadChar:00000000 RTT1_StdIOReadChar
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:118    .text.RTT1_StdIOSendChar:00000000 RTT1_StdIOSendChar
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:37     .text.RTT1_StdIOKeyPressed:00000000 RTT1_StdIOKeyPressed
                            *COM*:00000030 RTT1_DefaultShellBuffer
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:32     .text.RTT1_StdIOKeyPressed:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:65     .text.RTT1_StdIOReadChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:113    .text.RTT1_StdIOSendChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:176    .text.RTT1_RecvChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:181    .text.RTT1_RecvChar:00000000 RTT1_RecvChar
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:225    .text.RTT1_SendChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:230    .text.RTT1_SendChar:00000000 RTT1_SendChar
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:275    .text.RTT1_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:280    .text.RTT1_Deinit:00000000 RTT1_Deinit
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:301    .text.RTT1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:306    .text.RTT1_Init:00000000 RTT1_Init
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:326    .text.RTT1_GetStdio:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:331    .text.RTT1_GetStdio:00000000 RTT1_GetStdio
C:\Users\Aron\AppData\Local\Temp\ccSAmuSh.s:354    .text.RTT1_GetStdio:00000010 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.RTT1config.h.9.558b8e72f87fd463160ae39e042c41f1
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18
                           .group:00000000 wm4.CLS1config.h.2.854bb35357facad932898800d8509913
                           .group:00000000 wm4.CLS1.h.122.6dfe00e3ccac8c27c20e405bc6b8e609
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.CS1config.h.2.e5153cf58e5fe0ee6ea0dc776d94aafd
                           .group:00000000 wm4.CS1.h.86.71773cc9f7a1189b60d5af00334fca8e
                           .group:00000000 wm4.CLS1.h.172.83b9daee286b58c7d453522f7dba0b4f
                           .group:00000000 wm4.SEGGER_RTT_Conf.h.68.24b18c92ee0ed50596d5a2ac2446e1f3
                           .group:00000000 wm4.SEGGER_RTT.h.170.7440a65c6e414fb2a8040073a0d6a958
                           .group:00000000 wm4.RTT1.h.115.43f0ed708a6264c94c5a08549cc1736d

UNDEFINED SYMBOLS
SEGGER_RTT_HasKey
SEGGER_RTT_GetKey
SEGGER_RTT_Write
WAIT1_Waitms
SEGGER_RTT_Init
