   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"CDC1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.start_app,"aw",%nobits
  23              	start_app:
  24 0000 00       		.space	1
  25              		.section	.bss.start_transactions,"aw",%nobits
  28              	start_transactions:
  29 0000 00       		.space	1
  30              		.section	.bss.transactionOngoing,"aw",%nobits
  33              	transactionOngoing:
  34 0000 00       		.space	1
  35              		.global	CDC1_stdio
  36              		.section	.rodata.CDC1_stdio,"a",%progbits
  37              		.align	2
  40              	CDC1_stdio:
  41 0000 00000000 		.word	CDC1_StdIOReadChar
  42 0004 00000000 		.word	CDC1_StdIOSendChar
  43 0008 00000000 		.word	CDC1_StdIOSendChar
  44 000c 00000000 		.word	CDC1_StdIOKeyPressed
  45              		.comm	CDC1_DefaultShellBuffer,48,4
  46              		.section	.text.CDC1_GetCharsInRxBuf,"ax",%progbits
  47              		.align	2
  48              		.global	CDC1_GetCharsInRxBuf
  49              		.thumb
  50              		.thumb_func
  52              	CDC1_GetCharsInRxBuf:
  53              	.LFB0:
  54              		.file 1 "../Generated_Code/CDC1.c"
   1:../Generated_Code/CDC1.c **** /* ###################################################################
   2:../Generated_Code/CDC1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/CDC1.c **** **     Filename    : CDC1.c
   4:../Generated_Code/CDC1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/CDC1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/CDC1.c **** **     Component   : FSL_USB_CDC_Device
   7:../Generated_Code/CDC1.c **** **     Version     : Component 01.094, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/CDC1.c **** **     Repository  : My Components
   9:../Generated_Code/CDC1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/CDC1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/CDC1.c **** **     Abstract    :
  12:../Generated_Code/CDC1.c **** **
  13:../Generated_Code/CDC1.c **** **     Settings    :
  14:../Generated_Code/CDC1.c **** **          Component name                                 : CDC1
  15:../Generated_Code/CDC1.c **** **          Shell                                          : CLS1
  16:../Generated_Code/CDC1.c **** **          SDK                                            : MCUC1
  17:../Generated_Code/CDC1.c **** **          CPU                                            : Kinetis K22F120
  18:../Generated_Code/CDC1.c **** **          CDC Settings                                   : Enabled
  19:../Generated_Code/CDC1.c **** **            .inf ClassGuid                               : 4D36E978-E325-11CE-BFC1-08002BE10318
  20:../Generated_Code/CDC1.c **** **            .inf VID                                     : 0x2504
  21:../Generated_Code/CDC1.c **** **            .inf PID                                     : 0x0300
  22:../Generated_Code/CDC1.c **** **            .inf PRVDR                                   : Freescale
  23:../Generated_Code/CDC1.c **** **            .inf MFGNAME                                 : Intro Robo
  24:../Generated_Code/CDC1.c **** **            .inf DESCRIPTION                             : Freescale CDC Device
  25:../Generated_Code/CDC1.c **** **            .inf SERVICE                                 : Virtual Com Driver
  26:../Generated_Code/CDC1.c **** **            Bus reported device                          : FSL CDC DEVICE
  27:../Generated_Code/CDC1.c **** **            Bus reported vendor                          : FREESCALE INC.
  28:../Generated_Code/CDC1.c **** **            Serial Number                                : 000123ABC
  29:../Generated_Code/CDC1.c **** **            Device Subclass                              : 2
  30:../Generated_Code/CDC1.c **** **          Configuration                                  : 
  31:../Generated_Code/CDC1.c **** **            USB_EP0_SIZE (in)                            : 32
  32:../Generated_Code/CDC1.c **** **            USB_EP1_SIZE (out)                           : 32
  33:../Generated_Code/CDC1.c **** **            USB_EP2_SIZE (notify)                        : 32
  34:../Generated_Code/CDC1.c **** **          Send Buffer                                    : RingBuffer
  35:../Generated_Code/CDC1.c **** **          Receive Buffer                                 : RingBuffer
  36:../Generated_Code/CDC1.c **** **          SendDataBlock                                  : 
  37:../Generated_Code/CDC1.c **** **            Use Timeout                                  : Enabled
  38:../Generated_Code/CDC1.c **** **              Timeout                                    : TMOUT1
  39:../Generated_Code/CDC1.c **** **              App Task Timeout (ms)                      : 10
  40:../Generated_Code/CDC1.c **** **            Waiting time (ms)                            : 2
  41:../Generated_Code/CDC1.c **** **            Wait                                         : WAIT1
  42:../Generated_Code/CDC1.c **** **          Power Options                                  : 
  43:../Generated_Code/CDC1.c **** **            Bus Powered                                  : yes
  44:../Generated_Code/CDC1.c **** **            Self Powered                                 : yes
  45:../Generated_Code/CDC1.c **** **            Current Draw (mA)                            : 100
  46:../Generated_Code/CDC1.c **** **     Contents    :
  47:../Generated_Code/CDC1.c **** **         ClearRxBuffer       - void CDC1_ClearRxBuffer(void);
  48:../Generated_Code/CDC1.c **** **         ClearTxBuffer       - void CDC1_ClearTxBuffer(void);
  49:../Generated_Code/CDC1.c **** **         GetFreeInTxBuf      - uint16_t CDC1_GetFreeInTxBuf(void);
  50:../Generated_Code/CDC1.c **** **         GetCharsInTxBuf     - uint16_t CDC1_GetCharsInTxBuf(void);
  51:../Generated_Code/CDC1.c **** **         GetCharsInRxBuf     - uint16_t CDC1_GetCharsInRxBuf(void);
  52:../Generated_Code/CDC1.c **** **         GetChar             - uint8_t CDC1_GetChar(CDC1_TComData *Chr);
  53:../Generated_Code/CDC1.c **** **         RecvChar            - uint8_t CDC1_RecvChar(CDC1_TComData *Chr);
  54:../Generated_Code/CDC1.c **** **         SendChar            - uint8_t CDC1_SendChar(CDC1_TComData Chr);
  55:../Generated_Code/CDC1.c **** **         SendString          - uint8_t CDC1_SendString(CDC1_TComData *Chr);
  56:../Generated_Code/CDC1.c **** **         SendBlock           - uint8_t CDC1_SendBlock(uint8_t *data, uint16_t dataSize);
  57:../Generated_Code/CDC1.c **** **         PutBufferChecked    - uint8_t CDC1_PutBufferChecked(uint8_t *buf, size_t bufSize);
  58:../Generated_Code/CDC1.c **** **         App_Callback        - void CDC1_App_Callback(uint8_t controller_ID, uint8_t event_type, 
  59:../Generated_Code/CDC1.c **** **         Notify_Callback     - void CDC1_Notify_Callback(uint8_t controller_ID, uint8_t event_typ
  60:../Generated_Code/CDC1.c **** **         ApplicationStarted  - bool CDC1_ApplicationStarted(void);
  61:../Generated_Code/CDC1.c **** **         TransactionsStarted - bool CDC1_TransactionsStarted(void);
  62:../Generated_Code/CDC1.c **** **         App_Task            - uint8_t CDC1_App_Task(uint8_t *txBuf, size_t txBufSize);
  63:../Generated_Code/CDC1.c **** **         StdIOKeyPressed     - bool CDC1_StdIOKeyPressed(void);
  64:../Generated_Code/CDC1.c **** **         StdIOReadChar       - void CDC1_StdIOReadChar(uint8_t *c);
  65:../Generated_Code/CDC1.c **** **         StdIOSendChar       - void CDC1_StdIOSendChar(uint8_t ch);
  66:../Generated_Code/CDC1.c **** **         GetStdio            - %@Shell@'ModuleName'%.ConstStdIOTypePtr CDC1_GetStdio(void);
  67:../Generated_Code/CDC1.c **** **         Deinit              - uint8_t CDC1_Deinit(void);
  68:../Generated_Code/CDC1.c **** **         Init                - uint8_t CDC1_Init(void);
  69:../Generated_Code/CDC1.c **** **
  70:../Generated_Code/CDC1.c **** **     * Copyright : USB Stack sources (c) Copyright Freescale, all rights reserved, 2013-2017
  71:../Generated_Code/CDC1.c **** **      * Adopted for Processor Expert: Erich Styger
  72:../Generated_Code/CDC1.c **** **      * Web:         https://mcuoneclipse.com
  73:../Generated_Code/CDC1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  74:../Generated_Code/CDC1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  75:../Generated_Code/CDC1.c **** **      * All rights reserved.
  76:../Generated_Code/CDC1.c **** ** ###################################################################*/
  77:../Generated_Code/CDC1.c **** /*!
  78:../Generated_Code/CDC1.c **** ** @file CDC1.c
  79:../Generated_Code/CDC1.c **** ** @version 01.00
  80:../Generated_Code/CDC1.c **** ** @brief
  81:../Generated_Code/CDC1.c **** **
  82:../Generated_Code/CDC1.c **** */         
  83:../Generated_Code/CDC1.c **** /*!
  84:../Generated_Code/CDC1.c **** **  @addtogroup CDC1_module CDC1 module documentation
  85:../Generated_Code/CDC1.c **** **  @{
  86:../Generated_Code/CDC1.c **** */         
  87:../Generated_Code/CDC1.c **** 
  88:../Generated_Code/CDC1.c **** /* MODULE CDC1. */
  89:../Generated_Code/CDC1.c **** 
  90:../Generated_Code/CDC1.c **** #include "CDC1.h"
  91:../Generated_Code/CDC1.c **** #include "hidef.h"          /* for EnableInterrupts macro */
  92:../Generated_Code/CDC1.c **** #include "derivative.h"     /* include peripheral declarations */
  93:../Generated_Code/CDC1.c **** #include "types.h"          /* Contains User Defined Data Types */
  94:../Generated_Code/CDC1.c **** #include "usb_cdc.h"        /* USB CDC Class Header File */
  95:../Generated_Code/CDC1.c **** #include <stdio.h>
  96:../Generated_Code/CDC1.c **** /* skip the inclusion in dependency state */
  97:../Generated_Code/CDC1.c **** #ifndef __NO_SETJMP
  98:../Generated_Code/CDC1.c ****   #include <stdio.h>
  99:../Generated_Code/CDC1.c **** #endif
 100:../Generated_Code/CDC1.c **** #include <stdlib.h>
 101:../Generated_Code/CDC1.c **** #include <string.h>
 102:../Generated_Code/CDC1.c **** #if CDC1_CONFIG_USE_TIMEOUT
 103:../Generated_Code/CDC1.c ****   #include "TMOUT1.h"
 104:../Generated_Code/CDC1.c **** #endif
 105:../Generated_Code/CDC1.c **** #include "WAIT1.h"
 106:../Generated_Code/CDC1.c **** 
 107:../Generated_Code/CDC1.c **** #define  CONTROLLER_ID      (0)   /* ID to identify USB CONTROLLER */
 108:../Generated_Code/CDC1.c **** 
 109:../Generated_Code/CDC1.c **** #if HIGH_SPEED_DEVICE
 110:../Generated_Code/CDC1.c **** static uint_32 g_cdcBuffer[DIC_BULK_OUT_ENDP_PACKET_SIZE>>1];
 111:../Generated_Code/CDC1.c **** #endif
 112:../Generated_Code/CDC1.c **** 
 113:../Generated_Code/CDC1.c **** /* Virtual COM Application start Init Flag */
 114:../Generated_Code/CDC1.c **** static volatile boolean start_app = FALSE;
 115:../Generated_Code/CDC1.c **** 
 116:../Generated_Code/CDC1.c **** /* Virtual COM Application Carrier Activate Flag */
 117:../Generated_Code/CDC1.c **** static volatile boolean start_transactions = FALSE;
 118:../Generated_Code/CDC1.c **** static volatile boolean transactionOngoing = FALSE;
 119:../Generated_Code/CDC1.c **** 
 120:../Generated_Code/CDC1.c **** /* default standard I/O struct */
 121:../Generated_Code/CDC1.c **** CLS1_ConstStdIOType CDC1_stdio = {
 122:../Generated_Code/CDC1.c ****     (CLS1_StdIO_In_FctType)CDC1_StdIOReadChar, /* stdin */
 123:../Generated_Code/CDC1.c ****     (CLS1_StdIO_OutErr_FctType)CDC1_StdIOSendChar, /* stdout */
 124:../Generated_Code/CDC1.c ****     (CLS1_StdIO_OutErr_FctType)CDC1_StdIOSendChar, /* stderr */
 125:../Generated_Code/CDC1.c ****     CDC1_StdIOKeyPressed /* if input is not empty */
 126:../Generated_Code/CDC1.c ****   };
 127:../Generated_Code/CDC1.c **** uint8_t CDC1_DefaultShellBuffer[CLS1_DEFAULT_SHELL_BUFFER_SIZE]; /* default buffer which can be use
 128:../Generated_Code/CDC1.c **** /*
 129:../Generated_Code/CDC1.c **** ** ===================================================================
 130:../Generated_Code/CDC1.c **** **     Method      :  CDC1_GetFreeInTxBuf (component FSL_USB_CDC_Device)
 131:../Generated_Code/CDC1.c **** **     Description :
 132:../Generated_Code/CDC1.c **** **         Returns the number of free character in the send buffer
 133:../Generated_Code/CDC1.c **** **     Parameters  : None
 134:../Generated_Code/CDC1.c **** **     Returns     :
 135:../Generated_Code/CDC1.c **** **         ---             - Number of free character in the receive
 136:../Generated_Code/CDC1.c **** **                           buffer.
 137:../Generated_Code/CDC1.c **** ** ===================================================================
 138:../Generated_Code/CDC1.c **** */
 139:../Generated_Code/CDC1.c **** /*
 140:../Generated_Code/CDC1.c **** uint16_t CDC1_GetFreeInTxBuf(void)
 141:../Generated_Code/CDC1.c **** {
 142:../Generated_Code/CDC1.c ****   *** Implemented as macro in the header file
 143:../Generated_Code/CDC1.c **** }
 144:../Generated_Code/CDC1.c **** */
 145:../Generated_Code/CDC1.c **** 
 146:../Generated_Code/CDC1.c **** /*
 147:../Generated_Code/CDC1.c **** ** ===================================================================
 148:../Generated_Code/CDC1.c **** **     Method      :  CDC1_GetCharsInTxBuf (component FSL_USB_CDC_Device)
 149:../Generated_Code/CDC1.c **** **     Description :
 150:../Generated_Code/CDC1.c **** **         Returns the number of character in the send buffer
 151:../Generated_Code/CDC1.c **** **     Parameters  : None
 152:../Generated_Code/CDC1.c **** **     Returns     :
 153:../Generated_Code/CDC1.c **** **         ---             - Number of character in the receive buffer.
 154:../Generated_Code/CDC1.c **** ** ===================================================================
 155:../Generated_Code/CDC1.c **** */
 156:../Generated_Code/CDC1.c **** /*
 157:../Generated_Code/CDC1.c **** uint16_t CDC1_GetCharsInTxBuf(void)
 158:../Generated_Code/CDC1.c **** {
 159:../Generated_Code/CDC1.c ****   *** implemented as macro in the header file
 160:../Generated_Code/CDC1.c ****   return (uint16_t)Tx1_NofElements();
 161:../Generated_Code/CDC1.c **** }
 162:../Generated_Code/CDC1.c **** */
 163:../Generated_Code/CDC1.c **** 
 164:../Generated_Code/CDC1.c **** /*
 165:../Generated_Code/CDC1.c **** ** ===================================================================
 166:../Generated_Code/CDC1.c **** **     Method      :  CDC1_GetCharsInRxBuf (component FSL_USB_CDC_Device)
 167:../Generated_Code/CDC1.c **** **     Description :
 168:../Generated_Code/CDC1.c **** **         Returns the number of character in the receive buffer
 169:../Generated_Code/CDC1.c **** **     Parameters  : None
 170:../Generated_Code/CDC1.c **** **     Returns     :
 171:../Generated_Code/CDC1.c **** **         ---             - Number of character in the receive buffer.
 172:../Generated_Code/CDC1.c **** ** ===================================================================
 173:../Generated_Code/CDC1.c **** */
 174:../Generated_Code/CDC1.c **** uint16_t CDC1_GetCharsInRxBuf(void)
 175:../Generated_Code/CDC1.c **** {
  55              		.loc 1 175 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
 176:../Generated_Code/CDC1.c ****   static uint8_t txBuf[CDC1_DATA_BUFF_SIZE];
 177:../Generated_Code/CDC1.c **** 
 178:../Generated_Code/CDC1.c ****   if (CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this will
  65              		.loc 1 178 0
  66 0004 0448     		ldr	r0, .L3
  67 0006 4021     		movs	r1, #64
  68 0008 FFF7FEFF 		bl	CDC1_App_Task
 179:../Generated_Code/CDC1.c ****   }
 180:../Generated_Code/CDC1.c ****   return (uint16_t)Rx1_NofElements();
  69              		.loc 1 180 0
  70 000c FFF7FEFF 		bl	Rx1_NofElements
  71 0010 0346     		mov	r3, r0
 181:../Generated_Code/CDC1.c **** }
  72              		.loc 1 181 0
  73 0012 1846     		mov	r0, r3
  74 0014 80BD     		pop	{r7, pc}
  75              	.L4:
  76 0016 00BF     		.align	2
  77              	.L3:
  78 0018 00000000 		.word	txBuf.8140
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.section	.text.CDC1_RecvChar,"ax",%progbits
  83              		.align	2
  84              		.global	CDC1_RecvChar
  85              		.thumb
  86              		.thumb_func
  88              	CDC1_RecvChar:
  89              	.LFB1:
 182:../Generated_Code/CDC1.c **** 
 183:../Generated_Code/CDC1.c **** /*
 184:../Generated_Code/CDC1.c **** ** ===================================================================
 185:../Generated_Code/CDC1.c **** **     Method      :  CDC1_GetChar (component FSL_USB_CDC_Device)
 186:../Generated_Code/CDC1.c **** **     Description :
 187:../Generated_Code/CDC1.c **** **         Receives a character from the USB interface. Function is not
 188:../Generated_Code/CDC1.c **** **         blocking if there is no character in the input buffer.
 189:../Generated_Code/CDC1.c **** **     Parameters  :
 190:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 191:../Generated_Code/CDC1.c **** **       * Chr             - Pointer to where to store the character
 192:../Generated_Code/CDC1.c **** **                           received
 193:../Generated_Code/CDC1.c **** **     Returns     :
 194:../Generated_Code/CDC1.c **** **         ---             - Error code, ERR_OK for success,
 195:../Generated_Code/CDC1.c **** **                           ERR_RXEMPTY if nothing is in RX buffer.
 196:../Generated_Code/CDC1.c **** ** ===================================================================
 197:../Generated_Code/CDC1.c **** */
 198:../Generated_Code/CDC1.c **** /**
 199:../Generated_Code/CDC1.c **** uint8_t CDC1_GetChar(CDC1_TComData *Chr)
 200:../Generated_Code/CDC1.c **** {
 201:../Generated_Code/CDC1.c ****   *** implemented as macro in the header file
 202:../Generated_Code/CDC1.c ****   return Rx1_Get(Chr);
 203:../Generated_Code/CDC1.c **** }
 204:../Generated_Code/CDC1.c **** */
 205:../Generated_Code/CDC1.c **** /*
 206:../Generated_Code/CDC1.c **** ** ===================================================================
 207:../Generated_Code/CDC1.c **** **     Method      :  CDC1_RecvChar (component FSL_USB_CDC_Device)
 208:../Generated_Code/CDC1.c **** **     Description :
 209:../Generated_Code/CDC1.c **** **         Receives a character from the USB interface. Function is
 210:../Generated_Code/CDC1.c **** **         blocking if there is no character in the input buffer.
 211:../Generated_Code/CDC1.c **** **     Parameters  :
 212:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 213:../Generated_Code/CDC1.c **** **       * Chr             - Pointer to where to store the character
 214:../Generated_Code/CDC1.c **** **                           received
 215:../Generated_Code/CDC1.c **** **     Returns     :
 216:../Generated_Code/CDC1.c **** **         ---             - Error code, ERR_OK for success,
 217:../Generated_Code/CDC1.c **** **                           ERR_RXEMPTY if nothing is in RX buffer.
 218:../Generated_Code/CDC1.c **** ** ===================================================================
 219:../Generated_Code/CDC1.c **** */
 220:../Generated_Code/CDC1.c **** uint8_t CDC1_RecvChar(CDC1_TComData *Chr)
 221:../Generated_Code/CDC1.c **** {
  90              		.loc 1 221 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 16
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 102 0006 7860     		str	r0, [r7, #4]
 222:../Generated_Code/CDC1.c ****   while(Rx1_Get(Chr)!=ERR_OK) {
 103              		.loc 1 222 0
 104 0008 02E0     		b	.L6
 105              	.L7:
 223:../Generated_Code/CDC1.c ****     WAIT1_WaitOSms(10); /* avoid to completely block */
 106              		.loc 1 223 0
 107 000a 0A20     		movs	r0, #10
 108 000c FFF7FEFF 		bl	WAIT1_Waitms
 109              	.L6:
 222:../Generated_Code/CDC1.c ****   while(Rx1_Get(Chr)!=ERR_OK) {
 110              		.loc 1 222 0 discriminator 1
 111 0010 7868     		ldr	r0, [r7, #4]
 112 0012 FFF7FEFF 		bl	Rx1_Get
 113 0016 0346     		mov	r3, r0
 114 0018 002B     		cmp	r3, #0
 115 001a F6D1     		bne	.L7
 224:../Generated_Code/CDC1.c ****     /* retry receiving until success */
 225:../Generated_Code/CDC1.c ****   }
 226:../Generated_Code/CDC1.c ****   return ERR_OK;
 116              		.loc 1 226 0
 117 001c 0023     		movs	r3, #0
 227:../Generated_Code/CDC1.c **** }
 118              		.loc 1 227 0
 119 001e 1846     		mov	r0, r3
 120 0020 0837     		adds	r7, r7, #8
 121 0022 BD46     		mov	sp, r7
 122              		@ sp needed
 123 0024 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE1:
 127 0026 00BF     		.section	.text.CDC1_SendChar,"ax",%progbits
 128              		.align	2
 129              		.global	CDC1_SendChar
 130              		.thumb
 131              		.thumb_func
 133              	CDC1_SendChar:
 134              	.LFB2:
 228:../Generated_Code/CDC1.c **** 
 229:../Generated_Code/CDC1.c **** /*
 230:../Generated_Code/CDC1.c **** ** ===================================================================
 231:../Generated_Code/CDC1.c **** **     Method      :  CDC1_SendChar (component FSL_USB_CDC_Device)
 232:../Generated_Code/CDC1.c **** **     Description :
 233:../Generated_Code/CDC1.c **** **         Method to send a character to the USB interface. Method is
 234:../Generated_Code/CDC1.c **** **         non-blocking: If the output buffer is full, it tries to send
 235:../Generated_Code/CDC1.c **** **         it over USB. If this fails or buffer is still full, the
 236:../Generated_Code/CDC1.c **** **         character will be lost. If OnError() event is enabled, the
 237:../Generated_Code/CDC1.c **** **         error event will be called in case of error.
 238:../Generated_Code/CDC1.c **** **     Parameters  :
 239:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 240:../Generated_Code/CDC1.c **** **         Chr             - Character to send.
 241:../Generated_Code/CDC1.c **** **     Returns     :
 242:../Generated_Code/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 243:../Generated_Code/CDC1.c **** **                           ERR_FAILED otherwise.
 244:../Generated_Code/CDC1.c **** ** ===================================================================
 245:../Generated_Code/CDC1.c **** */
 246:../Generated_Code/CDC1.c **** uint8_t CDC1_SendChar(CDC1_TComData Chr)
 247:../Generated_Code/CDC1.c **** {
 135              		.loc 1 247 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 84B0     		sub	sp, sp, #16
 144              		.cfi_def_cfa_offset 24
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 147 0006 0346     		mov	r3, r0
 148 0008 FB71     		strb	r3, [r7, #7]
 248:../Generated_Code/CDC1.c ****   static uint8_t txBuf[CDC1_DATA_BUFF_SIZE];
 249:../Generated_Code/CDC1.c ****   uint8_t res;
 250:../Generated_Code/CDC1.c **** 
 251:../Generated_Code/CDC1.c ****   if (Tx1_Put(Chr)==ERR_TXFULL) { /* retry once, otherwise throw it away  */
 149              		.loc 1 251 0
 150 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 151 000c 1846     		mov	r0, r3
 152 000e FFF7FEFF 		bl	Tx1_Put
 153 0012 0346     		mov	r3, r0
 154 0014 0B2B     		cmp	r3, #11
 155 0016 15D1     		bne	.L10
 252:../Generated_Code/CDC1.c ****     res = CDC1_App_Task(txBuf, sizeof(txBuf)); /* call USB handler: if active, then this will empty
 156              		.loc 1 252 0
 157 0018 0D48     		ldr	r0, .L14
 158 001a 4021     		movs	r1, #64
 159 001c FFF7FEFF 		bl	CDC1_App_Task
 160 0020 0346     		mov	r3, r0
 161 0022 FB73     		strb	r3, [r7, #15]
 253:../Generated_Code/CDC1.c ****     if (res==ERR_BUSOFF) { /* USB not enumerated */
 162              		.loc 1 253 0
 163 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 164 0026 0C2B     		cmp	r3, #12
 165 0028 01D1     		bne	.L11
 254:../Generated_Code/CDC1.c ****       return ERR_FAILED;
 166              		.loc 1 254 0
 167 002a 1B23     		movs	r3, #27
 168 002c 0BE0     		b	.L12
 169              	.L11:
 255:../Generated_Code/CDC1.c ****     } else if (res!=ERR_OK) {
 170              		.loc 1 255 0
 171 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 172 0030 002B     		cmp	r3, #0
 173 0032 01D0     		beq	.L13
 256:../Generated_Code/CDC1.c ****       return ERR_TXFULL;
 174              		.loc 1 256 0
 175 0034 0B23     		movs	r3, #11
 176 0036 06E0     		b	.L12
 177              	.L13:
 257:../Generated_Code/CDC1.c ****     } else { /* retry, as USB App_Task() should have sent the buffer */
 258:../Generated_Code/CDC1.c ****       return Tx1_Put(Chr); /* retry. If buffer is still full, we will lose the character */
 178              		.loc 1 258 0
 179 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 180 003a 1846     		mov	r0, r3
 181 003c FFF7FEFF 		bl	Tx1_Put
 182 0040 0346     		mov	r3, r0
 183 0042 00E0     		b	.L12
 184              	.L10:
 259:../Generated_Code/CDC1.c ****     }
 260:../Generated_Code/CDC1.c ****   }
 261:../Generated_Code/CDC1.c ****   return ERR_OK;
 185              		.loc 1 261 0
 186 0044 0023     		movs	r3, #0
 187              	.L12:
 262:../Generated_Code/CDC1.c **** }
 188              		.loc 1 262 0
 189 0046 1846     		mov	r0, r3
 190 0048 1037     		adds	r7, r7, #16
 191 004a BD46     		mov	sp, r7
 192              		@ sp needed
 193 004c 80BD     		pop	{r7, pc}
 194              	.L15:
 195 004e 00BF     		.align	2
 196              	.L14:
 197 0050 00000000 		.word	txBuf.8150
 198              		.cfi_endproc
 199              	.LFE2:
 201              		.section	.text.CDC1_SendBlock,"ax",%progbits
 202              		.align	2
 203              		.global	CDC1_SendBlock
 204              		.thumb
 205              		.thumb_func
 207              	CDC1_SendBlock:
 208              	.LFB3:
 263:../Generated_Code/CDC1.c **** 
 264:../Generated_Code/CDC1.c **** /*
 265:../Generated_Code/CDC1.c **** ** ===================================================================
 266:../Generated_Code/CDC1.c **** **     Method      :  CDC1_SendBlock (component FSL_USB_CDC_Device)
 267:../Generated_Code/CDC1.c **** **     Description :
 268:../Generated_Code/CDC1.c **** **         Method to send a data block to the USB interface. Method is
 269:../Generated_Code/CDC1.c **** **         non-blocking: if data cannot be sent, it will be lost. If
 270:../Generated_Code/CDC1.c **** **         OnError() event is enabled, the error event will be called
 271:../Generated_Code/CDC1.c **** **         in case of error.
 272:../Generated_Code/CDC1.c **** **     Parameters  :
 273:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 274:../Generated_Code/CDC1.c **** **       * data            - Pointer to data to send.
 275:../Generated_Code/CDC1.c **** **         dataSize        - Size of data in bytes
 276:../Generated_Code/CDC1.c **** **     Returns     :
 277:../Generated_Code/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 278:../Generated_Code/CDC1.c **** **                           ERR_FAILED otherwise.
 279:../Generated_Code/CDC1.c **** ** ===================================================================
 280:../Generated_Code/CDC1.c **** */
 281:../Generated_Code/CDC1.c **** uint8_t CDC1_SendBlock(uint8_t *data, uint16_t dataSize)
 282:../Generated_Code/CDC1.c **** {
 209              		.loc 1 282 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 16
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 84B0     		sub	sp, sp, #16
 218              		.cfi_def_cfa_offset 24
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221 0006 7860     		str	r0, [r7, #4]
 222 0008 0B46     		mov	r3, r1
 223 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 283:../Generated_Code/CDC1.c ****   uint8_t res = ERR_OK;
 224              		.loc 1 283 0
 225 000c 0023     		movs	r3, #0
 226 000e FB73     		strb	r3, [r7, #15]
 284:../Generated_Code/CDC1.c **** 
 285:../Generated_Code/CDC1.c ****   while(dataSize > 0) {
 227              		.loc 1 285 0
 228 0010 0FE0     		b	.L17
 229              	.L19:
 286:../Generated_Code/CDC1.c ****     if (CDC1_SendChar(*data)!=ERR_OK) {
 230              		.loc 1 286 0
 231 0012 7B68     		ldr	r3, [r7, #4]
 232 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 0016 1846     		mov	r0, r3
 234 0018 FFF7FEFF 		bl	CDC1_SendChar
 235 001c 0346     		mov	r3, r0
 236 001e 002B     		cmp	r3, #0
 237 0020 01D0     		beq	.L18
 287:../Generated_Code/CDC1.c ****       res = ERR_TXFULL;
 238              		.loc 1 287 0
 239 0022 0B23     		movs	r3, #11
 240 0024 FB73     		strb	r3, [r7, #15]
 241              	.L18:
 288:../Generated_Code/CDC1.c ****     }
 289:../Generated_Code/CDC1.c ****     dataSize--; data++;
 242              		.loc 1 289 0
 243 0026 7B88     		ldrh	r3, [r7, #2]
 244 0028 013B     		subs	r3, r3, #1
 245 002a 7B80     		strh	r3, [r7, #2]	@ movhi
 246 002c 7B68     		ldr	r3, [r7, #4]
 247 002e 0133     		adds	r3, r3, #1
 248 0030 7B60     		str	r3, [r7, #4]
 249              	.L17:
 285:../Generated_Code/CDC1.c ****   while(dataSize > 0) {
 250              		.loc 1 285 0 discriminator 1
 251 0032 7B88     		ldrh	r3, [r7, #2]
 252 0034 002B     		cmp	r3, #0
 253 0036 ECD1     		bne	.L19
 290:../Generated_Code/CDC1.c ****   }
 291:../Generated_Code/CDC1.c ****   return res;
 254              		.loc 1 291 0
 255 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 292:../Generated_Code/CDC1.c **** }
 256              		.loc 1 292 0
 257 003a 1846     		mov	r0, r3
 258 003c 1037     		adds	r7, r7, #16
 259 003e BD46     		mov	sp, r7
 260              		@ sp needed
 261 0040 80BD     		pop	{r7, pc}
 262              		.cfi_endproc
 263              	.LFE3:
 265 0042 00BF     		.section	.text.CDC1_SendString,"ax",%progbits
 266              		.align	2
 267              		.global	CDC1_SendString
 268              		.thumb
 269              		.thumb_func
 271              	CDC1_SendString:
 272              	.LFB4:
 293:../Generated_Code/CDC1.c **** 
 294:../Generated_Code/CDC1.c **** /*
 295:../Generated_Code/CDC1.c **** ** ===================================================================
 296:../Generated_Code/CDC1.c **** **     Method      :  CDC1_SendString (component FSL_USB_CDC_Device)
 297:../Generated_Code/CDC1.c **** **     Description :
 298:../Generated_Code/CDC1.c **** **         Method to send a string to the USB interface. Method is
 299:../Generated_Code/CDC1.c **** **         non-blocking: if string cannot be sent, it will be lost. If
 300:../Generated_Code/CDC1.c **** **         OnError() event is enabled, the error event will be called
 301:../Generated_Code/CDC1.c **** **         in case of error.
 302:../Generated_Code/CDC1.c **** **     Parameters  :
 303:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 304:../Generated_Code/CDC1.c **** **       * Chr             - Pointer to string to send.
 305:../Generated_Code/CDC1.c **** **     Returns     :
 306:../Generated_Code/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 307:../Generated_Code/CDC1.c **** **                           ERR_FAILED otherwise.
 308:../Generated_Code/CDC1.c **** ** ===================================================================
 309:../Generated_Code/CDC1.c **** */
 310:../Generated_Code/CDC1.c **** uint8_t CDC1_SendString(CDC1_TComData *Chr)
 311:../Generated_Code/CDC1.c **** {
 273              		.loc 1 311 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 16
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 84B0     		sub	sp, sp, #16
 282              		.cfi_def_cfa_offset 24
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 312:../Generated_Code/CDC1.c ****   uint8_t res = ERR_OK;
 286              		.loc 1 312 0
 287 0008 0023     		movs	r3, #0
 288 000a FB73     		strb	r3, [r7, #15]
 313:../Generated_Code/CDC1.c **** 
 314:../Generated_Code/CDC1.c ****   while(*Chr != '\0') {
 289              		.loc 1 314 0
 290 000c 0CE0     		b	.L22
 291              	.L24:
 315:../Generated_Code/CDC1.c ****     if (CDC1_SendChar(*Chr)!=ERR_OK) {
 292              		.loc 1 315 0
 293 000e 7B68     		ldr	r3, [r7, #4]
 294 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 295 0012 1846     		mov	r0, r3
 296 0014 FFF7FEFF 		bl	CDC1_SendChar
 297 0018 0346     		mov	r3, r0
 298 001a 002B     		cmp	r3, #0
 299 001c 01D0     		beq	.L23
 316:../Generated_Code/CDC1.c ****       res = ERR_TXFULL;
 300              		.loc 1 316 0
 301 001e 0B23     		movs	r3, #11
 302 0020 FB73     		strb	r3, [r7, #15]
 303              	.L23:
 317:../Generated_Code/CDC1.c ****     }
 318:../Generated_Code/CDC1.c ****     Chr++;
 304              		.loc 1 318 0
 305 0022 7B68     		ldr	r3, [r7, #4]
 306 0024 0133     		adds	r3, r3, #1
 307 0026 7B60     		str	r3, [r7, #4]
 308              	.L22:
 314:../Generated_Code/CDC1.c ****   while(*Chr != '\0') {
 309              		.loc 1 314 0 discriminator 1
 310 0028 7B68     		ldr	r3, [r7, #4]
 311 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 002c 002B     		cmp	r3, #0
 313 002e EED1     		bne	.L24
 319:../Generated_Code/CDC1.c ****   }
 320:../Generated_Code/CDC1.c ****   return res;
 314              		.loc 1 320 0
 315 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 321:../Generated_Code/CDC1.c **** }
 316              		.loc 1 321 0
 317 0032 1846     		mov	r0, r3
 318 0034 1037     		adds	r7, r7, #16
 319 0036 BD46     		mov	sp, r7
 320              		@ sp needed
 321 0038 80BD     		pop	{r7, pc}
 322              		.cfi_endproc
 323              	.LFE4:
 325 003a 00BF     		.section	.text.CDC1_App_Callback,"ax",%progbits
 326              		.align	2
 327              		.global	CDC1_App_Callback
 328              		.thumb
 329              		.thumb_func
 331              	CDC1_App_Callback:
 332              	.LFB5:
 322:../Generated_Code/CDC1.c **** 
 323:../Generated_Code/CDC1.c **** /*
 324:../Generated_Code/CDC1.c **** ** ===================================================================
 325:../Generated_Code/CDC1.c **** **     Method      :  CDC1_App_Callback (component FSL_USB_CDC_Device)
 326:../Generated_Code/CDC1.c **** **     Description :
 327:../Generated_Code/CDC1.c **** **         Method to handle class callbacks from USB
 328:../Generated_Code/CDC1.c **** **     Parameters  :
 329:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 330:../Generated_Code/CDC1.c **** **         controller_ID   - controller ID
 331:../Generated_Code/CDC1.c **** **         event_type      - value of the event
 332:../Generated_Code/CDC1.c **** **         val             - gives the configuration value
 333:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 334:../Generated_Code/CDC1.c **** ** ===================================================================
 335:../Generated_Code/CDC1.c **** */
 336:../Generated_Code/CDC1.c **** void CDC1_App_Callback(uint8_t controller_ID, uint8_t event_type, void *val)
 337:../Generated_Code/CDC1.c **** {
 333              		.loc 1 337 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 24
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0000 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 86B0     		sub	sp, sp, #24
 342              		.cfi_def_cfa_offset 32
 343 0004 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 345 0006 0B46     		mov	r3, r1
 346 0008 3A60     		str	r2, [r7]
 347 000a 0246     		mov	r2, r0
 348 000c FA71     		strb	r2, [r7, #7]
 349 000e BB71     		strb	r3, [r7, #6]
 338:../Generated_Code/CDC1.c ****   UNUSED(controller_ID);
 339:../Generated_Code/CDC1.c ****   UNUSED(val);
 340:../Generated_Code/CDC1.c ****   if (event_type == USB_APP_BUS_RESET) {
 350              		.loc 1 340 0
 351 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 352 0012 002B     		cmp	r3, #0
 353 0014 03D1     		bne	.L27
 341:../Generated_Code/CDC1.c ****     start_app = FALSE;
 354              		.loc 1 341 0
 355 0016 294B     		ldr	r3, .L34
 356 0018 0022     		movs	r2, #0
 357 001a 1A70     		strb	r2, [r3]
 358 001c 4BE0     		b	.L26
 359              	.L27:
 342:../Generated_Code/CDC1.c ****   } else if (event_type == USB_APP_ENUM_COMPLETE) {
 360              		.loc 1 342 0
 361 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 362 0020 022B     		cmp	r3, #2
 363 0022 09D1     		bne	.L29
 343:../Generated_Code/CDC1.c **** #if HIGH_SPEED_DEVICE
 344:../Generated_Code/CDC1.c ****     /* prepare for the next receive event */
 345:../Generated_Code/CDC1.c ****     USB_Class_CDC_Interface_DIC_Recv_Data(&controller_ID,
 346:../Generated_Code/CDC1.c ****                                            (uint_8_ptr)g_cdcBuffer,
 347:../Generated_Code/CDC1.c ****                                            DIC_BULK_OUT_ENDP_PACKET_SIZE);
 348:../Generated_Code/CDC1.c **** #else
 349:../Generated_Code/CDC1.c ****     (void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, NULL, 0);
 364              		.loc 1 349 0
 365 0024 0020     		movs	r0, #0
 366 0026 0221     		movs	r1, #2
 367 0028 0022     		movs	r2, #0
 368 002a 0023     		movs	r3, #0
 369 002c FFF7FEFF 		bl	_usb_device_recv_data
 350:../Generated_Code/CDC1.c **** #endif
 351:../Generated_Code/CDC1.c ****     start_app = TRUE;
 370              		.loc 1 351 0
 371 0030 224B     		ldr	r3, .L34
 372 0032 0122     		movs	r2, #1
 373 0034 1A70     		strb	r2, [r3]
 374 0036 3EE0     		b	.L26
 375              	.L29:
 352:../Generated_Code/CDC1.c ****   } else if ((event_type==USB_APP_DATA_RECEIVED) && (start_transactions==TRUE)) {
 376              		.loc 1 352 0
 377 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 378 003a 042B     		cmp	r3, #4
 379 003c 26D1     		bne	.L30
 380              		.loc 1 352 0 is_stmt 0 discriminator 1
 381 003e 204B     		ldr	r3, .L34+4
 382 0040 1B78     		ldrb	r3, [r3]
 383 0042 DBB2     		uxtb	r3, r3
 384 0044 012B     		cmp	r3, #1
 385 0046 21D1     		bne	.L30
 386              	.LBB2:
 353:../Generated_Code/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 354:../Generated_Code/CDC1.c ****     USB_PACKET_SIZE BytesToBeCopied;
 355:../Generated_Code/CDC1.c ****     APP_DATA_STRUCT *dp_rcv = (APP_DATA_STRUCT*)val;
 387              		.loc 1 355 0 is_stmt 1
 388 0048 3B68     		ldr	r3, [r7]
 389 004a 3B61     		str	r3, [r7, #16]
 356:../Generated_Code/CDC1.c ****     uint_8 idx;
 357:../Generated_Code/CDC1.c **** 
 358:../Generated_Code/CDC1.c ****     BytesToBeCopied = (USB_PACKET_SIZE)((dp_rcv->data_size>CDC1_DATA_BUFF_SIZE) ? CDC1_DATA_BUFF_SI
 390              		.loc 1 358 0
 391 004c 3B69     		ldr	r3, [r7, #16]
 392 004e 9B88     		ldrh	r3, [r3, #4]
 393 0050 402B     		cmp	r3, #64
 394 0052 28BF     		it	cs
 395 0054 4023     		movcs	r3, #64
 396 0056 FB81     		strh	r3, [r7, #14]	@ movhi
 359:../Generated_Code/CDC1.c ****     for(idx = 0; idx<BytesToBeCopied ; idx++) {
 397              		.loc 1 359 0
 398 0058 0023     		movs	r3, #0
 399 005a FB75     		strb	r3, [r7, #23]
 400 005c 0AE0     		b	.L31
 401              	.L32:
 360:../Generated_Code/CDC1.c ****       if (Rx1_Put(dp_rcv->data_ptr[idx])!=ERR_OK) {
 402              		.loc 1 360 0
 403 005e 3B69     		ldr	r3, [r7, #16]
 404 0060 1A68     		ldr	r2, [r3]
 405 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 406 0064 1344     		add	r3, r3, r2
 407 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0068 1846     		mov	r0, r3
 409 006a FFF7FEFF 		bl	Rx1_Put
 359:../Generated_Code/CDC1.c ****     for(idx = 0; idx<BytesToBeCopied ; idx++) {
 410              		.loc 1 359 0
 411 006e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 412 0070 0133     		adds	r3, r3, #1
 413 0072 FB75     		strb	r3, [r7, #23]
 414              	.L31:
 359:../Generated_Code/CDC1.c ****     for(idx = 0; idx<BytesToBeCopied ; idx++) {
 415              		.loc 1 359 0 is_stmt 0 discriminator 1
 416 0074 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 417 0076 9BB2     		uxth	r3, r3
 418 0078 FA89     		ldrh	r2, [r7, #14]
 419 007a 9A42     		cmp	r2, r3
 420 007c EFD8     		bhi	.L32
 361:../Generated_Code/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 362:../Generated_Code/CDC1.c ****            Otherwise not much we could do here, so we are loosing byte here.
 363:../Generated_Code/CDC1.c ****          */
 364:../Generated_Code/CDC1.c ****         /* Enable OnError() event so this event will be called here */
 365:../Generated_Code/CDC1.c ****       }
 366:../Generated_Code/CDC1.c ****     }
 367:../Generated_Code/CDC1.c ****     (void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, NULL, 0); /* see http://eprints.utar
 421              		.loc 1 367 0 is_stmt 1
 422 007e 0020     		movs	r0, #0
 423 0080 0221     		movs	r1, #2
 424 0082 0022     		movs	r2, #0
 425 0084 0023     		movs	r3, #0
 426 0086 FFF7FEFF 		bl	_usb_device_recv_data
 427              	.LBE2:
 352:../Generated_Code/CDC1.c ****   } else if ((event_type==USB_APP_DATA_RECEIVED) && (start_transactions==TRUE)) {
 428              		.loc 1 352 0
 429 008a 14E0     		b	.L26
 430              	.L30:
 368:../Generated_Code/CDC1.c ****   } else if ((event_type==USB_APP_SEND_COMPLETE) && (start_transactions==TRUE)) {
 431              		.loc 1 368 0
 432 008c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 433 008e 032B     		cmp	r3, #3
 434 0090 08D1     		bne	.L33
 435              		.loc 1 368 0 is_stmt 0 discriminator 1
 436 0092 0B4B     		ldr	r3, .L34+4
 437 0094 1B78     		ldrb	r3, [r3]
 438 0096 DBB2     		uxtb	r3, r3
 439 0098 012B     		cmp	r3, #1
 440 009a 03D1     		bne	.L33
 369:../Generated_Code/CDC1.c ****     transactionOngoing = FALSE;
 441              		.loc 1 369 0 is_stmt 1
 442 009c 094B     		ldr	r3, .L34+8
 443 009e 0022     		movs	r2, #0
 444 00a0 1A70     		strb	r2, [r3]
 445 00a2 08E0     		b	.L26
 446              	.L33:
 370:../Generated_Code/CDC1.c ****     /* Previous Send is complete. Queue next receive */
 371:../Generated_Code/CDC1.c **** #if HIGH_SPEED_DEVICE
 372:../Generated_Code/CDC1.c ****     //(void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, g_cdcBuffer, 0);
 373:../Generated_Code/CDC1.c **** #else
 374:../Generated_Code/CDC1.c ****     //(void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, NULL, 0);
 375:../Generated_Code/CDC1.c **** #endif
 376:../Generated_Code/CDC1.c ****   } else if (event_type == USB_APP_ERROR) { /* detach? */
 447              		.loc 1 376 0
 448 00a4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 449 00a6 052B     		cmp	r3, #5
 450 00a8 05D1     		bne	.L26
 377:../Generated_Code/CDC1.c ****     start_app = FALSE;
 451              		.loc 1 377 0
 452 00aa 044B     		ldr	r3, .L34
 453 00ac 0022     		movs	r2, #0
 454 00ae 1A70     		strb	r2, [r3]
 378:../Generated_Code/CDC1.c ****     start_transactions = FALSE;
 455              		.loc 1 378 0
 456 00b0 034B     		ldr	r3, .L34+4
 457 00b2 0022     		movs	r2, #0
 458 00b4 1A70     		strb	r2, [r3]
 459              	.L26:
 379:../Generated_Code/CDC1.c ****   }
 380:../Generated_Code/CDC1.c **** }
 460              		.loc 1 380 0
 461 00b6 1837     		adds	r7, r7, #24
 462 00b8 BD46     		mov	sp, r7
 463              		@ sp needed
 464 00ba 80BD     		pop	{r7, pc}
 465              	.L35:
 466              		.align	2
 467              	.L34:
 468 00bc 00000000 		.word	start_app
 469 00c0 00000000 		.word	start_transactions
 470 00c4 00000000 		.word	transactionOngoing
 471              		.cfi_endproc
 472              	.LFE5:
 474              		.section	.text.CDC1_Notify_Callback,"ax",%progbits
 475              		.align	2
 476              		.global	CDC1_Notify_Callback
 477              		.thumb
 478              		.thumb_func
 480              	CDC1_Notify_Callback:
 481              	.LFB6:
 381:../Generated_Code/CDC1.c **** 
 382:../Generated_Code/CDC1.c **** /*
 383:../Generated_Code/CDC1.c **** ** ===================================================================
 384:../Generated_Code/CDC1.c **** **     Method      :  CDC1_Notify_Callback (component FSL_USB_CDC_Device)
 385:../Generated_Code/CDC1.c **** **     Description :
 386:../Generated_Code/CDC1.c **** **         Method to handle PSTN Sub Class callbacks
 387:../Generated_Code/CDC1.c **** **     Parameters  :
 388:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 389:../Generated_Code/CDC1.c **** **         controller_ID   - controller ID
 390:../Generated_Code/CDC1.c **** **         event_type      - value of the event
 391:../Generated_Code/CDC1.c **** **         val             - 
 392:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 393:../Generated_Code/CDC1.c **** ** ===================================================================
 394:../Generated_Code/CDC1.c **** */
 395:../Generated_Code/CDC1.c **** void CDC1_Notify_Callback(uint8_t controller_ID, uint8_t event_type, void *val)
 396:../Generated_Code/CDC1.c **** {
 482              		.loc 1 396 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 0B46     		mov	r3, r1
 495 0008 3A60     		str	r2, [r7]
 496 000a 0246     		mov	r2, r0
 497 000c FA71     		strb	r2, [r7, #7]
 498 000e BB71     		strb	r3, [r7, #6]
 397:../Generated_Code/CDC1.c ****   UNUSED(controller_ID);
 398:../Generated_Code/CDC1.c ****   UNUSED(val);
 399:../Generated_Code/CDC1.c ****   if (start_app == TRUE) {
 499              		.loc 1 399 0
 500 0010 0C4B     		ldr	r3, .L39
 501 0012 1B78     		ldrb	r3, [r3]
 502 0014 DBB2     		uxtb	r3, r3
 503 0016 012B     		cmp	r3, #1
 504 0018 0CD1     		bne	.L37
 400:../Generated_Code/CDC1.c ****     if(event_type == USB_APP_CDC_CARRIER_ACTIVATED) {
 505              		.loc 1 400 0
 506 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 507 001c 222B     		cmp	r3, #34
 508 001e 03D1     		bne	.L38
 401:../Generated_Code/CDC1.c ****       start_transactions = TRUE;
 509              		.loc 1 401 0
 510 0020 094B     		ldr	r3, .L39+4
 511 0022 0122     		movs	r2, #1
 512 0024 1A70     		strb	r2, [r3]
 513 0026 05E0     		b	.L37
 514              	.L38:
 402:../Generated_Code/CDC1.c ****     } else if(event_type == USB_APP_CDC_CARRIER_DEACTIVATED) {
 515              		.loc 1 402 0
 516 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 517 002a 212B     		cmp	r3, #33
 518 002c 02D1     		bne	.L37
 403:../Generated_Code/CDC1.c ****       start_transactions = FALSE;
 519              		.loc 1 403 0
 520 002e 064B     		ldr	r3, .L39+4
 521 0030 0022     		movs	r2, #0
 522 0032 1A70     		strb	r2, [r3]
 523              	.L37:
 404:../Generated_Code/CDC1.c ****     }
 405:../Generated_Code/CDC1.c ****   }
 406:../Generated_Code/CDC1.c **** #if 1 /* not needed any more? see https://community.freescale.com/message/605537?et=watches.email.t
 407:../Generated_Code/CDC1.c ****   start_transactions = TRUE; /* ??? see http://forums.freescale.com/t5/Freescale-MQX-trade-USB-Host
 524              		.loc 1 407 0
 525 0034 044B     		ldr	r3, .L39+4
 526 0036 0122     		movs	r2, #1
 527 0038 1A70     		strb	r2, [r3]
 408:../Generated_Code/CDC1.c **** #endif
 409:../Generated_Code/CDC1.c **** }
 528              		.loc 1 409 0
 529 003a 0C37     		adds	r7, r7, #12
 530 003c BD46     		mov	sp, r7
 531              		@ sp needed
 532 003e 5DF8047B 		ldr	r7, [sp], #4
 533 0042 7047     		bx	lr
 534              	.L40:
 535              		.align	2
 536              	.L39:
 537 0044 00000000 		.word	start_app
 538 0048 00000000 		.word	start_transactions
 539              		.cfi_endproc
 540              	.LFE6:
 542              		.section	.text.CDC1_RunUsbEngine,"ax",%progbits
 543              		.align	2
 544              		.global	CDC1_RunUsbEngine
 545              		.thumb
 546              		.thumb_func
 548              	CDC1_RunUsbEngine:
 549              	.LFB7:
 410:../Generated_Code/CDC1.c **** 
 411:../Generated_Code/CDC1.c **** /*
 412:../Generated_Code/CDC1.c **** ** ===================================================================
 413:../Generated_Code/CDC1.c **** **     Method      :  CDC1_RunUsbEngine (component FSL_USB_CDC_Device)
 414:../Generated_Code/CDC1.c **** **
 415:../Generated_Code/CDC1.c **** **     Description :
 416:../Generated_Code/CDC1.c **** **         Runs the USB polling engine
 417:../Generated_Code/CDC1.c **** **         This method is internal. It is used by Processor Expert only.
 418:../Generated_Code/CDC1.c **** ** ===================================================================
 419:../Generated_Code/CDC1.c **** */
 420:../Generated_Code/CDC1.c **** void CDC1_RunUsbEngine(void)
 421:../Generated_Code/CDC1.c **** {
 550              		.loc 1 421 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555 0000 80B4     		push	{r7}
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 7, -4
 558 0002 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 422:../Generated_Code/CDC1.c ****   /* not needed */
 423:../Generated_Code/CDC1.c **** }
 560              		.loc 1 423 0
 561 0004 BD46     		mov	sp, r7
 562              		@ sp needed
 563 0006 5DF8047B 		ldr	r7, [sp], #4
 564 000a 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE7:
 568              		.section	.text.CDC1_SendDataBlock,"ax",%progbits
 569              		.align	2
 570              		.global	CDC1_SendDataBlock
 571              		.thumb
 572              		.thumb_func
 574              	CDC1_SendDataBlock:
 575              	.LFB8:
 424:../Generated_Code/CDC1.c **** 
 425:../Generated_Code/CDC1.c **** /*
 426:../Generated_Code/CDC1.c **** ** ===================================================================
 427:../Generated_Code/CDC1.c **** **     Method      :  CDC1_SendDataBlock (component FSL_USB_CDC_Device)
 428:../Generated_Code/CDC1.c **** **
 429:../Generated_Code/CDC1.c **** **     Description :
 430:../Generated_Code/CDC1.c **** **         Sends a USB data block
 431:../Generated_Code/CDC1.c **** **         This method is internal. It is used by Processor Expert only.
 432:../Generated_Code/CDC1.c **** ** ===================================================================
 433:../Generated_Code/CDC1.c **** */
 434:../Generated_Code/CDC1.c **** uint8_t CDC1_SendDataBlock(uint8_t *data, uint16_t dataSize)
 435:../Generated_Code/CDC1.c **** {
 576              		.loc 1 435 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 16
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 84B0     		sub	sp, sp, #16
 585              		.cfi_def_cfa_offset 24
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 588 0006 7860     		str	r0, [r7, #4]
 589 0008 0B46     		mov	r3, r1
 590 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 436:../Generated_Code/CDC1.c **** #if CDC1_CONFIG_USE_TIMEOUT && CDC1_CONFIG_APP_TASK_TIMEOUT_MS>0
 437:../Generated_Code/CDC1.c ****   TMOUT1_CounterHandle timeout;
 438:../Generated_Code/CDC1.c **** #endif
 439:../Generated_Code/CDC1.c ****   uint8_t res = ERR_OK;
 591              		.loc 1 439 0
 592 000c 0023     		movs	r3, #0
 593 000e FB73     		strb	r3, [r7, #15]
 440:../Generated_Code/CDC1.c **** 
 441:../Generated_Code/CDC1.c ****   transactionOngoing = TRUE;
 594              		.loc 1 441 0
 595 0010 194B     		ldr	r3, .L49
 596 0012 0122     		movs	r2, #1
 597 0014 1A70     		strb	r2, [r3]
 442:../Generated_Code/CDC1.c ****   if (USB_Class_CDC_Interface_DIC_Send_Data(CONTROLLER_ID, data, dataSize)!=USB_OK) {
 598              		.loc 1 442 0
 599 0016 7B88     		ldrh	r3, [r7, #2]
 600 0018 0020     		movs	r0, #0
 601 001a 0121     		movs	r1, #1
 602 001c 7A68     		ldr	r2, [r7, #4]
 603 001e FFF7FEFF 		bl	USB_Class_CDC_Send_Data
 604 0022 0346     		mov	r3, r0
 605 0024 002B     		cmp	r3, #0
 606 0026 04D0     		beq	.L43
 443:../Generated_Code/CDC1.c ****     transactionOngoing = FALSE;
 607              		.loc 1 443 0
 608 0028 134B     		ldr	r3, .L49
 609 002a 0022     		movs	r2, #0
 610 002c 1A70     		strb	r2, [r3]
 444:../Generated_Code/CDC1.c ****     return ERR_FAULT;
 611              		.loc 1 444 0
 612 002e 1223     		movs	r3, #18
 613 0030 1EE0     		b	.L44
 614              	.L43:
 445:../Generated_Code/CDC1.c ****   }
 446:../Generated_Code/CDC1.c ****   /* wait for transaction finish */
 447:../Generated_Code/CDC1.c **** #if CDC1_CONFIG_USE_TIMEOUT && CDC1_CONFIG_APP_TASK_TIMEOUT_MS>0
 448:../Generated_Code/CDC1.c ****   timeout = TMOUT1_GetCounter(CDC1_CONFIG_APP_TASK_TIMEOUT_MS/TMOUT1_TICK_PERIOD_MS); /* set up tim
 615              		.loc 1 448 0
 616 0032 0120     		movs	r0, #1
 617 0034 FFF7FEFF 		bl	TMOUT1_GetCounter
 618 0038 0346     		mov	r3, r0
 619 003a BB73     		strb	r3, [r7, #14]
 449:../Generated_Code/CDC1.c **** #endif
 450:../Generated_Code/CDC1.c ****   while(transactionOngoing) { /* wait until transaction is finished */
 620              		.loc 1 450 0
 621 003c 0EE0     		b	.L45
 622              	.L48:
 451:../Generated_Code/CDC1.c ****     /*lint -save -e522 function lacks side-effects */
 452:../Generated_Code/CDC1.c ****     CDC1_RunUsbEngine();
 623              		.loc 1 452 0
 624 003e FFF7FEFF 		bl	CDC1_RunUsbEngine
 453:../Generated_Code/CDC1.c ****     /*lint -restore */
 454:../Generated_Code/CDC1.c **** #if CDC1_CONFIG_USE_TIMEOUT && CDC1_CONFIG_APP_TASK_TIMEOUT_MS>0
 455:../Generated_Code/CDC1.c ****     if (TMOUT1_CounterExpired(timeout)) {
 625              		.loc 1 455 0
 626 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 627 0044 1846     		mov	r0, r3
 628 0046 FFF7FEFF 		bl	TMOUT1_CounterExpired
 629 004a 0346     		mov	r3, r0
 630 004c 002B     		cmp	r3, #0
 631 004e 02D0     		beq	.L46
 456:../Generated_Code/CDC1.c ****       res = ERR_FAILED;
 632              		.loc 1 456 0
 633 0050 1B23     		movs	r3, #27
 634 0052 FB73     		strb	r3, [r7, #15]
 457:../Generated_Code/CDC1.c ****       break;
 635              		.loc 1 457 0
 636 0054 07E0     		b	.L47
 637              	.L46:
 458:../Generated_Code/CDC1.c ****     }
 459:../Generated_Code/CDC1.c **** #endif
 460:../Generated_Code/CDC1.c ****     WAIT1_WaitOSms(2); /* wait some time */
 638              		.loc 1 460 0
 639 0056 0220     		movs	r0, #2
 640 0058 FFF7FEFF 		bl	WAIT1_Waitms
 641              	.L45:
 450:../Generated_Code/CDC1.c ****   while(transactionOngoing) { /* wait until transaction is finished */
 642              		.loc 1 450 0 discriminator 1
 643 005c 064B     		ldr	r3, .L49
 644 005e 1B78     		ldrb	r3, [r3]
 645 0060 DBB2     		uxtb	r3, r3
 646 0062 002B     		cmp	r3, #0
 647 0064 EBD1     		bne	.L48
 648              	.L47:
 461:../Generated_Code/CDC1.c ****   }
 462:../Generated_Code/CDC1.c **** #if CDC1_CONFIG_USE_TIMEOUT && CDC1_CONFIG_APP_TASK_TIMEOUT_MS>0
 463:../Generated_Code/CDC1.c ****   TMOUT1_LeaveCounter(timeout); /* return timeout counter */
 649              		.loc 1 463 0
 650 0066 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 651 0068 1846     		mov	r0, r3
 652 006a FFF7FEFF 		bl	TMOUT1_LeaveCounter
 464:../Generated_Code/CDC1.c **** #endif
 465:../Generated_Code/CDC1.c ****   return res;
 653              		.loc 1 465 0
 654 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 655              	.L44:
 466:../Generated_Code/CDC1.c **** }
 656              		.loc 1 466 0
 657 0070 1846     		mov	r0, r3
 658 0072 1037     		adds	r7, r7, #16
 659 0074 BD46     		mov	sp, r7
 660              		@ sp needed
 661 0076 80BD     		pop	{r7, pc}
 662              	.L50:
 663              		.align	2
 664              	.L49:
 665 0078 00000000 		.word	transactionOngoing
 666              		.cfi_endproc
 667              	.LFE8:
 669              		.section	.text.CDC1_App_Task,"ax",%progbits
 670              		.align	2
 671              		.global	CDC1_App_Task
 672              		.thumb
 673              		.thumb_func
 675              	CDC1_App_Task:
 676              	.LFB9:
 467:../Generated_Code/CDC1.c **** 
 468:../Generated_Code/CDC1.c **** /*
 469:../Generated_Code/CDC1.c **** ** ===================================================================
 470:../Generated_Code/CDC1.c **** **     Method      :  CDC1_App_Task (component FSL_USB_CDC_Device)
 471:../Generated_Code/CDC1.c **** **     Description :
 472:../Generated_Code/CDC1.c **** **         Application task to be called periodically from the main
 473:../Generated_Code/CDC1.c **** **         task.
 474:../Generated_Code/CDC1.c **** **     Parameters  :
 475:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 476:../Generated_Code/CDC1.c **** **       * txBuf           - Pointer to temporary buffer used to
 477:../Generated_Code/CDC1.c **** **                           transmit data over USB. Should be equal or
 478:../Generated_Code/CDC1.c **** **                           greater than the endpoint buffer size. Data
 479:../Generated_Code/CDC1.c **** **                           will be sent in an asynchronous way, so
 480:../Generated_Code/CDC1.c **** **                           make sure the buffer is *not* on the stack.
 481:../Generated_Code/CDC1.c **** **                           This buffer must be available until the
 482:../Generated_Code/CDC1.c **** **                           next transmission.
 483:../Generated_Code/CDC1.c **** **         txBufSize       - Size of the buffer in bytes
 484:../Generated_Code/CDC1.c **** **     Returns     :
 485:../Generated_Code/CDC1.c **** **         ---             - Error code, returns ERR_OK if USB
 486:../Generated_Code/CDC1.c **** **                           enumeration has been finished, error code
 487:../Generated_Code/CDC1.c **** **                           otherwise.
 488:../Generated_Code/CDC1.c **** ** ===================================================================
 489:../Generated_Code/CDC1.c **** */
 490:../Generated_Code/CDC1.c **** uint8_t CDC1_App_Task(uint8_t *txBuf, size_t txBufSize)
 491:../Generated_Code/CDC1.c **** {
 677              		.loc 1 491 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 84B0     		sub	sp, sp, #16
 686              		.cfi_def_cfa_offset 24
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 690 0008 3960     		str	r1, [r7]
 492:../Generated_Code/CDC1.c ****   size_t i;
 493:../Generated_Code/CDC1.c ****   uint8_t res;
 494:../Generated_Code/CDC1.c **** 
 495:../Generated_Code/CDC1.c ****   /* device is Kinetis K22F120 */
 496:../Generated_Code/CDC1.c ****   /*lint -save -e522 function lacks side-effects */
 497:../Generated_Code/CDC1.c ****   CDC1_RunUsbEngine();
 691              		.loc 1 497 0
 692 000a FFF7FEFF 		bl	CDC1_RunUsbEngine
 498:../Generated_Code/CDC1.c ****   /*lint -restore */
 499:../Generated_Code/CDC1.c ****   /* call the periodic task function */
 500:../Generated_Code/CDC1.c ****   USB_Class_CDC_Periodic_Task();
 693              		.loc 1 500 0
 694 000e FFF7FEFF 		bl	USB_Class_Periodic_Task
 501:../Generated_Code/CDC1.c ****   /* check whether enumeration is complete or not */
 502:../Generated_Code/CDC1.c ****   if ((start_app==TRUE) && (start_transactions==TRUE)) {
 695              		.loc 1 502 0
 696 0012 234B     		ldr	r3, .L59
 697 0014 1B78     		ldrb	r3, [r3]
 698 0016 DBB2     		uxtb	r3, r3
 699 0018 012B     		cmp	r3, #1
 700 001a 3BD1     		bne	.L52
 701              		.loc 1 502 0 is_stmt 0 discriminator 1
 702 001c 214B     		ldr	r3, .L59+4
 703 001e 1B78     		ldrb	r3, [r3]
 704 0020 DBB2     		uxtb	r3, r3
 705 0022 012B     		cmp	r3, #1
 706 0024 36D1     		bne	.L52
 503:../Generated_Code/CDC1.c ****     if (Tx1_NofElements()!=0) {
 707              		.loc 1 503 0 is_stmt 1
 708 0026 FFF7FEFF 		bl	Tx1_NofElements
 709 002a 0346     		mov	r3, r0
 710 002c 002B     		cmp	r3, #0
 711 002e 2FD0     		beq	.L53
 504:../Generated_Code/CDC1.c ****       i = 0;
 712              		.loc 1 504 0
 713 0030 0023     		movs	r3, #0
 714 0032 FB60     		str	r3, [r7, #12]
 505:../Generated_Code/CDC1.c ****       while(i<txBufSize && Tx1_Get(&txBuf[i])==ERR_OK) {
 715              		.loc 1 505 0
 716 0034 02E0     		b	.L54
 717              	.L56:
 506:../Generated_Code/CDC1.c ****         i++;
 718              		.loc 1 506 0
 719 0036 FB68     		ldr	r3, [r7, #12]
 720 0038 0133     		adds	r3, r3, #1
 721 003a FB60     		str	r3, [r7, #12]
 722              	.L54:
 505:../Generated_Code/CDC1.c ****       while(i<txBufSize && Tx1_Get(&txBuf[i])==ERR_OK) {
 723              		.loc 1 505 0 discriminator 1
 724 003c FA68     		ldr	r2, [r7, #12]
 725 003e 3B68     		ldr	r3, [r7]
 726 0040 9A42     		cmp	r2, r3
 727 0042 08D2     		bcs	.L55
 505:../Generated_Code/CDC1.c ****       while(i<txBufSize && Tx1_Get(&txBuf[i])==ERR_OK) {
 728              		.loc 1 505 0 is_stmt 0 discriminator 2
 729 0044 7A68     		ldr	r2, [r7, #4]
 730 0046 FB68     		ldr	r3, [r7, #12]
 731 0048 1344     		add	r3, r3, r2
 732 004a 1846     		mov	r0, r3
 733 004c FFF7FEFF 		bl	Tx1_Get
 734 0050 0346     		mov	r3, r0
 735 0052 002B     		cmp	r3, #0
 736 0054 EFD0     		beq	.L56
 737              	.L55:
 507:../Generated_Code/CDC1.c ****       }
 508:../Generated_Code/CDC1.c ****       res = CDC1_SendDataBlock(txBuf, i);
 738              		.loc 1 508 0 is_stmt 1
 739 0056 FB68     		ldr	r3, [r7, #12]
 740 0058 9BB2     		uxth	r3, r3
 741 005a 7868     		ldr	r0, [r7, #4]
 742 005c 1946     		mov	r1, r3
 743 005e FFF7FEFF 		bl	CDC1_SendDataBlock
 744 0062 0346     		mov	r3, r0
 745 0064 FB72     		strb	r3, [r7, #11]
 509:../Generated_Code/CDC1.c ****       if (res!=ERR_OK) {
 746              		.loc 1 509 0
 747 0066 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 748 0068 002B     		cmp	r3, #0
 749 006a 01D0     		beq	.L57
 510:../Generated_Code/CDC1.c ****         return res;
 750              		.loc 1 510 0
 751 006c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 752 006e 12E0     		b	.L58
 753              	.L57:
 511:../Generated_Code/CDC1.c ****       }
 512:../Generated_Code/CDC1.c **** #if 1 /* workaround for problem in USB stack v3.1.1: if last block is 8, 16, 32, 40, 48, ... bytes,
 513:../Generated_Code/CDC1.c ****       if ((i%8)==0) {
 754              		.loc 1 513 0
 755 0070 FB68     		ldr	r3, [r7, #12]
 756 0072 03F00703 		and	r3, r3, #7
 757 0076 002B     		cmp	r3, #0
 758 0078 0AD1     		bne	.L53
 514:../Generated_Code/CDC1.c ****         /* workaround: sending a dummy block of zero bytes */
 515:../Generated_Code/CDC1.c ****         res = CDC1_SendDataBlock(txBuf, 0);
 759              		.loc 1 515 0
 760 007a 7868     		ldr	r0, [r7, #4]
 761 007c 0021     		movs	r1, #0
 762 007e FFF7FEFF 		bl	CDC1_SendDataBlock
 763 0082 0346     		mov	r3, r0
 764 0084 FB72     		strb	r3, [r7, #11]
 516:../Generated_Code/CDC1.c ****         if (res!=ERR_OK) {
 765              		.loc 1 516 0
 766 0086 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 767 0088 002B     		cmp	r3, #0
 768 008a 01D0     		beq	.L53
 517:../Generated_Code/CDC1.c ****           return res;
 769              		.loc 1 517 0
 770 008c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 771 008e 02E0     		b	.L58
 772              	.L53:
 518:../Generated_Code/CDC1.c ****         }
 519:../Generated_Code/CDC1.c ****       }
 520:../Generated_Code/CDC1.c **** #endif
 521:../Generated_Code/CDC1.c ****     } /* if */
 522:../Generated_Code/CDC1.c ****     return ERR_OK;
 773              		.loc 1 522 0
 774 0090 0023     		movs	r3, #0
 775 0092 00E0     		b	.L58
 776              	.L52:
 523:../Generated_Code/CDC1.c ****   } else {
 524:../Generated_Code/CDC1.c ****     return ERR_BUSOFF; /* USB bus not available yet */
 777              		.loc 1 524 0
 778 0094 0C23     		movs	r3, #12
 779              	.L58:
 525:../Generated_Code/CDC1.c ****   }
 526:../Generated_Code/CDC1.c **** }
 780              		.loc 1 526 0
 781 0096 1846     		mov	r0, r3
 782 0098 1037     		adds	r7, r7, #16
 783 009a BD46     		mov	sp, r7
 784              		@ sp needed
 785 009c 80BD     		pop	{r7, pc}
 786              	.L60:
 787 009e 00BF     		.align	2
 788              	.L59:
 789 00a0 00000000 		.word	start_app
 790 00a4 00000000 		.word	start_transactions
 791              		.cfi_endproc
 792              	.LFE9:
 794              		.section	.text.CDC1_Deinit,"ax",%progbits
 795              		.align	2
 796              		.global	CDC1_Deinit
 797              		.thumb
 798              		.thumb_func
 800              	CDC1_Deinit:
 801              	.LFB10:
 527:../Generated_Code/CDC1.c **** 
 528:../Generated_Code/CDC1.c **** /*
 529:../Generated_Code/CDC1.c **** ** ===================================================================
 530:../Generated_Code/CDC1.c **** **     Method      :  CDC1_Deinit (component FSL_USB_CDC_Device)
 531:../Generated_Code/CDC1.c **** **     Description :
 532:../Generated_Code/CDC1.c **** **         Deinitializes the driver
 533:../Generated_Code/CDC1.c **** **     Parameters  : None
 534:../Generated_Code/CDC1.c **** **     Returns     :
 535:../Generated_Code/CDC1.c **** **         ---             - Error code
 536:../Generated_Code/CDC1.c **** ** ===================================================================
 537:../Generated_Code/CDC1.c **** */
 538:../Generated_Code/CDC1.c **** uint8_t CDC1_Deinit(void)
 539:../Generated_Code/CDC1.c **** {
 802              		.loc 1 539 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 540:../Generated_Code/CDC1.c ****   uint_8 err;
 541:../Generated_Code/CDC1.c **** 
 542:../Generated_Code/CDC1.c ****   err = USB_Class_CDC_DeInit(CONTROLLER_ID);
 814              		.loc 1 542 0
 815 0006 0020     		movs	r0, #0
 816 0008 FFF7FEFF 		bl	USB_Class_CDC_DeInit
 817 000c 0346     		mov	r3, r0
 818 000e FB71     		strb	r3, [r7, #7]
 543:../Generated_Code/CDC1.c ****   Rx1_Deinit();
 544:../Generated_Code/CDC1.c ****   Tx1_Deinit();
 545:../Generated_Code/CDC1.c ****   start_app = FALSE;
 819              		.loc 1 545 0
 820 0010 094B     		ldr	r3, .L64
 821 0012 0022     		movs	r2, #0
 822 0014 1A70     		strb	r2, [r3]
 546:../Generated_Code/CDC1.c ****   start_transactions = FALSE;
 823              		.loc 1 546 0
 824 0016 094B     		ldr	r3, .L64+4
 825 0018 0022     		movs	r2, #0
 826 001a 1A70     		strb	r2, [r3]
 547:../Generated_Code/CDC1.c ****   transactionOngoing = FALSE;
 827              		.loc 1 547 0
 828 001c 084B     		ldr	r3, .L64+8
 829 001e 0022     		movs	r2, #0
 830 0020 1A70     		strb	r2, [r3]
 548:../Generated_Code/CDC1.c ****   if(err != USB_OK) {
 831              		.loc 1 548 0
 832 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 833 0024 002B     		cmp	r3, #0
 834 0026 01D0     		beq	.L62
 549:../Generated_Code/CDC1.c ****     /* Error deinitializing USB-CDC Class */
 550:../Generated_Code/CDC1.c ****     return ERR_FAILED;
 835              		.loc 1 550 0
 836 0028 1B23     		movs	r3, #27
 837 002a 00E0     		b	.L63
 838              	.L62:
 551:../Generated_Code/CDC1.c ****   }
 552:../Generated_Code/CDC1.c ****   return ERR_OK;
 839              		.loc 1 552 0
 840 002c 0023     		movs	r3, #0
 841              	.L63:
 553:../Generated_Code/CDC1.c **** }
 842              		.loc 1 553 0
 843 002e 1846     		mov	r0, r3
 844 0030 0837     		adds	r7, r7, #8
 845 0032 BD46     		mov	sp, r7
 846              		@ sp needed
 847 0034 80BD     		pop	{r7, pc}
 848              	.L65:
 849 0036 00BF     		.align	2
 850              	.L64:
 851 0038 00000000 		.word	start_app
 852 003c 00000000 		.word	start_transactions
 853 0040 00000000 		.word	transactionOngoing
 854              		.cfi_endproc
 855              	.LFE10:
 857              		.section	.text.CDC1_Init,"ax",%progbits
 858              		.align	2
 859              		.global	CDC1_Init
 860              		.thumb
 861              		.thumb_func
 863              	CDC1_Init:
 864              	.LFB11:
 554:../Generated_Code/CDC1.c **** 
 555:../Generated_Code/CDC1.c **** /*
 556:../Generated_Code/CDC1.c **** ** ===================================================================
 557:../Generated_Code/CDC1.c **** **     Method      :  CDC1_Init (component FSL_USB_CDC_Device)
 558:../Generated_Code/CDC1.c **** **     Description :
 559:../Generated_Code/CDC1.c **** **         Initializes the driver
 560:../Generated_Code/CDC1.c **** **     Parameters  : None
 561:../Generated_Code/CDC1.c **** **     Returns     :
 562:../Generated_Code/CDC1.c **** **         ---             - Error code
 563:../Generated_Code/CDC1.c **** ** ===================================================================
 564:../Generated_Code/CDC1.c **** */
 565:../Generated_Code/CDC1.c **** uint8_t CDC1_Init(void)
 566:../Generated_Code/CDC1.c **** {
 865              		.loc 1 566 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 8
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869 0000 80B5     		push	{r7, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 84B0     		sub	sp, sp, #16
 874              		.cfi_def_cfa_offset 24
 875 0004 02AF     		add	r7, sp, #8
 876              		.cfi_def_cfa 7, 16
 567:../Generated_Code/CDC1.c ****   uint_8 err;
 568:../Generated_Code/CDC1.c **** 
 569:../Generated_Code/CDC1.c ****   start_app = FALSE;
 877              		.loc 1 569 0
 878 0006 104B     		ldr	r3, .L69
 879 0008 0022     		movs	r2, #0
 880 000a 1A70     		strb	r2, [r3]
 570:../Generated_Code/CDC1.c ****   start_transactions = FALSE;
 881              		.loc 1 570 0
 882 000c 0F4B     		ldr	r3, .L69+4
 883 000e 0022     		movs	r2, #0
 884 0010 1A70     		strb	r2, [r3]
 571:../Generated_Code/CDC1.c ****   transactionOngoing = FALSE;
 885              		.loc 1 571 0
 886 0012 0F4B     		ldr	r3, .L69+8
 887 0014 0022     		movs	r2, #0
 888 0016 1A70     		strb	r2, [r3]
 572:../Generated_Code/CDC1.c ****   Rx1_Init();
 889              		.loc 1 572 0
 890 0018 FFF7FEFF 		bl	Rx1_Init
 573:../Generated_Code/CDC1.c ****   Tx1_Init();
 891              		.loc 1 573 0
 892 001c FFF7FEFF 		bl	Tx1_Init
 574:../Generated_Code/CDC1.c ****   err = USB_Class_CDC_Init(CONTROLLER_ID, CDC1_App_Callback, NULL, CDC1_Notify_Callback, TRUE);
 893              		.loc 1 574 0
 894 0020 0123     		movs	r3, #1
 895 0022 0093     		str	r3, [sp]
 896 0024 0020     		movs	r0, #0
 897 0026 0B49     		ldr	r1, .L69+12
 898 0028 0022     		movs	r2, #0
 899 002a 0B4B     		ldr	r3, .L69+16
 900 002c FFF7FEFF 		bl	USB_Class_CDC_Init
 901 0030 0346     		mov	r3, r0
 902 0032 FB71     		strb	r3, [r7, #7]
 575:../Generated_Code/CDC1.c ****   if(err != USB_OK) {
 903              		.loc 1 575 0
 904 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 905 0036 002B     		cmp	r3, #0
 906 0038 01D0     		beq	.L67
 576:../Generated_Code/CDC1.c ****     /* Error initializing USB-CDC Class */
 577:../Generated_Code/CDC1.c ****     return ERR_FAILED;
 907              		.loc 1 577 0
 908 003a 1B23     		movs	r3, #27
 909 003c 00E0     		b	.L68
 910              	.L67:
 578:../Generated_Code/CDC1.c ****   }
 579:../Generated_Code/CDC1.c ****   return ERR_OK;
 911              		.loc 1 579 0
 912 003e 0023     		movs	r3, #0
 913              	.L68:
 580:../Generated_Code/CDC1.c **** }
 914              		.loc 1 580 0
 915 0040 1846     		mov	r0, r3
 916 0042 0837     		adds	r7, r7, #8
 917 0044 BD46     		mov	sp, r7
 918              		@ sp needed
 919 0046 80BD     		pop	{r7, pc}
 920              	.L70:
 921              		.align	2
 922              	.L69:
 923 0048 00000000 		.word	start_app
 924 004c 00000000 		.word	start_transactions
 925 0050 00000000 		.word	transactionOngoing
 926 0054 00000000 		.word	CDC1_App_Callback
 927 0058 00000000 		.word	CDC1_Notify_Callback
 928              		.cfi_endproc
 929              	.LFE11:
 931              		.section	.text.CDC1_PutBufferChecked,"ax",%progbits
 932              		.align	2
 933              		.global	CDC1_PutBufferChecked
 934              		.thumb
 935              		.thumb_func
 937              	CDC1_PutBufferChecked:
 938              	.LFB12:
 581:../Generated_Code/CDC1.c **** 
 582:../Generated_Code/CDC1.c **** /*
 583:../Generated_Code/CDC1.c **** ** ===================================================================
 584:../Generated_Code/CDC1.c **** **     Method      :  CDC1_PutBufferChecked (component FSL_USB_CDC_Device)
 585:../Generated_Code/CDC1.c **** **     Description :
 586:../Generated_Code/CDC1.c **** **         Puts a data block into the output buffer, but does not send
 587:../Generated_Code/CDC1.c **** **         it. If there is not enough size available, then ERR_TXFULL
 588:../Generated_Code/CDC1.c **** **         is returned, otherwise ERR_OK. The application then needs to
 589:../Generated_Code/CDC1.c **** **         call USB_App_Callback() to actually send the buffer.
 590:../Generated_Code/CDC1.c **** **     Parameters  :
 591:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 592:../Generated_Code/CDC1.c **** **       * buf             - Pointer to buffer to be sent
 593:../Generated_Code/CDC1.c **** **         bufsize         - Buffer size in bytes
 594:../Generated_Code/CDC1.c **** **     Returns     :
 595:../Generated_Code/CDC1.c **** **         ---             - Error code
 596:../Generated_Code/CDC1.c **** ** ===================================================================
 597:../Generated_Code/CDC1.c **** */
 598:../Generated_Code/CDC1.c **** uint8_t CDC1_PutBufferChecked(uint8_t *buf, size_t bufSize)
 599:../Generated_Code/CDC1.c **** {
 939              		.loc 1 599 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 16
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 84B0     		sub	sp, sp, #16
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 952 0008 3960     		str	r1, [r7]
 600:../Generated_Code/CDC1.c ****   uint8_t res;
 601:../Generated_Code/CDC1.c **** 
 602:../Generated_Code/CDC1.c ****   if(bufSize>CDC1_GetFreeInTxBuf()) { /* no room at the Inn... */
 953              		.loc 1 602 0
 954 000a FFF7FEFF 		bl	Tx1_NofFreeElements
 955 000e 0346     		mov	r3, r0
 956 0010 1A46     		mov	r2, r3
 957 0012 3B68     		ldr	r3, [r7]
 958 0014 9A42     		cmp	r2, r3
 959 0016 02D2     		bcs	.L72
 603:../Generated_Code/CDC1.c ****     res = ERR_TXFULL;
 960              		.loc 1 603 0
 961 0018 0B23     		movs	r3, #11
 962 001a FB73     		strb	r3, [r7, #15]
 963 001c 15E0     		b	.L73
 964              	.L72:
 604:../Generated_Code/CDC1.c ****   } else {
 605:../Generated_Code/CDC1.c ****     res = ERR_OK;
 965              		.loc 1 605 0
 966 001e 0023     		movs	r3, #0
 967 0020 FB73     		strb	r3, [r7, #15]
 606:../Generated_Code/CDC1.c ****     while(bufSize>0 && res==ERR_OK) {
 968              		.loc 1 606 0
 969 0022 0CE0     		b	.L74
 970              	.L75:
 607:../Generated_Code/CDC1.c ****       res = Tx1_Put(*buf);
 971              		.loc 1 607 0
 972 0024 7B68     		ldr	r3, [r7, #4]
 973 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 0028 1846     		mov	r0, r3
 975 002a FFF7FEFF 		bl	Tx1_Put
 976 002e 0346     		mov	r3, r0
 977 0030 FB73     		strb	r3, [r7, #15]
 608:../Generated_Code/CDC1.c ****       bufSize--;
 978              		.loc 1 608 0
 979 0032 3B68     		ldr	r3, [r7]
 980 0034 013B     		subs	r3, r3, #1
 981 0036 3B60     		str	r3, [r7]
 609:../Generated_Code/CDC1.c ****       buf++;
 982              		.loc 1 609 0
 983 0038 7B68     		ldr	r3, [r7, #4]
 984 003a 0133     		adds	r3, r3, #1
 985 003c 7B60     		str	r3, [r7, #4]
 986              	.L74:
 606:../Generated_Code/CDC1.c ****     while(bufSize>0 && res==ERR_OK) {
 987              		.loc 1 606 0 discriminator 1
 988 003e 3B68     		ldr	r3, [r7]
 989 0040 002B     		cmp	r3, #0
 990 0042 02D0     		beq	.L73
 606:../Generated_Code/CDC1.c ****     while(bufSize>0 && res==ERR_OK) {
 991              		.loc 1 606 0 is_stmt 0 discriminator 2
 992 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 993 0046 002B     		cmp	r3, #0
 994 0048 ECD0     		beq	.L75
 995              	.L73:
 610:../Generated_Code/CDC1.c ****     }
 611:../Generated_Code/CDC1.c ****   }
 612:../Generated_Code/CDC1.c ****   return res;
 996              		.loc 1 612 0 is_stmt 1
 997 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 613:../Generated_Code/CDC1.c **** }
 998              		.loc 1 613 0
 999 004c 1846     		mov	r0, r3
 1000 004e 1037     		adds	r7, r7, #16
 1001 0050 BD46     		mov	sp, r7
 1002              		@ sp needed
 1003 0052 80BD     		pop	{r7, pc}
 1004              		.cfi_endproc
 1005              	.LFE12:
 1007              		.section	.text.CDC1_StdIOKeyPressed,"ax",%progbits
 1008              		.align	2
 1009              		.global	CDC1_StdIOKeyPressed
 1010              		.thumb
 1011              		.thumb_func
 1013              	CDC1_StdIOKeyPressed:
 1014              	.LFB13:
 614:../Generated_Code/CDC1.c **** 
 615:../Generated_Code/CDC1.c **** /*
 616:../Generated_Code/CDC1.c **** ** ===================================================================
 617:../Generated_Code/CDC1.c **** **     Method      :  CDC1_ClearRxBuffer (component FSL_USB_CDC_Device)
 618:../Generated_Code/CDC1.c **** **     Description :
 619:../Generated_Code/CDC1.c **** **         Clears the receiver buffer content
 620:../Generated_Code/CDC1.c **** **     Parameters  : None
 621:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 622:../Generated_Code/CDC1.c **** ** ===================================================================
 623:../Generated_Code/CDC1.c **** */
 624:../Generated_Code/CDC1.c **** /**
 625:../Generated_Code/CDC1.c **** void CDC1_ClearRxBuffer(void)
 626:../Generated_Code/CDC1.c **** {
 627:../Generated_Code/CDC1.c ****   Implemented as macro in the header file
 628:../Generated_Code/CDC1.c **** }
 629:../Generated_Code/CDC1.c **** */
 630:../Generated_Code/CDC1.c **** 
 631:../Generated_Code/CDC1.c **** /*
 632:../Generated_Code/CDC1.c **** ** ===================================================================
 633:../Generated_Code/CDC1.c **** **     Method      :  CDC1_ClearTxBuffer (component FSL_USB_CDC_Device)
 634:../Generated_Code/CDC1.c **** **     Description :
 635:../Generated_Code/CDC1.c **** **         Clears the transmit buffer content
 636:../Generated_Code/CDC1.c **** **     Parameters  : None
 637:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 638:../Generated_Code/CDC1.c **** ** ===================================================================
 639:../Generated_Code/CDC1.c **** */
 640:../Generated_Code/CDC1.c **** /**
 641:../Generated_Code/CDC1.c **** void CDC1_ClearTxBuffer(void)
 642:../Generated_Code/CDC1.c **** {
 643:../Generated_Code/CDC1.c ****   Implemented as macro in the header file
 644:../Generated_Code/CDC1.c **** }
 645:../Generated_Code/CDC1.c **** */
 646:../Generated_Code/CDC1.c **** 
 647:../Generated_Code/CDC1.c **** /*
 648:../Generated_Code/CDC1.c **** ** ===================================================================
 649:../Generated_Code/CDC1.c **** **     Method      :  CDC1_StdIOKeyPressed (component FSL_USB_CDC_Device)
 650:../Generated_Code/CDC1.c **** **     Description :
 651:../Generated_Code/CDC1.c **** **         StdIO handler for Shell
 652:../Generated_Code/CDC1.c **** **     Parameters  : None
 653:../Generated_Code/CDC1.c **** **     Returns     :
 654:../Generated_Code/CDC1.c **** **         ---             - True if there are characters in the
 655:../Generated_Code/CDC1.c **** **                           input/RX buffer
 656:../Generated_Code/CDC1.c **** ** ===================================================================
 657:../Generated_Code/CDC1.c **** */
 658:../Generated_Code/CDC1.c **** bool CDC1_StdIOKeyPressed(void)
 659:../Generated_Code/CDC1.c **** {
 1015              		.loc 1 659 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019 0000 80B5     		push	{r7, lr}
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 7, -8
 1022              		.cfi_offset 14, -4
 1023 0002 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 660:../Generated_Code/CDC1.c ****   return (bool)((CDC1_GetCharsInRxBuf()==0U) ? FALSE : TRUE); /* true if there are characters in re
 1025              		.loc 1 660 0
 1026 0004 FFF7FEFF 		bl	CDC1_GetCharsInRxBuf
 1027 0008 0346     		mov	r3, r0
 1028 000a 002B     		cmp	r3, #0
 1029 000c 0CBF     		ite	eq
 1030 000e 0023     		moveq	r3, #0
 1031 0010 0123     		movne	r3, #1
 1032 0012 DBB2     		uxtb	r3, r3
 1033 0014 DBB2     		uxtb	r3, r3
 661:../Generated_Code/CDC1.c **** }
 1034              		.loc 1 661 0
 1035 0016 1846     		mov	r0, r3
 1036 0018 80BD     		pop	{r7, pc}
 1037              		.cfi_endproc
 1038              	.LFE13:
 1040 001a 00BF     		.section	.text.CDC1_StdIOReadChar,"ax",%progbits
 1041              		.align	2
 1042              		.global	CDC1_StdIOReadChar
 1043              		.thumb
 1044              		.thumb_func
 1046              	CDC1_StdIOReadChar:
 1047              	.LFB14:
 662:../Generated_Code/CDC1.c **** 
 663:../Generated_Code/CDC1.c **** /*
 664:../Generated_Code/CDC1.c **** ** ===================================================================
 665:../Generated_Code/CDC1.c **** **     Method      :  CDC1_StdIOReadChar (component FSL_USB_CDC_Device)
 666:../Generated_Code/CDC1.c **** **     Description :
 667:../Generated_Code/CDC1.c **** **         StdIO Handler for reading a character. It returns a zero
 668:../Generated_Code/CDC1.c **** **         byte if there is no character.
 669:../Generated_Code/CDC1.c **** **     Parameters  :
 670:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 671:../Generated_Code/CDC1.c **** **       * c               - Pointer to where to store the received
 672:../Generated_Code/CDC1.c **** **                           character
 673:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 674:../Generated_Code/CDC1.c **** ** ===================================================================
 675:../Generated_Code/CDC1.c **** */
 676:../Generated_Code/CDC1.c **** void CDC1_StdIOReadChar(uint8_t *c)
 677:../Generated_Code/CDC1.c **** {
 1048              		.loc 1 677 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 8
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 80B5     		push	{r7, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 7, -8
 1055              		.cfi_offset 14, -4
 1056 0002 82B0     		sub	sp, sp, #8
 1057              		.cfi_def_cfa_offset 16
 1058 0004 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 1060 0006 7860     		str	r0, [r7, #4]
 678:../Generated_Code/CDC1.c ****   if (CDC1_RecvChar((uint8_t *)c) != ERR_OK) {
 1061              		.loc 1 678 0
 1062 0008 7868     		ldr	r0, [r7, #4]
 1063 000a FFF7FEFF 		bl	CDC1_RecvChar
 1064 000e 0346     		mov	r3, r0
 1065 0010 002B     		cmp	r3, #0
 1066 0012 02D0     		beq	.L79
 679:../Generated_Code/CDC1.c ****     /* failed to receive character: return a zero character */
 680:../Generated_Code/CDC1.c ****     *c = '\0';
 1067              		.loc 1 680 0
 1068 0014 7B68     		ldr	r3, [r7, #4]
 1069 0016 0022     		movs	r2, #0
 1070 0018 1A70     		strb	r2, [r3]
 1071              	.L79:
 681:../Generated_Code/CDC1.c ****   }
 682:../Generated_Code/CDC1.c **** }
 1072              		.loc 1 682 0
 1073 001a 0837     		adds	r7, r7, #8
 1074 001c BD46     		mov	sp, r7
 1075              		@ sp needed
 1076 001e 80BD     		pop	{r7, pc}
 1077              		.cfi_endproc
 1078              	.LFE14:
 1080              		.section	.text.CDC1_StdIOSendChar,"ax",%progbits
 1081              		.align	2
 1082              		.global	CDC1_StdIOSendChar
 1083              		.thumb
 1084              		.thumb_func
 1086              	CDC1_StdIOSendChar:
 1087              	.LFB15:
 683:../Generated_Code/CDC1.c **** 
 684:../Generated_Code/CDC1.c **** /*
 685:../Generated_Code/CDC1.c **** ** ===================================================================
 686:../Generated_Code/CDC1.c **** **     Method      :  CDC1_StdIOSendChar (component FSL_USB_CDC_Device)
 687:../Generated_Code/CDC1.c **** **     Description :
 688:../Generated_Code/CDC1.c **** **         StdIO handler to sends a character.
 689:../Generated_Code/CDC1.c **** **     Parameters  :
 690:../Generated_Code/CDC1.c **** **         NAME            - DESCRIPTION
 691:../Generated_Code/CDC1.c **** **         ch              - Character to send.
 692:../Generated_Code/CDC1.c **** **     Returns     : Nothing
 693:../Generated_Code/CDC1.c **** ** ===================================================================
 694:../Generated_Code/CDC1.c **** */
 695:../Generated_Code/CDC1.c **** void CDC1_StdIOSendChar(uint8_t ch)
 696:../Generated_Code/CDC1.c **** {
 1088              		.loc 1 696 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 8
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 80B5     		push	{r7, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 82B0     		sub	sp, sp, #8
 1097              		.cfi_def_cfa_offset 16
 1098 0004 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 1100 0006 0346     		mov	r3, r0
 1101 0008 FB71     		strb	r3, [r7, #7]
 697:../Generated_Code/CDC1.c ****   while (CDC1_SendChar((uint8_t)ch)==ERR_TXFULL){} /* Send char */
 1102              		.loc 1 697 0
 1103 000a 00BF     		nop
 1104              	.L82:
 1105              		.loc 1 697 0 is_stmt 0 discriminator 1
 1106 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1107 000e 1846     		mov	r0, r3
 1108 0010 FFF7FEFF 		bl	CDC1_SendChar
 1109 0014 0346     		mov	r3, r0
 1110 0016 0B2B     		cmp	r3, #11
 1111 0018 F8D0     		beq	.L82
 698:../Generated_Code/CDC1.c **** }
 1112              		.loc 1 698 0 is_stmt 1
 1113 001a 0837     		adds	r7, r7, #8
 1114 001c BD46     		mov	sp, r7
 1115              		@ sp needed
 1116 001e 80BD     		pop	{r7, pc}
 1117              		.cfi_endproc
 1118              	.LFE15:
 1120              		.section	.text.CDC1_ApplicationStarted,"ax",%progbits
 1121              		.align	2
 1122              		.global	CDC1_ApplicationStarted
 1123              		.thumb
 1124              		.thumb_func
 1126              	CDC1_ApplicationStarted:
 1127              	.LFB16:
 699:../Generated_Code/CDC1.c **** 
 700:../Generated_Code/CDC1.c **** /*
 701:../Generated_Code/CDC1.c **** ** ===================================================================
 702:../Generated_Code/CDC1.c **** **     Method      :  CDC1_ApplicationStarted (component FSL_USB_CDC_Device)
 703:../Generated_Code/CDC1.c **** **     Description :
 704:../Generated_Code/CDC1.c **** **         Returns true if the CDC application has been started. 
 705:../Generated_Code/CDC1.c **** **     Parameters  : None
 706:../Generated_Code/CDC1.c **** **     Returns     :
 707:../Generated_Code/CDC1.c **** **         ---             - Error code
 708:../Generated_Code/CDC1.c **** ** ===================================================================
 709:../Generated_Code/CDC1.c **** */
 710:../Generated_Code/CDC1.c **** bool CDC1_ApplicationStarted(void)
 711:../Generated_Code/CDC1.c **** {
 1128              		.loc 1 711 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              		.cfi_def_cfa_offset 4
 1135              		.cfi_offset 7, -4
 1136 0002 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 712:../Generated_Code/CDC1.c ****   return start_app; /* TRUE if CDC is running */
 1138              		.loc 1 712 0
 1139 0004 034B     		ldr	r3, .L85
 1140 0006 1B78     		ldrb	r3, [r3]
 1141 0008 DBB2     		uxtb	r3, r3
 713:../Generated_Code/CDC1.c **** }
 1142              		.loc 1 713 0
 1143 000a 1846     		mov	r0, r3
 1144 000c BD46     		mov	sp, r7
 1145              		@ sp needed
 1146 000e 5DF8047B 		ldr	r7, [sp], #4
 1147 0012 7047     		bx	lr
 1148              	.L86:
 1149              		.align	2
 1150              	.L85:
 1151 0014 00000000 		.word	start_app
 1152              		.cfi_endproc
 1153              	.LFE16:
 1155              		.section	.text.CDC1_TransactionsStarted,"ax",%progbits
 1156              		.align	2
 1157              		.global	CDC1_TransactionsStarted
 1158              		.thumb
 1159              		.thumb_func
 1161              	CDC1_TransactionsStarted:
 1162              	.LFB17:
 714:../Generated_Code/CDC1.c **** 
 715:../Generated_Code/CDC1.c **** /*
 716:../Generated_Code/CDC1.c **** ** ===================================================================
 717:../Generated_Code/CDC1.c **** **     Method      :  CDC1_TransactionsStarted (component FSL_USB_CDC_Device)
 718:../Generated_Code/CDC1.c **** **     Description :
 719:../Generated_Code/CDC1.c **** **         Returns true if USB transactions  have been started.
 720:../Generated_Code/CDC1.c **** **     Parameters  : None
 721:../Generated_Code/CDC1.c **** **     Returns     :
 722:../Generated_Code/CDC1.c **** **         ---             - Error code
 723:../Generated_Code/CDC1.c **** ** ===================================================================
 724:../Generated_Code/CDC1.c **** */
 725:../Generated_Code/CDC1.c **** bool CDC1_TransactionsStarted(void)
 726:../Generated_Code/CDC1.c **** {
 1163              		.loc 1 726 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168 0000 80B4     		push	{r7}
 1169              		.cfi_def_cfa_offset 4
 1170              		.cfi_offset 7, -4
 1171 0002 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 727:../Generated_Code/CDC1.c ****   return start_transactions; /* port open on host */
 1173              		.loc 1 727 0
 1174 0004 034B     		ldr	r3, .L89
 1175 0006 1B78     		ldrb	r3, [r3]
 1176 0008 DBB2     		uxtb	r3, r3
 728:../Generated_Code/CDC1.c **** }
 1177              		.loc 1 728 0
 1178 000a 1846     		mov	r0, r3
 1179 000c BD46     		mov	sp, r7
 1180              		@ sp needed
 1181 000e 5DF8047B 		ldr	r7, [sp], #4
 1182 0012 7047     		bx	lr
 1183              	.L90:
 1184              		.align	2
 1185              	.L89:
 1186 0014 00000000 		.word	start_transactions
 1187              		.cfi_endproc
 1188              	.LFE17:
 1190              		.section	.text.CDC1_GetStdio,"ax",%progbits
 1191              		.align	2
 1192              		.global	CDC1_GetStdio
 1193              		.thumb
 1194              		.thumb_func
 1196              	CDC1_GetStdio:
 1197              	.LFB18:
 729:../Generated_Code/CDC1.c **** 
 730:../Generated_Code/CDC1.c **** /*
 731:../Generated_Code/CDC1.c **** ** ===================================================================
 732:../Generated_Code/CDC1.c **** **     Method      :  CDC1_GetStdio (component FSL_USB_CDC_Device)
 733:../Generated_Code/CDC1.c **** **     Description :
 734:../Generated_Code/CDC1.c **** **         Returns a pointer to the standard I/O
 735:../Generated_Code/CDC1.c **** **     Parameters  : None
 736:../Generated_Code/CDC1.c **** **     Returns     :
 737:../Generated_Code/CDC1.c **** **         ---             - Error code
 738:../Generated_Code/CDC1.c **** ** ===================================================================
 739:../Generated_Code/CDC1.c **** */
 740:../Generated_Code/CDC1.c **** CLS1_ConstStdIOTypePtr CDC1_GetStdio(void)
 741:../Generated_Code/CDC1.c **** {
 1198              		.loc 1 741 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 0000 80B4     		push	{r7}
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 7, -4
 1206 0002 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 742:../Generated_Code/CDC1.c ****   return &CDC1_stdio;
 1208              		.loc 1 742 0
 1209 0004 024B     		ldr	r3, .L93
 743:../Generated_Code/CDC1.c **** }
 1210              		.loc 1 743 0
 1211 0006 1846     		mov	r0, r3
 1212 0008 BD46     		mov	sp, r7
 1213              		@ sp needed
 1214 000a 5DF8047B 		ldr	r7, [sp], #4
 1215 000e 7047     		bx	lr
 1216              	.L94:
 1217              		.align	2
 1218              	.L93:
 1219 0010 00000000 		.word	CDC1_stdio
 1220              		.cfi_endproc
 1221              	.LFE18:
 1223              		.section	.bss.txBuf.8140,"aw",%nobits
 1224              		.align	2
 1227              	txBuf.8140:
 1228 0000 00000000 		.space	64
 1228      00000000 
 1228      00000000 
 1228      00000000 
 1228      00000000 
 1229              		.section	.bss.txBuf.8150,"aw",%nobits
 1230              		.align	2
 1233              	txBuf.8150:
 1234 0000 00000000 		.space	64
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1235              		.text
 1236              	.Letext0:
 1237              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1238              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 1239              		.file 4 "../Generated_Code/PE_Types.h"
 1240              		.file 5 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stddef.h"
 1241              		.file 6 "../Generated_Code/CLS1.h"
 1242              		.file 7 "../Generated_Code/CDC1.h"
 1243              		.file 8 "../Generated_Code/types.h"
 1244              		.file 9 "../Generated_Code/usb_cdc.h"
 1245              		.file 10 "../Generated_Code/TMOUT1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CDC1.c
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:23     .bss.start_app:00000000 start_app
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:24     .bss.start_app:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:28     .bss.start_transactions:00000000 start_transactions
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:29     .bss.start_transactions:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:33     .bss.transactionOngoing:00000000 transactionOngoing
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:34     .bss.transactionOngoing:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:40     .rodata.CDC1_stdio:00000000 CDC1_stdio
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:37     .rodata.CDC1_stdio:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1046   .text.CDC1_StdIOReadChar:00000000 CDC1_StdIOReadChar
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1086   .text.CDC1_StdIOSendChar:00000000 CDC1_StdIOSendChar
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1013   .text.CDC1_StdIOKeyPressed:00000000 CDC1_StdIOKeyPressed
                            *COM*:00000030 CDC1_DefaultShellBuffer
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:47     .text.CDC1_GetCharsInRxBuf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:52     .text.CDC1_GetCharsInRxBuf:00000000 CDC1_GetCharsInRxBuf
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:675    .text.CDC1_App_Task:00000000 CDC1_App_Task
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:78     .text.CDC1_GetCharsInRxBuf:00000018 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1227   .bss.txBuf.8140:00000000 txBuf.8140
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:83     .text.CDC1_RecvChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:88     .text.CDC1_RecvChar:00000000 CDC1_RecvChar
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:128    .text.CDC1_SendChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:133    .text.CDC1_SendChar:00000000 CDC1_SendChar
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:197    .text.CDC1_SendChar:00000050 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1233   .bss.txBuf.8150:00000000 txBuf.8150
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:202    .text.CDC1_SendBlock:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:207    .text.CDC1_SendBlock:00000000 CDC1_SendBlock
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:266    .text.CDC1_SendString:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:271    .text.CDC1_SendString:00000000 CDC1_SendString
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:326    .text.CDC1_App_Callback:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:331    .text.CDC1_App_Callback:00000000 CDC1_App_Callback
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:468    .text.CDC1_App_Callback:000000bc $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:475    .text.CDC1_Notify_Callback:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:480    .text.CDC1_Notify_Callback:00000000 CDC1_Notify_Callback
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:537    .text.CDC1_Notify_Callback:00000044 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:543    .text.CDC1_RunUsbEngine:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:548    .text.CDC1_RunUsbEngine:00000000 CDC1_RunUsbEngine
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:569    .text.CDC1_SendDataBlock:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:574    .text.CDC1_SendDataBlock:00000000 CDC1_SendDataBlock
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:665    .text.CDC1_SendDataBlock:00000078 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:670    .text.CDC1_App_Task:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:789    .text.CDC1_App_Task:000000a0 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:795    .text.CDC1_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:800    .text.CDC1_Deinit:00000000 CDC1_Deinit
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:851    .text.CDC1_Deinit:00000038 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:858    .text.CDC1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:863    .text.CDC1_Init:00000000 CDC1_Init
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:923    .text.CDC1_Init:00000048 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:932    .text.CDC1_PutBufferChecked:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:937    .text.CDC1_PutBufferChecked:00000000 CDC1_PutBufferChecked
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1008   .text.CDC1_StdIOKeyPressed:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1041   .text.CDC1_StdIOReadChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1081   .text.CDC1_StdIOSendChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1121   .text.CDC1_ApplicationStarted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1126   .text.CDC1_ApplicationStarted:00000000 CDC1_ApplicationStarted
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1151   .text.CDC1_ApplicationStarted:00000014 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1156   .text.CDC1_TransactionsStarted:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1161   .text.CDC1_TransactionsStarted:00000000 CDC1_TransactionsStarted
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1186   .text.CDC1_TransactionsStarted:00000014 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1191   .text.CDC1_GetStdio:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1196   .text.CDC1_GetStdio:00000000 CDC1_GetStdio
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1219   .text.CDC1_GetStdio:00000010 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1224   .bss.txBuf.8140:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccFDwOLm.s:1230   .bss.txBuf.8150:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.CDC1config.h.2.2be1a589b954aa914c1902ad9ba021c3
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.CLS1config.h.2.854bb35357facad932898800d8509913
                           .group:00000000 wm4.CLS1.h.122.6dfe00e3ccac8c27c20e405bc6b8e609
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.CS1config.h.2.e5153cf58e5fe0ee6ea0dc776d94aafd
                           .group:00000000 wm4.CS1.h.86.71773cc9f7a1189b60d5af00334fca8e
                           .group:00000000 wm4.CLS1.h.172.83b9daee286b58c7d453522f7dba0b4f
                           .group:00000000 wm4.Rx1config.h.2.c30e4a0e45f6e807cce9dde5ea425cff
                           .group:00000000 wm4.Tx1config.h.2.d91879c115169a321839683317c9c920
                           .group:00000000 wm4.CDC1.h.124.b4a2251cc75154da6719786102b54d8a
                           .group:00000000 wm4.types.h.50.d3318ce6df3e49a2799b12d1eaa56060
                           .group:00000000 wm4.hidef.h.47.6ef7d215344a2f057d0c5b3f27c726aa
                           .group:00000000 wm4.derivative.h.2.488a71cc4be68bd63f85c6373912d85e
                           .group:00000000 wm4.FSL_USB_Stack_Config.h.5.a51a5d818e84d127c6c2fe6362a5c643
                           .group:00000000 wm4.usb_user_config.h.47.47e295f338247e629ef1110422279558
                           .group:00000000 wm4.usb_devapi.h.60.9ad576a4fab4e64ae00ce9daf4685bf6
                           .group:00000000 wm4.usb_class.h.55.92808305847d365ece574c9f6c1494ae
                           .group:00000000 wm4.usb_descriptor.h.37.fbc555cd90d1139ae430b7b76bc9716d
                           .group:00000000 wm4.usb_cdc_pstn.h.76.8c9aa49446045067b0f5c08ae01c11e8
                           .group:00000000 wm4.usb_cdc.h.58.c94ce985817d1f5c3dd470be7faf296c
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.56707660962b21991903f1fee7c13bb3
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.98eafd910a6b23471ff5bcdc64f734e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a
                           .group:00000000 wm4.TMOUT1.h.87.b6e8a0bc76f5ddb6885fb8160d83a276

UNDEFINED SYMBOLS
Rx1_NofElements
WAIT1_Waitms
Rx1_Get
Tx1_Put
_usb_device_recv_data
Rx1_Put
USB_Class_CDC_Send_Data
TMOUT1_GetCounter
TMOUT1_CounterExpired
TMOUT1_LeaveCounter
USB_Class_Periodic_Task
Tx1_NofElements
Tx1_Get
USB_Class_CDC_DeInit
Rx1_Init
Tx1_Init
USB_Class_CDC_Init
Tx1_NofFreeElements
