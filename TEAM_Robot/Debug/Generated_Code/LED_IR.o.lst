   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"LED_IR.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 4C45445F 		.ascii	"LED_IR\000"
  23      495200
  24 0007 00       		.align	2
  25              	.LC1:
  26 0008 0D0A00   		.ascii	"\015\012\000"
  27 000b 00       		.align	2
  28              	.LC2:
  29 000c 20206F6E 		.ascii	"  on\000"
  29      00
  30 0011 000000   		.align	2
  31              	.LC3:
  32 0014 7965730D 		.ascii	"yes\015\012\000"
  32      0A00
  33 001a 0000     		.align	2
  34              	.LC4:
  35 001c 6E6F0D0A 		.ascii	"no\015\012\000"
  35      00
  36              		.section	.text.PrintStatus,"ax",%progbits
  37              		.align	2
  38              		.thumb
  39              		.thumb_func
  41              	PrintStatus:
  42              	.LFB0:
  43              		.file 1 "../Generated_Code/LED_IR.c"
   1:../Generated_Code/LED_IR.c **** /* ###################################################################
   2:../Generated_Code/LED_IR.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/LED_IR.c **** **     Filename    : LED_IR.c
   4:../Generated_Code/LED_IR.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/LED_IR.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/LED_IR.c **** **     Component   : LED
   7:../Generated_Code/LED_IR.c **** **     Version     : Component 01.074, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/LED_IR.c **** **     Repository  : My Components
   9:../Generated_Code/LED_IR.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/LED_IR.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/LED_IR.c **** **     Abstract    :
  12:../Generated_Code/LED_IR.c **** **          This component implements a universal driver for a single LED.
  13:../Generated_Code/LED_IR.c **** **     Settings    :
  14:../Generated_Code/LED_IR.c **** **          Component name                                 : LED_IR
  15:../Generated_Code/LED_IR.c **** **          SDK                                            : MCUC1
  16:../Generated_Code/LED_IR.c **** **          Turned On with initialization                  : no
  17:../Generated_Code/LED_IR.c **** **          HW Interface                                   : 
  18:../Generated_Code/LED_IR.c **** **            Anode on port side, HIGH is ON               : yes
  19:../Generated_Code/LED_IR.c **** **            On/Off                                       : Enabled
  20:../Generated_Code/LED_IR.c **** **              Pin                                        : LEDpin
  21:../Generated_Code/LED_IR.c **** **            PWM                                          : Disabled
  22:../Generated_Code/LED_IR.c **** **          Shell                                          : Enabled
  23:../Generated_Code/LED_IR.c **** **            Shell                                        : CLS1
  24:../Generated_Code/LED_IR.c **** **            Utility                                      : UTIL1
  25:../Generated_Code/LED_IR.c **** **     Contents    :
  26:../Generated_Code/LED_IR.c **** **         On           - void LED_IR_On(void);
  27:../Generated_Code/LED_IR.c **** **         Off          - void LED_IR_Off(void);
  28:../Generated_Code/LED_IR.c **** **         Neg          - void LED_IR_Neg(void);
  29:../Generated_Code/LED_IR.c **** **         Get          - uint8_t LED_IR_Get(void);
  30:../Generated_Code/LED_IR.c **** **         Put          - void LED_IR_Put(uint8_t val);
  31:../Generated_Code/LED_IR.c **** **         SetRatio16   - void LED_IR_SetRatio16(uint16_t ratio);
  32:../Generated_Code/LED_IR.c **** **         ParseCommand - uint8_t LED_IR_ParseCommand(const unsigned char *cmd, bool *handled, cons
  33:../Generated_Code/LED_IR.c **** **         Deinit       - void LED_IR_Deinit(void);
  34:../Generated_Code/LED_IR.c **** **         Init         - void LED_IR_Init(void);
  35:../Generated_Code/LED_IR.c **** **
  36:../Generated_Code/LED_IR.c **** **     * Copyright (c) 2013-2017, Erich Styger
  37:../Generated_Code/LED_IR.c **** **      * Web:         https://mcuoneclipse.com
  38:../Generated_Code/LED_IR.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  39:../Generated_Code/LED_IR.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  40:../Generated_Code/LED_IR.c **** **      * All rights reserved.
  41:../Generated_Code/LED_IR.c **** **      *
  42:../Generated_Code/LED_IR.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  43:../Generated_Code/LED_IR.c **** **      * are permitted provided that the following conditions are met:
  44:../Generated_Code/LED_IR.c **** **      *
  45:../Generated_Code/LED_IR.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  46:../Generated_Code/LED_IR.c **** **      *   of conditions and the following disclaimer.
  47:../Generated_Code/LED_IR.c **** **      *
  48:../Generated_Code/LED_IR.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  49:../Generated_Code/LED_IR.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  50:../Generated_Code/LED_IR.c **** **      *   other materials provided with the distribution.
  51:../Generated_Code/LED_IR.c **** **      *
  52:../Generated_Code/LED_IR.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  53:../Generated_Code/LED_IR.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  54:../Generated_Code/LED_IR.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  55:../Generated_Code/LED_IR.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  56:../Generated_Code/LED_IR.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  57:../Generated_Code/LED_IR.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  58:../Generated_Code/LED_IR.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  59:../Generated_Code/LED_IR.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  60:../Generated_Code/LED_IR.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  61:../Generated_Code/LED_IR.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  62:../Generated_Code/LED_IR.c **** ** ###################################################################*/
  63:../Generated_Code/LED_IR.c **** /*!
  64:../Generated_Code/LED_IR.c **** ** @file LED_IR.c
  65:../Generated_Code/LED_IR.c **** ** @version 01.00
  66:../Generated_Code/LED_IR.c **** ** @brief
  67:../Generated_Code/LED_IR.c **** **          This component implements a universal driver for a single LED.
  68:../Generated_Code/LED_IR.c **** */         
  69:../Generated_Code/LED_IR.c **** /*!
  70:../Generated_Code/LED_IR.c **** **  @addtogroup LED_IR_module LED_IR module documentation
  71:../Generated_Code/LED_IR.c **** **  @{
  72:../Generated_Code/LED_IR.c **** */         
  73:../Generated_Code/LED_IR.c **** 
  74:../Generated_Code/LED_IR.c **** /* MODULE LED_IR. */
  75:../Generated_Code/LED_IR.c **** 
  76:../Generated_Code/LED_IR.c **** #include "LED_IR.h"
  77:../Generated_Code/LED_IR.c **** 
  78:../Generated_Code/LED_IR.c **** static uint8_t PrintStatus(const CLS1_StdIOType *io) {
  44              		.loc 1 78 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 8
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 82B0     		sub	sp, sp, #8
  53              		.cfi_def_cfa_offset 16
  54 0004 00AF     		add	r7, sp, #0
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
  79:../Generated_Code/LED_IR.c ****   CLS1_SendStatusStr((unsigned char*)"LED_IR", (unsigned char*)"\r\n", io->stdOut);
  57              		.loc 1 79 0
  58 0008 7B68     		ldr	r3, [r7, #4]
  59 000a 5B68     		ldr	r3, [r3, #4]
  60 000c 1048     		ldr	r0, .L5
  61 000e 1149     		ldr	r1, .L5+4
  62 0010 1A46     		mov	r2, r3
  63 0012 FFF7FEFF 		bl	CLS1_SendStatusStr
  80:../Generated_Code/LED_IR.c ****   if (LED_IR_Get()!=0) {
  64              		.loc 1 80 0
  65 0016 104B     		ldr	r3, .L5+8
  66 0018 1B69     		ldr	r3, [r3, #16]
  67 001a 1846     		mov	r0, r3
  68 001c FFF7FEFF 		bl	BitIoLdd5_GetVal
  69 0020 0346     		mov	r3, r0
  70 0022 002B     		cmp	r3, #0
  71 0024 07D0     		beq	.L2
  81:../Generated_Code/LED_IR.c ****     CLS1_SendStatusStr((unsigned char*)"  on", (unsigned char*)"yes\r\n", io->stdOut);
  72              		.loc 1 81 0
  73 0026 7B68     		ldr	r3, [r7, #4]
  74 0028 5B68     		ldr	r3, [r3, #4]
  75 002a 0C48     		ldr	r0, .L5+12
  76 002c 0C49     		ldr	r1, .L5+16
  77 002e 1A46     		mov	r2, r3
  78 0030 FFF7FEFF 		bl	CLS1_SendStatusStr
  79 0034 06E0     		b	.L3
  80              	.L2:
  82:../Generated_Code/LED_IR.c ****   } else {
  83:../Generated_Code/LED_IR.c ****     CLS1_SendStatusStr((unsigned char*)"  on", (unsigned char*)"no\r\n", io->stdOut);
  81              		.loc 1 83 0
  82 0036 7B68     		ldr	r3, [r7, #4]
  83 0038 5B68     		ldr	r3, [r3, #4]
  84 003a 0848     		ldr	r0, .L5+12
  85 003c 0949     		ldr	r1, .L5+20
  86 003e 1A46     		mov	r2, r3
  87 0040 FFF7FEFF 		bl	CLS1_SendStatusStr
  88              	.L3:
  84:../Generated_Code/LED_IR.c ****   }
  85:../Generated_Code/LED_IR.c ****   return ERR_OK;
  89              		.loc 1 85 0
  90 0044 0023     		movs	r3, #0
  86:../Generated_Code/LED_IR.c **** }
  91              		.loc 1 86 0
  92 0046 1846     		mov	r0, r3
  93 0048 0837     		adds	r7, r7, #8
  94 004a BD46     		mov	sp, r7
  95              		@ sp needed
  96 004c 80BD     		pop	{r7, pc}
  97              	.L6:
  98 004e 00BF     		.align	2
  99              	.L5:
 100 0050 00000000 		.word	.LC0
 101 0054 08000000 		.word	.LC1
 102 0058 00000000 		.word	PE_LDD_DeviceDataList
 103 005c 0C000000 		.word	.LC2
 104 0060 14000000 		.word	.LC3
 105 0064 1C000000 		.word	.LC4
 106              		.cfi_endproc
 107              	.LFE0:
 109              		.section	.rodata
 110 0021 000000   		.align	2
 111              	.LC5:
 112 0024 47726F75 		.ascii	"Group of LED_IR commands\015\012\000"
 112      70206F66 
 112      204C4544 
 112      5F495220 
 112      636F6D6D 
 113 003f 00       		.align	2
 114              	.LC6:
 115 0040 20206865 		.ascii	"  help|status\000"
 115      6C707C73 
 115      74617475 
 115      7300
 116 004e 0000     		.align	2
 117              	.LC7:
 118 0050 5072696E 		.ascii	"Print help or status information\015\012\000"
 118      74206865 
 118      6C70206F 
 118      72207374 
 118      61747573 
 119 0073 00       		.align	2
 120              	.LC8:
 121 0074 20206F6E 		.ascii	"  on|off|neg\000"
 121      7C6F6666 
 121      7C6E6567 
 121      00
 122 0081 000000   		.align	2
 123              	.LC9:
 124 0084 5475726E 		.ascii	"Turns it on, off or toggle it\015\012\000"
 124      73206974 
 124      206F6E2C 
 124      206F6666 
 124      206F7220 
 125              		.section	.text.PrintHelp,"ax",%progbits
 126              		.align	2
 127              		.thumb
 128              		.thumb_func
 130              	PrintHelp:
 131              	.LFB1:
  87:../Generated_Code/LED_IR.c **** 
  88:../Generated_Code/LED_IR.c **** static uint8_t PrintHelp(const CLS1_StdIOType *io) {
 132              		.loc 1 88 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              		.cfi_def_cfa_offset 16
 142 0004 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 144 0006 7860     		str	r0, [r7, #4]
  89:../Generated_Code/LED_IR.c ****   CLS1_SendHelpStr((unsigned char*)"LED_IR", (unsigned char*)"Group of LED_IR commands\r\n", io->st
 145              		.loc 1 89 0
 146 0008 7B68     		ldr	r3, [r7, #4]
 147 000a 5B68     		ldr	r3, [r3, #4]
 148 000c 0B48     		ldr	r0, .L9
 149 000e 0C49     		ldr	r1, .L9+4
 150 0010 1A46     		mov	r2, r3
 151 0012 FFF7FEFF 		bl	CLS1_SendHelpStr
  90:../Generated_Code/LED_IR.c ****   CLS1_SendHelpStr((unsigned char*)"  help|status", (unsigned char*)"Print help or status informati
 152              		.loc 1 90 0
 153 0016 7B68     		ldr	r3, [r7, #4]
 154 0018 5B68     		ldr	r3, [r3, #4]
 155 001a 0A48     		ldr	r0, .L9+8
 156 001c 0A49     		ldr	r1, .L9+12
 157 001e 1A46     		mov	r2, r3
 158 0020 FFF7FEFF 		bl	CLS1_SendHelpStr
  91:../Generated_Code/LED_IR.c ****   CLS1_SendHelpStr((unsigned char*)"  on|off|neg", (unsigned char*)"Turns it on, off or toggle it\r
 159              		.loc 1 91 0
 160 0024 7B68     		ldr	r3, [r7, #4]
 161 0026 5B68     		ldr	r3, [r3, #4]
 162 0028 0848     		ldr	r0, .L9+16
 163 002a 0949     		ldr	r1, .L9+20
 164 002c 1A46     		mov	r2, r3
 165 002e FFF7FEFF 		bl	CLS1_SendHelpStr
  92:../Generated_Code/LED_IR.c ****   return ERR_OK;
 166              		.loc 1 92 0
 167 0032 0023     		movs	r3, #0
  93:../Generated_Code/LED_IR.c **** }
 168              		.loc 1 93 0
 169 0034 1846     		mov	r0, r3
 170 0036 0837     		adds	r7, r7, #8
 171 0038 BD46     		mov	sp, r7
 172              		@ sp needed
 173 003a 80BD     		pop	{r7, pc}
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 003c 00000000 		.word	.LC0
 178 0040 24000000 		.word	.LC5
 179 0044 40000000 		.word	.LC6
 180 0048 50000000 		.word	.LC7
 181 004c 74000000 		.word	.LC8
 182 0050 84000000 		.word	.LC9
 183              		.cfi_endproc
 184              	.LFE1:
 186              		.section	.rodata
 187              		.align	2
 188              	.LC10:
 189 00a4 68656C70 		.ascii	"help\000"
 189      00
 190 00a9 000000   		.align	2
 191              	.LC11:
 192 00ac 4C45445F 		.ascii	"LED_IR help\000"
 192      49522068 
 192      656C7000 
 193              		.align	2
 194              	.LC12:
 195 00b8 73746174 		.ascii	"status\000"
 195      757300
 196 00bf 00       		.align	2
 197              	.LC13:
 198 00c0 4C45445F 		.ascii	"LED_IR status\000"
 198      49522073 
 198      74617475 
 198      7300
 199 00ce 0000     		.align	2
 200              	.LC14:
 201 00d0 4C45445F 		.ascii	"LED_IR on\000"
 201      4952206F 
 201      6E00
 202 00da 0000     		.align	2
 203              	.LC15:
 204 00dc 4C45445F 		.ascii	"LED_IR off\000"
 204      4952206F 
 204      666600
 205 00e7 00       		.align	2
 206              	.LC16:
 207 00e8 4C45445F 		.ascii	"LED_IR neg\000"
 207      4952206E 
 207      656700
 208 00f3 00       		.section	.text.LED_IR_ParseCommand,"ax",%progbits
 209              		.align	2
 210              		.global	LED_IR_ParseCommand
 211              		.thumb
 212              		.thumb_func
 214              	LED_IR_ParseCommand:
 215              	.LFB2:
  94:../Generated_Code/LED_IR.c **** 
  95:../Generated_Code/LED_IR.c **** /*
  96:../Generated_Code/LED_IR.c **** ** ===================================================================
  97:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_ParseCommand (component LED)
  98:../Generated_Code/LED_IR.c **** **     Description :
  99:../Generated_Code/LED_IR.c **** **         Shell Command Line parser. This method is enabled/disabled
 100:../Generated_Code/LED_IR.c **** **         depending on if you have the Shell enabled/disabled in the
 101:../Generated_Code/LED_IR.c **** **         properties.
 102:../Generated_Code/LED_IR.c **** **     Parameters  :
 103:../Generated_Code/LED_IR.c **** **         NAME            - DESCRIPTION
 104:../Generated_Code/LED_IR.c **** **       * cmd             - Pointer to command string
 105:../Generated_Code/LED_IR.c **** **       * handled         - Pointer to variable which tells if
 106:../Generated_Code/LED_IR.c **** **                           the command has been handled or not
 107:../Generated_Code/LED_IR.c **** **       * io              - Pointer to I/O structure
 108:../Generated_Code/LED_IR.c **** **     Returns     :
 109:../Generated_Code/LED_IR.c **** **         ---             - Error code
 110:../Generated_Code/LED_IR.c **** ** ===================================================================
 111:../Generated_Code/LED_IR.c **** */
 112:../Generated_Code/LED_IR.c **** uint8_t LED_IR_ParseCommand(const unsigned char *cmd, bool *handled, const CLS1_StdIOType *io)
 113:../Generated_Code/LED_IR.c **** {
 216              		.loc 1 113 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 16
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 84B0     		sub	sp, sp, #16
 225              		.cfi_def_cfa_offset 24
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 228 0006 F860     		str	r0, [r7, #12]
 229 0008 B960     		str	r1, [r7, #8]
 230 000a 7A60     		str	r2, [r7, #4]
 114:../Generated_Code/LED_IR.c ****   if (UTIL1_strcmp((char*)cmd, CLS1_CMD_HELP)==0 || UTIL1_strcmp((char*)cmd, "LED_IR help")==0) {
 231              		.loc 1 114 0
 232 000c F868     		ldr	r0, [r7, #12]
 233 000e 3149     		ldr	r1, .L20
 234 0010 FFF7FEFF 		bl	strcmp
 235 0014 0346     		mov	r3, r0
 236 0016 002B     		cmp	r3, #0
 237 0018 06D0     		beq	.L12
 238              		.loc 1 114 0 is_stmt 0 discriminator 1
 239 001a F868     		ldr	r0, [r7, #12]
 240 001c 2E49     		ldr	r1, .L20+4
 241 001e FFF7FEFF 		bl	strcmp
 242 0022 0346     		mov	r3, r0
 243 0024 002B     		cmp	r3, #0
 244 0026 07D1     		bne	.L13
 245              	.L12:
 115:../Generated_Code/LED_IR.c ****     *handled = TRUE;
 246              		.loc 1 115 0 is_stmt 1
 247 0028 BB68     		ldr	r3, [r7, #8]
 248 002a 0122     		movs	r2, #1
 249 002c 1A70     		strb	r2, [r3]
 116:../Generated_Code/LED_IR.c ****     return PrintHelp(io);
 250              		.loc 1 116 0
 251 002e 7868     		ldr	r0, [r7, #4]
 252 0030 FFF7FEFF 		bl	PrintHelp
 253 0034 0346     		mov	r3, r0
 254 0036 49E0     		b	.L14
 255              	.L13:
 117:../Generated_Code/LED_IR.c ****   } else if ((UTIL1_strcmp((char*)cmd, CLS1_CMD_STATUS)==0) || (UTIL1_strcmp((char*)cmd, "LED_IR st
 256              		.loc 1 117 0
 257 0038 F868     		ldr	r0, [r7, #12]
 258 003a 2849     		ldr	r1, .L20+8
 259 003c FFF7FEFF 		bl	strcmp
 260 0040 0346     		mov	r3, r0
 261 0042 002B     		cmp	r3, #0
 262 0044 06D0     		beq	.L15
 263              		.loc 1 117 0 is_stmt 0 discriminator 1
 264 0046 F868     		ldr	r0, [r7, #12]
 265 0048 2549     		ldr	r1, .L20+12
 266 004a FFF7FEFF 		bl	strcmp
 267 004e 0346     		mov	r3, r0
 268 0050 002B     		cmp	r3, #0
 269 0052 07D1     		bne	.L16
 270              	.L15:
 118:../Generated_Code/LED_IR.c ****     *handled = TRUE;
 271              		.loc 1 118 0 is_stmt 1
 272 0054 BB68     		ldr	r3, [r7, #8]
 273 0056 0122     		movs	r2, #1
 274 0058 1A70     		strb	r2, [r3]
 119:../Generated_Code/LED_IR.c ****     return PrintStatus(io);
 275              		.loc 1 119 0
 276 005a 7868     		ldr	r0, [r7, #4]
 277 005c FFF7FEFF 		bl	PrintStatus
 278 0060 0346     		mov	r3, r0
 279 0062 33E0     		b	.L14
 280              	.L16:
 120:../Generated_Code/LED_IR.c ****   } else if (UTIL1_strcmp((char*)cmd, "LED_IR on")==0) {
 281              		.loc 1 120 0
 282 0064 F868     		ldr	r0, [r7, #12]
 283 0066 1F49     		ldr	r1, .L20+16
 284 0068 FFF7FEFF 		bl	strcmp
 285 006c 0346     		mov	r3, r0
 286 006e 002B     		cmp	r3, #0
 287 0070 09D1     		bne	.L17
 121:../Generated_Code/LED_IR.c ****     *handled = TRUE;
 288              		.loc 1 121 0
 289 0072 BB68     		ldr	r3, [r7, #8]
 290 0074 0122     		movs	r2, #1
 291 0076 1A70     		strb	r2, [r3]
 122:../Generated_Code/LED_IR.c ****     LED_IR_On();
 292              		.loc 1 122 0
 293 0078 1B4B     		ldr	r3, .L20+20
 294 007a 1B69     		ldr	r3, [r3, #16]
 295 007c 1846     		mov	r0, r3
 296 007e FFF7FEFF 		bl	BitIoLdd5_SetVal
 123:../Generated_Code/LED_IR.c ****     return ERR_OK;
 297              		.loc 1 123 0
 298 0082 0023     		movs	r3, #0
 299 0084 22E0     		b	.L14
 300              	.L17:
 124:../Generated_Code/LED_IR.c ****   } else if (UTIL1_strcmp((char*)cmd, "LED_IR off")==0) {
 301              		.loc 1 124 0
 302 0086 F868     		ldr	r0, [r7, #12]
 303 0088 1849     		ldr	r1, .L20+24
 304 008a FFF7FEFF 		bl	strcmp
 305 008e 0346     		mov	r3, r0
 306 0090 002B     		cmp	r3, #0
 307 0092 09D1     		bne	.L18
 125:../Generated_Code/LED_IR.c ****     *handled = TRUE;
 308              		.loc 1 125 0
 309 0094 BB68     		ldr	r3, [r7, #8]
 310 0096 0122     		movs	r2, #1
 311 0098 1A70     		strb	r2, [r3]
 126:../Generated_Code/LED_IR.c ****     LED_IR_Off();
 312              		.loc 1 126 0
 313 009a 134B     		ldr	r3, .L20+20
 314 009c 1B69     		ldr	r3, [r3, #16]
 315 009e 1846     		mov	r0, r3
 316 00a0 FFF7FEFF 		bl	BitIoLdd5_ClrVal
 127:../Generated_Code/LED_IR.c ****     return ERR_OK;
 317              		.loc 1 127 0
 318 00a4 0023     		movs	r3, #0
 319 00a6 11E0     		b	.L14
 320              	.L18:
 128:../Generated_Code/LED_IR.c ****   } else if (UTIL1_strcmp((char*)cmd, "LED_IR neg")==0) {
 321              		.loc 1 128 0
 322 00a8 F868     		ldr	r0, [r7, #12]
 323 00aa 1149     		ldr	r1, .L20+28
 324 00ac FFF7FEFF 		bl	strcmp
 325 00b0 0346     		mov	r3, r0
 326 00b2 002B     		cmp	r3, #0
 327 00b4 09D1     		bne	.L19
 129:../Generated_Code/LED_IR.c ****     *handled = TRUE;
 328              		.loc 1 129 0
 329 00b6 BB68     		ldr	r3, [r7, #8]
 330 00b8 0122     		movs	r2, #1
 331 00ba 1A70     		strb	r2, [r3]
 130:../Generated_Code/LED_IR.c ****     LED_IR_Neg();
 332              		.loc 1 130 0
 333 00bc 0A4B     		ldr	r3, .L20+20
 334 00be 1B69     		ldr	r3, [r3, #16]
 335 00c0 1846     		mov	r0, r3
 336 00c2 FFF7FEFF 		bl	BitIoLdd5_NegVal
 131:../Generated_Code/LED_IR.c ****     return ERR_OK;
 337              		.loc 1 131 0
 338 00c6 0023     		movs	r3, #0
 339 00c8 00E0     		b	.L14
 340              	.L19:
 132:../Generated_Code/LED_IR.c ****   }
 133:../Generated_Code/LED_IR.c ****   return ERR_OK;
 341              		.loc 1 133 0
 342 00ca 0023     		movs	r3, #0
 343              	.L14:
 134:../Generated_Code/LED_IR.c **** }
 344              		.loc 1 134 0
 345 00cc 1846     		mov	r0, r3
 346 00ce 1037     		adds	r7, r7, #16
 347 00d0 BD46     		mov	sp, r7
 348              		@ sp needed
 349 00d2 80BD     		pop	{r7, pc}
 350              	.L21:
 351              		.align	2
 352              	.L20:
 353 00d4 A4000000 		.word	.LC10
 354 00d8 AC000000 		.word	.LC11
 355 00dc B8000000 		.word	.LC12
 356 00e0 C0000000 		.word	.LC13
 357 00e4 D0000000 		.word	.LC14
 358 00e8 00000000 		.word	PE_LDD_DeviceDataList
 359 00ec DC000000 		.word	.LC15
 360 00f0 E8000000 		.word	.LC16
 361              		.cfi_endproc
 362              	.LFE2:
 364              		.section	.text.LED_IR_Init,"ax",%progbits
 365              		.align	2
 366              		.global	LED_IR_Init
 367              		.thumb
 368              		.thumb_func
 370              	LED_IR_Init:
 371              	.LFB3:
 135:../Generated_Code/LED_IR.c **** 
 136:../Generated_Code/LED_IR.c **** /*
 137:../Generated_Code/LED_IR.c **** ** ===================================================================
 138:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_On (component LED)
 139:../Generated_Code/LED_IR.c **** **     Description :
 140:../Generated_Code/LED_IR.c **** **         This turns the LED on.
 141:../Generated_Code/LED_IR.c **** **     Parameters  : None
 142:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 143:../Generated_Code/LED_IR.c **** ** ===================================================================
 144:../Generated_Code/LED_IR.c **** */
 145:../Generated_Code/LED_IR.c **** /*
 146:../Generated_Code/LED_IR.c **** void LED_IR_On(void)
 147:../Generated_Code/LED_IR.c **** {
 148:../Generated_Code/LED_IR.c ****   *** This method is implemented as macro in the header file
 149:../Generated_Code/LED_IR.c **** }
 150:../Generated_Code/LED_IR.c **** */
 151:../Generated_Code/LED_IR.c **** 
 152:../Generated_Code/LED_IR.c **** /*
 153:../Generated_Code/LED_IR.c **** ** ===================================================================
 154:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Off (component LED)
 155:../Generated_Code/LED_IR.c **** **     Description :
 156:../Generated_Code/LED_IR.c **** **         This turns the LED off.
 157:../Generated_Code/LED_IR.c **** **     Parameters  : None
 158:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 159:../Generated_Code/LED_IR.c **** ** ===================================================================
 160:../Generated_Code/LED_IR.c **** */
 161:../Generated_Code/LED_IR.c **** /*
 162:../Generated_Code/LED_IR.c **** void LED_IR_Off(void)
 163:../Generated_Code/LED_IR.c **** {
 164:../Generated_Code/LED_IR.c ****   *** This method is implemented as macro in the header file
 165:../Generated_Code/LED_IR.c **** }
 166:../Generated_Code/LED_IR.c **** */
 167:../Generated_Code/LED_IR.c **** 
 168:../Generated_Code/LED_IR.c **** /*
 169:../Generated_Code/LED_IR.c **** ** ===================================================================
 170:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Neg (component LED)
 171:../Generated_Code/LED_IR.c **** **     Description :
 172:../Generated_Code/LED_IR.c **** **         This negates/toggles the LED
 173:../Generated_Code/LED_IR.c **** **     Parameters  : None
 174:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 175:../Generated_Code/LED_IR.c **** ** ===================================================================
 176:../Generated_Code/LED_IR.c **** */
 177:../Generated_Code/LED_IR.c **** /*
 178:../Generated_Code/LED_IR.c **** void LED_IR_Neg(void)
 179:../Generated_Code/LED_IR.c **** {
 180:../Generated_Code/LED_IR.c ****   *** This method is implemented as macro in the header file
 181:../Generated_Code/LED_IR.c **** }
 182:../Generated_Code/LED_IR.c **** */
 183:../Generated_Code/LED_IR.c **** 
 184:../Generated_Code/LED_IR.c **** /*
 185:../Generated_Code/LED_IR.c **** ** ===================================================================
 186:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Get (component LED)
 187:../Generated_Code/LED_IR.c **** **     Description :
 188:../Generated_Code/LED_IR.c **** **         This returns logical 1 in case the LED is on, 0 otherwise.
 189:../Generated_Code/LED_IR.c **** **     Parameters  : None
 190:../Generated_Code/LED_IR.c **** **     Returns     :
 191:../Generated_Code/LED_IR.c **** **         ---             - Status of the LED (on or off)
 192:../Generated_Code/LED_IR.c **** ** ===================================================================
 193:../Generated_Code/LED_IR.c **** */
 194:../Generated_Code/LED_IR.c **** /*
 195:../Generated_Code/LED_IR.c **** uint8_t LED_IR_Get(void)
 196:../Generated_Code/LED_IR.c **** {
 197:../Generated_Code/LED_IR.c ****   *** This method is implemented as macro in the header file
 198:../Generated_Code/LED_IR.c **** }
 199:../Generated_Code/LED_IR.c **** */
 200:../Generated_Code/LED_IR.c **** 
 201:../Generated_Code/LED_IR.c **** /*
 202:../Generated_Code/LED_IR.c **** ** ===================================================================
 203:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Put (component LED)
 204:../Generated_Code/LED_IR.c **** **     Description :
 205:../Generated_Code/LED_IR.c **** **         Turns the LED on or off.
 206:../Generated_Code/LED_IR.c **** **     Parameters  :
 207:../Generated_Code/LED_IR.c **** **         NAME            - DESCRIPTION
 208:../Generated_Code/LED_IR.c **** **         val             - value to define if the LED has to be on or
 209:../Generated_Code/LED_IR.c **** **                           off.
 210:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 211:../Generated_Code/LED_IR.c **** ** ===================================================================
 212:../Generated_Code/LED_IR.c **** */
 213:../Generated_Code/LED_IR.c **** /*
 214:../Generated_Code/LED_IR.c **** void LED_IR_Put(uint8_t val)
 215:../Generated_Code/LED_IR.c **** {
 216:../Generated_Code/LED_IR.c ****   *** This method is implemented as macro in the header file
 217:../Generated_Code/LED_IR.c **** }
 218:../Generated_Code/LED_IR.c **** */
 219:../Generated_Code/LED_IR.c **** 
 220:../Generated_Code/LED_IR.c **** /*
 221:../Generated_Code/LED_IR.c **** ** ===================================================================
 222:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Init (component LED)
 223:../Generated_Code/LED_IR.c **** **     Description :
 224:../Generated_Code/LED_IR.c **** **         Performs the LED driver initialization.
 225:../Generated_Code/LED_IR.c **** **     Parameters  : None
 226:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 227:../Generated_Code/LED_IR.c **** ** ===================================================================
 228:../Generated_Code/LED_IR.c **** */
 229:../Generated_Code/LED_IR.c **** void LED_IR_Init(void)
 230:../Generated_Code/LED_IR.c **** {
 372              		.loc 1 230 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 00AF     		add	r7, sp, #0
 381              		.cfi_def_cfa_register 7
 231:../Generated_Code/LED_IR.c **** #if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
 232:../Generated_Code/LED_IR.c ****   LEDpin3_Init();
 233:../Generated_Code/LED_IR.c **** #endif
 234:../Generated_Code/LED_IR.c ****   LED_IR_Off();
 382              		.loc 1 234 0
 383 0004 024B     		ldr	r3, .L23
 384 0006 1B69     		ldr	r3, [r3, #16]
 385 0008 1846     		mov	r0, r3
 386 000a FFF7FEFF 		bl	BitIoLdd5_ClrVal
 235:../Generated_Code/LED_IR.c **** }
 387              		.loc 1 235 0
 388 000e 80BD     		pop	{r7, pc}
 389              	.L24:
 390              		.align	2
 391              	.L23:
 392 0010 00000000 		.word	PE_LDD_DeviceDataList
 393              		.cfi_endproc
 394              	.LFE3:
 396              		.section	.text.LED_IR_Deinit,"ax",%progbits
 397              		.align	2
 398              		.global	LED_IR_Deinit
 399              		.thumb
 400              		.thumb_func
 402              	LED_IR_Deinit:
 403              	.LFB4:
 236:../Generated_Code/LED_IR.c **** 
 237:../Generated_Code/LED_IR.c **** /*
 238:../Generated_Code/LED_IR.c **** ** ===================================================================
 239:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_Deinit (component LED)
 240:../Generated_Code/LED_IR.c **** **     Description :
 241:../Generated_Code/LED_IR.c **** **         Deinitializes the driver
 242:../Generated_Code/LED_IR.c **** **     Parameters  : None
 243:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 244:../Generated_Code/LED_IR.c **** ** ===================================================================
 245:../Generated_Code/LED_IR.c **** */
 246:../Generated_Code/LED_IR.c **** void LED_IR_Deinit(void)
 247:../Generated_Code/LED_IR.c **** {
 404              		.loc 1 247 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 248:../Generated_Code/LED_IR.c **** #if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
 249:../Generated_Code/LED_IR.c ****   LEDpin3_Deinit();
 250:../Generated_Code/LED_IR.c **** #endif
 251:../Generated_Code/LED_IR.c **** }
 414              		.loc 1 251 0
 415 0004 BD46     		mov	sp, r7
 416              		@ sp needed
 417 0006 5DF8047B 		ldr	r7, [sp], #4
 418 000a 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE4:
 422              		.section	.text.LED_IR_SetRatio16,"ax",%progbits
 423              		.align	2
 424              		.global	LED_IR_SetRatio16
 425              		.thumb
 426              		.thumb_func
 428              	LED_IR_SetRatio16:
 429              	.LFB5:
 252:../Generated_Code/LED_IR.c **** 
 253:../Generated_Code/LED_IR.c **** /*
 254:../Generated_Code/LED_IR.c **** ** ===================================================================
 255:../Generated_Code/LED_IR.c **** **     Method      :  LED_IR_SetRatio16 (component LED)
 256:../Generated_Code/LED_IR.c **** **     Description :
 257:../Generated_Code/LED_IR.c **** **         Method to specify the duty cycle. If using a PWM pin, this
 258:../Generated_Code/LED_IR.c **** **         means the duty cycle is set. For On/off pins, values smaller
 259:../Generated_Code/LED_IR.c **** **         0x7FFF means off, while values greater means on.
 260:../Generated_Code/LED_IR.c **** **     Parameters  :
 261:../Generated_Code/LED_IR.c **** **         NAME            - DESCRIPTION
 262:../Generated_Code/LED_IR.c **** **         ratio           - Ratio value, where 0 means 'off' and
 263:../Generated_Code/LED_IR.c **** **                           0xffff means 'on'
 264:../Generated_Code/LED_IR.c **** **     Returns     : Nothing
 265:../Generated_Code/LED_IR.c **** ** ===================================================================
 266:../Generated_Code/LED_IR.c **** */
 267:../Generated_Code/LED_IR.c **** void LED_IR_SetRatio16(uint16_t ratio)
 268:../Generated_Code/LED_IR.c **** {
 430              		.loc 1 268 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 82B0     		sub	sp, sp, #8
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 442 0006 0346     		mov	r3, r0
 443 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 269:../Generated_Code/LED_IR.c ****   /* on/off LED: binary on or off */
 270:../Generated_Code/LED_IR.c ****   if (ratio<(0xffff/2)) {
 444              		.loc 1 270 0
 445 000a FA88     		ldrh	r2, [r7, #6]
 446 000c 47F6FE73 		movw	r3, #32766
 447 0010 9A42     		cmp	r2, r3
 448 0012 05D8     		bhi	.L27
 271:../Generated_Code/LED_IR.c ****     LED_IR_Off();
 449              		.loc 1 271 0
 450 0014 064B     		ldr	r3, .L29
 451 0016 1B69     		ldr	r3, [r3, #16]
 452 0018 1846     		mov	r0, r3
 453 001a FFF7FEFF 		bl	BitIoLdd5_ClrVal
 454 001e 04E0     		b	.L26
 455              	.L27:
 272:../Generated_Code/LED_IR.c ****   } else {
 273:../Generated_Code/LED_IR.c ****     LED_IR_On();
 456              		.loc 1 273 0
 457 0020 034B     		ldr	r3, .L29
 458 0022 1B69     		ldr	r3, [r3, #16]
 459 0024 1846     		mov	r0, r3
 460 0026 FFF7FEFF 		bl	BitIoLdd5_SetVal
 461              	.L26:
 274:../Generated_Code/LED_IR.c ****   }
 275:../Generated_Code/LED_IR.c **** }
 462              		.loc 1 275 0
 463 002a 0837     		adds	r7, r7, #8
 464 002c BD46     		mov	sp, r7
 465              		@ sp needed
 466 002e 80BD     		pop	{r7, pc}
 467              	.L30:
 468              		.align	2
 469              	.L29:
 470 0030 00000000 		.word	PE_LDD_DeviceDataList
 471              		.cfi_endproc
 472              	.LFE5:
 474              		.text
 475              	.Letext0:
 476              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 477              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 478              		.file 4 "../Generated_Code/PE_Types.h"
 479              		.file 5 "../Generated_Code/CLS1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED_IR.c
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:21     .rodata:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:37     .text.PrintStatus:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:41     .text.PrintStatus:00000000 PrintStatus
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:100    .text.PrintStatus:00000050 $d
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:126    .text.PrintHelp:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:130    .text.PrintHelp:00000000 PrintHelp
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:177    .text.PrintHelp:0000003c $d
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:209    .text.LED_IR_ParseCommand:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:214    .text.LED_IR_ParseCommand:00000000 LED_IR_ParseCommand
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:353    .text.LED_IR_ParseCommand:000000d4 $d
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:365    .text.LED_IR_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:370    .text.LED_IR_Init:00000000 LED_IR_Init
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:392    .text.LED_IR_Init:00000010 $d
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:397    .text.LED_IR_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:402    .text.LED_IR_Deinit:00000000 LED_IR_Deinit
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:423    .text.LED_IR_SetRatio16:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:428    .text.LED_IR_SetRatio16:00000000 LED_IR_SetRatio16
C:\Users\Aron\AppData\Local\Temp\ccBvFm91.s:470    .text.LED_IR_SetRatio16:00000030 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.GPIO_PDD.h.123.0d360e6978ec29f76970d5d88d4be5fd
                           .group:00000000 wm4.BitIoLdd5.h.105.b33b3e68c8376c36fc2f62ceddc342b1
                           .group:00000000 wm4.LEDpin3.h.119.c8dbb0df9eaea76eb8c772f8b6a93b9e
                           .group:00000000 wm4.CLS1config.h.2.854bb35357facad932898800d8509913
                           .group:00000000 wm4.CLS1.h.122.6dfe00e3ccac8c27c20e405bc6b8e609
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.CS1config.h.2.e5153cf58e5fe0ee6ea0dc776d94aafd
                           .group:00000000 wm4.CS1.h.86.71773cc9f7a1189b60d5af00334fca8e
                           .group:00000000 wm4.CLS1.h.172.83b9daee286b58c7d453522f7dba0b4f
                           .group:00000000 wm4.LED_IR.h.89.bb1bda720ff4993422313b57362152b8

UNDEFINED SYMBOLS
CLS1_SendStatusStr
BitIoLdd5_GetVal
PE_LDD_DeviceDataList
CLS1_SendHelpStr
strcmp
BitIoLdd5_SetVal
BitIoLdd5_ClrVal
BitIoLdd5_NegVal
