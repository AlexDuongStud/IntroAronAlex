   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"WAIT1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.WAIT1_Wait10Cycles,"ax",%progbits
  21              		.align	2
  22              		.global	WAIT1_Wait10Cycles
  23              		.thumb
  24              		.thumb_func
  26              	WAIT1_Wait10Cycles:
  27              	.LFB0:
  28              		.file 1 "../Generated_Code/WAIT1.c"
   1:../Generated_Code/WAIT1.c **** /* ###################################################################
   2:../Generated_Code/WAIT1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/WAIT1.c **** **     Filename    : WAIT1.c
   4:../Generated_Code/WAIT1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/WAIT1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/WAIT1.c **** **     Component   : Wait
   7:../Generated_Code/WAIT1.c **** **     Version     : Component 01.082, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/WAIT1.c **** **     Repository  : My Components
   9:../Generated_Code/WAIT1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/WAIT1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/WAIT1.c **** **     Abstract    :
  12:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  13:../Generated_Code/WAIT1.c **** **     Settings    :
  14:../Generated_Code/WAIT1.c **** **          Component name                                 : WAIT1
  15:../Generated_Code/WAIT1.c **** **          SDK                                            : MCUC1
  16:../Generated_Code/WAIT1.c **** **          Use Cycle Counter                              : Disabled
  17:../Generated_Code/WAIT1.c **** **          Manual Clock Values                            : Disabled
  18:../Generated_Code/WAIT1.c **** **          Delay100usFunction                             : Delay100US
  19:../Generated_Code/WAIT1.c **** **          RTOS                                           : Disabled
  20:../Generated_Code/WAIT1.c **** **          Watchdog                                       : Disabled
  21:../Generated_Code/WAIT1.c **** **     Contents    :
  22:../Generated_Code/WAIT1.c **** **         Wait10Cycles   - void WAIT1_Wait10Cycles(void);
  23:../Generated_Code/WAIT1.c **** **         Wait100Cycles  - void WAIT1_Wait100Cycles(void);
  24:../Generated_Code/WAIT1.c **** **         WaitCycles     - void WAIT1_WaitCycles(uint16_t cycles);
  25:../Generated_Code/WAIT1.c **** **         WaitLongCycles - void WAIT1_WaitLongCycles(uint32_t cycles);
  26:../Generated_Code/WAIT1.c **** **         Waitms         - void WAIT1_Waitms(uint16_t ms);
  27:../Generated_Code/WAIT1.c **** **         Waitus         - void WAIT1_Waitus(uint16_t us);
  28:../Generated_Code/WAIT1.c **** **         Waitns         - void WAIT1_Waitns(uint16_t ns);
  29:../Generated_Code/WAIT1.c **** **         WaitOSms       - void WAIT1_WaitOSms(void);
  30:../Generated_Code/WAIT1.c **** **         Init           - void WAIT1_Init(void);
  31:../Generated_Code/WAIT1.c **** **         DeInit         - void WAIT1_DeInit(void);
  32:../Generated_Code/WAIT1.c **** **
  33:../Generated_Code/WAIT1.c **** **     * Copyright (c) 2013-2017, Erich Styger
  34:../Generated_Code/WAIT1.c **** **      * Web:         https://mcuoneclipse.com
  35:../Generated_Code/WAIT1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  36:../Generated_Code/WAIT1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  37:../Generated_Code/WAIT1.c **** **      * All rights reserved.
  38:../Generated_Code/WAIT1.c **** **      *
  39:../Generated_Code/WAIT1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  40:../Generated_Code/WAIT1.c **** **      * are permitted provided that the following conditions are met:
  41:../Generated_Code/WAIT1.c **** **      *
  42:../Generated_Code/WAIT1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  43:../Generated_Code/WAIT1.c **** **      *   of conditions and the following disclaimer.
  44:../Generated_Code/WAIT1.c **** **      *
  45:../Generated_Code/WAIT1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  46:../Generated_Code/WAIT1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  47:../Generated_Code/WAIT1.c **** **      *   other materials provided with the distribution.
  48:../Generated_Code/WAIT1.c **** **      *
  49:../Generated_Code/WAIT1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  50:../Generated_Code/WAIT1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  51:../Generated_Code/WAIT1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  52:../Generated_Code/WAIT1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  53:../Generated_Code/WAIT1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  54:../Generated_Code/WAIT1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  55:../Generated_Code/WAIT1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  56:../Generated_Code/WAIT1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  57:../Generated_Code/WAIT1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  58:../Generated_Code/WAIT1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  59:../Generated_Code/WAIT1.c **** ** ###################################################################*/
  60:../Generated_Code/WAIT1.c **** /*!
  61:../Generated_Code/WAIT1.c **** ** @file WAIT1.c
  62:../Generated_Code/WAIT1.c **** ** @version 01.00
  63:../Generated_Code/WAIT1.c **** ** @brief
  64:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  65:../Generated_Code/WAIT1.c **** */         
  66:../Generated_Code/WAIT1.c **** /*!
  67:../Generated_Code/WAIT1.c **** **  @addtogroup WAIT1_module WAIT1 module documentation
  68:../Generated_Code/WAIT1.c **** **  @{
  69:../Generated_Code/WAIT1.c **** */         
  70:../Generated_Code/WAIT1.c **** 
  71:../Generated_Code/WAIT1.c **** /* MODULE WAIT1. */
  72:../Generated_Code/WAIT1.c **** 
  73:../Generated_Code/WAIT1.c **** #include "WAIT1.h"
  74:../Generated_Code/WAIT1.c **** 
  75:../Generated_Code/WAIT1.c **** 
  76:../Generated_Code/WAIT1.c **** /*
  77:../Generated_Code/WAIT1.c **** ** ===================================================================
  78:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait10Cycles (component Wait)
  79:../Generated_Code/WAIT1.c **** **     Description :
  80:../Generated_Code/WAIT1.c **** **         Wait for 10 CPU cycles.
  81:../Generated_Code/WAIT1.c **** **     Parameters  : None
  82:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  83:../Generated_Code/WAIT1.c **** ** ===================================================================
  84:../Generated_Code/WAIT1.c **** */
  85:../Generated_Code/WAIT1.c **** #ifdef __cplusplus  /* gcc 4.7.3 in C++ mode does not like no_instrument_function: error: can't set
  86:../Generated_Code/WAIT1.c ****   __attribute__((naked))
  87:../Generated_Code/WAIT1.c **** #else
  88:../Generated_Code/WAIT1.c ****   __attribute__((naked, no_instrument_function))
  89:../Generated_Code/WAIT1.c **** #endif
  90:../Generated_Code/WAIT1.c **** void WAIT1_Wait10Cycles(void)
  91:../Generated_Code/WAIT1.c **** {
  29              		.loc 1 91 0
  30              		.cfi_startproc
  31              		@ Naked Function: prologue and epilogue provided by programmer.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  92:../Generated_Code/WAIT1.c ****   /* This function will wait 10 CPU cycles (including call overhead). */
  93:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
  94:../Generated_Code/WAIT1.c ****   /* NOTE: Cortex-M0 and M4 have 1 cycle for a NOP */
  95:../Generated_Code/WAIT1.c ****   /* Compiler is GNUC */
  96:../Generated_Code/WAIT1.c ****   __asm (
  34              		.loc 1 96 0
  35              	@ 96 "../Generated_Code/WAIT1.c" 1
  36 0000 00BF     		nop   
  37 0002 00BF     		nop   
  38 0004 00BF     		nop   
  39 0006 7047     		bx lr 
  40              		
  41              	@ 0 "" 2
  97:../Generated_Code/WAIT1.c ****    /* bl Wait10Cycles() to here: [4] */
  98:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  99:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
 100:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
 101:../Generated_Code/WAIT1.c ****    "bx lr \n\t" /* [3] */
 102:../Generated_Code/WAIT1.c ****   );
 103:../Generated_Code/WAIT1.c ****   /*lint -restore */
 104:../Generated_Code/WAIT1.c **** }
  42              		.loc 1 104 0
  43              		.thumb
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text.WAIT1_Wait100Cycles,"ax",%progbits
  48              		.align	2
  49              		.global	WAIT1_Wait100Cycles
  50              		.thumb
  51              		.thumb_func
  53              	WAIT1_Wait100Cycles:
  54              	.LFB1:
 105:../Generated_Code/WAIT1.c **** 
 106:../Generated_Code/WAIT1.c **** /*
 107:../Generated_Code/WAIT1.c **** ** ===================================================================
 108:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait100Cycles (component Wait)
 109:../Generated_Code/WAIT1.c **** **     Description :
 110:../Generated_Code/WAIT1.c **** **         Wait for 100 CPU cycles.
 111:../Generated_Code/WAIT1.c **** **     Parameters  : None
 112:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 113:../Generated_Code/WAIT1.c **** ** ===================================================================
 114:../Generated_Code/WAIT1.c **** */
 115:../Generated_Code/WAIT1.c **** #ifdef __GNUC__
 116:../Generated_Code/WAIT1.c **** #ifdef __cplusplus  /* gcc 4.7.3 in C++ mode does not like no_instrument_function: error: can't set
 117:../Generated_Code/WAIT1.c ****   __attribute__((naked))
 118:../Generated_Code/WAIT1.c **** #else
 119:../Generated_Code/WAIT1.c ****   __attribute__((naked, no_instrument_function))
 120:../Generated_Code/WAIT1.c **** #endif
 121:../Generated_Code/WAIT1.c **** #endif
 122:../Generated_Code/WAIT1.c **** void WAIT1_Wait100Cycles(void)
 123:../Generated_Code/WAIT1.c **** {
  55              		.loc 1 123 0
  56              		.cfi_startproc
  57              		@ Naked Function: prologue and epilogue provided by programmer.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
 124:../Generated_Code/WAIT1.c ****   /* This function will spend 100 CPU cycles (including call overhead). */
 125:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 126:../Generated_Code/WAIT1.c ****   __asm (
  60              		.loc 1 126 0
  61              	@ 126 "../Generated_Code/WAIT1.c" 1
  62 0000 01B4     		push {r0}   
  63 0002 0020     		movs r0, #0 
  64              		loop:       
  65 0004 00BF     		nop         
  66 0006 00BF     		nop         
  67 0008 00BF     		nop         
  68 000a 00BF     		nop         
  69 000c 00F10100 		add r0,#1   
  70 0010 0928     		cmp r0,#9   
  71 0012 7FF6F7AF 		bls loop    
  72 0016 00BF     		nop         
  73 0018 00BF     		nop         
  74 001a 00BF     		nop         
  75 001c 00BF     		nop         
  76 001e 00BF     		nop         
  77 0020 00BF     		nop         
  78 0022 00BF     		nop         
  79 0024 01BC     		pop {r0}    
  80 0026 7047     		bx lr       
  81              		
  82              	@ 0 "" 2
 127:../Generated_Code/WAIT1.c ****    /* bl to here:               [4] */
 128:../Generated_Code/WAIT1.c ****    "push {r0}   \n\t"        /* [2] */
 129:../Generated_Code/WAIT1.c ****    "movs r0, #0 \n\t"        /* [1] */
 130:../Generated_Code/WAIT1.c ****    "loop:       \n\t"
 131:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 132:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 133:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 134:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 135:../Generated_Code/WAIT1.c ****    "add r0,#1   \n\t"        /* [1] */
 136:../Generated_Code/WAIT1.c ****    "cmp r0,#9   \n\t"        /* [1] */
 137:../Generated_Code/WAIT1.c ****    "bls loop    \n\t"        /* [3] taken, [1] not taken */
 138:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 139:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 140:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 141:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 142:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 143:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 144:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 145:../Generated_Code/WAIT1.c ****    "pop {r0}    \n\t"        /* [2] */
 146:../Generated_Code/WAIT1.c ****    "bx lr       \n\t"        /* [3] */
 147:../Generated_Code/WAIT1.c ****   );
 148:../Generated_Code/WAIT1.c ****   /*lint -restore */
 149:../Generated_Code/WAIT1.c **** }
  83              		.loc 1 149 0
  84              		.thumb
  85              		.cfi_endproc
  86              	.LFE1:
  88              		.section	.text.WAIT1_WaitCycles,"ax",%progbits
  89              		.align	2
  90              		.global	WAIT1_WaitCycles
  91              		.thumb
  92              		.thumb_func
  94              	WAIT1_WaitCycles:
  95              	.LFB2:
 150:../Generated_Code/WAIT1.c **** 
 151:../Generated_Code/WAIT1.c **** /*
 152:../Generated_Code/WAIT1.c **** ** ===================================================================
 153:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitCycles (component Wait)
 154:../Generated_Code/WAIT1.c **** **     Description :
 155:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (16bit data type).
 156:../Generated_Code/WAIT1.c **** **     Parameters  :
 157:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 158:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 159:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 160:../Generated_Code/WAIT1.c **** ** ===================================================================
 161:../Generated_Code/WAIT1.c **** */
 162:../Generated_Code/WAIT1.c **** void WAIT1_WaitCycles(uint16_t cycles)
 163:../Generated_Code/WAIT1.c **** {
  96              		.loc 1 163 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100 0000 80B5     		push	{r7, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 82B0     		sub	sp, sp, #8
 105              		.cfi_def_cfa_offset 16
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 108 0006 0346     		mov	r3, r0
 109 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 165:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 166:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 167:../Generated_Code/WAIT1.c **** 
 168:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 169:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 170:../Generated_Code/WAIT1.c ****     /* wait */
 171:../Generated_Code/WAIT1.c ****   }
 172:../Generated_Code/WAIT1.c **** #else
 173:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 110              		.loc 1 173 0
 111 000a 04E0     		b	.L4
 112              	.L5:
 174:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 113              		.loc 1 174 0
 114 000c FFF7FEFF 		bl	WAIT1_Wait100Cycles
 175:../Generated_Code/WAIT1.c ****     cycles -= 100;
 115              		.loc 1 175 0
 116 0010 FB88     		ldrh	r3, [r7, #6]	@ movhi
 117 0012 643B     		subs	r3, r3, #100
 118 0014 FB80     		strh	r3, [r7, #6]	@ movhi
 119              	.L4:
 173:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 120              		.loc 1 173 0 discriminator 1
 121 0016 FB88     		ldrh	r3, [r7, #6]
 122 0018 642B     		cmp	r3, #100
 123 001a F7D8     		bhi	.L5
 176:../Generated_Code/WAIT1.c ****   }
 177:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 124              		.loc 1 177 0
 125 001c 04E0     		b	.L6
 126              	.L7:
 178:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 127              		.loc 1 178 0
 128 001e FFF7FEFF 		bl	WAIT1_Wait10Cycles
 179:../Generated_Code/WAIT1.c ****     cycles -= 10;
 129              		.loc 1 179 0
 130 0022 FB88     		ldrh	r3, [r7, #6]	@ movhi
 131 0024 0A3B     		subs	r3, r3, #10
 132 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 133              	.L6:
 177:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 134              		.loc 1 177 0 discriminator 1
 135 0028 FB88     		ldrh	r3, [r7, #6]
 136 002a 0A2B     		cmp	r3, #10
 137 002c F7D8     		bhi	.L7
 180:../Generated_Code/WAIT1.c ****   }
 181:../Generated_Code/WAIT1.c **** #endif
 182:../Generated_Code/WAIT1.c ****   /*lint -restore */
 183:../Generated_Code/WAIT1.c **** }
 138              		.loc 1 183 0
 139 002e 0837     		adds	r7, r7, #8
 140 0030 BD46     		mov	sp, r7
 141              		@ sp needed
 142 0032 80BD     		pop	{r7, pc}
 143              		.cfi_endproc
 144              	.LFE2:
 146              		.section	.text.WAIT1_WaitLongCycles,"ax",%progbits
 147              		.align	2
 148              		.global	WAIT1_WaitLongCycles
 149              		.thumb
 150              		.thumb_func
 152              	WAIT1_WaitLongCycles:
 153              	.LFB3:
 184:../Generated_Code/WAIT1.c **** 
 185:../Generated_Code/WAIT1.c **** /*
 186:../Generated_Code/WAIT1.c **** ** ===================================================================
 187:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitLongCycles (component Wait)
 188:../Generated_Code/WAIT1.c **** **     Description :
 189:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (32bit data type).
 190:../Generated_Code/WAIT1.c **** **     Parameters  :
 191:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 192:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 193:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 194:../Generated_Code/WAIT1.c **** ** ===================================================================
 195:../Generated_Code/WAIT1.c **** */
 196:../Generated_Code/WAIT1.c **** void WAIT1_WaitLongCycles(uint32_t cycles)
 197:../Generated_Code/WAIT1.c **** {
 154              		.loc 1 197 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 82B0     		sub	sp, sp, #8
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 198:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 199:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 200:../Generated_Code/WAIT1.c **** 
 201:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 202:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 203:../Generated_Code/WAIT1.c ****     /* wait */
 204:../Generated_Code/WAIT1.c ****   }
 205:../Generated_Code/WAIT1.c **** #else
 206:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 207:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 167              		.loc 1 207 0
 168 0008 08E0     		b	.L9
 169              	.L10:
 208:../Generated_Code/WAIT1.c ****     WAIT1_WaitCycles(60000);
 170              		.loc 1 208 0
 171 000a 4EF66020 		movw	r0, #60000
 172 000e FFF7FEFF 		bl	WAIT1_WaitCycles
 209:../Generated_Code/WAIT1.c ****     cycles -= 60000;
 173              		.loc 1 209 0
 174 0012 7B68     		ldr	r3, [r7, #4]
 175 0014 A3F56A43 		sub	r3, r3, #59904
 176 0018 603B     		subs	r3, r3, #96
 177 001a 7B60     		str	r3, [r7, #4]
 178              	.L9:
 207:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 179              		.loc 1 207 0 discriminator 1
 180 001c 7A68     		ldr	r2, [r7, #4]
 181 001e 4EF66023 		movw	r3, #60000
 182 0022 9A42     		cmp	r2, r3
 183 0024 F1D8     		bhi	.L10
 210:../Generated_Code/WAIT1.c ****   }
 211:../Generated_Code/WAIT1.c ****   WAIT1_WaitCycles((uint16_t)cycles);
 184              		.loc 1 211 0
 185 0026 7B68     		ldr	r3, [r7, #4]
 186 0028 9BB2     		uxth	r3, r3
 187 002a 1846     		mov	r0, r3
 188 002c FFF7FEFF 		bl	WAIT1_WaitCycles
 212:../Generated_Code/WAIT1.c ****   /*lint -restore */
 213:../Generated_Code/WAIT1.c **** #endif
 214:../Generated_Code/WAIT1.c **** }
 189              		.loc 1 214 0
 190 0030 0837     		adds	r7, r7, #8
 191 0032 BD46     		mov	sp, r7
 192              		@ sp needed
 193 0034 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE3:
 197 0036 00BF     		.section	.text.WAIT1_Waitms,"ax",%progbits
 198              		.align	2
 199              		.global	WAIT1_Waitms
 200              		.thumb
 201              		.thumb_func
 203              	WAIT1_Waitms:
 204              	.LFB4:
 215:../Generated_Code/WAIT1.c **** 
 216:../Generated_Code/WAIT1.c **** /*
 217:../Generated_Code/WAIT1.c **** ** ===================================================================
 218:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitms (component Wait)
 219:../Generated_Code/WAIT1.c **** **     Description :
 220:../Generated_Code/WAIT1.c **** **         Wait for a specified time in milliseconds.
 221:../Generated_Code/WAIT1.c **** **     Parameters  :
 222:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 223:../Generated_Code/WAIT1.c **** **         ms              - How many milliseconds the function has to
 224:../Generated_Code/WAIT1.c **** **                           wait
 225:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 226:../Generated_Code/WAIT1.c **** ** ===================================================================
 227:../Generated_Code/WAIT1.c **** */
 228:../Generated_Code/WAIT1.c **** void WAIT1_Waitms(uint16_t ms)
 229:../Generated_Code/WAIT1.c **** {
 205              		.loc 1 229 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 16
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 84B0     		sub	sp, sp, #16
 214              		.cfi_def_cfa_offset 24
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 230:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 231:../Generated_Code/WAIT1.c ****   uint32_t msCycles; /* cycles for 1 ms */
 232:../Generated_Code/WAIT1.c **** 
 233:../Generated_Code/WAIT1.c ****   /* static clock/speed configuration */
 234:../Generated_Code/WAIT1.c ****   msCycles = WAIT1_NofCyclesMs(1, WAIT1_INSTR_CLOCK_HZ);
 219              		.loc 1 234 0
 220 000a 074B     		ldr	r3, .L14
 221 000c FB60     		str	r3, [r7, #12]
 235:../Generated_Code/WAIT1.c ****   while(ms>0) {
 222              		.loc 1 235 0
 223 000e 05E0     		b	.L12
 224              	.L13:
 236:../Generated_Code/WAIT1.c ****     WAIT1_WaitLongCycles(msCycles);
 225              		.loc 1 236 0
 226 0010 F868     		ldr	r0, [r7, #12]
 227 0012 FFF7FEFF 		bl	WAIT1_WaitLongCycles
 237:../Generated_Code/WAIT1.c ****     ms--;
 228              		.loc 1 237 0
 229 0016 FB88     		ldrh	r3, [r7, #6]
 230 0018 013B     		subs	r3, r3, #1
 231 001a FB80     		strh	r3, [r7, #6]	@ movhi
 232              	.L12:
 235:../Generated_Code/WAIT1.c ****   while(ms>0) {
 233              		.loc 1 235 0 discriminator 1
 234 001c FB88     		ldrh	r3, [r7, #6]
 235 001e 002B     		cmp	r3, #0
 236 0020 F6D1     		bne	.L13
 238:../Generated_Code/WAIT1.c ****   }
 239:../Generated_Code/WAIT1.c ****   /*lint -restore */
 240:../Generated_Code/WAIT1.c **** }
 237              		.loc 1 240 0
 238 0022 1037     		adds	r7, r7, #16
 239 0024 BD46     		mov	sp, r7
 240              		@ sp needed
 241 0026 80BD     		pop	{r7, pc}
 242              	.L15:
 243              		.align	2
 244              	.L14:
 245 0028 C0D40100 		.word	120000
 246              		.cfi_endproc
 247              	.LFE4:
 249              		.section	.text.WAIT1_Init,"ax",%progbits
 250              		.align	2
 251              		.global	WAIT1_Init
 252              		.thumb
 253              		.thumb_func
 255              	WAIT1_Init:
 256              	.LFB5:
 241:../Generated_Code/WAIT1.c **** /*
 242:../Generated_Code/WAIT1.c **** ** ===================================================================
 243:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitus (component Wait)
 244:../Generated_Code/WAIT1.c **** **     Description :
 245:../Generated_Code/WAIT1.c **** **         Wait for a specified time in microseconds.
 246:../Generated_Code/WAIT1.c **** **     Parameters  :
 247:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 248:../Generated_Code/WAIT1.c **** **         us              - How many microseconds the function has to
 249:../Generated_Code/WAIT1.c **** **                           wait
 250:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 251:../Generated_Code/WAIT1.c **** ** ===================================================================
 252:../Generated_Code/WAIT1.c **** */
 253:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 254:../Generated_Code/WAIT1.c **** /*
 255:../Generated_Code/WAIT1.c **** ** ===================================================================
 256:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitns (component Wait)
 257:../Generated_Code/WAIT1.c **** **     Description :
 258:../Generated_Code/WAIT1.c **** **         Wait for a specified time in nano seconds.
 259:../Generated_Code/WAIT1.c **** **     Parameters  :
 260:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 261:../Generated_Code/WAIT1.c **** **         ns              - How many ns the function has to wait
 262:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 263:../Generated_Code/WAIT1.c **** ** ===================================================================
 264:../Generated_Code/WAIT1.c **** */
 265:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 266:../Generated_Code/WAIT1.c **** /*
 267:../Generated_Code/WAIT1.c **** ** ===================================================================
 268:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitOSms (component Wait)
 269:../Generated_Code/WAIT1.c **** **     Description :
 270:../Generated_Code/WAIT1.c **** **         If an RTOS is enabled, this routine will use a non-blocking
 271:../Generated_Code/WAIT1.c **** **         wait method. Otherwise it will do a busy/blocking wait.
 272:../Generated_Code/WAIT1.c **** **     Parameters  : None
 273:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 274:../Generated_Code/WAIT1.c **** ** ===================================================================
 275:../Generated_Code/WAIT1.c **** */
 276:../Generated_Code/WAIT1.c **** /*
 277:../Generated_Code/WAIT1.c **** void WAIT1_WaitOSms(void)
 278:../Generated_Code/WAIT1.c **** {
 279:../Generated_Code/WAIT1.c ****   Method is implemented as macro in the header file
 280:../Generated_Code/WAIT1.c **** }
 281:../Generated_Code/WAIT1.c **** */
 282:../Generated_Code/WAIT1.c **** 
 283:../Generated_Code/WAIT1.c **** /*
 284:../Generated_Code/WAIT1.c **** ** ===================================================================
 285:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Init (component Wait)
 286:../Generated_Code/WAIT1.c **** **     Description :
 287:../Generated_Code/WAIT1.c **** **         Driver initialization routine.
 288:../Generated_Code/WAIT1.c **** **     Parameters  : None
 289:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 290:../Generated_Code/WAIT1.c **** ** ===================================================================
 291:../Generated_Code/WAIT1.c **** */
 292:../Generated_Code/WAIT1.c **** void WAIT1_Init(void)
 293:../Generated_Code/WAIT1.c **** {
 257              		.loc 1 293 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 7, -4
 265 0002 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 294:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 295:../Generated_Code/WAIT1.c ****   /* init cycle counter */
 296:../Generated_Code/WAIT1.c ****   KIN1_InitCycleCounter();
 297:../Generated_Code/WAIT1.c ****   KIN1_ResetCycleCounter();
 298:../Generated_Code/WAIT1.c ****   KIN1_EnableCycleCounter();
 299:../Generated_Code/WAIT1.c **** #endif
 300:../Generated_Code/WAIT1.c **** }
 267              		.loc 1 300 0
 268 0004 BD46     		mov	sp, r7
 269              		@ sp needed
 270 0006 5DF8047B 		ldr	r7, [sp], #4
 271 000a 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE5:
 275              		.section	.text.WAIT1_DeInit,"ax",%progbits
 276              		.align	2
 277              		.global	WAIT1_DeInit
 278              		.thumb
 279              		.thumb_func
 281              	WAIT1_DeInit:
 282              	.LFB6:
 301:../Generated_Code/WAIT1.c **** 
 302:../Generated_Code/WAIT1.c **** /*
 303:../Generated_Code/WAIT1.c **** ** ===================================================================
 304:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_DeInit (component Wait)
 305:../Generated_Code/WAIT1.c **** **     Description :
 306:../Generated_Code/WAIT1.c **** **         Driver de-initialization routine
 307:../Generated_Code/WAIT1.c **** **     Parameters  : None
 308:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 309:../Generated_Code/WAIT1.c **** ** ===================================================================
 310:../Generated_Code/WAIT1.c **** */
 311:../Generated_Code/WAIT1.c **** void WAIT1_DeInit(void)
 312:../Generated_Code/WAIT1.c **** {
 283              		.loc 1 312 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 7, -4
 291 0002 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 313:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 314:../Generated_Code/WAIT1.c ****   /* disable hardware cycle counter */
 315:../Generated_Code/WAIT1.c ****   KIN1_DisableCycleCounter();
 316:../Generated_Code/WAIT1.c **** #endif
 317:../Generated_Code/WAIT1.c **** }
 293              		.loc 1 317 0
 294 0004 BD46     		mov	sp, r7
 295              		@ sp needed
 296 0006 5DF8047B 		ldr	r7, [sp], #4
 297 000a 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE6:
 301              		.text
 302              	.Letext0:
 303              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 304              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 WAIT1.c
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:21     .text.WAIT1_Wait10Cycles:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:26     .text.WAIT1_Wait10Cycles:00000000 WAIT1_Wait10Cycles
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:48     .text.WAIT1_Wait100Cycles:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:53     .text.WAIT1_Wait100Cycles:00000000 WAIT1_Wait100Cycles
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:64     .text.WAIT1_Wait100Cycles:00000004 loop
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:89     .text.WAIT1_WaitCycles:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:94     .text.WAIT1_WaitCycles:00000000 WAIT1_WaitCycles
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:147    .text.WAIT1_WaitLongCycles:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:152    .text.WAIT1_WaitLongCycles:00000000 WAIT1_WaitLongCycles
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:198    .text.WAIT1_Waitms:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:203    .text.WAIT1_Waitms:00000000 WAIT1_Waitms
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:245    .text.WAIT1_Waitms:00000028 $d
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:250    .text.WAIT1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:255    .text.WAIT1_Init:00000000 WAIT1_Init
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:276    .text.WAIT1_DeInit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccmG4Cnf.s:281    .text.WAIT1_DeInit:00000000 WAIT1_DeInit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18

NO UNDEFINED SYMBOLS
