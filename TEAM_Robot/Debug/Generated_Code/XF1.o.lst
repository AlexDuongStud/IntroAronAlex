   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"XF1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata.ms_null,"a",%progbits
  21              		.align	2
  24              	ms_null:
  25 0000 286E756C 		.ascii	"(null)\000"
  25      6C2900
  26 0007 00       		.section	.rodata.ms_true,"a",%progbits
  27              		.align	2
  30              	ms_true:
  31 0000 54727565 		.ascii	"True\000"
  31      00
  32 0005 000000   		.section	.rodata.ms_false,"a",%progbits
  33              		.align	2
  36              	ms_false:
  37 0000 46616C73 		.ascii	"False\000"
  37      6500
  38 0006 0000     		.section	.rodata.ms_digits,"a",%progbits
  39              		.align	2
  42              	ms_digits:
  43 0000 30313233 		.ascii	"0123456789abcdef\000"
  43      34353637 
  43      38396162 
  43      63646566 
  43      00
  44 0011 000000   		.section	.rodata.formatStates,"a",%progbits
  45              		.align	2
  48              	formatStates:
  49 0000 06       		.byte	6
  50 0001 00       		.byte	0
  51 0002 00       		.byte	0
  52 0003 06       		.byte	6
  53 0004 00       		.byte	0
  54 0005 01       		.byte	1
  55 0006 00       		.byte	0
  56 0007 00       		.byte	0
  57 0008 10       		.byte	16
  58 0009 00       		.byte	0
  59 000a 03       		.byte	3
  60 000b 06       		.byte	6
  61 000c 00       		.byte	0
  62 000d 06       		.byte	6
  63 000e 02       		.byte	2
  64 000f 10       		.byte	16
  65 0010 04       		.byte	4
  66 0011 45       		.byte	69
  67 0012 45       		.byte	69
  68 0013 45       		.byte	69
  69 0014 45       		.byte	69
  70 0015 05       		.byte	5
  71 0016 05       		.byte	5
  72 0017 05       		.byte	5
  73 0018 05       		.byte	5
  74 0019 35       		.byte	53
  75 001a 30       		.byte	48
  76 001b 00       		.byte	0
  77 001c 50       		.byte	80
  78 001d 60       		.byte	96
  79 001e 00       		.byte	0
  80 001f 00       		.byte	0
  81 0020 00       		.byte	0
  82 0021 20       		.byte	32
  83 0022 28       		.byte	40
  84 0023 38       		.byte	56
  85 0024 50       		.byte	80
  86 0025 50       		.byte	80
  87 0026 00       		.byte	0
  88 0027 00       		.byte	0
  89 0028 00       		.byte	0
  90 0029 30       		.byte	48
  91 002a 30       		.byte	48
  92 002b 30       		.byte	48
  93 002c 50       		.byte	80
  94 002d 50       		.byte	80
  95 002e 00       		.byte	0
  96 002f 00       		.byte	0
  97 0030 08       		.byte	8
  98 0031 20       		.byte	32
  99 0032 20       		.byte	32
 100 0033 28       		.byte	40
 101 0034 20       		.byte	32
 102 0035 20       		.byte	32
 103 0036 20       		.byte	32
 104 0037 00       		.byte	0
 105 0038 08       		.byte	8
 106 0039 60       		.byte	96
 107 003a 60       		.byte	96
 108 003b 60       		.byte	96
 109 003c 60       		.byte	96
 110 003d 60       		.byte	96
 111 003e 60       		.byte	96
 112 003f 00       		.byte	0
 113 0040 00       		.byte	0
 114 0041 70       		.byte	112
 115 0042 78       		.byte	120
 116 0043 78       		.byte	120
 117 0044 78       		.byte	120
 118 0045 70       		.byte	112
 119 0046 78       		.byte	120
 120 0047 00       		.byte	0
 121 0048 07       		.byte	7
 122 0049 08       		.byte	8
 123 004a 00       		.byte	0
 124 004b 00       		.byte	0
 125 004c 07       		.byte	7
 126 004d 00       		.byte	0
 127 004e 00       		.byte	0
 128 004f 08       		.byte	8
 129 0050 08       		.byte	8
 130 0051 00       		.byte	0
 131 0052 00       		.byte	0
 132 0053 08       		.byte	8
 133 0054 00       		.byte	0
 134 0055 08       		.byte	8
 135 0056 00       		.byte	0
 136 0057 00       		.byte	0
 137 0058 08       		.byte	8
 138 0059 00       		.byte	0
 139 005a 07       		.byte	7
 140 005b 00       		.section	.text.ulong2a,"ax",%progbits
 141              		.align	2
 142              		.thumb
 143              		.thumb_func
 145              	ulong2a:
 146              	.LFB0:
 147              		.file 1 "../Generated_Code/XF1.c"
   1:../Generated_Code/XF1.c **** /* ###################################################################
   2:../Generated_Code/XF1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/XF1.c **** **     Filename    : XF1.c
   4:../Generated_Code/XF1.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/XF1.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/XF1.c **** **     Component   : XFormat
   7:../Generated_Code/XF1.c **** **     Version     : Component 01.025, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/XF1.c **** **     Repository  : My Components
   9:../Generated_Code/XF1.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/XF1.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/XF1.c **** **     Abstract    :
  12:../Generated_Code/XF1.c **** **
  13:../Generated_Code/XF1.c **** **     Settings    :
  14:../Generated_Code/XF1.c **** **          Component name                                 : XF1
  15:../Generated_Code/XF1.c **** **          SDK                                            : MCUC1
  16:../Generated_Code/XF1.c **** **          Floating Point                                 : no
  17:../Generated_Code/XF1.c **** **          Static                                         : no
  18:../Generated_Code/XF1.c **** **     Contents    :
  19:../Generated_Code/XF1.c **** **         xvformat  - unsigned XF1_xvformat(void (*outchar)(void *,char), void *arg, const char *.
  20:../Generated_Code/XF1.c **** **         xformat   - unsigned XF1_xformat(void (*outchar)(void *,char), void *arg, const char *..
  21:../Generated_Code/XF1.c **** **         xsprintf  - int XF1_xsprintf(char *buf, const char *fmt, ...);
  22:../Generated_Code/XF1.c **** **         xsnprintf - int XF1_xsnprintf(char *buf, size_t max_len, const char *fmt, ...);
  23:../Generated_Code/XF1.c **** **         Deinit    - void XF1_Deinit(void);
  24:../Generated_Code/XF1.c **** **         Init      - void XF1_Init(void);
  25:../Generated_Code/XF1.c **** **
  26:../Generated_Code/XF1.c **** **     *  Copyright : (c) Copyright Mario Viara, 2014-2018, https://github.com/MarioViara/xprintfc
  27:../Generated_Code/XF1.c **** **      * Adopted for Processor Expert: Erich Styger
  28:../Generated_Code/XF1.c **** **      * xsnprintf() contributed by Engin Lee
  29:../Generated_Code/XF1.c **** **      * Web:         https://mcuoneclipse.com
  30:../Generated_Code/XF1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  31:../Generated_Code/XF1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  32:../Generated_Code/XF1.c **** **      * All rights reserved.
  33:../Generated_Code/XF1.c **** **      *
  34:../Generated_Code/XF1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  35:../Generated_Code/XF1.c **** **      * are permitted provided that the following conditions are met:
  36:../Generated_Code/XF1.c **** **      *
  37:../Generated_Code/XF1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  38:../Generated_Code/XF1.c **** **      *   of conditions and the following disclaimer.
  39:../Generated_Code/XF1.c **** **      *
  40:../Generated_Code/XF1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  41:../Generated_Code/XF1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  42:../Generated_Code/XF1.c **** **      *   other materials provided with the distribution.
  43:../Generated_Code/XF1.c **** **      *
  44:../Generated_Code/XF1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  45:../Generated_Code/XF1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  46:../Generated_Code/XF1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  47:../Generated_Code/XF1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  48:../Generated_Code/XF1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  49:../Generated_Code/XF1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  50:../Generated_Code/XF1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  51:../Generated_Code/XF1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  52:../Generated_Code/XF1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  53:../Generated_Code/XF1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  54:../Generated_Code/XF1.c **** ** ###################################################################*/
  55:../Generated_Code/XF1.c **** /*!
  56:../Generated_Code/XF1.c **** ** @file XF1.c
  57:../Generated_Code/XF1.c **** ** @version 01.00
  58:../Generated_Code/XF1.c **** ** @brief
  59:../Generated_Code/XF1.c **** **
  60:../Generated_Code/XF1.c **** */         
  61:../Generated_Code/XF1.c **** /*!
  62:../Generated_Code/XF1.c **** **  @addtogroup XF1_module XF1 module documentation
  63:../Generated_Code/XF1.c **** **  @{
  64:../Generated_Code/XF1.c **** */         
  65:../Generated_Code/XF1.c **** 
  66:../Generated_Code/XF1.c **** /* MODULE XF1. */
  67:../Generated_Code/XF1.c **** /**
  68:../Generated_Code/XF1.c ****  * @file  xformatc.c
  69:../Generated_Code/XF1.c ****  *
  70:../Generated_Code/XF1.c ****  * @brief Printf C implementation.
  71:../Generated_Code/XF1.c ****  *
  72:../Generated_Code/XF1.c ****  * Tested wuth the following operating systems / compilers :
  73:../Generated_Code/XF1.c ****  *
  74:../Generated_Code/XF1.c ****  * - Visual studio 6
  75:../Generated_Code/XF1.c ****  * - Visual studio 2008 / Windows CE
  76:../Generated_Code/XF1.c ****  * - MinGw 32
  77:../Generated_Code/XF1.c ****  * - Linux i686
  78:../Generated_Code/XF1.c ****  * - Linux x86_64
  79:../Generated_Code/XF1.c ****  * - GCC wiith embedded ARM.
  80:../Generated_Code/XF1.c ****  * - Linux armel
  81:../Generated_Code/XF1.c ****  * - HCS08 with Freescale compiler.
  82:../Generated_Code/XF1.c ****  * - SDCC (Z80 and 8051)
  83:../Generated_Code/XF1.c ****  *
  84:../Generated_Code/XF1.c ****  * @author  Mario Viara
  85:../Generated_Code/XF1.c ****  *
  86:../Generated_Code/XF1.c ****  *
  87:../Generated_Code/XF1.c ****  * @copyright Copyright Mario Viara 2014  - License Open Source (LGPL)
  88:../Generated_Code/XF1.c ****  * This is a free software and is opened for education, research and commercial
  89:../Generated_Code/XF1.c ****  * developments under license policy of following terms:
  90:../Generated_Code/XF1.c ****  *
  91:../Generated_Code/XF1.c ****  * - This is a free software and there is NO WARRANTY.
  92:../Generated_Code/XF1.c ****  * - No restriction on use. You can use, modify and redistribute it for personal,
  93:../Generated_Code/XF1.c ****  *   non-profit or commercial product UNDER YOUR RESPONSIBILITY.
  94:../Generated_Code/XF1.c ****  * - Redistributions of source code must retain the above copyright notice.
  95:../Generated_Code/XF1.c ****  *
  96:../Generated_Code/XF1.c ****  * To contact the author send an email to mario_at_viara.eu
  97:../Generated_Code/XF1.c ****  *
  98:../Generated_Code/XF1.c ****  */
  99:../Generated_Code/XF1.c **** #include "XF1.h"
 100:../Generated_Code/XF1.c **** 
 101:../Generated_Code/XF1.c **** /**
 102:../Generated_Code/XF1.c ****  * Default largest int is long
 103:../Generated_Code/XF1.c ****  */
 104:../Generated_Code/XF1.c **** #ifndef LONG
 105:../Generated_Code/XF1.c **** #define LONG  long
 106:../Generated_Code/XF1.c **** #endif
 107:../Generated_Code/XF1.c **** 
 108:../Generated_Code/XF1.c **** /**
 109:../Generated_Code/XF1.c ****  * Define the double type if not defined
 110:../Generated_Code/XF1.c ****  */
 111:../Generated_Code/XF1.c **** #ifndef DOUBLE
 112:../Generated_Code/XF1.c **** #define DOUBLE  double
 113:../Generated_Code/XF1.c **** #endif
 114:../Generated_Code/XF1.c **** 
 115:../Generated_Code/XF1.c **** 
 116:../Generated_Code/XF1.c **** /**
 117:../Generated_Code/XF1.c ****  * Default long long type
 118:../Generated_Code/XF1.c ****  */
 119:../Generated_Code/XF1.c **** #ifndef LONGLONG
 120:../Generated_Code/XF1.c **** #define LONGLONG   long long
 121:../Generated_Code/XF1.c **** #endif
 122:../Generated_Code/XF1.c **** 
 123:../Generated_Code/XF1.c **** 
 124:../Generated_Code/XF1.c **** /**
 125:../Generated_Code/XF1.c ****  * Definition to convert integer part of floating point
 126:../Generated_Code/XF1.c ****  * number if supported we use the long long type
 127:../Generated_Code/XF1.c ****  */
 128:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
 129:../Generated_Code/XF1.c **** #define FLOAT_LONG    LONGLONG
 130:../Generated_Code/XF1.c **** #define FLOAT_VALUE   llvalue
 131:../Generated_Code/XF1.c **** #define FLOAT_TYPE    FLAG_TYPE_LONGLONG
 132:../Generated_Code/XF1.c **** #else
 133:../Generated_Code/XF1.c **** #define FLOAT_LONG    LONG
 134:../Generated_Code/XF1.c **** #define FLOAT_VALUE   lvalue
 135:../Generated_Code/XF1.c **** #define FLOAT_TYPE    FLAG_TYPE_LONG
 136:../Generated_Code/XF1.c **** #endif
 137:../Generated_Code/XF1.c **** 
 138:../Generated_Code/XF1.c **** /**
 139:../Generated_Code/XF1.c ****  * Structure with all parameter used
 140:../Generated_Code/XF1.c ****  */
 141:../Generated_Code/XF1.c **** struct param_s
 142:../Generated_Code/XF1.c **** {
 143:../Generated_Code/XF1.c ****   /**
 144:../Generated_Code/XF1.c ****    * Buffer for current integer value and for temporary
 145:../Generated_Code/XF1.c ****    * double value defined as union to save stack.
 146:../Generated_Code/XF1.c ****    */
 147:../Generated_Code/XF1.c ****   union
 148:../Generated_Code/XF1.c ****   {
 149:../Generated_Code/XF1.c ****     unsigned LONG   lvalue;
 150:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
 151:../Generated_Code/XF1.c ****     unsigned LONGLONG llvalue;
 152:../Generated_Code/XF1.c **** #endif
 153:../Generated_Code/XF1.c **** #if XCFG_FORMAT_FLOAT
 154:../Generated_Code/XF1.c ****     DOUBLE        dvalue;
 155:../Generated_Code/XF1.c **** #endif
 156:../Generated_Code/XF1.c ****   } values;
 157:../Generated_Code/XF1.c **** 
 158:../Generated_Code/XF1.c ****   /**
 159:../Generated_Code/XF1.c ****    * Pointer to the output buffer
 160:../Generated_Code/XF1.c ****    */
 161:../Generated_Code/XF1.c ****   char*   out;
 162:../Generated_Code/XF1.c **** 
 163:../Generated_Code/XF1.c **** #if XCFG_FORMAT_FLOAT
 164:../Generated_Code/XF1.c ****   /**
 165:../Generated_Code/XF1.c ****    * Floating point argument
 166:../Generated_Code/XF1.c ****    */
 167:../Generated_Code/XF1.c ****   DOUBLE    dbl;
 168:../Generated_Code/XF1.c **** 
 169:../Generated_Code/XF1.c ****   /**
 170:../Generated_Code/XF1.c ****    * Integer part of floating point
 171:../Generated_Code/XF1.c ****    */
 172:../Generated_Code/XF1.c ****   unsigned FLOAT_LONG iPart;
 173:../Generated_Code/XF1.c **** 
 174:../Generated_Code/XF1.c **** #endif
 175:../Generated_Code/XF1.c **** 
 176:../Generated_Code/XF1.c **** 
 177:../Generated_Code/XF1.c ****   /**
 178:../Generated_Code/XF1.c ****    * Current length of the output buffer
 179:../Generated_Code/XF1.c ****    */
 180:../Generated_Code/XF1.c ****   int   length;
 181:../Generated_Code/XF1.c **** 
 182:../Generated_Code/XF1.c ****   /**
 183:../Generated_Code/XF1.c ****    * Field precision
 184:../Generated_Code/XF1.c ****    */
 185:../Generated_Code/XF1.c ****   int   prec;
 186:../Generated_Code/XF1.c **** 
 187:../Generated_Code/XF1.c ****   /**
 188:../Generated_Code/XF1.c ****    * Field width
 189:../Generated_Code/XF1.c ****    */
 190:../Generated_Code/XF1.c ****   int   width;
 191:../Generated_Code/XF1.c **** 
 192:../Generated_Code/XF1.c **** 
 193:../Generated_Code/XF1.c ****   /**
 194:../Generated_Code/XF1.c ****    * Count the number of char emitted
 195:../Generated_Code/XF1.c ****    */
 196:../Generated_Code/XF1.c ****   unsigned  count;
 197:../Generated_Code/XF1.c **** 
 198:../Generated_Code/XF1.c **** 
 199:../Generated_Code/XF1.c ****   /**
 200:../Generated_Code/XF1.c ****    * Parser flags
 201:../Generated_Code/XF1.c ****    */
 202:../Generated_Code/XF1.c ****   unsigned flags;
 203:../Generated_Code/XF1.c **** 
 204:../Generated_Code/XF1.c **** #define FLAG_TYPE_INT   0x0000  /* Argument is integer          */
 205:../Generated_Code/XF1.c **** #define FLAG_TYPE_LONG    0x0001  /* Argument is long           */
 206:../Generated_Code/XF1.c **** #define FLAG_TYPE_SIZEOF  0x0002  /* Argument is size_t         */
 207:../Generated_Code/XF1.c **** #define FLAG_TYPE_LONGLONG  0x0003  /* Argument is long long        */
 208:../Generated_Code/XF1.c **** #define FLAG_TYPE_MASK    0x0003  /* Mask for field type          */
 209:../Generated_Code/XF1.c **** #define FLAG_PREC     0x0004  /* Precision set            */
 210:../Generated_Code/XF1.c **** #define FLAG_LEFT     0x0008  /* Left alignment           */
 211:../Generated_Code/XF1.c **** #define FLAG_BLANK      0x0010  /* Blank before positive integer number */
 212:../Generated_Code/XF1.c **** #define FLAG_PREFIX     0x0020  /* Prefix required            */
 213:../Generated_Code/XF1.c **** #define FLAG_PLUS     0x0040  /* Force a + before positive number   */
 214:../Generated_Code/XF1.c **** #define FLAG_UPPER      0x0080  /* Output in upper case letter      */
 215:../Generated_Code/XF1.c **** #define FLAG_DECIMAL    0x0100  /* Decimal field            */
 216:../Generated_Code/XF1.c **** #define FLAG_INTEGER    0x0200  /* Integer field            */
 217:../Generated_Code/XF1.c **** #define FLAG_MINUS      0x0400  /* Field is negative          */
 218:../Generated_Code/XF1.c **** #define FLAG_VALUE      0x0800  /* Value set              */
 219:../Generated_Code/XF1.c **** #define FLAG_BUFFER     0x1000  /* Buffer set             */
 220:../Generated_Code/XF1.c **** 
 221:../Generated_Code/XF1.c ****   /**
 222:../Generated_Code/XF1.c ****    * Length of the prefix
 223:../Generated_Code/XF1.c ****    */
 224:../Generated_Code/XF1.c ****   int   prefixlen;
 225:../Generated_Code/XF1.c **** 
 226:../Generated_Code/XF1.c ****   /* Buffer to store the field  prefix */
 227:../Generated_Code/XF1.c ****   char prefix[2];
 228:../Generated_Code/XF1.c **** 
 229:../Generated_Code/XF1.c **** 
 230:../Generated_Code/XF1.c ****   /** Buffer to store the biggest integer number in binary */
 231:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
 232:../Generated_Code/XF1.c ****   char    buffer[sizeof(LONGLONG)*8+1];
 233:../Generated_Code/XF1.c **** #else
 234:../Generated_Code/XF1.c ****   char    buffer[sizeof(LONG)*8+1];
 235:../Generated_Code/XF1.c **** #endif
 236:../Generated_Code/XF1.c **** 
 237:../Generated_Code/XF1.c ****   /* Radix for ASCII integer conversion */
 238:../Generated_Code/XF1.c ****   unsigned char radix;
 239:../Generated_Code/XF1.c **** 
 240:../Generated_Code/XF1.c ****   /* char used for padding */
 241:../Generated_Code/XF1.c ****   char    pad;
 242:../Generated_Code/XF1.c **** 
 243:../Generated_Code/XF1.c **** 
 244:../Generated_Code/XF1.c ****   /**
 245:../Generated_Code/XF1.c ****    * Current state
 246:../Generated_Code/XF1.c ****    */
 247:../Generated_Code/XF1.c ****   char    state;
 248:../Generated_Code/XF1.c **** 
 249:../Generated_Code/XF1.c **** };
 250:../Generated_Code/XF1.c **** 
 251:../Generated_Code/XF1.c **** 
 252:../Generated_Code/XF1.c **** /**
 253:../Generated_Code/XF1.c ****  * Enum for the internal state machine
 254:../Generated_Code/XF1.c ****  */
 255:../Generated_Code/XF1.c **** enum State
 256:../Generated_Code/XF1.c **** {
 257:../Generated_Code/XF1.c ****   /* Normal state outputting literal */
 258:../Generated_Code/XF1.c ****   ST_NORMAL = 0,
 259:../Generated_Code/XF1.c ****   /* Just read % */
 260:../Generated_Code/XF1.c ****   ST_PERCENT = 1,
 261:../Generated_Code/XF1.c **** 
 262:../Generated_Code/XF1.c ****   /* Just read flag */
 263:../Generated_Code/XF1.c ****   ST_FLAG = 2,
 264:../Generated_Code/XF1.c **** 
 265:../Generated_Code/XF1.c ****   /* Just read the width */
 266:../Generated_Code/XF1.c ****   ST_WIDTH = 3,
 267:../Generated_Code/XF1.c **** 
 268:../Generated_Code/XF1.c ****   /* Just read '.' */
 269:../Generated_Code/XF1.c ****   ST_DOT= 4,
 270:../Generated_Code/XF1.c **** 
 271:../Generated_Code/XF1.c ****   /* Just read the precision */
 272:../Generated_Code/XF1.c ****   ST_PRECIS = 5,
 273:../Generated_Code/XF1.c **** 
 274:../Generated_Code/XF1.c ****   /* Just  read the size */
 275:../Generated_Code/XF1.c ****   ST_SIZE = 6,
 276:../Generated_Code/XF1.c **** 
 277:../Generated_Code/XF1.c ****   /* Just read the type specifier */
 278:../Generated_Code/XF1.c ****   ST_TYPE = 7
 279:../Generated_Code/XF1.c **** };
 280:../Generated_Code/XF1.c **** 
 281:../Generated_Code/XF1.c **** /**
 282:../Generated_Code/XF1.c ****  * Enum for char class
 283:../Generated_Code/XF1.c ****  */
 284:../Generated_Code/XF1.c **** enum CharClass
 285:../Generated_Code/XF1.c **** {
 286:../Generated_Code/XF1.c ****   /* Other char */
 287:../Generated_Code/XF1.c ****   CH_OTHER = 0,
 288:../Generated_Code/XF1.c ****   /* The % char */
 289:../Generated_Code/XF1.c ****   CH_PERCENT = 1,
 290:../Generated_Code/XF1.c ****   /* The . char */
 291:../Generated_Code/XF1.c ****   CH_DOT = 2,
 292:../Generated_Code/XF1.c ****   /* The * char */
 293:../Generated_Code/XF1.c ****   CH_STAR = 3,
 294:../Generated_Code/XF1.c ****   /* The 0 char */
 295:../Generated_Code/XF1.c ****   CH_ZERO = 4,
 296:../Generated_Code/XF1.c ****   /* Digit 0-9 */
 297:../Generated_Code/XF1.c ****   CH_DIGIT = 5,
 298:../Generated_Code/XF1.c ****   /* Flag chars */
 299:../Generated_Code/XF1.c ****   CH_FLAG = 6,
 300:../Generated_Code/XF1.c ****   /* Size chars */
 301:../Generated_Code/XF1.c ****   CH_SIZE = 7,
 302:../Generated_Code/XF1.c ****   /* Type chars */
 303:../Generated_Code/XF1.c ****   CH_TYPE = 8
 304:../Generated_Code/XF1.c **** };
 305:../Generated_Code/XF1.c **** 
 306:../Generated_Code/XF1.c **** 
 307:../Generated_Code/XF1.c **** 
 308:../Generated_Code/XF1.c **** /**
 309:../Generated_Code/XF1.c ****  * String used when %s is a null parameter
 310:../Generated_Code/XF1.c ****  */
 311:../Generated_Code/XF1.c **** static const char  ms_null[] = "(null)";
 312:../Generated_Code/XF1.c **** /*
 313:../Generated_Code/XF1.c ****  * String for true value
 314:../Generated_Code/XF1.c ****  */
 315:../Generated_Code/XF1.c **** static const char  ms_true[] = "True";
 316:../Generated_Code/XF1.c **** 
 317:../Generated_Code/XF1.c **** /**
 318:../Generated_Code/XF1.c ****  * String for false value
 319:../Generated_Code/XF1.c ****  */
 320:../Generated_Code/XF1.c **** static const char  ms_false[]= "False";
 321:../Generated_Code/XF1.c **** 
 322:../Generated_Code/XF1.c **** 
 323:../Generated_Code/XF1.c **** /*
 324:../Generated_Code/XF1.c ****  * Digit values
 325:../Generated_Code/XF1.c ****  */
 326:../Generated_Code/XF1.c **** static const char ms_digits[] = "0123456789abcdef";
 327:../Generated_Code/XF1.c **** 
 328:../Generated_Code/XF1.c **** 
 329:../Generated_Code/XF1.c **** /*
 330:../Generated_Code/XF1.c ****  * This table contains the next state for all char and it will be
 331:../Generated_Code/XF1.c ****  * generate using xformattable.c
 332:../Generated_Code/XF1.c ****  */
 333:../Generated_Code/XF1.c **** 
 334:../Generated_Code/XF1.c **** static const unsigned char formatStates[] =
 335:../Generated_Code/XF1.c **** {
 336:../Generated_Code/XF1.c ****   0x06,0x00,0x00,0x06,0x00,0x01,0x00,0x00,
 337:../Generated_Code/XF1.c ****   0x10,0x00,0x03,0x06,0x00,0x06,0x02,0x10,
 338:../Generated_Code/XF1.c ****   0x04,0x45,0x45,0x45,0x45,0x05,0x05,0x05,
 339:../Generated_Code/XF1.c ****   0x05,0x35,0x30,0x00,0x50,0x60,0x00,0x00,
 340:../Generated_Code/XF1.c ****   0x00,0x20,0x28,0x38,0x50,0x50,0x00,0x00,
 341:../Generated_Code/XF1.c ****   0x00,0x30,0x30,0x30,0x50,0x50,0x00,0x00,
 342:../Generated_Code/XF1.c ****   0x08,0x20,0x20,0x28,0x20,0x20,0x20,0x00,
 343:../Generated_Code/XF1.c ****   0x08,0x60,0x60,0x60,0x60,0x60,0x60,0x00,
 344:../Generated_Code/XF1.c ****   0x00,0x70,0x78,0x78,0x78,0x70,0x78,0x00,
 345:../Generated_Code/XF1.c ****   0x07,0x08,0x00,0x00,0x07,0x00,0x00,0x08,
 346:../Generated_Code/XF1.c ****   0x08,0x00,0x00,0x08,0x00,0x08,0x00,0x00,
 347:../Generated_Code/XF1.c ****   0x08,0x00,0x07
 348:../Generated_Code/XF1.c **** };
 349:../Generated_Code/XF1.c **** 
 350:../Generated_Code/XF1.c **** 
 351:../Generated_Code/XF1.c **** 
 352:../Generated_Code/XF1.c **** 
 353:../Generated_Code/XF1.c **** /**
 354:../Generated_Code/XF1.c ****  * Convert an unsigned value in one string
 355:../Generated_Code/XF1.c ****  *
 356:../Generated_Code/XF1.c ****  * All parameter are in the passed structure
 357:../Generated_Code/XF1.c ****  *
 358:../Generated_Code/XF1.c ****  * @param prec    - Minimum precision
 359:../Generated_Code/XF1.c ****  * @param lvalue  - Unsigned value
 360:../Generated_Code/XF1.c ****  * @param radix   - Radix (Supported values 2/8/10/16)
 361:../Generated_Code/XF1.c ****  *
 362:../Generated_Code/XF1.c ****  * @param out   - Buffer with the converted value.
 363:../Generated_Code/XF1.c ****  */
 364:../Generated_Code/XF1.c **** static void ulong2a(struct param_s * param)
 365:../Generated_Code/XF1.c **** {
 148              		.loc 1 365 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 16
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 85B0     		sub	sp, sp, #20
 157              		.cfi_def_cfa_offset 24
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 366:../Generated_Code/XF1.c ****   unsigned char digit;
 367:../Generated_Code/XF1.c **** 
 368:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.lvalue)
 161              		.loc 1 368 0
 162 0008 50E0     		b	.L2
 163              	.L8:
 369:../Generated_Code/XF1.c ****   {
 370:../Generated_Code/XF1.c ****     switch (param->radix)
 164              		.loc 1 370 0
 165 000a 7B68     		ldr	r3, [r7, #4]
 166 000c 93F86730 		ldrb	r3, [r3, #103]	@ zero_extendqisi2
 167 0010 082B     		cmp	r3, #8
 168 0012 0FD0     		beq	.L4
 169 0014 102B     		cmp	r3, #16
 170 0016 19D0     		beq	.L5
 171 0018 022B     		cmp	r3, #2
 172 001a 23D1     		bne	.L9
 371:../Generated_Code/XF1.c ****     {
 372:../Generated_Code/XF1.c ****       case 2:
 373:../Generated_Code/XF1.c ****         digit = param->values.lvalue & 0x01;
 173              		.loc 1 373 0
 174 001c 7B68     		ldr	r3, [r7, #4]
 175 001e 1B68     		ldr	r3, [r3]
 176 0020 DBB2     		uxtb	r3, r3
 177 0022 03F00103 		and	r3, r3, #1
 178 0026 FB73     		strb	r3, [r7, #15]
 374:../Generated_Code/XF1.c ****         param->values.lvalue >>= 1;
 179              		.loc 1 374 0
 180 0028 7B68     		ldr	r3, [r7, #4]
 181 002a 1B68     		ldr	r3, [r3]
 182 002c 5A08     		lsrs	r2, r3, #1
 183 002e 7B68     		ldr	r3, [r7, #4]
 184 0030 1A60     		str	r2, [r3]
 375:../Generated_Code/XF1.c ****         break;
 185              		.loc 1 375 0
 186 0032 2DE0     		b	.L7
 187              	.L4:
 376:../Generated_Code/XF1.c **** 
 377:../Generated_Code/XF1.c ****       case 8:
 378:../Generated_Code/XF1.c ****         digit = param->values.lvalue & 0x07;
 188              		.loc 1 378 0
 189 0034 7B68     		ldr	r3, [r7, #4]
 190 0036 1B68     		ldr	r3, [r3]
 191 0038 DBB2     		uxtb	r3, r3
 192 003a 03F00703 		and	r3, r3, #7
 193 003e FB73     		strb	r3, [r7, #15]
 379:../Generated_Code/XF1.c ****         param->values.lvalue >>= 3;
 194              		.loc 1 379 0
 195 0040 7B68     		ldr	r3, [r7, #4]
 196 0042 1B68     		ldr	r3, [r3]
 197 0044 DA08     		lsrs	r2, r3, #3
 198 0046 7B68     		ldr	r3, [r7, #4]
 199 0048 1A60     		str	r2, [r3]
 380:../Generated_Code/XF1.c ****         break;
 200              		.loc 1 380 0
 201 004a 21E0     		b	.L7
 202              	.L5:
 381:../Generated_Code/XF1.c **** 
 382:../Generated_Code/XF1.c ****       case 16:
 383:../Generated_Code/XF1.c ****         digit = param->values.lvalue & 0x0F;
 203              		.loc 1 383 0
 204 004c 7B68     		ldr	r3, [r7, #4]
 205 004e 1B68     		ldr	r3, [r3]
 206 0050 DBB2     		uxtb	r3, r3
 207 0052 03F00F03 		and	r3, r3, #15
 208 0056 FB73     		strb	r3, [r7, #15]
 384:../Generated_Code/XF1.c ****         param->values.lvalue >>= 4;
 209              		.loc 1 384 0
 210 0058 7B68     		ldr	r3, [r7, #4]
 211 005a 1B68     		ldr	r3, [r3]
 212 005c 1A09     		lsrs	r2, r3, #4
 213 005e 7B68     		ldr	r3, [r7, #4]
 214 0060 1A60     		str	r2, [r3]
 385:../Generated_Code/XF1.c ****         break;
 215              		.loc 1 385 0
 216 0062 15E0     		b	.L7
 217              	.L9:
 386:../Generated_Code/XF1.c **** 
 387:../Generated_Code/XF1.c ****       default:
 388:../Generated_Code/XF1.c ****       case 10:
 389:../Generated_Code/XF1.c ****         digit = param->values.lvalue % 10;
 218              		.loc 1 389 0
 219 0064 7B68     		ldr	r3, [r7, #4]
 220 0066 1968     		ldr	r1, [r3]
 221 0068 184B     		ldr	r3, .L10
 222 006a A3FB0123 		umull	r2, r3, r3, r1
 223 006e DA08     		lsrs	r2, r3, #3
 224 0070 1346     		mov	r3, r2
 225 0072 9B00     		lsls	r3, r3, #2
 226 0074 1344     		add	r3, r3, r2
 227 0076 5B00     		lsls	r3, r3, #1
 228 0078 CA1A     		subs	r2, r1, r3
 229 007a 1346     		mov	r3, r2
 230 007c FB73     		strb	r3, [r7, #15]
 390:../Generated_Code/XF1.c ****         param->values.lvalue /= 10;
 231              		.loc 1 390 0
 232 007e 7B68     		ldr	r3, [r7, #4]
 233 0080 1A68     		ldr	r2, [r3]
 234 0082 124B     		ldr	r3, .L10
 235 0084 A3FB0213 		umull	r1, r3, r3, r2
 236 0088 DA08     		lsrs	r2, r3, #3
 237 008a 7B68     		ldr	r3, [r7, #4]
 238 008c 1A60     		str	r2, [r3]
 391:../Generated_Code/XF1.c ****         break;
 239              		.loc 1 391 0
 240 008e 00BF     		nop
 241              	.L7:
 392:../Generated_Code/XF1.c ****     }
 393:../Generated_Code/XF1.c **** 
 394:../Generated_Code/XF1.c **** 
 395:../Generated_Code/XF1.c ****     *param->out -- = ms_digits[digit];
 242              		.loc 1 395 0
 243 0090 7B68     		ldr	r3, [r7, #4]
 244 0092 9B68     		ldr	r3, [r3, #8]
 245 0094 591E     		subs	r1, r3, #1
 246 0096 7A68     		ldr	r2, [r7, #4]
 247 0098 9160     		str	r1, [r2, #8]
 248 009a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 249 009c 0C49     		ldr	r1, .L10+4
 250 009e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 251 00a0 1A70     		strb	r2, [r3]
 396:../Generated_Code/XF1.c ****     param->length ++;
 252              		.loc 1 396 0
 253 00a2 7B68     		ldr	r3, [r7, #4]
 254 00a4 DB68     		ldr	r3, [r3, #12]
 255 00a6 5A1C     		adds	r2, r3, #1
 256 00a8 7B68     		ldr	r3, [r7, #4]
 257 00aa DA60     		str	r2, [r3, #12]
 258              	.L2:
 368:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.lvalue)
 259              		.loc 1 368 0 discriminator 1
 260 00ac 7B68     		ldr	r3, [r7, #4]
 261 00ae 1B69     		ldr	r3, [r3, #16]
 262 00b0 591E     		subs	r1, r3, #1
 263 00b2 7A68     		ldr	r2, [r7, #4]
 264 00b4 1161     		str	r1, [r2, #16]
 265 00b6 002B     		cmp	r3, #0
 266 00b8 A7DC     		bgt	.L8
 368:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.lvalue)
 267              		.loc 1 368 0 is_stmt 0 discriminator 2
 268 00ba 7B68     		ldr	r3, [r7, #4]
 269 00bc 1B68     		ldr	r3, [r3]
 270 00be 002B     		cmp	r3, #0
 271 00c0 A3D1     		bne	.L8
 397:../Generated_Code/XF1.c **** 
 398:../Generated_Code/XF1.c ****   }
 399:../Generated_Code/XF1.c **** 
 400:../Generated_Code/XF1.c **** }
 272              		.loc 1 400 0 is_stmt 1
 273 00c2 1437     		adds	r7, r7, #20
 274 00c4 BD46     		mov	sp, r7
 275              		@ sp needed
 276 00c6 5DF8047B 		ldr	r7, [sp], #4
 277 00ca 7047     		bx	lr
 278              	.L11:
 279              		.align	2
 280              	.L10:
 281 00cc CDCCCCCC 		.word	-858993459
 282 00d0 00000000 		.word	ms_digits
 283              		.cfi_endproc
 284              	.LFE0:
 286              		.global	__aeabi_uldivmod
 287              		.section	.text.ullong2a,"ax",%progbits
 288              		.align	2
 289              		.thumb
 290              		.thumb_func
 292              	ullong2a:
 293              	.LFB1:
 401:../Generated_Code/XF1.c **** 
 402:../Generated_Code/XF1.c **** 
 403:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
 404:../Generated_Code/XF1.c **** #ifdef XCFG_FORMAT_LONG_ARE_LONGLONG
 405:../Generated_Code/XF1.c **** #define ullong2a  ulong2a
 406:../Generated_Code/XF1.c **** #else
 407:../Generated_Code/XF1.c **** static void ullong2a(struct param_s * param)
 408:../Generated_Code/XF1.c **** {
 294              		.loc 1 408 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 299              		.cfi_def_cfa_offset 24
 300              		.cfi_offset 4, -24
 301              		.cfi_offset 5, -20
 302              		.cfi_offset 7, -16
 303              		.cfi_offset 8, -12
 304              		.cfi_offset 9, -8
 305              		.cfi_offset 14, -4
 306 0004 84B0     		sub	sp, sp, #16
 307              		.cfi_def_cfa_offset 40
 308 0006 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0008 7860     		str	r0, [r7, #4]
 409:../Generated_Code/XF1.c ****   unsigned char digit;
 410:../Generated_Code/XF1.c **** 
 411:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.llvalue)
 311              		.loc 1 411 0
 312 000a 6BE0     		b	.L13
 313              	.L19:
 412:../Generated_Code/XF1.c ****   {
 413:../Generated_Code/XF1.c ****     switch (param->radix)
 314              		.loc 1 413 0
 315 000c 7B68     		ldr	r3, [r7, #4]
 316 000e 93F86730 		ldrb	r3, [r3, #103]	@ zero_extendqisi2
 317 0012 082B     		cmp	r3, #8
 318 0014 14D0     		beq	.L15
 319 0016 102B     		cmp	r3, #16
 320 0018 24D0     		beq	.L16
 321 001a 022B     		cmp	r3, #2
 322 001c 36D1     		bne	.L20
 414:../Generated_Code/XF1.c ****     {
 415:../Generated_Code/XF1.c ****       case 2:
 416:../Generated_Code/XF1.c ****         digit = param->values.llvalue & 0x01;
 323              		.loc 1 416 0
 324 001e 7B68     		ldr	r3, [r7, #4]
 325 0020 D3E90023 		ldrd	r2, [r3]
 326 0024 D3B2     		uxtb	r3, r2
 327 0026 03F00103 		and	r3, r3, #1
 328 002a FB73     		strb	r3, [r7, #15]
 417:../Generated_Code/XF1.c ****         param->values.llvalue >>= 1;
 329              		.loc 1 417 0
 330 002c 7B68     		ldr	r3, [r7, #4]
 331 002e D3E90023 		ldrd	r2, [r3]
 332 0032 5B08     		movs	r3, r3, lsr #1
 333 0034 4FEA3202 		mov	r2, r2, rrx
 334 0038 7968     		ldr	r1, [r7, #4]
 335 003a C1E90023 		strd	r2, [r1]
 418:../Generated_Code/XF1.c ****         break;
 336              		.loc 1 418 0
 337 003e 43E0     		b	.L18
 338              	.L15:
 419:../Generated_Code/XF1.c **** 
 420:../Generated_Code/XF1.c ****       case 8:
 421:../Generated_Code/XF1.c ****         digit = param->values.llvalue & 0x07;
 339              		.loc 1 421 0
 340 0040 7B68     		ldr	r3, [r7, #4]
 341 0042 D3E90023 		ldrd	r2, [r3]
 342 0046 D3B2     		uxtb	r3, r2
 343 0048 03F00703 		and	r3, r3, #7
 344 004c FB73     		strb	r3, [r7, #15]
 422:../Generated_Code/XF1.c ****         param->values.llvalue >>= 3;
 345              		.loc 1 422 0
 346 004e 7B68     		ldr	r3, [r7, #4]
 347 0050 D3E90023 		ldrd	r2, [r3]
 348 0054 D408     		lsrs	r4, r2, #3
 349 0056 44EA4374 		orr	r4, r4, r3, lsl #29
 350 005a DD08     		lsrs	r5, r3, #3
 351 005c 7B68     		ldr	r3, [r7, #4]
 352 005e C3E90045 		strd	r4, [r3]
 423:../Generated_Code/XF1.c ****         break;
 353              		.loc 1 423 0
 354 0062 31E0     		b	.L18
 355              	.L16:
 424:../Generated_Code/XF1.c **** 
 425:../Generated_Code/XF1.c ****       case 16:
 426:../Generated_Code/XF1.c ****         digit = param->values.llvalue & 0x0F;
 356              		.loc 1 426 0
 357 0064 7B68     		ldr	r3, [r7, #4]
 358 0066 D3E90023 		ldrd	r2, [r3]
 359 006a D3B2     		uxtb	r3, r2
 360 006c 03F00F03 		and	r3, r3, #15
 361 0070 FB73     		strb	r3, [r7, #15]
 427:../Generated_Code/XF1.c ****         param->values.llvalue >>= 4;
 362              		.loc 1 427 0
 363 0072 7B68     		ldr	r3, [r7, #4]
 364 0074 D3E90023 		ldrd	r2, [r3]
 365 0078 4FEA1218 		lsr	r8, r2, #4
 366 007c 48EA0378 		orr	r8, r8, r3, lsl #28
 367 0080 4FEA1319 		lsr	r9, r3, #4
 368 0084 7B68     		ldr	r3, [r7, #4]
 369 0086 C3E90089 		strd	r8, [r3]
 428:../Generated_Code/XF1.c ****         break;
 370              		.loc 1 428 0
 371 008a 1DE0     		b	.L18
 372              	.L20:
 429:../Generated_Code/XF1.c **** 
 430:../Generated_Code/XF1.c ****       default:
 431:../Generated_Code/XF1.c ****       case 10:
 432:../Generated_Code/XF1.c ****         digit = param->values.llvalue % 10;
 373              		.loc 1 432 0
 374 008c 7B68     		ldr	r3, [r7, #4]
 375 008e D3E90023 		ldrd	r2, [r3]
 376 0092 1046     		mov	r0, r2
 377 0094 1946     		mov	r1, r3
 378 0096 4FF00A02 		mov	r2, #10
 379 009a 4FF00003 		mov	r3, #0
 380 009e FFF7FEFF 		bl	__aeabi_uldivmod
 381 00a2 1346     		mov	r3, r2
 382 00a4 FB73     		strb	r3, [r7, #15]
 433:../Generated_Code/XF1.c ****         param->values.llvalue /= 10;
 383              		.loc 1 433 0
 384 00a6 7B68     		ldr	r3, [r7, #4]
 385 00a8 D3E90023 		ldrd	r2, [r3]
 386 00ac 1046     		mov	r0, r2
 387 00ae 1946     		mov	r1, r3
 388 00b0 4FF00A02 		mov	r2, #10
 389 00b4 4FF00003 		mov	r3, #0
 390 00b8 FFF7FEFF 		bl	__aeabi_uldivmod
 391 00bc 0246     		mov	r2, r0
 392 00be 0B46     		mov	r3, r1
 393 00c0 7968     		ldr	r1, [r7, #4]
 394 00c2 C1E90023 		strd	r2, [r1]
 434:../Generated_Code/XF1.c **** 
 435:../Generated_Code/XF1.c ****         break;
 395              		.loc 1 435 0
 396 00c6 00BF     		nop
 397              	.L18:
 436:../Generated_Code/XF1.c ****     }
 437:../Generated_Code/XF1.c **** 
 438:../Generated_Code/XF1.c **** 
 439:../Generated_Code/XF1.c ****     *param->out -- = ms_digits[digit];
 398              		.loc 1 439 0
 399 00c8 7B68     		ldr	r3, [r7, #4]
 400 00ca 9B68     		ldr	r3, [r3, #8]
 401 00cc 591E     		subs	r1, r3, #1
 402 00ce 7A68     		ldr	r2, [r7, #4]
 403 00d0 9160     		str	r1, [r2, #8]
 404 00d2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 405 00d4 0C49     		ldr	r1, .L21
 406 00d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 407 00d8 1A70     		strb	r2, [r3]
 440:../Generated_Code/XF1.c ****     param->length ++;
 408              		.loc 1 440 0
 409 00da 7B68     		ldr	r3, [r7, #4]
 410 00dc DB68     		ldr	r3, [r3, #12]
 411 00de 5A1C     		adds	r2, r3, #1
 412 00e0 7B68     		ldr	r3, [r7, #4]
 413 00e2 DA60     		str	r2, [r3, #12]
 414              	.L13:
 411:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.llvalue)
 415              		.loc 1 411 0 discriminator 1
 416 00e4 7B68     		ldr	r3, [r7, #4]
 417 00e6 1B69     		ldr	r3, [r3, #16]
 418 00e8 591E     		subs	r1, r3, #1
 419 00ea 7A68     		ldr	r2, [r7, #4]
 420 00ec 1161     		str	r1, [r2, #16]
 421 00ee 002B     		cmp	r3, #0
 422 00f0 8CDC     		bgt	.L19
 411:../Generated_Code/XF1.c ****   while (param->prec -- > 0 ||  param->values.llvalue)
 423              		.loc 1 411 0 is_stmt 0 discriminator 2
 424 00f2 7B68     		ldr	r3, [r7, #4]
 425 00f4 D3E90023 		ldrd	r2, [r3]
 426 00f8 52EA0301 		orrs	r1, r2, r3
 427 00fc 86D1     		bne	.L19
 441:../Generated_Code/XF1.c **** 
 442:../Generated_Code/XF1.c ****   }
 443:../Generated_Code/XF1.c **** 
 444:../Generated_Code/XF1.c **** }
 428              		.loc 1 444 0 is_stmt 1
 429 00fe 1037     		adds	r7, r7, #16
 430 0100 BD46     		mov	sp, r7
 431              		@ sp needed
 432 0102 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 433              	.L22:
 434 0106 00BF     		.align	2
 435              	.L21:
 436 0108 00000000 		.word	ms_digits
 437              		.cfi_endproc
 438              	.LFE1:
 440              		.section	.text.putCharIntoBufMaxLen,"ax",%progbits
 441              		.align	2
 442              		.thumb
 443              		.thumb_func
 445              	putCharIntoBufMaxLen:
 446              	.LFB2:
 445:../Generated_Code/XF1.c **** #endif
 446:../Generated_Code/XF1.c **** #endif
 447:../Generated_Code/XF1.c **** 
 448:../Generated_Code/XF1.c **** #if 1 /* << EST */
 449:../Generated_Code/XF1.c **** typedef struct {
 450:../Generated_Code/XF1.c ****   char *s;
 451:../Generated_Code/XF1.c ****   size_t space;
 452:../Generated_Code/XF1.c **** } StrOutBuffer;
 453:../Generated_Code/XF1.c **** 
 454:../Generated_Code/XF1.c **** static void putCharIntoBufMaxLen(void *arg, char c) {
 447              		.loc 1 454 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 16
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 0000 80B4     		push	{r7}
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 7, -4
 455 0002 85B0     		sub	sp, sp, #20
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0006 7860     		str	r0, [r7, #4]
 460 0008 0B46     		mov	r3, r1
 461 000a FB70     		strb	r3, [r7, #3]
 455:../Generated_Code/XF1.c ****   StrOutBuffer *buff = (StrOutBuffer*)arg;
 462              		.loc 1 455 0
 463 000c 7B68     		ldr	r3, [r7, #4]
 464 000e FB60     		str	r3, [r7, #12]
 456:../Generated_Code/XF1.c ****   if (buff->space > 0) {
 465              		.loc 1 456 0
 466 0010 FB68     		ldr	r3, [r7, #12]
 467 0012 5B68     		ldr	r3, [r3, #4]
 468 0014 002B     		cmp	r3, #0
 469 0016 0BD0     		beq	.L23
 457:../Generated_Code/XF1.c ****     buff->space--;
 470              		.loc 1 457 0
 471 0018 FB68     		ldr	r3, [r7, #12]
 472 001a 5B68     		ldr	r3, [r3, #4]
 473 001c 5A1E     		subs	r2, r3, #1
 474 001e FB68     		ldr	r3, [r7, #12]
 475 0020 5A60     		str	r2, [r3, #4]
 458:../Generated_Code/XF1.c ****     *(buff->s)++ = c;
 476              		.loc 1 458 0
 477 0022 FB68     		ldr	r3, [r7, #12]
 478 0024 1B68     		ldr	r3, [r3]
 479 0026 591C     		adds	r1, r3, #1
 480 0028 FA68     		ldr	r2, [r7, #12]
 481 002a 1160     		str	r1, [r2]
 482 002c FA78     		ldrb	r2, [r7, #3]
 483 002e 1A70     		strb	r2, [r3]
 484              	.L23:
 459:../Generated_Code/XF1.c ****   }
 460:../Generated_Code/XF1.c **** }
 485              		.loc 1 460 0
 486 0030 1437     		adds	r7, r7, #20
 487 0032 BD46     		mov	sp, r7
 488              		@ sp needed
 489 0034 5DF8047B 		ldr	r7, [sp], #4
 490 0038 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE2:
 494 003a 00BF     		.section	.text.xsnprintf,"ax",%progbits
 495              		.align	2
 496              		.global	xsnprintf
 497              		.thumb
 498              		.thumb_func
 500              	xsnprintf:
 501              	.LFB3:
 461:../Generated_Code/XF1.c **** 
 462:../Generated_Code/XF1.c **** int xsnprintf(char *buf, size_t max_len, const char *fmt, va_list args) {
 502              		.loc 1 462 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 32
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 88B0     		sub	sp, sp, #32
 511              		.cfi_def_cfa_offset 40
 512 0004 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
 514 0006 F860     		str	r0, [r7, #12]
 515 0008 B960     		str	r1, [r7, #8]
 516 000a 7A60     		str	r2, [r7, #4]
 517 000c 3B60     		str	r3, [r7]
 463:../Generated_Code/XF1.c ****   int res = -1;
 518              		.loc 1 463 0
 519 000e 4FF0FF33 		mov	r3, #-1
 520 0012 FB61     		str	r3, [r7, #28]
 464:../Generated_Code/XF1.c ****   StrOutBuffer out;
 465:../Generated_Code/XF1.c **** 
 466:../Generated_Code/XF1.c ****   out.space = max_len;
 521              		.loc 1 466 0
 522 0014 BB68     		ldr	r3, [r7, #8]
 523 0016 BB61     		str	r3, [r7, #24]
 467:../Generated_Code/XF1.c ****   out.s = buf;
 524              		.loc 1 467 0
 525 0018 FB68     		ldr	r3, [r7, #12]
 526 001a 7B61     		str	r3, [r7, #20]
 468:../Generated_Code/XF1.c ****   if (max_len <= 1) {
 527              		.loc 1 468 0
 528 001c BB68     		ldr	r3, [r7, #8]
 529 001e 012B     		cmp	r3, #1
 530 0020 04D8     		bhi	.L26
 469:../Generated_Code/XF1.c ****     *buf = 0;
 531              		.loc 1 469 0
 532 0022 FB68     		ldr	r3, [r7, #12]
 533 0024 0022     		movs	r2, #0
 534 0026 1A70     		strb	r2, [r3]
 470:../Generated_Code/XF1.c ****     return 0;
 535              		.loc 1 470 0
 536 0028 0023     		movs	r3, #0
 537 002a 18E0     		b	.L29
 538              	.L26:
 471:../Generated_Code/XF1.c ****   } else {
 472:../Generated_Code/XF1.c ****     out.space--; /* teminal zero*/
 539              		.loc 1 472 0
 540 002c BB69     		ldr	r3, [r7, #24]
 541 002e 013B     		subs	r3, r3, #1
 542 0030 BB61     		str	r3, [r7, #24]
 473:../Generated_Code/XF1.c ****   }
 474:../Generated_Code/XF1.c ****   res = (int)XF1_xvformat(putCharIntoBufMaxLen, (void *)&out, fmt, args);
 543              		.loc 1 474 0
 544 0032 07F11403 		add	r3, r7, #20
 545 0036 0C48     		ldr	r0, .L30
 546 0038 1946     		mov	r1, r3
 547 003a 7A68     		ldr	r2, [r7, #4]
 548 003c 3B68     		ldr	r3, [r7]
 549 003e FFF7FEFF 		bl	XF1_xvformat
 550 0042 0346     		mov	r3, r0
 551 0044 FB61     		str	r3, [r7, #28]
 475:../Generated_Code/XF1.c ****   *(out.s) = 0;
 552              		.loc 1 475 0
 553 0046 7B69     		ldr	r3, [r7, #20]
 554 0048 0022     		movs	r2, #0
 555 004a 1A70     		strb	r2, [r3]
 476:../Generated_Code/XF1.c ****   if (res > 0) {
 556              		.loc 1 476 0
 557 004c FB69     		ldr	r3, [r7, #28]
 558 004e 002B     		cmp	r3, #0
 559 0050 04DD     		ble	.L28
 477:../Generated_Code/XF1.c ****     res = out.s - buf;
 560              		.loc 1 477 0
 561 0052 7B69     		ldr	r3, [r7, #20]
 562 0054 1A46     		mov	r2, r3
 563 0056 FB68     		ldr	r3, [r7, #12]
 564 0058 D31A     		subs	r3, r2, r3
 565 005a FB61     		str	r3, [r7, #28]
 566              	.L28:
 478:../Generated_Code/XF1.c ****   }
 479:../Generated_Code/XF1.c ****   return res;
 567              		.loc 1 479 0
 568 005c FB69     		ldr	r3, [r7, #28]
 569              	.L29:
 480:../Generated_Code/XF1.c **** }
 570              		.loc 1 480 0
 571 005e 1846     		mov	r0, r3
 572 0060 2037     		adds	r7, r7, #32
 573 0062 BD46     		mov	sp, r7
 574              		@ sp needed
 575 0064 80BD     		pop	{r7, pc}
 576              	.L31:
 577 0066 00BF     		.align	2
 578              	.L30:
 579 0068 00000000 		.word	putCharIntoBufMaxLen
 580              		.cfi_endproc
 581              	.LFE3:
 583              		.section	.text.XF1_xformat,"ax",%progbits
 584              		.align	2
 585              		.global	XF1_xformat
 586              		.thumb
 587              		.thumb_func
 589              	XF1_xformat:
 590              	.LFB4:
 481:../Generated_Code/XF1.c **** #endif
 482:../Generated_Code/XF1.c **** 
 483:../Generated_Code/XF1.c **** /*
 484:../Generated_Code/XF1.c **** ** ===================================================================
 485:../Generated_Code/XF1.c **** **     Method      :  XF1_xformat (component XFormat)
 486:../Generated_Code/XF1.c **** **     Description :
 487:../Generated_Code/XF1.c **** **         Printf() like function using variable arguments
 488:../Generated_Code/XF1.c **** **     Parameters  :
 489:../Generated_Code/XF1.c **** **         NAME            - DESCRIPTION
 490:../Generated_Code/XF1.c **** **         outchar         - Function pointer to output one new
 491:../Generated_Code/XF1.c **** **                           character
 492:../Generated_Code/XF1.c **** **         arg             - Argument for the output function
 493:../Generated_Code/XF1.c **** **         fmt             - Format options for the list of parameters
 494:../Generated_Code/XF1.c **** **         openArgList     - Open argument list
 495:../Generated_Code/XF1.c **** **     Returns     :
 496:../Generated_Code/XF1.c **** **         ---             - Error code
 497:../Generated_Code/XF1.c **** ** ===================================================================
 498:../Generated_Code/XF1.c **** */
 499:../Generated_Code/XF1.c **** /**
 500:../Generated_Code/XF1.c ****  * Printf like using variable arguments.
 501:../Generated_Code/XF1.c ****  *
 502:../Generated_Code/XF1.c ****  * @param outchar - Pointer to the function to output one new char.
 503:../Generated_Code/XF1.c ****  * @param arg - Argument for the output function.
 504:../Generated_Code/XF1.c ****  * @param fmt - Format options for the list of parameters.
 505:../Generated_Code/XF1.c ****  * @param ... - Arguments
 506:../Generated_Code/XF1.c ****  *
 507:../Generated_Code/XF1.c ****  * @return The number of char emitted.
 508:../Generated_Code/XF1.c ****  *
 509:../Generated_Code/XF1.c ****  * @see xvformat
 510:../Generated_Code/XF1.c ****  */
 511:../Generated_Code/XF1.c **** unsigned XF1_xformat(void (*outchar)(void *,char), void *arg, const char * fmt, ...)
 512:../Generated_Code/XF1.c **** {
 591              		.loc 1 512 0
 592              		.cfi_startproc
 593              		@ args = 4, pretend = 8, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 1
 595 0000 0CB4     		push	{r2, r3}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 2, -8
 598              		.cfi_offset 3, -4
 599 0002 80B5     		push	{r7, lr}
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 7, -16
 602              		.cfi_offset 14, -12
 603 0004 84B0     		sub	sp, sp, #16
 604              		.cfi_def_cfa_offset 32
 605 0006 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 607 0008 7860     		str	r0, [r7, #4]
 608 000a 3960     		str	r1, [r7]
 513:../Generated_Code/XF1.c ****   va_list list;
 514:../Generated_Code/XF1.c ****   unsigned count;
 515:../Generated_Code/XF1.c **** 
 516:../Generated_Code/XF1.c ****   va_start(list,fmt);
 609              		.loc 1 516 0
 610 000c 07F11C03 		add	r3, r7, #28
 611 0010 BB60     		str	r3, [r7, #8]
 517:../Generated_Code/XF1.c ****   count = XF1_xvformat(outchar,arg,fmt,list);
 612              		.loc 1 517 0
 613 0012 7868     		ldr	r0, [r7, #4]
 614 0014 3968     		ldr	r1, [r7]
 615 0016 BA69     		ldr	r2, [r7, #24]
 616 0018 BB68     		ldr	r3, [r7, #8]
 617 001a FFF7FEFF 		bl	XF1_xvformat
 618 001e F860     		str	r0, [r7, #12]
 518:../Generated_Code/XF1.c **** 
 519:../Generated_Code/XF1.c ****   va_end(list);
 520:../Generated_Code/XF1.c **** 
 521:../Generated_Code/XF1.c ****   return count;
 619              		.loc 1 521 0
 620 0020 FB68     		ldr	r3, [r7, #12]
 522:../Generated_Code/XF1.c **** }
 621              		.loc 1 522 0
 622 0022 1846     		mov	r0, r3
 623 0024 1037     		adds	r7, r7, #16
 624 0026 BD46     		mov	sp, r7
 625              		@ sp needed
 626 0028 BDE88040 		pop	{r7, lr}
 627 002c 02B0     		add	sp, sp, #8
 628 002e 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE4:
 632              		.section	.text.xstrlen,"ax",%progbits
 633              		.align	2
 634              		.thumb
 635              		.thumb_func
 637              	xstrlen:
 638              	.LFB5:
 523:../Generated_Code/XF1.c **** 
 524:../Generated_Code/XF1.c **** /*
 525:../Generated_Code/XF1.c **** ** ===================================================================
 526:../Generated_Code/XF1.c **** **     Method      :  XF1_xvformat (component XFormat)
 527:../Generated_Code/XF1.c **** **     Description :
 528:../Generated_Code/XF1.c **** **         Printf() like format function
 529:../Generated_Code/XF1.c **** **     Parameters  :
 530:../Generated_Code/XF1.c **** **         NAME            - DESCRIPTION
 531:../Generated_Code/XF1.c **** **         outchar         - Function pointer to the function
 532:../Generated_Code/XF1.c **** **                           to output one char.
 533:../Generated_Code/XF1.c **** **       * arg             - Argument for the output function.
 534:../Generated_Code/XF1.c **** **         fmt             - Format options for the list of parameters.
 535:../Generated_Code/XF1.c **** **         args            - List of parameters
 536:../Generated_Code/XF1.c **** **     Returns     :
 537:../Generated_Code/XF1.c **** **         ---             - Error code
 538:../Generated_Code/XF1.c **** ** ===================================================================
 539:../Generated_Code/XF1.c **** */
 540:../Generated_Code/XF1.c **** 
 541:../Generated_Code/XF1.c **** /**
 542:../Generated_Code/XF1.c ****  * We do not want use any library function.
 543:../Generated_Code/XF1.c ****  *
 544:../Generated_Code/XF1.c ****  * @param s - C  string
 545:../Generated_Code/XF1.c ****  * @return The length of the string
 546:../Generated_Code/XF1.c ****  */
 547:../Generated_Code/XF1.c **** static unsigned xstrlen(const char *s)
 548:../Generated_Code/XF1.c **** {
 639              		.loc 1 548 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644 0000 80B4     		push	{r7}
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 7, -4
 647 0002 85B0     		sub	sp, sp, #20
 648              		.cfi_def_cfa_offset 24
 649 0004 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 651 0006 7860     		str	r0, [r7, #4]
 549:../Generated_Code/XF1.c ****   const char *i;
 550:../Generated_Code/XF1.c **** 
 551:../Generated_Code/XF1.c ****   for (i = s ; *i ; i++)
 652              		.loc 1 551 0
 653 0008 7B68     		ldr	r3, [r7, #4]
 654 000a FB60     		str	r3, [r7, #12]
 655 000c 02E0     		b	.L35
 656              	.L36:
 657              		.loc 1 551 0 is_stmt 0 discriminator 2
 658 000e FB68     		ldr	r3, [r7, #12]
 659 0010 0133     		adds	r3, r3, #1
 660 0012 FB60     		str	r3, [r7, #12]
 661              	.L35:
 662              		.loc 1 551 0 discriminator 1
 663 0014 FB68     		ldr	r3, [r7, #12]
 664 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 0018 002B     		cmp	r3, #0
 666 001a F8D1     		bne	.L36
 552:../Generated_Code/XF1.c ****   {
 553:../Generated_Code/XF1.c ****   }
 554:../Generated_Code/XF1.c **** 
 555:../Generated_Code/XF1.c ****   return (unsigned)(i - s);
 667              		.loc 1 555 0 is_stmt 1
 668 001c FA68     		ldr	r2, [r7, #12]
 669 001e 7B68     		ldr	r3, [r7, #4]
 670 0020 D31A     		subs	r3, r2, r3
 556:../Generated_Code/XF1.c **** }
 671              		.loc 1 556 0
 672 0022 1846     		mov	r0, r3
 673 0024 1437     		adds	r7, r7, #20
 674 0026 BD46     		mov	sp, r7
 675              		@ sp needed
 676 0028 5DF8047B 		ldr	r7, [sp], #4
 677 002c 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE5:
 681 002e 00BF     		.section	.text.outBuffer,"ax",%progbits
 682              		.align	2
 683              		.thumb
 684              		.thumb_func
 686              	outBuffer:
 687              	.LFB6:
 557:../Generated_Code/XF1.c **** 
 558:../Generated_Code/XF1.c **** static unsigned outBuffer(void (*myoutchar)(void *arg,char),void *arg,const char *buffer,int len,un
 559:../Generated_Code/XF1.c **** {
 688              		.loc 1 559 0
 689              		.cfi_startproc
 690              		@ args = 4, pretend = 0, frame = 32
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 80B5     		push	{r7, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
 696 0002 88B0     		sub	sp, sp, #32
 697              		.cfi_def_cfa_offset 40
 698 0004 00AF     		add	r7, sp, #0
 699              		.cfi_def_cfa_register 7
 700 0006 F860     		str	r0, [r7, #12]
 701 0008 B960     		str	r1, [r7, #8]
 702 000a 7A60     		str	r2, [r7, #4]
 703 000c 3B60     		str	r3, [r7]
 560:../Generated_Code/XF1.c ****   unsigned count = 0;
 704              		.loc 1 560 0
 705 000e 0023     		movs	r3, #0
 706 0010 FB61     		str	r3, [r7, #28]
 561:../Generated_Code/XF1.c ****   int i;
 562:../Generated_Code/XF1.c ****   char c;
 563:../Generated_Code/XF1.c **** 
 564:../Generated_Code/XF1.c ****   for (i = 0; i < len ; i++)
 707              		.loc 1 564 0
 708 0012 0023     		movs	r3, #0
 709 0014 BB61     		str	r3, [r7, #24]
 710 0016 1FE0     		b	.L39
 711              	.L41:
 565:../Generated_Code/XF1.c ****   {
 566:../Generated_Code/XF1.c ****     c = buffer[i];
 712              		.loc 1 566 0
 713 0018 BB69     		ldr	r3, [r7, #24]
 714 001a 7A68     		ldr	r2, [r7, #4]
 715 001c 1344     		add	r3, r3, r2
 716 001e 1B78     		ldrb	r3, [r3]
 717 0020 FB75     		strb	r3, [r7, #23]
 567:../Generated_Code/XF1.c **** 
 568:../Generated_Code/XF1.c ****     if (toupper && (c >= 'a' && c <= 'z'))
 718              		.loc 1 568 0
 719 0022 BB6A     		ldr	r3, [r7, #40]
 720 0024 002B     		cmp	r3, #0
 721 0026 0BD0     		beq	.L40
 722              		.loc 1 568 0 is_stmt 0 discriminator 1
 723 0028 97F91730 		ldrsb	r3, [r7, #23]
 724 002c 602B     		cmp	r3, #96
 725 002e 07DD     		ble	.L40
 726 0030 97F91730 		ldrsb	r3, [r7, #23]
 727 0034 7A2B     		cmp	r3, #122
 728 0036 03DC     		bgt	.L40
 569:../Generated_Code/XF1.c ****     {
 570:../Generated_Code/XF1.c ****       c -= 'a' - 'A';
 729              		.loc 1 570 0 is_stmt 1
 730 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 731 003a 203B     		subs	r3, r3, #32
 732 003c DBB2     		uxtb	r3, r3
 733 003e FB75     		strb	r3, [r7, #23]
 734              	.L40:
 571:../Generated_Code/XF1.c ****     }
 572:../Generated_Code/XF1.c **** 
 573:../Generated_Code/XF1.c ****     (*myoutchar)(arg,c);
 735              		.loc 1 573 0
 736 0040 97F91720 		ldrsb	r2, [r7, #23]
 737 0044 FB68     		ldr	r3, [r7, #12]
 738 0046 B868     		ldr	r0, [r7, #8]
 739 0048 1146     		mov	r1, r2
 740 004a 9847     		blx	r3
 574:../Generated_Code/XF1.c ****     count++;
 741              		.loc 1 574 0
 742 004c FB69     		ldr	r3, [r7, #28]
 743 004e 0133     		adds	r3, r3, #1
 744 0050 FB61     		str	r3, [r7, #28]
 564:../Generated_Code/XF1.c ****   for (i = 0; i < len ; i++)
 745              		.loc 1 564 0
 746 0052 BB69     		ldr	r3, [r7, #24]
 747 0054 0133     		adds	r3, r3, #1
 748 0056 BB61     		str	r3, [r7, #24]
 749              	.L39:
 564:../Generated_Code/XF1.c ****   for (i = 0; i < len ; i++)
 750              		.loc 1 564 0 is_stmt 0 discriminator 1
 751 0058 BA69     		ldr	r2, [r7, #24]
 752 005a 3B68     		ldr	r3, [r7]
 753 005c 9A42     		cmp	r2, r3
 754 005e DBDB     		blt	.L41
 575:../Generated_Code/XF1.c ****   }
 576:../Generated_Code/XF1.c **** 
 577:../Generated_Code/XF1.c ****   return count;
 755              		.loc 1 577 0 is_stmt 1
 756 0060 FB69     		ldr	r3, [r7, #28]
 578:../Generated_Code/XF1.c **** }
 757              		.loc 1 578 0
 758 0062 1846     		mov	r0, r3
 759 0064 2037     		adds	r7, r7, #32
 760 0066 BD46     		mov	sp, r7
 761              		@ sp needed
 762 0068 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE6:
 766 006a 00BF     		.section	.text.outChars,"ax",%progbits
 767              		.align	2
 768              		.thumb
 769              		.thumb_func
 771              	outChars:
 772              	.LFB7:
 579:../Generated_Code/XF1.c **** 
 580:../Generated_Code/XF1.c **** 
 581:../Generated_Code/XF1.c **** static unsigned outChars(void (*myoutchar)(void *arg,char),void *arg,char ch,int len)
 582:../Generated_Code/XF1.c **** {
 773              		.loc 1 582 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 24
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 86B0     		sub	sp, sp, #24
 782              		.cfi_def_cfa_offset 32
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 0006 F860     		str	r0, [r7, #12]
 786 0008 B960     		str	r1, [r7, #8]
 787 000a 3B60     		str	r3, [r7]
 788 000c 1346     		mov	r3, r2
 789 000e FB71     		strb	r3, [r7, #7]
 583:../Generated_Code/XF1.c ****   unsigned count= 0;
 790              		.loc 1 583 0
 791 0010 0023     		movs	r3, #0
 792 0012 7B61     		str	r3, [r7, #20]
 584:../Generated_Code/XF1.c **** 
 585:../Generated_Code/XF1.c ****   while (len-- > 0)
 793              		.loc 1 585 0
 794 0014 08E0     		b	.L44
 795              	.L45:
 586:../Generated_Code/XF1.c ****   {
 587:../Generated_Code/XF1.c ****     (*myoutchar)(arg,ch);
 796              		.loc 1 587 0
 797 0016 97F90720 		ldrsb	r2, [r7, #7]
 798 001a FB68     		ldr	r3, [r7, #12]
 799 001c B868     		ldr	r0, [r7, #8]
 800 001e 1146     		mov	r1, r2
 801 0020 9847     		blx	r3
 588:../Generated_Code/XF1.c ****     count++;
 802              		.loc 1 588 0
 803 0022 7B69     		ldr	r3, [r7, #20]
 804 0024 0133     		adds	r3, r3, #1
 805 0026 7B61     		str	r3, [r7, #20]
 806              	.L44:
 585:../Generated_Code/XF1.c ****   while (len-- > 0)
 807              		.loc 1 585 0 discriminator 1
 808 0028 3B68     		ldr	r3, [r7]
 809 002a 5A1E     		subs	r2, r3, #1
 810 002c 3A60     		str	r2, [r7]
 811 002e 002B     		cmp	r3, #0
 812 0030 F1DC     		bgt	.L45
 589:../Generated_Code/XF1.c ****   }
 590:../Generated_Code/XF1.c **** 
 591:../Generated_Code/XF1.c ****   return count;
 813              		.loc 1 591 0
 814 0032 7B69     		ldr	r3, [r7, #20]
 592:../Generated_Code/XF1.c **** }
 815              		.loc 1 592 0
 816 0034 1846     		mov	r0, r3
 817 0036 1837     		adds	r7, r7, #24
 818 0038 BD46     		mov	sp, r7
 819              		@ sp needed
 820 003a 80BD     		pop	{r7, pc}
 821              		.cfi_endproc
 822              	.LFE7:
 824              		.section	.text.putCharIntoBuf,"ax",%progbits
 825              		.align	2
 826              		.thumb
 827              		.thumb_func
 829              	putCharIntoBuf:
 830              	.LFB8:
 593:../Generated_Code/XF1.c **** 
 594:../Generated_Code/XF1.c **** #if 1 /* << EST added xsprintf() */
 595:../Generated_Code/XF1.c **** static void putCharIntoBuf(void *arg, char c) {
 831              		.loc 1 595 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 16
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836 0000 80B4     		push	{r7}
 837              		.cfi_def_cfa_offset 4
 838              		.cfi_offset 7, -4
 839 0002 85B0     		sub	sp, sp, #20
 840              		.cfi_def_cfa_offset 24
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 844 0008 0B46     		mov	r3, r1
 845 000a FB70     		strb	r3, [r7, #3]
 596:../Generated_Code/XF1.c ****   char **s = (char **)arg;
 846              		.loc 1 596 0
 847 000c 7B68     		ldr	r3, [r7, #4]
 848 000e FB60     		str	r3, [r7, #12]
 597:../Generated_Code/XF1.c ****   *(*s)++ = c;
 849              		.loc 1 597 0
 850 0010 FB68     		ldr	r3, [r7, #12]
 851 0012 1B68     		ldr	r3, [r3]
 852 0014 591C     		adds	r1, r3, #1
 853 0016 FA68     		ldr	r2, [r7, #12]
 854 0018 1160     		str	r1, [r2]
 855 001a FA78     		ldrb	r2, [r7, #3]
 856 001c 1A70     		strb	r2, [r3]
 598:../Generated_Code/XF1.c **** }
 857              		.loc 1 598 0
 858 001e 1437     		adds	r7, r7, #20
 859 0020 BD46     		mov	sp, r7
 860              		@ sp needed
 861 0022 5DF8047B 		ldr	r7, [sp], #4
 862 0026 7047     		bx	lr
 863              		.cfi_endproc
 864              	.LFE8:
 866              		.section	.text.xsprintf,"ax",%progbits
 867              		.align	2
 868              		.global	xsprintf
 869              		.thumb
 870              		.thumb_func
 872              	xsprintf:
 873              	.LFB9:
 599:../Generated_Code/XF1.c **** 
 600:../Generated_Code/XF1.c **** int xsprintf(char *buf, const char *fmt, va_list args) {
 874              		.loc 1 600 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 24
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 86B0     		sub	sp, sp, #24
 883              		.cfi_def_cfa_offset 32
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 F860     		str	r0, [r7, #12]
 887 0008 B960     		str	r1, [r7, #8]
 888 000a 7A60     		str	r2, [r7, #4]
 601:../Generated_Code/XF1.c ****   int res;
 602:../Generated_Code/XF1.c **** 
 603:../Generated_Code/XF1.c ****   res = (int)XF1_xvformat(putCharIntoBuf, (void *)&buf, fmt, args);
 889              		.loc 1 603 0
 890 000c 07F10C03 		add	r3, r7, #12
 891 0010 0748     		ldr	r0, .L50
 892 0012 1946     		mov	r1, r3
 893 0014 BA68     		ldr	r2, [r7, #8]
 894 0016 7B68     		ldr	r3, [r7, #4]
 895 0018 FFF7FEFF 		bl	XF1_xvformat
 896 001c 0346     		mov	r3, r0
 897 001e 7B61     		str	r3, [r7, #20]
 604:../Generated_Code/XF1.c ****   *buf = 0;
 898              		.loc 1 604 0
 899 0020 FB68     		ldr	r3, [r7, #12]
 900 0022 0022     		movs	r2, #0
 901 0024 1A70     		strb	r2, [r3]
 605:../Generated_Code/XF1.c ****   return res;
 902              		.loc 1 605 0
 903 0026 7B69     		ldr	r3, [r7, #20]
 606:../Generated_Code/XF1.c **** }
 904              		.loc 1 606 0
 905 0028 1846     		mov	r0, r3
 906 002a 1837     		adds	r7, r7, #24
 907 002c BD46     		mov	sp, r7
 908              		@ sp needed
 909 002e 80BD     		pop	{r7, pc}
 910              	.L51:
 911              		.align	2
 912              	.L50:
 913 0030 00000000 		.word	putCharIntoBuf
 914              		.cfi_endproc
 915              	.LFE9:
 917              		.section	.text.XF1_xvformat,"ax",%progbits
 918              		.align	2
 919              		.global	XF1_xvformat
 920              		.thumb
 921              		.thumb_func
 923              	XF1_xvformat:
 924              	.LFB10:
 607:../Generated_Code/XF1.c **** #endif
 608:../Generated_Code/XF1.c **** 
 609:../Generated_Code/XF1.c **** /*
 610:../Generated_Code/XF1.c ****  * Lint want declare list as const but list is an obscured pointer so
 611:../Generated_Code/XF1.c ****  * the warning is disabled.
 612:../Generated_Code/XF1.c ****  */
 613:../Generated_Code/XF1.c **** /*lint -save -e818 */
 614:../Generated_Code/XF1.c **** 
 615:../Generated_Code/XF1.c **** 
 616:../Generated_Code/XF1.c **** /**
 617:../Generated_Code/XF1.c ****  * Printf like format function.
 618:../Generated_Code/XF1.c ****  *
 619:../Generated_Code/XF1.c ****  * General format :
 620:../Generated_Code/XF1.c ****  *
 621:../Generated_Code/XF1.c ****  * %[width][.precision][flags]type
 622:../Generated_Code/XF1.c ****  *
 623:../Generated_Code/XF1.c ****  * - width Is the minimum size of the field.
 624:../Generated_Code/XF1.c ****  *
 625:../Generated_Code/XF1.c ****  * - precision Is the maximum size of the field.
 626:../Generated_Code/XF1.c ****  *
 627:../Generated_Code/XF1.c ****  * Supported flags :
 628:../Generated_Code/XF1.c ****  *
 629:../Generated_Code/XF1.c ****  * - l  With integer number the argument will be of type long.
 630:../Generated_Code/XF1.c ****  * - ll With integer number the argument will be of type long long.
 631:../Generated_Code/XF1.c ****  * -  Space for positive integer a space will be added before.
 632:../Generated_Code/XF1.c ****  * - z  Compatible with C99 the argument is size_t (aka sizeof(void *))
 633:../Generated_Code/XF1.c ****  * - +  A + sign prefix positive number.
 634:../Generated_Code/XF1.c ****  * - #  A prefix will be printed (o for octal,0x for hex,0b for binary)
 635:../Generated_Code/XF1.c ****  * - 0  Value will be padded with zero (default is spacwe)
 636:../Generated_Code/XF1.c ****  * - -  Left justify as default filed have rigth justification.
 637:../Generated_Code/XF1.c ****  *
 638:../Generated_Code/XF1.c ****  * Supported type :
 639:../Generated_Code/XF1.c ****  *
 640:../Generated_Code/XF1.c ****  * - s  Null terminated string of char.
 641:../Generated_Code/XF1.c ****  * - S  Null terminated string of char in upper case.
 642:../Generated_Code/XF1.c ****  * - i  Integer number.
 643:../Generated_Code/XF1.c ****  * - d  Integer number.
 644:../Generated_Code/XF1.c ****  * - u  Unsigned number.
 645:../Generated_Code/XF1.c ****  * - x  Unsigned number in hex.
 646:../Generated_Code/XF1.c ****  * - X  Unsigned number in hex upper case.
 647:../Generated_Code/XF1.c ****  * - b  Binary number
 648:../Generated_Code/XF1.c ****  * - o  Octal number
 649:../Generated_Code/XF1.c ****  * - p  Pointer will be emitted with the prefix ->
 650:../Generated_Code/XF1.c ****  * - P  Pointer in upper case letter.
 651:../Generated_Code/XF1.c ****  * - f  Floating point number.
 652:../Generated_Code/XF1.c ****  * - B  Boolean value printed as True / False.
 653:../Generated_Code/XF1.c ****  *
 654:../Generated_Code/XF1.c ****  * @param outchar - Pointer to the function to output one char.
 655:../Generated_Code/XF1.c ****  * @param arg - Argument for the output function.
 656:../Generated_Code/XF1.c ****  * @param fmt - Format options for the list of parameters.
 657:../Generated_Code/XF1.c ****  * @param args  - List parameters.
 658:../Generated_Code/XF1.c ****  *
 659:../Generated_Code/XF1.c ****  * @return The number of char emitted.
 660:../Generated_Code/XF1.c ****  */
 661:../Generated_Code/XF1.c **** unsigned XF1_xvformat(void (*outchar)(void *,char), void *arg, const char * fmt, va_list _args)
 662:../Generated_Code/XF1.c **** {
 925              		.loc 1 662 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 136
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 90B5     		push	{r4, r7, lr}
 930              		.cfi_def_cfa_offset 12
 931              		.cfi_offset 4, -12
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 A5B0     		sub	sp, sp, #148
 935              		.cfi_def_cfa_offset 160
 936 0004 02AF     		add	r7, sp, #8
 937              		.cfi_def_cfa 7, 152
 938 0006 F860     		str	r0, [r7, #12]
 939 0008 B960     		str	r1, [r7, #8]
 940 000a 7A60     		str	r2, [r7, #4]
 941 000c 3B60     		str	r3, [r7]
 663:../Generated_Code/XF1.c ****   XCFG_FORMAT_STATIC struct param_s param;
 664:../Generated_Code/XF1.c ****   int i;
 665:../Generated_Code/XF1.c ****   char c;
 666:../Generated_Code/XF1.c **** 
 667:../Generated_Code/XF1.c **** #if XCFG_FORMAT_VA_COPY
 668:../Generated_Code/XF1.c ****   va_list args;
 669:../Generated_Code/XF1.c **** 
 670:../Generated_Code/XF1.c ****   va_copy(args,_args);
 671:../Generated_Code/XF1.c **** #else
 672:../Generated_Code/XF1.c **** #define args  _args
 673:../Generated_Code/XF1.c **** #endif
 674:../Generated_Code/XF1.c **** 
 675:../Generated_Code/XF1.c ****   param.count = 0;
 942              		.loc 1 675 0
 943 000e 0023     		movs	r3, #0
 944 0010 BB62     		str	r3, [r7, #40]
 676:../Generated_Code/XF1.c ****   param.state = ST_NORMAL;
 945              		.loc 1 676 0
 946 0012 0023     		movs	r3, #0
 947 0014 87F87930 		strb	r3, [r7, #121]
 677:../Generated_Code/XF1.c **** 
 678:../Generated_Code/XF1.c ****   while (*fmt)
 948              		.loc 1 678 0
 949 0018 45E3     		b	.L53
 950              	.L132:
 679:../Generated_Code/XF1.c ****   {
 680:../Generated_Code/XF1.c ****     c = *fmt++;
 951              		.loc 1 680 0
 952 001a 7B68     		ldr	r3, [r7, #4]
 953 001c 5A1C     		adds	r2, r3, #1
 954 001e 7A60     		str	r2, [r7, #4]
 955 0020 1B78     		ldrb	r3, [r3]
 956 0022 87F88330 		strb	r3, [r7, #131]
 681:../Generated_Code/XF1.c **** 
 682:../Generated_Code/XF1.c ****     if (c < ' ' || c > 'z')
 957              		.loc 1 682 0
 958 0026 97F98330 		ldrsb	r3, [r7, #131]
 959 002a 1F2B     		cmp	r3, #31
 960 002c 03DD     		ble	.L54
 961              		.loc 1 682 0 is_stmt 0 discriminator 1
 962 002e 97F98330 		ldrsb	r3, [r7, #131]
 963 0032 7A2B     		cmp	r3, #122
 964 0034 03DD     		ble	.L55
 965              	.L54:
 683:../Generated_Code/XF1.c ****       i = (int)CH_OTHER;
 966              		.loc 1 683 0 is_stmt 1
 967 0036 0023     		movs	r3, #0
 968 0038 C7F88430 		str	r3, [r7, #132]
 969 003c 08E0     		b	.L56
 970              	.L55:
 684:../Generated_Code/XF1.c ****     else
 685:../Generated_Code/XF1.c ****       i = formatStates[c - ' '] & 0x0F;
 971              		.loc 1 685 0
 972 003e 97F98330 		ldrsb	r3, [r7, #131]
 973 0042 203B     		subs	r3, r3, #32
 974 0044 C54A     		ldr	r2, .L137
 975 0046 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 976 0048 03F00F03 		and	r3, r3, #15
 977 004c C7F88430 		str	r3, [r7, #132]
 978              	.L56:
 686:../Generated_Code/XF1.c **** 
 687:../Generated_Code/XF1.c ****     param.state = formatStates[(i << 3) + param.state] >> 4;
 979              		.loc 1 687 0
 980 0050 D7F88430 		ldr	r3, [r7, #132]
 981 0054 DA00     		lsls	r2, r3, #3
 982 0056 97F87930 		ldrb	r3, [r7, #121]	@ zero_extendqisi2
 983 005a 5BB2     		sxtb	r3, r3
 984 005c 1344     		add	r3, r3, r2
 985 005e BF4A     		ldr	r2, .L137
 986 0060 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 987 0062 1B09     		lsrs	r3, r3, #4
 988 0064 DBB2     		uxtb	r3, r3
 989 0066 DBB2     		uxtb	r3, r3
 990 0068 87F87930 		strb	r3, [r7, #121]
 688:../Generated_Code/XF1.c **** 
 689:../Generated_Code/XF1.c **** 
 690:../Generated_Code/XF1.c ****     switch (param.state)
 991              		.loc 1 690 0
 992 006c 97F87930 		ldrb	r3, [r7, #121]	@ zero_extendqisi2
 993 0070 5BB2     		sxtb	r3, r3
 994 0072 013B     		subs	r3, r3, #1
 995 0074 062B     		cmp	r3, #6
 996 0076 11D8     		bhi	.L57
 997 0078 01A1     		adr	r1, .L59
 998 007a 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 999 007e 00BF     		.p2align 2
 1000              	.L59:
 1001 0080 B1000000 		.word	.L58+1
 1002 0084 7D010000 		.word	.L60+1
 1003 0088 CD000000 		.word	.L61+1
 1004 008c A5060000 		.word	.L134+1
 1005 0090 F9000000 		.word	.L63+1
 1006 0094 2D010000 		.word	.L64+1
 1007 0098 05020000 		.word	.L65+1
 1008              		.p2align 1
 1009              	.L57:
 691:../Generated_Code/XF1.c ****     {
 692:../Generated_Code/XF1.c ****       default:
 693:../Generated_Code/XF1.c ****       case  ST_NORMAL:
 694:../Generated_Code/XF1.c ****         (*outchar)(arg,c);
 1010              		.loc 1 694 0
 1011 009c 97F98320 		ldrsb	r2, [r7, #131]
 1012 00a0 FB68     		ldr	r3, [r7, #12]
 1013 00a2 B868     		ldr	r0, [r7, #8]
 1014 00a4 1146     		mov	r1, r2
 1015 00a6 9847     		blx	r3
 695:../Generated_Code/XF1.c ****         param.count++;
 1016              		.loc 1 695 0
 1017 00a8 BB6A     		ldr	r3, [r7, #40]
 1018 00aa 0133     		adds	r3, r3, #1
 1019 00ac BB62     		str	r3, [r7, #40]
 696:../Generated_Code/XF1.c ****         break;
 1020              		.loc 1 696 0
 1021 00ae FAE2     		b	.L53
 1022              	.L58:
 697:../Generated_Code/XF1.c **** 
 698:../Generated_Code/XF1.c ****       case  ST_PERCENT:
 699:../Generated_Code/XF1.c ****         param.flags = param.length = param.prefixlen = param.width = param.prec = 0;
 1023              		.loc 1 699 0
 1024 00b0 0023     		movs	r3, #0
 1025 00b2 3B62     		str	r3, [r7, #32]
 1026 00b4 3B6A     		ldr	r3, [r7, #32]
 1027 00b6 7B62     		str	r3, [r7, #36]
 1028 00b8 7B6A     		ldr	r3, [r7, #36]
 1029 00ba 3B63     		str	r3, [r7, #48]
 1030 00bc 3B6B     		ldr	r3, [r7, #48]
 1031 00be FB61     		str	r3, [r7, #28]
 1032 00c0 FB69     		ldr	r3, [r7, #28]
 1033 00c2 FB62     		str	r3, [r7, #44]
 700:../Generated_Code/XF1.c ****         param.pad = ' ';
 1034              		.loc 1 700 0
 1035 00c4 2023     		movs	r3, #32
 1036 00c6 87F87830 		strb	r3, [r7, #120]
 701:../Generated_Code/XF1.c ****         break;
 1037              		.loc 1 701 0
 1038 00ca ECE2     		b	.L53
 1039              	.L61:
 702:../Generated_Code/XF1.c **** 
 703:../Generated_Code/XF1.c ****       case  ST_WIDTH:
 704:../Generated_Code/XF1.c ****         if (c == '*')
 1040              		.loc 1 704 0
 1041 00cc 97F98330 		ldrsb	r3, [r7, #131]
 1042 00d0 2A2B     		cmp	r3, #42
 1043 00d2 05D1     		bne	.L66
 705:../Generated_Code/XF1.c ****           param.width = (int)va_arg(args,int);
 1044              		.loc 1 705 0
 1045 00d4 3B68     		ldr	r3, [r7]
 1046 00d6 1A1D     		adds	r2, r3, #4
 1047 00d8 3A60     		str	r2, [r7]
 1048 00da 1B68     		ldr	r3, [r3]
 1049 00dc 7B62     		str	r3, [r7, #36]
 706:../Generated_Code/XF1.c ****         else
 707:../Generated_Code/XF1.c ****           param.width = param.width * 10 + (c - '0');
 708:../Generated_Code/XF1.c ****         break;
 1050              		.loc 1 708 0
 1051 00de E2E2     		b	.L53
 1052              	.L66:
 707:../Generated_Code/XF1.c ****           param.width = param.width * 10 + (c - '0');
 1053              		.loc 1 707 0
 1054 00e0 7A6A     		ldr	r2, [r7, #36]
 1055 00e2 1346     		mov	r3, r2
 1056 00e4 9B00     		lsls	r3, r3, #2
 1057 00e6 1344     		add	r3, r3, r2
 1058 00e8 5B00     		lsls	r3, r3, #1
 1059 00ea 1A46     		mov	r2, r3
 1060 00ec 97F98330 		ldrsb	r3, [r7, #131]
 1061 00f0 303B     		subs	r3, r3, #48
 1062 00f2 1344     		add	r3, r3, r2
 1063 00f4 7B62     		str	r3, [r7, #36]
 1064              		.loc 1 708 0
 1065 00f6 D6E2     		b	.L53
 1066              	.L63:
 709:../Generated_Code/XF1.c **** 
 710:../Generated_Code/XF1.c ****       case  ST_DOT:
 711:../Generated_Code/XF1.c ****         break;
 712:../Generated_Code/XF1.c **** 
 713:../Generated_Code/XF1.c ****       case  ST_PRECIS:
 714:../Generated_Code/XF1.c ****         param.flags |= FLAG_PREC;
 1067              		.loc 1 714 0
 1068 00f8 FB6A     		ldr	r3, [r7, #44]
 1069 00fa 43F00403 		orr	r3, r3, #4
 1070 00fe FB62     		str	r3, [r7, #44]
 715:../Generated_Code/XF1.c ****         if (c == '*')
 1071              		.loc 1 715 0
 1072 0100 97F98330 		ldrsb	r3, [r7, #131]
 1073 0104 2A2B     		cmp	r3, #42
 1074 0106 05D1     		bne	.L68
 716:../Generated_Code/XF1.c ****           param.prec = (int)va_arg(args,int);
 1075              		.loc 1 716 0
 1076 0108 3B68     		ldr	r3, [r7]
 1077 010a 1A1D     		adds	r2, r3, #4
 1078 010c 3A60     		str	r2, [r7]
 1079 010e 1B68     		ldr	r3, [r3]
 1080 0110 3B62     		str	r3, [r7, #32]
 717:../Generated_Code/XF1.c ****         else
 718:../Generated_Code/XF1.c ****           param.prec = param.prec * 10 + (c - '0');
 719:../Generated_Code/XF1.c ****         break;
 1081              		.loc 1 719 0
 1082 0112 C8E2     		b	.L53
 1083              	.L68:
 718:../Generated_Code/XF1.c ****           param.prec = param.prec * 10 + (c - '0');
 1084              		.loc 1 718 0
 1085 0114 3A6A     		ldr	r2, [r7, #32]
 1086 0116 1346     		mov	r3, r2
 1087 0118 9B00     		lsls	r3, r3, #2
 1088 011a 1344     		add	r3, r3, r2
 1089 011c 5B00     		lsls	r3, r3, #1
 1090 011e 1A46     		mov	r2, r3
 1091 0120 97F98330 		ldrsb	r3, [r7, #131]
 1092 0124 303B     		subs	r3, r3, #48
 1093 0126 1344     		add	r3, r3, r2
 1094 0128 3B62     		str	r3, [r7, #32]
 1095              		.loc 1 719 0
 1096 012a BCE2     		b	.L53
 1097              	.L64:
 720:../Generated_Code/XF1.c **** 
 721:../Generated_Code/XF1.c ****       case  ST_SIZE:
 722:../Generated_Code/XF1.c ****         switch (c)
 1098              		.loc 1 722 0
 1099 012c 97F98330 		ldrsb	r3, [r7, #131]
 1100 0130 6C2B     		cmp	r3, #108
 1101 0132 0AD0     		beq	.L71
 1102 0134 7A2B     		cmp	r3, #122
 1103 0136 1FD1     		bne	.L135
 723:../Generated_Code/XF1.c ****         {
 724:../Generated_Code/XF1.c ****           default:
 725:../Generated_Code/XF1.c ****             break;
 726:../Generated_Code/XF1.c ****           case 'z':
 727:../Generated_Code/XF1.c ****             param.flags &= ~FLAG_TYPE_MASK;
 1104              		.loc 1 727 0
 1105 0138 FB6A     		ldr	r3, [r7, #44]
 1106 013a 23F00303 		bic	r3, r3, #3
 1107 013e FB62     		str	r3, [r7, #44]
 728:../Generated_Code/XF1.c ****             param.flags |= FLAG_TYPE_SIZEOF;
 1108              		.loc 1 728 0
 1109 0140 FB6A     		ldr	r3, [r7, #44]
 1110 0142 43F00203 		orr	r3, r3, #2
 1111 0146 FB62     		str	r3, [r7, #44]
 729:../Generated_Code/XF1.c ****             break;
 1112              		.loc 1 729 0
 1113 0148 17E0     		b	.L73
 1114              	.L71:
 730:../Generated_Code/XF1.c **** 
 731:../Generated_Code/XF1.c ****           case 'l':
 732:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
 733:../Generated_Code/XF1.c ****             if ((param.flags & FLAG_TYPE_MASK) == FLAG_TYPE_LONG)
 1115              		.loc 1 733 0
 1116 014a FB6A     		ldr	r3, [r7, #44]
 1117 014c 03F00303 		and	r3, r3, #3
 1118 0150 012B     		cmp	r3, #1
 1119 0152 08D1     		bne	.L74
 734:../Generated_Code/XF1.c ****             {
 735:../Generated_Code/XF1.c ****               param.flags &= ~FLAG_TYPE_MASK;
 1120              		.loc 1 735 0
 1121 0154 FB6A     		ldr	r3, [r7, #44]
 1122 0156 23F00303 		bic	r3, r3, #3
 1123 015a FB62     		str	r3, [r7, #44]
 736:../Generated_Code/XF1.c ****               param.flags |=  FLAG_TYPE_LONGLONG;
 1124              		.loc 1 736 0
 1125 015c FB6A     		ldr	r3, [r7, #44]
 1126 015e 43F00303 		orr	r3, r3, #3
 1127 0162 FB62     		str	r3, [r7, #44]
 737:../Generated_Code/XF1.c ****             }
 738:../Generated_Code/XF1.c ****             else
 739:../Generated_Code/XF1.c ****             {
 740:../Generated_Code/XF1.c ****               param.flags &= ~FLAG_TYPE_MASK;
 741:../Generated_Code/XF1.c ****               param.flags |= FLAG_TYPE_LONG;
 742:../Generated_Code/XF1.c **** 
 743:../Generated_Code/XF1.c ****             }
 744:../Generated_Code/XF1.c **** #else
 745:../Generated_Code/XF1.c ****             param.flags &= ~FLAG_TYPE_MASK;
 746:../Generated_Code/XF1.c ****             param.flags |= FLAG_TYPE_LONG;
 747:../Generated_Code/XF1.c **** #endif
 748:../Generated_Code/XF1.c ****             break;
 1128              		.loc 1 748 0
 1129 0164 09E0     		b	.L73
 1130              	.L74:
 740:../Generated_Code/XF1.c ****               param.flags &= ~FLAG_TYPE_MASK;
 1131              		.loc 1 740 0
 1132 0166 FB6A     		ldr	r3, [r7, #44]
 1133 0168 23F00303 		bic	r3, r3, #3
 1134 016c FB62     		str	r3, [r7, #44]
 741:../Generated_Code/XF1.c ****               param.flags |= FLAG_TYPE_LONG;
 1135              		.loc 1 741 0
 1136 016e FB6A     		ldr	r3, [r7, #44]
 1137 0170 43F00103 		orr	r3, r3, #1
 1138 0174 FB62     		str	r3, [r7, #44]
 1139              		.loc 1 748 0
 1140 0176 00E0     		b	.L73
 1141              	.L135:
 725:../Generated_Code/XF1.c ****             break;
 1142              		.loc 1 725 0
 1143 0178 00BF     		nop
 1144              	.L73:
 749:../Generated_Code/XF1.c **** 
 750:../Generated_Code/XF1.c **** 
 751:../Generated_Code/XF1.c ****         }
 752:../Generated_Code/XF1.c ****         break;
 1145              		.loc 1 752 0
 1146 017a 94E2     		b	.L53
 1147              	.L60:
 753:../Generated_Code/XF1.c **** 
 754:../Generated_Code/XF1.c ****       case  ST_FLAG:
 755:../Generated_Code/XF1.c ****         switch (c)
 1148              		.loc 1 755 0
 1149 017c 97F98330 		ldrsb	r3, [r7, #131]
 1150 0180 203B     		subs	r3, r3, #32
 1151 0182 102B     		cmp	r3, #16
 1152 0184 3CD8     		bhi	.L136
 1153 0186 01A2     		adr	r2, .L78
 1154 0188 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1155              		.p2align 2
 1156              	.L78:
 1157 018c E3010000 		.word	.L77+1
 1158 0190 01020000 		.word	.L136+1
 1159 0194 01020000 		.word	.L136+1
 1160 0198 ED010000 		.word	.L79+1
 1161 019c 01020000 		.word	.L136+1
 1162 01a0 01020000 		.word	.L136+1
 1163 01a4 01020000 		.word	.L136+1
 1164 01a8 01020000 		.word	.L136+1
 1165 01ac 01020000 		.word	.L136+1
 1166 01b0 01020000 		.word	.L136+1
 1167 01b4 01020000 		.word	.L136+1
 1168 01b8 F7010000 		.word	.L80+1
 1169 01bc 01020000 		.word	.L136+1
 1170 01c0 D1010000 		.word	.L81+1
 1171 01c4 01020000 		.word	.L136+1
 1172 01c8 01020000 		.word	.L136+1
 1173 01cc DB010000 		.word	.L82+1
 1174              		.p2align 1
 1175              	.L81:
 756:../Generated_Code/XF1.c ****         {
 757:../Generated_Code/XF1.c ****           default:
 758:../Generated_Code/XF1.c ****             break;
 759:../Generated_Code/XF1.c ****           case  '-':
 760:../Generated_Code/XF1.c ****             param.flags |= FLAG_LEFT;
 1176              		.loc 1 760 0
 1177 01d0 FB6A     		ldr	r3, [r7, #44]
 1178 01d2 43F00803 		orr	r3, r3, #8
 1179 01d6 FB62     		str	r3, [r7, #44]
 761:../Generated_Code/XF1.c ****             break;
 1180              		.loc 1 761 0
 1181 01d8 13E0     		b	.L83
 1182              	.L82:
 762:../Generated_Code/XF1.c ****           case  '0':
 763:../Generated_Code/XF1.c ****             param.pad = '0';
 1183              		.loc 1 763 0
 1184 01da 3023     		movs	r3, #48
 1185 01dc 87F87830 		strb	r3, [r7, #120]
 764:../Generated_Code/XF1.c ****             break;
 1186              		.loc 1 764 0
 1187 01e0 0FE0     		b	.L83
 1188              	.L77:
 765:../Generated_Code/XF1.c ****           case ' ':
 766:../Generated_Code/XF1.c ****             param.flags |= FLAG_BLANK;
 1189              		.loc 1 766 0
 1190 01e2 FB6A     		ldr	r3, [r7, #44]
 1191 01e4 43F01003 		orr	r3, r3, #16
 1192 01e8 FB62     		str	r3, [r7, #44]
 767:../Generated_Code/XF1.c ****             break;
 1193              		.loc 1 767 0
 1194 01ea 0AE0     		b	.L83
 1195              	.L79:
 768:../Generated_Code/XF1.c ****           case '#':
 769:../Generated_Code/XF1.c ****             param.flags |= FLAG_PREFIX;
 1196              		.loc 1 769 0
 1197 01ec FB6A     		ldr	r3, [r7, #44]
 1198 01ee 43F02003 		orr	r3, r3, #32
 1199 01f2 FB62     		str	r3, [r7, #44]
 770:../Generated_Code/XF1.c ****             break;
 1200              		.loc 1 770 0
 1201 01f4 05E0     		b	.L83
 1202              	.L80:
 771:../Generated_Code/XF1.c ****           case '+':
 772:../Generated_Code/XF1.c ****             param.flags |= FLAG_PLUS;
 1203              		.loc 1 772 0
 1204 01f6 FB6A     		ldr	r3, [r7, #44]
 1205 01f8 43F04003 		orr	r3, r3, #64
 1206 01fc FB62     		str	r3, [r7, #44]
 773:../Generated_Code/XF1.c ****             break;
 1207              		.loc 1 773 0
 1208 01fe 00E0     		b	.L83
 1209              	.L136:
 758:../Generated_Code/XF1.c ****             break;
 1210              		.loc 1 758 0
 1211 0200 00BF     		nop
 1212              	.L83:
 774:../Generated_Code/XF1.c ****         }
 775:../Generated_Code/XF1.c ****         break;
 1213              		.loc 1 775 0
 1214 0202 50E2     		b	.L53
 1215              	.L65:
 776:../Generated_Code/XF1.c **** 
 777:../Generated_Code/XF1.c ****       case  ST_TYPE:
 778:../Generated_Code/XF1.c ****         switch (c)
 1216              		.loc 1 778 0
 1217 0204 97F98330 		ldrsb	r3, [r7, #131]
 1218 0208 423B     		subs	r3, r3, #66
 1219 020a 362B     		cmp	r3, #54
 1220 020c 70D8     		bhi	.L84
 1221 020e 01A1     		adr	r1, .L86
 1222 0210 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 1223              		.p2align 2
 1224              	.L86:
 1225 0214 29040000 		.word	.L85+1
 1226 0218 05040000 		.word	.L87+1
 1227 021c F1020000 		.word	.L84+1
 1228 0220 F1020000 		.word	.L84+1
 1229 0224 F1020000 		.word	.L84+1
 1230 0228 F1020000 		.word	.L84+1
 1231 022c F1020000 		.word	.L84+1
 1232 0230 F1020000 		.word	.L84+1
 1233 0234 F1020000 		.word	.L84+1
 1234 0238 F1020000 		.word	.L84+1
 1235 023c F1020000 		.word	.L84+1
 1236 0240 F1020000 		.word	.L84+1
 1237 0244 F1020000 		.word	.L84+1
 1238 0248 F1020000 		.word	.L84+1
 1239 024c F7020000 		.word	.L88+1
 1240 0250 F1020000 		.word	.L84+1
 1241 0254 F1020000 		.word	.L84+1
 1242 0258 DB030000 		.word	.L89+1
 1243 025c F1020000 		.word	.L84+1
 1244 0260 F1020000 		.word	.L84+1
 1245 0264 F1020000 		.word	.L84+1
 1246 0268 F1020000 		.word	.L84+1
 1247 026c 87030000 		.word	.L90+1
 1248 0270 F1020000 		.word	.L84+1
 1249 0274 F1020000 		.word	.L84+1
 1250 0278 F1020000 		.word	.L84+1
 1251 027c F1020000 		.word	.L84+1
 1252 0280 F1020000 		.word	.L84+1
 1253 0284 F1020000 		.word	.L84+1
 1254 0288 F1020000 		.word	.L84+1
 1255 028c F1020000 		.word	.L84+1
 1256 0290 F1020000 		.word	.L84+1
 1257 0294 2F030000 		.word	.L91+1
 1258 0298 0D040000 		.word	.L92+1
 1259 029c BB030000 		.word	.L93+1
 1260 02a0 F1020000 		.word	.L84+1
 1261 02a4 F1020000 		.word	.L84+1
 1262 02a8 F1020000 		.word	.L84+1
 1263 02ac F1020000 		.word	.L84+1
 1264 02b0 BB030000 		.word	.L93+1
 1265 02b4 F1020000 		.word	.L84+1
 1266 02b8 F1020000 		.word	.L84+1
 1267 02bc F1020000 		.word	.L84+1
 1268 02c0 F1020000 		.word	.L84+1
 1269 02c4 F1020000 		.word	.L84+1
 1270 02c8 61030000 		.word	.L94+1
 1271 02cc FF020000 		.word	.L95+1
 1272 02d0 F1020000 		.word	.L84+1
 1273 02d4 F1020000 		.word	.L84+1
 1274 02d8 E3030000 		.word	.L96+1
 1275 02dc F1020000 		.word	.L84+1
 1276 02e0 CB030000 		.word	.L97+1
 1277 02e4 F1020000 		.word	.L84+1
 1278 02e8 F1020000 		.word	.L84+1
 1279 02ec 8F030000 		.word	.L98+1
 1280              		.p2align 1
 1281              	.L84:
 779:../Generated_Code/XF1.c ****         {
 780:../Generated_Code/XF1.c ****           default:
 781:../Generated_Code/XF1.c ****             param.length = 0;
 1282              		.loc 1 781 0
 1283 02f0 0023     		movs	r3, #0
 1284 02f2 FB61     		str	r3, [r7, #28]
 782:../Generated_Code/XF1.c ****             break;
 1285              		.loc 1 782 0
 1286 02f4 AAE0     		b	.L99
 1287              	.L88:
 783:../Generated_Code/XF1.c **** 
 784:../Generated_Code/XF1.c ****             /*
 785:../Generated_Code/XF1.c ****              * Pointer upper case
 786:../Generated_Code/XF1.c ****              */
 787:../Generated_Code/XF1.c ****           case  'P':
 788:../Generated_Code/XF1.c ****             param.flags |=  FLAG_UPPER;
 1288              		.loc 1 788 0
 1289 02f6 FB6A     		ldr	r3, [r7, #44]
 1290 02f8 43F08003 		orr	r3, r3, #128
 1291 02fc FB62     		str	r3, [r7, #44]
 1292              	.L95:
 789:../Generated_Code/XF1.c ****             /* no break */
 790:../Generated_Code/XF1.c ****             /*lint -fallthrough */
 791:../Generated_Code/XF1.c **** 
 792:../Generated_Code/XF1.c ****             /*
 793:../Generated_Code/XF1.c ****              * Pointer
 794:../Generated_Code/XF1.c ****              */
 795:../Generated_Code/XF1.c ****           case  'p':
 796:../Generated_Code/XF1.c ****             param.flags &= ~FLAG_TYPE_MASK;
 1293              		.loc 1 796 0
 1294 02fe FB6A     		ldr	r3, [r7, #44]
 1295 0300 23F00303 		bic	r3, r3, #3
 1296 0304 FB62     		str	r3, [r7, #44]
 797:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER | FLAG_TYPE_SIZEOF;
 1297              		.loc 1 797 0
 1298 0306 FB6A     		ldr	r3, [r7, #44]
 1299 0308 43F40073 		orr	r3, r3, #512
 1300 030c 43F00203 		orr	r3, r3, #2
 1301 0310 FB62     		str	r3, [r7, #44]
 798:../Generated_Code/XF1.c ****             param.radix = 16;
 1302              		.loc 1 798 0
 1303 0312 1023     		movs	r3, #16
 1304 0314 87F87730 		strb	r3, [r7, #119]
 799:../Generated_Code/XF1.c ****             param.prec = sizeof(void *) * 2;
 1305              		.loc 1 799 0
 1306 0318 0823     		movs	r3, #8
 1307 031a 3B62     		str	r3, [r7, #32]
 800:../Generated_Code/XF1.c ****             param.prefix[0] = '-';
 1308              		.loc 1 800 0
 1309 031c 2D23     		movs	r3, #45
 1310 031e 87F83430 		strb	r3, [r7, #52]
 801:../Generated_Code/XF1.c ****             param.prefix[1] = '>';
 1311              		.loc 1 801 0
 1312 0322 3E23     		movs	r3, #62
 1313 0324 87F83530 		strb	r3, [r7, #53]
 802:../Generated_Code/XF1.c ****             param.prefixlen = 2;
 1314              		.loc 1 802 0
 1315 0328 0223     		movs	r3, #2
 1316 032a 3B63     		str	r3, [r7, #48]
 803:../Generated_Code/XF1.c ****             break;
 1317              		.loc 1 803 0
 1318 032c 8EE0     		b	.L99
 1319              	.L91:
 804:../Generated_Code/XF1.c **** 
 805:../Generated_Code/XF1.c ****             /*
 806:../Generated_Code/XF1.c ****              * Binary number
 807:../Generated_Code/XF1.c ****              */
 808:../Generated_Code/XF1.c ****           case  'b':
 809:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER;
 1320              		.loc 1 809 0
 1321 032e FB6A     		ldr	r3, [r7, #44]
 1322 0330 43F40073 		orr	r3, r3, #512
 1323 0334 FB62     		str	r3, [r7, #44]
 810:../Generated_Code/XF1.c ****             param.radix = 2;
 1324              		.loc 1 810 0
 1325 0336 0223     		movs	r3, #2
 1326 0338 87F87730 		strb	r3, [r7, #119]
 811:../Generated_Code/XF1.c ****             if (param.flags & FLAG_PREFIX)
 1327              		.loc 1 811 0
 1328 033c FB6A     		ldr	r3, [r7, #44]
 1329 033e 03F02003 		and	r3, r3, #32
 1330 0342 002B     		cmp	r3, #0
 1331 0344 08D0     		beq	.L100
 812:../Generated_Code/XF1.c ****             {
 813:../Generated_Code/XF1.c ****               param.prefix[0] = '0';
 1332              		.loc 1 813 0
 1333 0346 3023     		movs	r3, #48
 1334 0348 87F83430 		strb	r3, [r7, #52]
 814:../Generated_Code/XF1.c ****               param.prefix[1] = 'b';
 1335              		.loc 1 814 0
 1336 034c 6223     		movs	r3, #98
 1337 034e 87F83530 		strb	r3, [r7, #53]
 815:../Generated_Code/XF1.c ****               param.prefixlen = 2;
 1338              		.loc 1 815 0
 1339 0352 0223     		movs	r3, #2
 1340 0354 3B63     		str	r3, [r7, #48]
 816:../Generated_Code/XF1.c ****             }
 817:../Generated_Code/XF1.c ****             break;
 1341              		.loc 1 817 0
 1342 0356 79E0     		b	.L99
 1343              	.L100:
 1344 0358 78E0     		b	.L99
 1345              	.L138:
 1346 035a 00BF     		.align	2
 1347              	.L137:
 1348 035c 00000000 		.word	formatStates
 1349              	.L94:
 818:../Generated_Code/XF1.c **** 
 819:../Generated_Code/XF1.c ****             /*
 820:../Generated_Code/XF1.c ****              * Octal number
 821:../Generated_Code/XF1.c ****              */
 822:../Generated_Code/XF1.c ****           case  'o':
 823:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER;
 1350              		.loc 1 823 0
 1351 0360 FB6A     		ldr	r3, [r7, #44]
 1352 0362 43F40073 		orr	r3, r3, #512
 1353 0366 FB62     		str	r3, [r7, #44]
 824:../Generated_Code/XF1.c ****             param.radix = 8;
 1354              		.loc 1 824 0
 1355 0368 0823     		movs	r3, #8
 1356 036a 87F87730 		strb	r3, [r7, #119]
 825:../Generated_Code/XF1.c ****             if (param.flags & FLAG_PREFIX)
 1357              		.loc 1 825 0
 1358 036e FB6A     		ldr	r3, [r7, #44]
 1359 0370 03F02003 		and	r3, r3, #32
 1360 0374 002B     		cmp	r3, #0
 1361 0376 05D0     		beq	.L101
 826:../Generated_Code/XF1.c ****             {
 827:../Generated_Code/XF1.c ****               param.prefix[0] = '0';
 1362              		.loc 1 827 0
 1363 0378 3023     		movs	r3, #48
 1364 037a 87F83430 		strb	r3, [r7, #52]
 828:../Generated_Code/XF1.c ****               param.prefixlen = 1;
 1365              		.loc 1 828 0
 1366 037e 0123     		movs	r3, #1
 1367 0380 3B63     		str	r3, [r7, #48]
 829:../Generated_Code/XF1.c ****             }
 830:../Generated_Code/XF1.c ****             break;
 1368              		.loc 1 830 0
 1369 0382 63E0     		b	.L99
 1370              	.L101:
 1371 0384 62E0     		b	.L99
 1372              	.L90:
 831:../Generated_Code/XF1.c **** 
 832:../Generated_Code/XF1.c ****             /*
 833:../Generated_Code/XF1.c ****              * Hex number upper case letter.
 834:../Generated_Code/XF1.c ****              */
 835:../Generated_Code/XF1.c ****           case  'X':
 836:../Generated_Code/XF1.c ****             /* no break */
 837:../Generated_Code/XF1.c ****             param.flags |= FLAG_UPPER;
 1373              		.loc 1 837 0
 1374 0386 FB6A     		ldr	r3, [r7, #44]
 1375 0388 43F08003 		orr	r3, r3, #128
 1376 038c FB62     		str	r3, [r7, #44]
 1377              	.L98:
 838:../Generated_Code/XF1.c **** 
 839:../Generated_Code/XF1.c ****             /* no break */
 840:../Generated_Code/XF1.c **** 
 841:../Generated_Code/XF1.c ****             /* lint -fallthrough */
 842:../Generated_Code/XF1.c **** 
 843:../Generated_Code/XF1.c ****             /*
 844:../Generated_Code/XF1.c ****              * Hex number lower case
 845:../Generated_Code/XF1.c ****              */
 846:../Generated_Code/XF1.c ****           case  'x':
 847:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER;
 1378              		.loc 1 847 0
 1379 038e FB6A     		ldr	r3, [r7, #44]
 1380 0390 43F40073 		orr	r3, r3, #512
 1381 0394 FB62     		str	r3, [r7, #44]
 848:../Generated_Code/XF1.c ****             param.radix = 16;
 1382              		.loc 1 848 0
 1383 0396 1023     		movs	r3, #16
 1384 0398 87F87730 		strb	r3, [r7, #119]
 849:../Generated_Code/XF1.c ****             if (param.flags & FLAG_PREFIX)
 1385              		.loc 1 849 0
 1386 039c FB6A     		ldr	r3, [r7, #44]
 1387 039e 03F02003 		and	r3, r3, #32
 1388 03a2 002B     		cmp	r3, #0
 1389 03a4 08D0     		beq	.L102
 850:../Generated_Code/XF1.c ****             {
 851:../Generated_Code/XF1.c ****               param.prefix[0] = '0';
 1390              		.loc 1 851 0
 1391 03a6 3023     		movs	r3, #48
 1392 03a8 87F83430 		strb	r3, [r7, #52]
 852:../Generated_Code/XF1.c ****               param.prefix[1] = 'x';
 1393              		.loc 1 852 0
 1394 03ac 7823     		movs	r3, #120
 1395 03ae 87F83530 		strb	r3, [r7, #53]
 853:../Generated_Code/XF1.c ****               param.prefixlen = 2;
 1396              		.loc 1 853 0
 1397 03b2 0223     		movs	r3, #2
 1398 03b4 3B63     		str	r3, [r7, #48]
 854:../Generated_Code/XF1.c ****             }
 855:../Generated_Code/XF1.c ****             break;
 1399              		.loc 1 855 0
 1400 03b6 49E0     		b	.L99
 1401              	.L102:
 1402 03b8 48E0     		b	.L99
 1403              	.L93:
 856:../Generated_Code/XF1.c **** 
 857:../Generated_Code/XF1.c ****             /*
 858:../Generated_Code/XF1.c ****              * Integer number radix 10
 859:../Generated_Code/XF1.c ****              */
 860:../Generated_Code/XF1.c ****           case  'd':
 861:../Generated_Code/XF1.c ****           case  'i':
 862:../Generated_Code/XF1.c ****             param.flags |= FLAG_DECIMAL|FLAG_INTEGER;
 1404              		.loc 1 862 0
 1405 03ba FB6A     		ldr	r3, [r7, #44]
 1406 03bc 43F44073 		orr	r3, r3, #768
 1407 03c0 FB62     		str	r3, [r7, #44]
 863:../Generated_Code/XF1.c ****             param.radix = 10;
 1408              		.loc 1 863 0
 1409 03c2 0A23     		movs	r3, #10
 1410 03c4 87F87730 		strb	r3, [r7, #119]
 864:../Generated_Code/XF1.c ****             break;
 1411              		.loc 1 864 0
 1412 03c8 40E0     		b	.L99
 1413              	.L97:
 865:../Generated_Code/XF1.c **** 
 866:../Generated_Code/XF1.c ****             /*
 867:../Generated_Code/XF1.c ****              * Unsigned number
 868:../Generated_Code/XF1.c ****              */
 869:../Generated_Code/XF1.c ****           case  'u':
 870:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER;
 1414              		.loc 1 870 0
 1415 03ca FB6A     		ldr	r3, [r7, #44]
 1416 03cc 43F40073 		orr	r3, r3, #512
 1417 03d0 FB62     		str	r3, [r7, #44]
 871:../Generated_Code/XF1.c ****             param.radix = 10;
 1418              		.loc 1 871 0
 1419 03d2 0A23     		movs	r3, #10
 1420 03d4 87F87730 		strb	r3, [r7, #119]
 872:../Generated_Code/XF1.c ****             break;
 1421              		.loc 1 872 0
 1422 03d8 38E0     		b	.L99
 1423              	.L89:
 873:../Generated_Code/XF1.c **** 
 874:../Generated_Code/XF1.c ****             /*
 875:../Generated_Code/XF1.c ****              * Upper case string
 876:../Generated_Code/XF1.c ****              */
 877:../Generated_Code/XF1.c ****           case  'S':
 878:../Generated_Code/XF1.c ****             param.flags |= FLAG_UPPER;
 1424              		.loc 1 878 0
 1425 03da FB6A     		ldr	r3, [r7, #44]
 1426 03dc 43F08003 		orr	r3, r3, #128
 1427 03e0 FB62     		str	r3, [r7, #44]
 1428              	.L96:
 879:../Generated_Code/XF1.c ****             /* no break */
 880:../Generated_Code/XF1.c ****             /*lint -fallthrough */
 881:../Generated_Code/XF1.c **** 
 882:../Generated_Code/XF1.c ****             /*
 883:../Generated_Code/XF1.c ****              * Normal string
 884:../Generated_Code/XF1.c ****              */
 885:../Generated_Code/XF1.c ****           case  's':
 886:../Generated_Code/XF1.c ****             param.out = va_arg(args,char *);
 1429              		.loc 1 886 0
 1430 03e2 3B68     		ldr	r3, [r7]
 1431 03e4 1A1D     		adds	r2, r3, #4
 1432 03e6 3A60     		str	r2, [r7]
 1433 03e8 1B68     		ldr	r3, [r3]
 1434 03ea BB61     		str	r3, [r7, #24]
 887:../Generated_Code/XF1.c ****             if (param.out == 0)
 1435              		.loc 1 887 0
 1436 03ec BB69     		ldr	r3, [r7, #24]
 1437 03ee 002B     		cmp	r3, #0
 1438 03f0 01D1     		bne	.L103
 888:../Generated_Code/XF1.c ****               param.out = (char *)ms_null;
 1439              		.loc 1 888 0
 1440 03f2 814B     		ldr	r3, .L139
 1441 03f4 BB61     		str	r3, [r7, #24]
 1442              	.L103:
 889:../Generated_Code/XF1.c ****             param.length = (int)xstrlen(param.out);
 1443              		.loc 1 889 0
 1444 03f6 BB69     		ldr	r3, [r7, #24]
 1445 03f8 1846     		mov	r0, r3
 1446 03fa FFF7FEFF 		bl	xstrlen
 1447 03fe 0346     		mov	r3, r0
 1448 0400 FB61     		str	r3, [r7, #28]
 890:../Generated_Code/XF1.c ****             break;
 1449              		.loc 1 890 0
 1450 0402 23E0     		b	.L99
 1451              	.L87:
 891:../Generated_Code/XF1.c **** 
 892:../Generated_Code/XF1.c ****             /*
 893:../Generated_Code/XF1.c ****              * Upper case char
 894:../Generated_Code/XF1.c ****              */
 895:../Generated_Code/XF1.c ****           case  'C':
 896:../Generated_Code/XF1.c ****             param.flags |= FLAG_UPPER;
 1452              		.loc 1 896 0
 1453 0404 FB6A     		ldr	r3, [r7, #44]
 1454 0406 43F08003 		orr	r3, r3, #128
 1455 040a FB62     		str	r3, [r7, #44]
 1456              	.L92:
 897:../Generated_Code/XF1.c ****             /* no break */
 898:../Generated_Code/XF1.c ****             /* lint -fallthrough */
 899:../Generated_Code/XF1.c **** 
 900:../Generated_Code/XF1.c ****             /*
 901:../Generated_Code/XF1.c ****              * Char
 902:../Generated_Code/XF1.c ****              */
 903:../Generated_Code/XF1.c ****           case  'c':
 904:../Generated_Code/XF1.c ****             param.out = param.buffer;
 1457              		.loc 1 904 0
 1458 040c 07F11003 		add	r3, r7, #16
 1459 0410 2633     		adds	r3, r3, #38
 1460 0412 BB61     		str	r3, [r7, #24]
 905:../Generated_Code/XF1.c ****             param.buffer[0] = (char)va_arg(args,int);
 1461              		.loc 1 905 0
 1462 0414 3B68     		ldr	r3, [r7]
 1463 0416 1A1D     		adds	r2, r3, #4
 1464 0418 3A60     		str	r2, [r7]
 1465 041a 1B68     		ldr	r3, [r3]
 1466 041c DBB2     		uxtb	r3, r3
 1467 041e 87F83630 		strb	r3, [r7, #54]
 906:../Generated_Code/XF1.c ****             param.length = 1;
 1468              		.loc 1 906 0
 1469 0422 0123     		movs	r3, #1
 1470 0424 FB61     		str	r3, [r7, #28]
 907:../Generated_Code/XF1.c ****             break;
 1471              		.loc 1 907 0
 1472 0426 11E0     		b	.L99
 1473              	.L85:
 908:../Generated_Code/XF1.c **** 
 909:../Generated_Code/XF1.c **** #if XCFG_FORMAT_FLOAT
 910:../Generated_Code/XF1.c ****             /**
 911:../Generated_Code/XF1.c ****              * Floating point number
 912:../Generated_Code/XF1.c ****              */
 913:../Generated_Code/XF1.c ****           case 'f':
 914:../Generated_Code/XF1.c ****             if (!(param.flags & FLAG_PREC))
 915:../Generated_Code/XF1.c ****             {
 916:../Generated_Code/XF1.c ****               param.prec = 6;
 917:../Generated_Code/XF1.c ****             }
 918:../Generated_Code/XF1.c **** 
 919:../Generated_Code/XF1.c ****             param.dbl = va_arg(args,DOUBLE);
 920:../Generated_Code/XF1.c ****             param.values.dvalue = 0.50;
 921:../Generated_Code/XF1.c ****             for (i = 0 ; i < param.prec ; i++)
 922:../Generated_Code/XF1.c ****               param.values.dvalue /= 10.0;
 923:../Generated_Code/XF1.c **** 
 924:../Generated_Code/XF1.c ****             if (param.dbl < 0)
 925:../Generated_Code/XF1.c ****             {
 926:../Generated_Code/XF1.c ****               param.flags |= FLAG_MINUS;
 927:../Generated_Code/XF1.c ****               param.dbl   -= param.values.dvalue;
 928:../Generated_Code/XF1.c ****               param.iPart    = (FLOAT_LONG)param.dbl;
 929:../Generated_Code/XF1.c ****               param.dbl   -=  (FLOAT_LONG)param.iPart;
 930:../Generated_Code/XF1.c ****               param.dbl    = - param.dbl;
 931:../Generated_Code/XF1.c ****             }
 932:../Generated_Code/XF1.c ****             else
 933:../Generated_Code/XF1.c ****             {
 934:../Generated_Code/XF1.c ****               param.dbl += param.values.dvalue;
 935:../Generated_Code/XF1.c ****               param.iPart = (FLOAT_LONG)param.dbl;
 936:../Generated_Code/XF1.c ****               param.dbl -= param.iPart;
 937:../Generated_Code/XF1.c ****             }
 938:../Generated_Code/XF1.c **** 
 939:../Generated_Code/XF1.c **** 
 940:../Generated_Code/XF1.c ****             for (i = 0 ;i < param.prec  ;i++)
 941:../Generated_Code/XF1.c ****               param.dbl *= 10.0;
 942:../Generated_Code/XF1.c **** 
 943:../Generated_Code/XF1.c ****             param.values.lvalue = (unsigned LONG)param.dbl;
 944:../Generated_Code/XF1.c **** 
 945:../Generated_Code/XF1.c ****             param.out = param.buffer + sizeof(param.buffer) - 1;
 946:../Generated_Code/XF1.c ****             param.radix = 10;
 947:../Generated_Code/XF1.c ****             if (param.prec)
 948:../Generated_Code/XF1.c ****             {
 949:../Generated_Code/XF1.c ****               ulong2a(&param);
 950:../Generated_Code/XF1.c ****               *param.out -- = '.';
 951:../Generated_Code/XF1.c ****               param.length ++;
 952:../Generated_Code/XF1.c ****             }
 953:../Generated_Code/XF1.c ****             param.flags |= FLAG_INTEGER | FLAG_BUFFER |
 954:../Generated_Code/XF1.c ****                      FLAG_DECIMAL | FLAG_VALUE  | FLOAT_TYPE;
 955:../Generated_Code/XF1.c **** 
 956:../Generated_Code/XF1.c ****             param.prec = 0;
 957:../Generated_Code/XF1.c ****             param.values.FLOAT_VALUE  = (unsigned FLOAT_LONG)param.iPart;
 958:../Generated_Code/XF1.c ****             break;
 959:../Generated_Code/XF1.c **** #endif
 960:../Generated_Code/XF1.c **** 
 961:../Generated_Code/XF1.c ****             /**
 962:../Generated_Code/XF1.c ****              * Boolean value
 963:../Generated_Code/XF1.c ****              */
 964:../Generated_Code/XF1.c ****           case 'B':
 965:../Generated_Code/XF1.c ****             if (va_arg(args,int) != 0)
 1474              		.loc 1 965 0
 1475 0428 3B68     		ldr	r3, [r7]
 1476 042a 1A1D     		adds	r2, r3, #4
 1477 042c 3A60     		str	r2, [r7]
 1478 042e 1B68     		ldr	r3, [r3]
 1479 0430 002B     		cmp	r3, #0
 1480 0432 02D0     		beq	.L104
 966:../Generated_Code/XF1.c ****               param.out = (char*)ms_true;
 1481              		.loc 1 966 0
 1482 0434 714B     		ldr	r3, .L139+4
 1483 0436 BB61     		str	r3, [r7, #24]
 1484 0438 01E0     		b	.L105
 1485              	.L104:
 967:../Generated_Code/XF1.c ****             else
 968:../Generated_Code/XF1.c ****               param.out = (char*)ms_false;
 1486              		.loc 1 968 0
 1487 043a 714B     		ldr	r3, .L139+8
 1488 043c BB61     		str	r3, [r7, #24]
 1489              	.L105:
 969:../Generated_Code/XF1.c **** 
 970:../Generated_Code/XF1.c ****             param.length = (int)xstrlen(param.out);
 1490              		.loc 1 970 0
 1491 043e BB69     		ldr	r3, [r7, #24]
 1492 0440 1846     		mov	r0, r3
 1493 0442 FFF7FEFF 		bl	xstrlen
 1494 0446 0346     		mov	r3, r0
 1495 0448 FB61     		str	r3, [r7, #28]
 971:../Generated_Code/XF1.c ****             break;
 1496              		.loc 1 971 0
 1497 044a 00BF     		nop
 1498              	.L99:
 972:../Generated_Code/XF1.c **** 
 973:../Generated_Code/XF1.c **** 
 974:../Generated_Code/XF1.c ****         }
 975:../Generated_Code/XF1.c **** 
 976:../Generated_Code/XF1.c ****         /*
 977:../Generated_Code/XF1.c ****          * Process integer number
 978:../Generated_Code/XF1.c ****          */
 979:../Generated_Code/XF1.c ****         if (param.flags & FLAG_INTEGER)
 1499              		.loc 1 979 0
 1500 044c FB6A     		ldr	r3, [r7, #44]
 1501 044e 03F40073 		and	r3, r3, #512
 1502 0452 002B     		cmp	r3, #0
 1503 0454 00F0D680 		beq	.L106
 980:../Generated_Code/XF1.c ****         {
 981:../Generated_Code/XF1.c ****           if (param.prec == 0)
 1504              		.loc 1 981 0
 1505 0458 3B6A     		ldr	r3, [r7, #32]
 1506 045a 002B     		cmp	r3, #0
 1507 045c 01D1     		bne	.L107
 982:../Generated_Code/XF1.c ****             param.prec = 1;
 1508              		.loc 1 982 0
 1509 045e 0123     		movs	r3, #1
 1510 0460 3B62     		str	r3, [r7, #32]
 1511              	.L107:
 983:../Generated_Code/XF1.c **** 
 984:../Generated_Code/XF1.c ****           if (!(param.flags & FLAG_VALUE))
 1512              		.loc 1 984 0
 1513 0462 FB6A     		ldr	r3, [r7, #44]
 1514 0464 03F40063 		and	r3, r3, #2048
 1515 0468 002B     		cmp	r3, #0
 1516 046a 43D1     		bne	.L108
 985:../Generated_Code/XF1.c ****           {
 986:../Generated_Code/XF1.c ****             switch (param.flags & FLAG_TYPE_MASK)
 1517              		.loc 1 986 0
 1518 046c FB6A     		ldr	r3, [r7, #44]
 1519 046e 03F00303 		and	r3, r3, #3
 1520 0472 032B     		cmp	r3, #3
 1521 0474 3ED8     		bhi	.L108
 1522 0476 01A2     		adr	r2, .L110
 1523 0478 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1524              		.p2align 2
 1525              	.L110:
 1526 047c BB040000 		.word	.L109+1
 1527 0480 99040000 		.word	.L111+1
 1528 0484 8D040000 		.word	.L112+1
 1529 0488 DD040000 		.word	.L113+1
 1530              		.p2align 1
 1531              	.L112:
 987:../Generated_Code/XF1.c ****             {
 988:../Generated_Code/XF1.c ****               case FLAG_TYPE_SIZEOF:
 989:../Generated_Code/XF1.c ****                 param.values.lvalue = (unsigned LONG)va_arg(args,void *);
 1532              		.loc 1 989 0
 1533 048c 3B68     		ldr	r3, [r7]
 1534 048e 1A1D     		adds	r2, r3, #4
 1535 0490 3A60     		str	r2, [r7]
 1536 0492 1B68     		ldr	r3, [r3]
 1537 0494 3B61     		str	r3, [r7, #16]
 990:../Generated_Code/XF1.c ****                 break;
 1538              		.loc 1 990 0
 1539 0496 2DE0     		b	.L108
 1540              	.L111:
 991:../Generated_Code/XF1.c ****               case FLAG_TYPE_LONG:
 992:../Generated_Code/XF1.c ****                 if (param.flags & FLAG_DECIMAL)
 1541              		.loc 1 992 0
 1542 0498 FB6A     		ldr	r3, [r7, #44]
 1543 049a 03F48073 		and	r3, r3, #256
 1544 049e 002B     		cmp	r3, #0
 1545 04a0 05D0     		beq	.L114
 993:../Generated_Code/XF1.c ****                   param.values.lvalue = (LONG)va_arg(args,long);
 1546              		.loc 1 993 0
 1547 04a2 3B68     		ldr	r3, [r7]
 1548 04a4 1A1D     		adds	r2, r3, #4
 1549 04a6 3A60     		str	r2, [r7]
 1550 04a8 1B68     		ldr	r3, [r3]
 1551 04aa 3B61     		str	r3, [r7, #16]
 994:../Generated_Code/XF1.c ****                 else
 995:../Generated_Code/XF1.c ****                   param.values.lvalue = (unsigned LONG)va_arg(args,unsigned long);
 996:../Generated_Code/XF1.c ****                 break;
 1552              		.loc 1 996 0
 1553 04ac 22E0     		b	.L108
 1554              	.L114:
 995:../Generated_Code/XF1.c ****                   param.values.lvalue = (unsigned LONG)va_arg(args,unsigned long);
 1555              		.loc 1 995 0
 1556 04ae 3B68     		ldr	r3, [r7]
 1557 04b0 1A1D     		adds	r2, r3, #4
 1558 04b2 3A60     		str	r2, [r7]
 1559 04b4 1B68     		ldr	r3, [r3]
 1560 04b6 3B61     		str	r3, [r7, #16]
 1561              		.loc 1 996 0
 1562 04b8 1CE0     		b	.L108
 1563              	.L109:
 997:../Generated_Code/XF1.c **** 
 998:../Generated_Code/XF1.c ****               case FLAG_TYPE_INT:
 999:../Generated_Code/XF1.c ****                 if (param.flags & FLAG_DECIMAL)
 1564              		.loc 1 999 0
 1565 04ba FB6A     		ldr	r3, [r7, #44]
 1566 04bc 03F48073 		and	r3, r3, #256
 1567 04c0 002B     		cmp	r3, #0
 1568 04c2 05D0     		beq	.L116
1000:../Generated_Code/XF1.c ****                   param.values.lvalue = (LONG)va_arg(args,int);
 1569              		.loc 1 1000 0
 1570 04c4 3B68     		ldr	r3, [r7]
 1571 04c6 1A1D     		adds	r2, r3, #4
 1572 04c8 3A60     		str	r2, [r7]
 1573 04ca 1B68     		ldr	r3, [r3]
 1574 04cc 3B61     		str	r3, [r7, #16]
1001:../Generated_Code/XF1.c ****                 else
1002:../Generated_Code/XF1.c ****                   param.values.lvalue = (unsigned LONG)va_arg(args,unsigned int);
1003:../Generated_Code/XF1.c ****                 break;
 1575              		.loc 1 1003 0
 1576 04ce 11E0     		b	.L108
 1577              	.L116:
1002:../Generated_Code/XF1.c ****                   param.values.lvalue = (unsigned LONG)va_arg(args,unsigned int);
 1578              		.loc 1 1002 0
 1579 04d0 3B68     		ldr	r3, [r7]
 1580 04d2 1A1D     		adds	r2, r3, #4
 1581 04d4 3A60     		str	r2, [r7]
 1582 04d6 1B68     		ldr	r3, [r3]
 1583 04d8 3B61     		str	r3, [r7, #16]
 1584              		.loc 1 1003 0
 1585 04da 0BE0     		b	.L108
 1586              	.L113:
1004:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
1005:../Generated_Code/XF1.c ****               case FLAG_TYPE_LONGLONG:
1006:../Generated_Code/XF1.c ****                 param.values.llvalue = (LONGLONG)va_arg(args,long long);
 1587              		.loc 1 1006 0
 1588 04dc 3B68     		ldr	r3, [r7]
 1589 04de 0733     		adds	r3, r3, #7
 1590 04e0 23F00703 		bic	r3, r3, #7
 1591 04e4 03F10802 		add	r2, r3, #8
 1592 04e8 3A60     		str	r2, [r7]
 1593 04ea D3E90023 		ldrd	r2, [r3]
 1594 04ee C7E90423 		strd	r2, [r7, #16]
1007:../Generated_Code/XF1.c ****                 break;
 1595              		.loc 1 1007 0
 1596 04f2 00BF     		nop
 1597              	.L108:
1008:../Generated_Code/XF1.c **** #endif
1009:../Generated_Code/XF1.c ****             }
1010:../Generated_Code/XF1.c **** 
1011:../Generated_Code/XF1.c ****           }
1012:../Generated_Code/XF1.c **** 
1013:../Generated_Code/XF1.c ****           if ((param.flags & FLAG_PREFIX) && param.values.lvalue == 0)
 1598              		.loc 1 1013 0
 1599 04f4 FB6A     		ldr	r3, [r7, #44]
 1600 04f6 03F02003 		and	r3, r3, #32
 1601 04fa 002B     		cmp	r3, #0
 1602 04fc 04D0     		beq	.L118
 1603              		.loc 1 1013 0 is_stmt 0 discriminator 1
 1604 04fe 3B69     		ldr	r3, [r7, #16]
 1605 0500 002B     		cmp	r3, #0
 1606 0502 01D1     		bne	.L118
1014:../Generated_Code/XF1.c ****           {
1015:../Generated_Code/XF1.c ****             param.prefixlen = 0;
 1607              		.loc 1 1015 0 is_stmt 1
 1608 0504 0023     		movs	r3, #0
 1609 0506 3B63     		str	r3, [r7, #48]
 1610              	.L118:
1016:../Generated_Code/XF1.c ****           }
1017:../Generated_Code/XF1.c **** 
1018:../Generated_Code/XF1.c **** 
1019:../Generated_Code/XF1.c ****           /*
1020:../Generated_Code/XF1.c ****            * Manage signed integer
1021:../Generated_Code/XF1.c ****            */
1022:../Generated_Code/XF1.c ****           if (param.flags & FLAG_DECIMAL)
 1611              		.loc 1 1022 0
 1612 0508 FB6A     		ldr	r3, [r7, #44]
 1613 050a 03F48073 		and	r3, r3, #256
 1614 050e 002B     		cmp	r3, #0
 1615 0510 2FD0     		beq	.L119
1023:../Generated_Code/XF1.c ****           {
1024:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
1025:../Generated_Code/XF1.c ****             if ((param.flags & FLAG_TYPE_MASK) == FLAG_TYPE_LONGLONG)
 1616              		.loc 1 1025 0
 1617 0512 FB6A     		ldr	r3, [r7, #44]
 1618 0514 03F00303 		and	r3, r3, #3
 1619 0518 032B     		cmp	r3, #3
 1620 051a 11D1     		bne	.L120
1026:../Generated_Code/XF1.c ****             {
1027:../Generated_Code/XF1.c ****               if ((LONGLONG)param.values.llvalue < 0)
 1621              		.loc 1 1027 0
 1622 051c D7E90423 		ldrd	r2, [r7, #16]
 1623 0520 002A     		cmp	r2, #0
 1624 0522 73F10001 		sbcs	r1, r3, #0
 1625 0526 15DA     		bge	.L122
1028:../Generated_Code/XF1.c ****               {
1029:../Generated_Code/XF1.c ****                 param.values.llvalue = ~param.values.llvalue + 1;
 1626              		.loc 1 1029 0
 1627 0528 D7E90423 		ldrd	r2, [r7, #16]
 1628 052c 5242     		negs	r2, r2
 1629 052e 63EB4303 		sbc	r3, r3, r3, lsl #1
 1630 0532 C7E90423 		strd	r2, [r7, #16]
1030:../Generated_Code/XF1.c ****                 param.flags |= FLAG_MINUS;
 1631              		.loc 1 1030 0
 1632 0536 FB6A     		ldr	r3, [r7, #44]
 1633 0538 43F48063 		orr	r3, r3, #1024
 1634 053c FB62     		str	r3, [r7, #44]
 1635 053e 09E0     		b	.L122
 1636              	.L120:
1031:../Generated_Code/XF1.c ****               }
1032:../Generated_Code/XF1.c ****             }
1033:../Generated_Code/XF1.c ****             else
1034:../Generated_Code/XF1.c ****             {
1035:../Generated_Code/XF1.c **** #endif
1036:../Generated_Code/XF1.c ****               if ((LONG)param.values.lvalue < 0)
 1637              		.loc 1 1036 0
 1638 0540 3B69     		ldr	r3, [r7, #16]
 1639 0542 002B     		cmp	r3, #0
 1640 0544 06DA     		bge	.L122
1037:../Generated_Code/XF1.c ****               {
1038:../Generated_Code/XF1.c ****                 param.values.lvalue = ~param.values.lvalue + 1;
 1641              		.loc 1 1038 0
 1642 0546 3B69     		ldr	r3, [r7, #16]
 1643 0548 5B42     		negs	r3, r3
 1644 054a 3B61     		str	r3, [r7, #16]
1039:../Generated_Code/XF1.c ****                 param.flags |= FLAG_MINUS;
 1645              		.loc 1 1039 0
 1646 054c FB6A     		ldr	r3, [r7, #44]
 1647 054e 43F48063 		orr	r3, r3, #1024
 1648 0552 FB62     		str	r3, [r7, #44]
 1649              	.L122:
1040:../Generated_Code/XF1.c **** 
1041:../Generated_Code/XF1.c ****               }
1042:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
1043:../Generated_Code/XF1.c ****             }
1044:../Generated_Code/XF1.c **** #endif
1045:../Generated_Code/XF1.c ****             if (!(param.flags & FLAG_MINUS)  && (param.flags & FLAG_BLANK))
 1650              		.loc 1 1045 0
 1651 0554 FB6A     		ldr	r3, [r7, #44]
 1652 0556 03F48063 		and	r3, r3, #1024
 1653 055a 002B     		cmp	r3, #0
 1654 055c 09D1     		bne	.L119
 1655              		.loc 1 1045 0 is_stmt 0 discriminator 1
 1656 055e FB6A     		ldr	r3, [r7, #44]
 1657 0560 03F01003 		and	r3, r3, #16
 1658 0564 002B     		cmp	r3, #0
 1659 0566 04D0     		beq	.L119
1046:../Generated_Code/XF1.c ****             {
1047:../Generated_Code/XF1.c ****               param.prefix[0] = ' ';
 1660              		.loc 1 1047 0 is_stmt 1
 1661 0568 2023     		movs	r3, #32
 1662 056a 87F83430 		strb	r3, [r7, #52]
1048:../Generated_Code/XF1.c ****               param.prefixlen = 1;
 1663              		.loc 1 1048 0
 1664 056e 0123     		movs	r3, #1
 1665 0570 3B63     		str	r3, [r7, #48]
 1666              	.L119:
1049:../Generated_Code/XF1.c ****             }
1050:../Generated_Code/XF1.c ****           }
1051:../Generated_Code/XF1.c **** 
1052:../Generated_Code/XF1.c ****           if ((param.flags & FLAG_BUFFER) == 0)
 1667              		.loc 1 1052 0
 1668 0572 FB6A     		ldr	r3, [r7, #44]
 1669 0574 03F48053 		and	r3, r3, #4096
 1670 0578 002B     		cmp	r3, #0
 1671 057a 03D1     		bne	.L123
1053:../Generated_Code/XF1.c ****           {
1054:../Generated_Code/XF1.c ****             param.out = param.buffer + sizeof(param.buffer) - 1;
 1672              		.loc 1 1054 0
 1673 057c 07F11003 		add	r3, r7, #16
 1674 0580 6633     		adds	r3, r3, #102
 1675 0582 BB61     		str	r3, [r7, #24]
 1676              	.L123:
1055:../Generated_Code/XF1.c ****           }
1056:../Generated_Code/XF1.c **** 
1057:../Generated_Code/XF1.c **** 
1058:../Generated_Code/XF1.c **** #if XCFG_FORMAT_LONGLONG
1059:../Generated_Code/XF1.c ****           if ((param.flags & FLAG_TYPE_MASK) == FLAG_TYPE_LONGLONG)
 1677              		.loc 1 1059 0
 1678 0584 FB6A     		ldr	r3, [r7, #44]
 1679 0586 03F00303 		and	r3, r3, #3
 1680 058a 032B     		cmp	r3, #3
 1681 058c 05D1     		bne	.L124
1060:../Generated_Code/XF1.c ****             ullong2a(&param);
 1682              		.loc 1 1060 0
 1683 058e 07F11003 		add	r3, r7, #16
 1684 0592 1846     		mov	r0, r3
 1685 0594 FFF7FEFF 		bl	ullong2a
 1686 0598 04E0     		b	.L125
 1687              	.L124:
1061:../Generated_Code/XF1.c ****           else
1062:../Generated_Code/XF1.c ****             ulong2a(&param);
 1688              		.loc 1 1062 0
 1689 059a 07F11003 		add	r3, r7, #16
 1690 059e 1846     		mov	r0, r3
 1691 05a0 FFF7FEFF 		bl	ulong2a
 1692              	.L125:
1063:../Generated_Code/XF1.c **** #else
1064:../Generated_Code/XF1.c **** 
1065:../Generated_Code/XF1.c ****           ulong2a(&param);
1066:../Generated_Code/XF1.c **** #endif
1067:../Generated_Code/XF1.c ****           param.out++;
 1693              		.loc 1 1067 0
 1694 05a4 BB69     		ldr	r3, [r7, #24]
 1695 05a6 0133     		adds	r3, r3, #1
 1696 05a8 BB61     		str	r3, [r7, #24]
1068:../Generated_Code/XF1.c **** 
1069:../Generated_Code/XF1.c ****           /*
1070:../Generated_Code/XF1.c ****            * Check if a sign is required
1071:../Generated_Code/XF1.c ****            */
1072:../Generated_Code/XF1.c ****           if (param.flags & (FLAG_MINUS|FLAG_PLUS))
 1697              		.loc 1 1072 0
 1698 05aa FB6A     		ldr	r3, [r7, #44]
 1699 05ac 03F48863 		and	r3, r3, #1088
 1700 05b0 002B     		cmp	r3, #0
 1701 05b2 30D0     		beq	.L130
1073:../Generated_Code/XF1.c ****           {
1074:../Generated_Code/XF1.c ****             c = param.flags & FLAG_MINUS ? '-' : '+';
 1702              		.loc 1 1074 0
 1703 05b4 FB6A     		ldr	r3, [r7, #44]
 1704 05b6 03F48063 		and	r3, r3, #1024
 1705 05ba 002B     		cmp	r3, #0
 1706 05bc 01D0     		beq	.L127
 1707              		.loc 1 1074 0 is_stmt 0 discriminator 1
 1708 05be 2D23     		movs	r3, #45
 1709 05c0 00E0     		b	.L128
 1710              	.L127:
 1711              		.loc 1 1074 0 discriminator 2
 1712 05c2 2B23     		movs	r3, #43
 1713              	.L128:
 1714              		.loc 1 1074 0 discriminator 3
 1715 05c4 87F88330 		strb	r3, [r7, #131]
1075:../Generated_Code/XF1.c **** 
1076:../Generated_Code/XF1.c ****             if (param.pad == '0')
 1716              		.loc 1 1076 0 is_stmt 1 discriminator 3
 1717 05c8 97F87830 		ldrb	r3, [r7, #120]	@ zero_extendqisi2
 1718 05cc 5BB2     		sxtb	r3, r3
 1719 05ce 302B     		cmp	r3, #48
 1720 05d0 06D1     		bne	.L129
1077:../Generated_Code/XF1.c ****             {
1078:../Generated_Code/XF1.c ****               param.prefixlen = 1;
 1721              		.loc 1 1078 0
 1722 05d2 0123     		movs	r3, #1
 1723 05d4 3B63     		str	r3, [r7, #48]
1079:../Generated_Code/XF1.c ****               param.prefix[0] = c;
 1724              		.loc 1 1079 0
 1725 05d6 97F88330 		ldrb	r3, [r7, #131]
 1726 05da 87F83430 		strb	r3, [r7, #52]
 1727 05de 1AE0     		b	.L130
 1728              	.L129:
1080:../Generated_Code/XF1.c ****             }
1081:../Generated_Code/XF1.c ****             else
1082:../Generated_Code/XF1.c ****             {
1083:../Generated_Code/XF1.c ****               *--param.out = c;
 1729              		.loc 1 1083 0
 1730 05e0 BB69     		ldr	r3, [r7, #24]
 1731 05e2 013B     		subs	r3, r3, #1
 1732 05e4 BB61     		str	r3, [r7, #24]
 1733 05e6 BB69     		ldr	r3, [r7, #24]
 1734 05e8 97F88320 		ldrb	r2, [r7, #131]
 1735 05ec 1A70     		strb	r2, [r3]
1084:../Generated_Code/XF1.c ****               param.length++;
 1736              		.loc 1 1084 0
 1737 05ee FB69     		ldr	r3, [r7, #28]
 1738 05f0 0133     		adds	r3, r3, #1
 1739 05f2 FB61     		str	r3, [r7, #28]
 1740 05f4 0FE0     		b	.L130
 1741              	.L140:
 1742 05f6 00BF     		.align	2
 1743              	.L139:
 1744 05f8 00000000 		.word	ms_null
 1745 05fc 00000000 		.word	ms_true
 1746 0600 00000000 		.word	ms_false
 1747              	.L106:
1085:../Generated_Code/XF1.c ****             }
1086:../Generated_Code/XF1.c ****           }
1087:../Generated_Code/XF1.c **** 
1088:../Generated_Code/XF1.c **** 
1089:../Generated_Code/XF1.c ****         }
1090:../Generated_Code/XF1.c ****         else
1091:../Generated_Code/XF1.c ****         {
1092:../Generated_Code/XF1.c ****           if (param.width && param.length > param.width)
 1748              		.loc 1 1092 0
 1749 0604 7B6A     		ldr	r3, [r7, #36]
 1750 0606 002B     		cmp	r3, #0
 1751 0608 05D0     		beq	.L130
 1752              		.loc 1 1092 0 is_stmt 0 discriminator 1
 1753 060a FA69     		ldr	r2, [r7, #28]
 1754 060c 7B6A     		ldr	r3, [r7, #36]
 1755 060e 9A42     		cmp	r2, r3
 1756 0610 01DD     		ble	.L130
1093:../Generated_Code/XF1.c ****           {
1094:../Generated_Code/XF1.c ****             param.length = param.width;
 1757              		.loc 1 1094 0 is_stmt 1
 1758 0612 7B6A     		ldr	r3, [r7, #36]
 1759 0614 FB61     		str	r3, [r7, #28]
 1760              	.L130:
1095:../Generated_Code/XF1.c ****           }
1096:../Generated_Code/XF1.c **** 
1097:../Generated_Code/XF1.c ****         }
1098:../Generated_Code/XF1.c **** 
1099:../Generated_Code/XF1.c ****         /*
1100:../Generated_Code/XF1.c ****          * Now width contain the size of the pad
1101:../Generated_Code/XF1.c ****          */
1102:../Generated_Code/XF1.c ****         param.width -= (param.length + param.prefixlen);
 1761              		.loc 1 1102 0
 1762 0616 7A6A     		ldr	r2, [r7, #36]
 1763 0618 F969     		ldr	r1, [r7, #28]
 1764 061a 3B6B     		ldr	r3, [r7, #48]
 1765 061c 0B44     		add	r3, r3, r1
 1766 061e D31A     		subs	r3, r2, r3
 1767 0620 7B62     		str	r3, [r7, #36]
1103:../Generated_Code/XF1.c **** 
1104:../Generated_Code/XF1.c ****         param.count += outBuffer(outchar,arg,param.prefix,param.prefixlen,param.flags & FLAG_UPPER)
 1768              		.loc 1 1104 0
 1769 0622 BC6A     		ldr	r4, [r7, #40]
 1770 0624 3B6B     		ldr	r3, [r7, #48]
 1771 0626 FA6A     		ldr	r2, [r7, #44]
 1772 0628 02F08001 		and	r1, r2, #128
 1773 062c 07F11002 		add	r2, r7, #16
 1774 0630 2432     		adds	r2, r2, #36
 1775 0632 0091     		str	r1, [sp]
 1776 0634 F868     		ldr	r0, [r7, #12]
 1777 0636 B968     		ldr	r1, [r7, #8]
 1778 0638 FFF7FEFF 		bl	outBuffer
 1779 063c 0346     		mov	r3, r0
 1780 063e 2344     		add	r3, r3, r4
 1781 0640 BB62     		str	r3, [r7, #40]
1105:../Generated_Code/XF1.c ****         if (!(param.flags & FLAG_LEFT))
 1782              		.loc 1 1105 0
 1783 0642 FB6A     		ldr	r3, [r7, #44]
 1784 0644 03F00803 		and	r3, r3, #8
 1785 0648 002B     		cmp	r3, #0
 1786 064a 0BD1     		bne	.L131
1106:../Generated_Code/XF1.c ****           param.count += outChars(outchar,arg,param.pad,param.width);
 1787              		.loc 1 1106 0
 1788 064c BC6A     		ldr	r4, [r7, #40]
 1789 064e 97F87820 		ldrb	r2, [r7, #120]	@ zero_extendqisi2
 1790 0652 7B6A     		ldr	r3, [r7, #36]
 1791 0654 52B2     		sxtb	r2, r2
 1792 0656 F868     		ldr	r0, [r7, #12]
 1793 0658 B968     		ldr	r1, [r7, #8]
 1794 065a FFF7FEFF 		bl	outChars
 1795 065e 0346     		mov	r3, r0
 1796 0660 2344     		add	r3, r3, r4
 1797 0662 BB62     		str	r3, [r7, #40]
 1798              	.L131:
1107:../Generated_Code/XF1.c ****         param.count += outBuffer(outchar,arg,param.out,param.length,param.flags & FLAG_UPPER);
 1799              		.loc 1 1107 0
 1800 0664 BC6A     		ldr	r4, [r7, #40]
 1801 0666 BA69     		ldr	r2, [r7, #24]
 1802 0668 FB69     		ldr	r3, [r7, #28]
 1803 066a F96A     		ldr	r1, [r7, #44]
 1804 066c 01F08001 		and	r1, r1, #128
 1805 0670 0091     		str	r1, [sp]
 1806 0672 F868     		ldr	r0, [r7, #12]
 1807 0674 B968     		ldr	r1, [r7, #8]
 1808 0676 FFF7FEFF 		bl	outBuffer
 1809 067a 0346     		mov	r3, r0
 1810 067c 2344     		add	r3, r3, r4
 1811 067e BB62     		str	r3, [r7, #40]
1108:../Generated_Code/XF1.c ****         if (param.flags & FLAG_LEFT)
 1812              		.loc 1 1108 0
 1813 0680 FB6A     		ldr	r3, [r7, #44]
 1814 0682 03F00803 		and	r3, r3, #8
 1815 0686 002B     		cmp	r3, #0
 1816 0688 0DD0     		beq	.L53
1109:../Generated_Code/XF1.c ****           param.count += outChars(outchar,arg,param.pad,param.width);
 1817              		.loc 1 1109 0
 1818 068a BC6A     		ldr	r4, [r7, #40]
 1819 068c 97F87820 		ldrb	r2, [r7, #120]	@ zero_extendqisi2
 1820 0690 7B6A     		ldr	r3, [r7, #36]
 1821 0692 52B2     		sxtb	r2, r2
 1822 0694 F868     		ldr	r0, [r7, #12]
 1823 0696 B968     		ldr	r1, [r7, #8]
 1824 0698 FFF7FEFF 		bl	outChars
 1825 069c 0346     		mov	r3, r0
 1826 069e 2344     		add	r3, r3, r4
 1827 06a0 BB62     		str	r3, [r7, #40]
 1828 06a2 00E0     		b	.L53
 1829              	.L134:
 711:../Generated_Code/XF1.c ****         break;
 1830              		.loc 1 711 0
 1831 06a4 00BF     		nop
 1832              	.L53:
 678:../Generated_Code/XF1.c ****   while (*fmt)
 1833              		.loc 1 678 0 discriminator 1
 1834 06a6 7B68     		ldr	r3, [r7, #4]
 1835 06a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 06aa 002B     		cmp	r3, #0
 1837 06ac 7FF4B5AC 		bne	.L132
1110:../Generated_Code/XF1.c **** 
1111:../Generated_Code/XF1.c ****     }
1112:../Generated_Code/XF1.c ****   }
1113:../Generated_Code/XF1.c **** 
1114:../Generated_Code/XF1.c **** #if XCFG_FORMAT_VA_COPY
1115:../Generated_Code/XF1.c ****   va_end(args);
1116:../Generated_Code/XF1.c **** #endif
1117:../Generated_Code/XF1.c **** 
1118:../Generated_Code/XF1.c ****   return param.count;
 1838              		.loc 1 1118 0
 1839 06b0 BB6A     		ldr	r3, [r7, #40]
1119:../Generated_Code/XF1.c **** }
 1840              		.loc 1 1119 0
 1841 06b2 1846     		mov	r0, r3
 1842 06b4 8C37     		adds	r7, r7, #140
 1843 06b6 BD46     		mov	sp, r7
 1844              		@ sp needed
 1845 06b8 90BD     		pop	{r4, r7, pc}
 1846              		.cfi_endproc
 1847              	.LFE10:
 1849 06ba 00BF     		.section	.text.XF1_xsprintf,"ax",%progbits
 1850              		.align	2
 1851              		.global	XF1_xsprintf
 1852              		.thumb
 1853              		.thumb_func
 1855              	XF1_xsprintf:
 1856              	.LFB11:
1120:../Generated_Code/XF1.c **** /*lint -restore */
1121:../Generated_Code/XF1.c **** 
1122:../Generated_Code/XF1.c **** /*
1123:../Generated_Code/XF1.c **** ** ===================================================================
1124:../Generated_Code/XF1.c **** **     Method      :  XF1_xsprintf (component XFormat)
1125:../Generated_Code/XF1.c **** **     Description :
1126:../Generated_Code/XF1.c **** **         sprintf() like function
1127:../Generated_Code/XF1.c **** **     Parameters  :
1128:../Generated_Code/XF1.c **** **         NAME            - DESCRIPTION
1129:../Generated_Code/XF1.c **** **       * buf             - Pointer to buffer to be written
1130:../Generated_Code/XF1.c **** **       * fmt             - Pointer to formatting string
1131:../Generated_Code/XF1.c **** **         argList         - Open Argument List
1132:../Generated_Code/XF1.c **** **     Returns     :
1133:../Generated_Code/XF1.c **** **         ---             - number of characters written, negative for
1134:../Generated_Code/XF1.c **** **                           error case
1135:../Generated_Code/XF1.c **** ** ===================================================================
1136:../Generated_Code/XF1.c **** */
1137:../Generated_Code/XF1.c **** int XF1_xsprintf(char *buf, const char *fmt, ...)
1138:../Generated_Code/XF1.c **** {
 1857              		.loc 1 1138 0
 1858              		.cfi_startproc
 1859              		@ args = 4, pretend = 12, frame = 16
 1860              		@ frame_needed = 1, uses_anonymous_args = 1
 1861 0000 0EB4     		push	{r1, r2, r3}
 1862              		.cfi_def_cfa_offset 12
 1863              		.cfi_offset 1, -12
 1864              		.cfi_offset 2, -8
 1865              		.cfi_offset 3, -4
 1866 0002 80B5     		push	{r7, lr}
 1867              		.cfi_def_cfa_offset 20
 1868              		.cfi_offset 7, -20
 1869              		.cfi_offset 14, -16
 1870 0004 85B0     		sub	sp, sp, #20
 1871              		.cfi_def_cfa_offset 40
 1872 0006 00AF     		add	r7, sp, #0
 1873              		.cfi_def_cfa_register 7
 1874 0008 7860     		str	r0, [r7, #4]
1139:../Generated_Code/XF1.c ****   va_list args;
1140:../Generated_Code/XF1.c ****   int res;
1141:../Generated_Code/XF1.c **** 
1142:../Generated_Code/XF1.c ****   va_start(args,fmt);
 1875              		.loc 1 1142 0
 1876 000a 07F12003 		add	r3, r7, #32
 1877 000e BB60     		str	r3, [r7, #8]
1143:../Generated_Code/XF1.c ****   res = xsprintf(buf, fmt, args);
 1878              		.loc 1 1143 0
 1879 0010 7868     		ldr	r0, [r7, #4]
 1880 0012 F969     		ldr	r1, [r7, #28]
 1881 0014 BA68     		ldr	r2, [r7, #8]
 1882 0016 FFF7FEFF 		bl	xsprintf
 1883 001a F860     		str	r0, [r7, #12]
1144:../Generated_Code/XF1.c ****   va_end(args);
1145:../Generated_Code/XF1.c ****   return res;
 1884              		.loc 1 1145 0
 1885 001c FB68     		ldr	r3, [r7, #12]
1146:../Generated_Code/XF1.c **** }
 1886              		.loc 1 1146 0
 1887 001e 1846     		mov	r0, r3
 1888 0020 1437     		adds	r7, r7, #20
 1889 0022 BD46     		mov	sp, r7
 1890              		@ sp needed
 1891 0024 BDE88040 		pop	{r7, lr}
 1892 0028 03B0     		add	sp, sp, #12
 1893 002a 7047     		bx	lr
 1894              		.cfi_endproc
 1895              	.LFE11:
 1897              		.section	.text.XF1_xsnprintf,"ax",%progbits
 1898              		.align	2
 1899              		.global	XF1_xsnprintf
 1900              		.thumb
 1901              		.thumb_func
 1903              	XF1_xsnprintf:
 1904              	.LFB12:
1147:../Generated_Code/XF1.c **** 
1148:../Generated_Code/XF1.c **** 
1149:../Generated_Code/XF1.c **** /*
1150:../Generated_Code/XF1.c **** ** ===================================================================
1151:../Generated_Code/XF1.c **** **     Method      :  XF1_xsnprintf (component XFormat)
1152:../Generated_Code/XF1.c **** **     Description :
1153:../Generated_Code/XF1.c **** **         snprintf() like function, returns the number of characters
1154:../Generated_Code/XF1.c **** **         written, negative in case of error.
1155:../Generated_Code/XF1.c **** **     Parameters  :
1156:../Generated_Code/XF1.c **** **         NAME            - DESCRIPTION
1157:../Generated_Code/XF1.c **** **       * buf             - Pointer to buffer to be written
1158:../Generated_Code/XF1.c **** **         max_len         - size of output buffer (in size)
1159:../Generated_Code/XF1.c **** **       * fmt             - Pointer to formatting string
1160:../Generated_Code/XF1.c **** **         argList         - Open Argument List
1161:../Generated_Code/XF1.c **** **     Returns     :
1162:../Generated_Code/XF1.c **** **         ---             - number of characters written, negative for
1163:../Generated_Code/XF1.c **** **                           error case
1164:../Generated_Code/XF1.c **** ** ===================================================================
1165:../Generated_Code/XF1.c **** */
1166:../Generated_Code/XF1.c **** int XF1_xsnprintf(char *buf, size_t max_len, const char *fmt, ...)
1167:../Generated_Code/XF1.c **** {
 1905              		.loc 1 1167 0
 1906              		.cfi_startproc
 1907              		@ args = 4, pretend = 8, frame = 16
 1908              		@ frame_needed = 1, uses_anonymous_args = 1
 1909 0000 0CB4     		push	{r2, r3}
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 2, -8
 1912              		.cfi_offset 3, -4
 1913 0002 80B5     		push	{r7, lr}
 1914              		.cfi_def_cfa_offset 16
 1915              		.cfi_offset 7, -16
 1916              		.cfi_offset 14, -12
 1917 0004 84B0     		sub	sp, sp, #16
 1918              		.cfi_def_cfa_offset 32
 1919 0006 00AF     		add	r7, sp, #0
 1920              		.cfi_def_cfa_register 7
 1921 0008 7860     		str	r0, [r7, #4]
 1922 000a 3960     		str	r1, [r7]
1168:../Generated_Code/XF1.c ****   va_list args;
1169:../Generated_Code/XF1.c ****   int res;
1170:../Generated_Code/XF1.c **** 
1171:../Generated_Code/XF1.c ****   va_start(args,fmt);
 1923              		.loc 1 1171 0
 1924 000c 07F11C03 		add	r3, r7, #28
 1925 0010 BB60     		str	r3, [r7, #8]
1172:../Generated_Code/XF1.c ****   res = xsnprintf(buf, max_len, fmt, args);
 1926              		.loc 1 1172 0
 1927 0012 7868     		ldr	r0, [r7, #4]
 1928 0014 3968     		ldr	r1, [r7]
 1929 0016 BA69     		ldr	r2, [r7, #24]
 1930 0018 BB68     		ldr	r3, [r7, #8]
 1931 001a FFF7FEFF 		bl	xsnprintf
 1932 001e F860     		str	r0, [r7, #12]
1173:../Generated_Code/XF1.c ****   va_end(args);
1174:../Generated_Code/XF1.c ****   return res;
 1933              		.loc 1 1174 0
 1934 0020 FB68     		ldr	r3, [r7, #12]
1175:../Generated_Code/XF1.c **** }
 1935              		.loc 1 1175 0
 1936 0022 1846     		mov	r0, r3
 1937 0024 1037     		adds	r7, r7, #16
 1938 0026 BD46     		mov	sp, r7
 1939              		@ sp needed
 1940 0028 BDE88040 		pop	{r7, lr}
 1941 002c 02B0     		add	sp, sp, #8
 1942 002e 7047     		bx	lr
 1943              		.cfi_endproc
 1944              	.LFE12:
 1946              		.section	.text.XF1_Init,"ax",%progbits
 1947              		.align	2
 1948              		.global	XF1_Init
 1949              		.thumb
 1950              		.thumb_func
 1952              	XF1_Init:
 1953              	.LFB13:
1176:../Generated_Code/XF1.c **** 
1177:../Generated_Code/XF1.c **** /*
1178:../Generated_Code/XF1.c **** ** ===================================================================
1179:../Generated_Code/XF1.c **** **     Method      :  XF1_Init (component XFormat)
1180:../Generated_Code/XF1.c **** **     Description :
1181:../Generated_Code/XF1.c **** **         Driver initialization routine
1182:../Generated_Code/XF1.c **** **     Parameters  : None
1183:../Generated_Code/XF1.c **** **     Returns     : Nothing
1184:../Generated_Code/XF1.c **** ** ===================================================================
1185:../Generated_Code/XF1.c **** */
1186:../Generated_Code/XF1.c **** void XF1_Init(void)
1187:../Generated_Code/XF1.c **** {
 1954              		.loc 1 1187 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
 1959 0000 80B4     		push	{r7}
 1960              		.cfi_def_cfa_offset 4
 1961              		.cfi_offset 7, -4
 1962 0002 00AF     		add	r7, sp, #0
 1963              		.cfi_def_cfa_register 7
1188:../Generated_Code/XF1.c ****   /* nothing needed */
1189:../Generated_Code/XF1.c **** }
 1964              		.loc 1 1189 0
 1965 0004 BD46     		mov	sp, r7
 1966              		@ sp needed
 1967 0006 5DF8047B 		ldr	r7, [sp], #4
 1968 000a 7047     		bx	lr
 1969              		.cfi_endproc
 1970              	.LFE13:
 1972              		.section	.text.XF1_Deinit,"ax",%progbits
 1973              		.align	2
 1974              		.global	XF1_Deinit
 1975              		.thumb
 1976              		.thumb_func
 1978              	XF1_Deinit:
 1979              	.LFB14:
1190:../Generated_Code/XF1.c **** 
1191:../Generated_Code/XF1.c **** /*
1192:../Generated_Code/XF1.c **** ** ===================================================================
1193:../Generated_Code/XF1.c **** **     Method      :  XF1_Deinit (component XFormat)
1194:../Generated_Code/XF1.c **** **     Description :
1195:../Generated_Code/XF1.c **** **         Driver de-initialization routine
1196:../Generated_Code/XF1.c **** **     Parameters  : None
1197:../Generated_Code/XF1.c **** **     Returns     : Nothing
1198:../Generated_Code/XF1.c **** ** ===================================================================
1199:../Generated_Code/XF1.c **** */
1200:../Generated_Code/XF1.c **** void XF1_Deinit(void)
1201:../Generated_Code/XF1.c **** {
 1980              		.loc 1 1201 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985 0000 80B4     		push	{r7}
 1986              		.cfi_def_cfa_offset 4
 1987              		.cfi_offset 7, -4
 1988 0002 00AF     		add	r7, sp, #0
 1989              		.cfi_def_cfa_register 7
1202:../Generated_Code/XF1.c ****   /* nothing needed */
1203:../Generated_Code/XF1.c **** }
 1990              		.loc 1 1203 0
 1991 0004 BD46     		mov	sp, r7
 1992              		@ sp needed
 1993 0006 5DF8047B 		ldr	r7, [sp], #4
 1994 000a 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE14:
 1998              		.text
 1999              	.Letext0:
 2000              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stdarg.h"
 2001              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stddef.h"
 2002              		.file 4 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 XF1.c
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:21     .rodata.ms_null:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:24     .rodata.ms_null:00000000 ms_null
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:27     .rodata.ms_true:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:30     .rodata.ms_true:00000000 ms_true
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:33     .rodata.ms_false:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:36     .rodata.ms_false:00000000 ms_false
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:39     .rodata.ms_digits:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:42     .rodata.ms_digits:00000000 ms_digits
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:45     .rodata.formatStates:00000000 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:48     .rodata.formatStates:00000000 formatStates
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:141    .text.ulong2a:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:145    .text.ulong2a:00000000 ulong2a
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:281    .text.ulong2a:000000cc $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:288    .text.ullong2a:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:292    .text.ullong2a:00000000 ullong2a
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:436    .text.ullong2a:00000108 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:441    .text.putCharIntoBufMaxLen:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:445    .text.putCharIntoBufMaxLen:00000000 putCharIntoBufMaxLen
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:495    .text.xsnprintf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:500    .text.xsnprintf:00000000 xsnprintf
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:923    .text.XF1_xvformat:00000000 XF1_xvformat
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:579    .text.xsnprintf:00000068 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:584    .text.XF1_xformat:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:589    .text.XF1_xformat:00000000 XF1_xformat
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:633    .text.xstrlen:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:637    .text.xstrlen:00000000 xstrlen
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:682    .text.outBuffer:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:686    .text.outBuffer:00000000 outBuffer
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:767    .text.outChars:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:771    .text.outChars:00000000 outChars
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:825    .text.putCharIntoBuf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:829    .text.putCharIntoBuf:00000000 putCharIntoBuf
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:867    .text.xsprintf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:872    .text.xsprintf:00000000 xsprintf
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:913    .text.xsprintf:00000030 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:918    .text.XF1_xvformat:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1001   .text.XF1_xvformat:00000080 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1008   .text.XF1_xvformat:0000009c $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1157   .text.XF1_xvformat:0000018c $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1174   .text.XF1_xvformat:000001d0 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1225   .text.XF1_xvformat:00000214 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1280   .text.XF1_xvformat:000002f0 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1348   .text.XF1_xvformat:0000035c $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1351   .text.XF1_xvformat:00000360 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1526   .text.XF1_xvformat:0000047c $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1530   .text.XF1_xvformat:0000048c $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1744   .text.XF1_xvformat:000005f8 $d
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1749   .text.XF1_xvformat:00000604 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1850   .text.XF1_xsprintf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1855   .text.XF1_xsprintf:00000000 XF1_xsprintf
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1898   .text.XF1_xsnprintf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1903   .text.XF1_xsnprintf:00000000 XF1_xsnprintf
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1947   .text.XF1_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1952   .text.XF1_Init:00000000 XF1_Init
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1973   .text.XF1_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccJj1cma.s:1978   .text.XF1_Deinit:00000000 XF1_Deinit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8

UNDEFINED SYMBOLS
__aeabi_uldivmod
