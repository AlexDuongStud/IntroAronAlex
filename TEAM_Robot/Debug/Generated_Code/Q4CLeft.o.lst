   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"Q4CLeft.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.Q4CLeft_swappedPins,"aw",%nobits
  23              	Q4CLeft_swappedPins:
  24 0000 00       		.space	1
  25              		.section	.rodata.Q4CLeft_Quad_Table,"a",%progbits
  26              		.align	2
  29              	Q4CLeft_Quad_Table:
  30 0000 00       		.byte	0
  31 0001 01       		.byte	1
  32 0002 FF       		.byte	-1
  33 0003 03       		.byte	3
  34 0004 FF       		.byte	-1
  35 0005 00       		.byte	0
  36 0006 03       		.byte	3
  37 0007 01       		.byte	1
  38 0008 01       		.byte	1
  39 0009 03       		.byte	3
  40 000a 00       		.byte	0
  41 000b FF       		.byte	-1
  42 000c 03       		.byte	3
  43 000d FF       		.byte	-1
  44 000e 01       		.byte	1
  45 000f 00       		.byte	0
  46              		.section	.bss.Q4CLeft_last_quadrature_value,"aw",%nobits
  49              	Q4CLeft_last_quadrature_value:
  50 0000 00       		.space	1
  51              		.section	.bss.Q4CLeft_currPos,"aw",%nobits
  52              		.align	2
  55              	Q4CLeft_currPos:
  56 0000 00000000 		.space	4
  57              		.section	.bss.Q4CLeft_nofErrors,"aw",%nobits
  58              		.align	1
  61              	Q4CLeft_nofErrors:
  62 0000 0000     		.space	2
  63              		.section	.text.Q4CLeft_SetPos,"ax",%progbits
  64              		.align	2
  65              		.global	Q4CLeft_SetPos
  66              		.thumb
  67              		.thumb_func
  69              	Q4CLeft_SetPos:
  70              	.LFB0:
  71              		.file 1 "../Generated_Code/Q4CLeft.c"
   1:../Generated_Code/Q4CLeft.c **** /* ###################################################################
   2:../Generated_Code/Q4CLeft.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/Q4CLeft.c **** **     Filename    : Q4CLeft.c
   4:../Generated_Code/Q4CLeft.c **** **     Project     : TEAM_Robot
   5:../Generated_Code/Q4CLeft.c **** **     Processor   : MK22FX512VLK12
   6:../Generated_Code/Q4CLeft.c **** **     Component   : QuadCounter
   7:../Generated_Code/Q4CLeft.c **** **     Version     : Component 01.031, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/Q4CLeft.c **** **     Repository  : My Components
   9:../Generated_Code/Q4CLeft.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/Q4CLeft.c **** **     Date/Time   : 2018-09-28, 15:03, # CodeGen: 0
  11:../Generated_Code/Q4CLeft.c **** **     Abstract    :
  12:../Generated_Code/Q4CLeft.c **** **
  13:../Generated_Code/Q4CLeft.c **** This driver implements a quadrature encoder using two signals (C1 and C2) to generate position info
  14:../Generated_Code/Q4CLeft.c **** **     Settings    :
  15:../Generated_Code/Q4CLeft.c **** **          Component name                                 : Q4CLeft
  16:../Generated_Code/Q4CLeft.c **** **          C1 and C2 swapped                              : no
  17:../Generated_Code/Q4CLeft.c **** **          Counter Type                                   : 32bit
  18:../Generated_Code/Q4CLeft.c **** **          Method                                         : 
  19:../Generated_Code/Q4CLeft.c **** **            Sampling                                     : Enabled
  20:../Generated_Code/Q4CLeft.c **** **              Error Correction                           : no
  21:../Generated_Code/Q4CLeft.c **** **              C1                                         : Cx
  22:../Generated_Code/Q4CLeft.c **** **              C2                                         : Cx
  23:../Generated_Code/Q4CLeft.c **** **            Input Capture                                : Disabled
  24:../Generated_Code/Q4CLeft.c **** **          Shell                                          : Enabled
  25:../Generated_Code/Q4CLeft.c **** **            Shell                                        : CLS1
  26:../Generated_Code/Q4CLeft.c **** **            Utility                                      : UTIL1
  27:../Generated_Code/Q4CLeft.c **** **          SDK                                            : MCUC1
  28:../Generated_Code/Q4CLeft.c **** **     Contents    :
  29:../Generated_Code/Q4CLeft.c **** **         GetPos       - Q4CLeft_QuadCntrType Q4CLeft_GetPos(void);
  30:../Generated_Code/Q4CLeft.c **** **         SetPos       - void Q4CLeft_SetPos(Q4CLeft_QuadCntrType pos);
  31:../Generated_Code/Q4CLeft.c **** **         GetVal       - uint8_t Q4CLeft_GetVal(void);
  32:../Generated_Code/Q4CLeft.c **** **         Sample       - void Q4CLeft_Sample(void);
  33:../Generated_Code/Q4CLeft.c **** **         NofErrors    - uint16_t Q4CLeft_NofErrors(void);
  34:../Generated_Code/Q4CLeft.c **** **         SwapPins     - uint8_t Q4CLeft_SwapPins(bool swap);
  35:../Generated_Code/Q4CLeft.c **** **         Deinit       - void Q4CLeft_Deinit(void);
  36:../Generated_Code/Q4CLeft.c **** **         Init         - void Q4CLeft_Init(void);
  37:../Generated_Code/Q4CLeft.c **** **         ParseCommand - uint8_t Q4CLeft_ParseCommand(const unsigned char *cmd, bool *handled, con
  38:../Generated_Code/Q4CLeft.c **** **
  39:../Generated_Code/Q4CLeft.c **** **     License   :  Open Source (LGPL)
  40:../Generated_Code/Q4CLeft.c **** **     Copyright : (c) Copyright Erich Styger, 2014, all rights reserved.
  41:../Generated_Code/Q4CLeft.c **** **     This an open source software using Processor Expert.
  42:../Generated_Code/Q4CLeft.c **** **     This is a free software and is opened for education,  research  and commercial developments 
  43:../Generated_Code/Q4CLeft.c **** **     * This is a free software and there is NO WARRANTY.
  44:../Generated_Code/Q4CLeft.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  45:../Generated_Code/Q4CLeft.c **** **     * Redistributions of source code must retain the above copyright notice.
  46:../Generated_Code/Q4CLeft.c **** ** ###################################################################*/
  47:../Generated_Code/Q4CLeft.c **** /*!
  48:../Generated_Code/Q4CLeft.c **** ** @file Q4CLeft.c
  49:../Generated_Code/Q4CLeft.c **** ** @version 01.00
  50:../Generated_Code/Q4CLeft.c **** ** @brief
  51:../Generated_Code/Q4CLeft.c **** **
  52:../Generated_Code/Q4CLeft.c **** This driver implements a quadrature encoder using two signals (C1 and C2) to generate position info
  53:../Generated_Code/Q4CLeft.c **** */         
  54:../Generated_Code/Q4CLeft.c **** /*!
  55:../Generated_Code/Q4CLeft.c **** **  @addtogroup Q4CLeft_module Q4CLeft module documentation
  56:../Generated_Code/Q4CLeft.c **** **  @{
  57:../Generated_Code/Q4CLeft.c **** */         
  58:../Generated_Code/Q4CLeft.c **** 
  59:../Generated_Code/Q4CLeft.c **** /* MODULE Q4CLeft. */
  60:../Generated_Code/Q4CLeft.c **** 
  61:../Generated_Code/Q4CLeft.c **** #include "Q4CLeft.h"
  62:../Generated_Code/Q4CLeft.c **** 
  63:../Generated_Code/Q4CLeft.c **** #if Q4CLeft_SWAP_PINS_AT_RUNTIME
  64:../Generated_Code/Q4CLeft.c ****   static bool Q4CLeft_swappedPins = FALSE;
  65:../Generated_Code/Q4CLeft.c **** #endif
  66:../Generated_Code/Q4CLeft.c **** 
  67:../Generated_Code/Q4CLeft.c **** /* The decoder has 4 different states, together with the previous state the table has 16 entries.
  68:../Generated_Code/Q4CLeft.c ****    The value in the table (0,1,-1) indicates the steps taken since previous sample. */
  69:../Generated_Code/Q4CLeft.c **** #define QUAD_ERROR  3 /*!< Value to indicate an error in impulse detection. Has to be different fro
  70:../Generated_Code/Q4CLeft.c **** 
  71:../Generated_Code/Q4CLeft.c **** static const signed char Q4CLeft_Quad_Table[4][4] =
  72:../Generated_Code/Q4CLeft.c ****   {               /* prev   new    */
  73:../Generated_Code/Q4CLeft.c ****     {             /* c1 c2  c1 c2  */
  74:../Generated_Code/Q4CLeft.c ****      0,           /* 0  0   0  0  no change or missed a step? */
  75:../Generated_Code/Q4CLeft.c ****      1,           /* 0  0   0  1   */
  76:../Generated_Code/Q4CLeft.c ****      -1,          /* 0  0   1  0   */
  77:../Generated_Code/Q4CLeft.c ****      QUAD_ERROR   /* 0  0   1  1  error, lost impulse */
  78:../Generated_Code/Q4CLeft.c ****      },
  79:../Generated_Code/Q4CLeft.c ****     {             /* c1 c2  c1 c2  */
  80:../Generated_Code/Q4CLeft.c ****      -1,          /* 0  1   0  0   */
  81:../Generated_Code/Q4CLeft.c ****      0,           /* 0  1   0  1   no change or missed a step? */
  82:../Generated_Code/Q4CLeft.c ****      QUAD_ERROR,  /* 0  1   1  0   error, lost impulse */
  83:../Generated_Code/Q4CLeft.c ****      1            /* 0  1   1  1   */
  84:../Generated_Code/Q4CLeft.c ****      },
  85:../Generated_Code/Q4CLeft.c ****     {             /* c1 c2  c1 c2  */
  86:../Generated_Code/Q4CLeft.c ****      1,           /* 1  0   0  0   */
  87:../Generated_Code/Q4CLeft.c ****      QUAD_ERROR,  /* 1  0   0  1   error, lost impulse */
  88:../Generated_Code/Q4CLeft.c ****      0,           /* 1  0   1  0   no change or missed a step? */
  89:../Generated_Code/Q4CLeft.c ****      -1           /* 1  0   1  1   */
  90:../Generated_Code/Q4CLeft.c ****      },
  91:../Generated_Code/Q4CLeft.c ****     {             /* c1 c2  c1 c2  */
  92:../Generated_Code/Q4CLeft.c ****      QUAD_ERROR,  /* 1  1   0  0   error, lost impulse */
  93:../Generated_Code/Q4CLeft.c ****      -1,          /* 1  1   0  1   */
  94:../Generated_Code/Q4CLeft.c ****      1,           /* 1  1   1  0   */
  95:../Generated_Code/Q4CLeft.c ****      0            /* 1  1   1  1   no change or missed a step? */
  96:../Generated_Code/Q4CLeft.c ****      }
  97:../Generated_Code/Q4CLeft.c ****   };
  98:../Generated_Code/Q4CLeft.c **** static uint8_t Q4CLeft_last_quadrature_value; /*! Value of C1&C2 during last round. */
  99:../Generated_Code/Q4CLeft.c **** 
 100:../Generated_Code/Q4CLeft.c **** static Q4CLeft_QuadCntrType Q4CLeft_currPos = 0; /*!< Current position */
 101:../Generated_Code/Q4CLeft.c **** static uint16_t Q4CLeft_nofErrors = 0;
 102:../Generated_Code/Q4CLeft.c **** 
 103:../Generated_Code/Q4CLeft.c **** /*
 104:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 105:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_SetPos (component QuadCounter)
 106:../Generated_Code/Q4CLeft.c **** **     Description :
 107:../Generated_Code/Q4CLeft.c **** **         Sets the position information. Can be used as well to reset
 108:../Generated_Code/Q4CLeft.c **** **         the position information.
 109:../Generated_Code/Q4CLeft.c **** **     Parameters  :
 110:../Generated_Code/Q4CLeft.c **** **         NAME            - DESCRIPTION
 111:../Generated_Code/Q4CLeft.c **** **         pos             - Position value to be set.
 112:../Generated_Code/Q4CLeft.c **** **     Returns     : Nothing
 113:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 114:../Generated_Code/Q4CLeft.c **** */
 115:../Generated_Code/Q4CLeft.c **** void Q4CLeft_SetPos(Q4CLeft_QuadCntrType pos)
 116:../Generated_Code/Q4CLeft.c **** {
  72              		.loc 1 116 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 117:../Generated_Code/Q4CLeft.c ****   Q4CLeft_currPos = pos;
  85              		.loc 1 117 0
  86 0008 034B     		ldr	r3, .L2
  87 000a 7A68     		ldr	r2, [r7, #4]
  88 000c 1A60     		str	r2, [r3]
 118:../Generated_Code/Q4CLeft.c **** }
  89              		.loc 1 118 0
  90 000e 0C37     		adds	r7, r7, #12
  91 0010 BD46     		mov	sp, r7
  92              		@ sp needed
  93 0012 5DF8047B 		ldr	r7, [sp], #4
  94 0016 7047     		bx	lr
  95              	.L3:
  96              		.align	2
  97              	.L2:
  98 0018 00000000 		.word	Q4CLeft_currPos
  99              		.cfi_endproc
 100              	.LFE0:
 102              		.section	.text.Q4CLeft_GetPos,"ax",%progbits
 103              		.align	2
 104              		.global	Q4CLeft_GetPos
 105              		.thumb
 106              		.thumb_func
 108              	Q4CLeft_GetPos:
 109              	.LFB1:
 119:../Generated_Code/Q4CLeft.c **** 
 120:../Generated_Code/Q4CLeft.c **** /*
 121:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 122:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_GetPos (component QuadCounter)
 123:../Generated_Code/Q4CLeft.c **** **     Description :
 124:../Generated_Code/Q4CLeft.c **** **         Returns the current position based on the encoder tracking.
 125:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 126:../Generated_Code/Q4CLeft.c **** **     Returns     :
 127:../Generated_Code/Q4CLeft.c **** **         ---             - position
 128:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 129:../Generated_Code/Q4CLeft.c **** */
 130:../Generated_Code/Q4CLeft.c **** Q4CLeft_QuadCntrType Q4CLeft_GetPos(void)
 131:../Generated_Code/Q4CLeft.c **** {
 110              		.loc 1 131 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115 0000 80B4     		push	{r7}
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 7, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 132:../Generated_Code/Q4CLeft.c ****   return Q4CLeft_currPos;
 120              		.loc 1 132 0
 121 0004 034B     		ldr	r3, .L6
 122 0006 1B68     		ldr	r3, [r3]
 133:../Generated_Code/Q4CLeft.c **** }
 123              		.loc 1 133 0
 124 0008 1846     		mov	r0, r3
 125 000a BD46     		mov	sp, r7
 126              		@ sp needed
 127 000c 5DF8047B 		ldr	r7, [sp], #4
 128 0010 7047     		bx	lr
 129              	.L7:
 130 0012 00BF     		.align	2
 131              	.L6:
 132 0014 00000000 		.word	Q4CLeft_currPos
 133              		.cfi_endproc
 134              	.LFE1:
 136              		.section	.text.Q4CLeft_GetVal,"ax",%progbits
 137              		.align	2
 138              		.global	Q4CLeft_GetVal
 139              		.thumb
 140              		.thumb_func
 142              	Q4CLeft_GetVal:
 143              	.LFB2:
 134:../Generated_Code/Q4CLeft.c **** 
 135:../Generated_Code/Q4CLeft.c **** /*
 136:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 137:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_GetVal (component QuadCounter)
 138:../Generated_Code/Q4CLeft.c **** **     Description :
 139:../Generated_Code/Q4CLeft.c **** **         Returns the quadrature value (0, 1, 2 or 3)
 140:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 141:../Generated_Code/Q4CLeft.c **** **     Returns     :
 142:../Generated_Code/Q4CLeft.c **** **         ---             - Quadrature value (0-3)
 143:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 144:../Generated_Code/Q4CLeft.c **** */
 145:../Generated_Code/Q4CLeft.c **** uint8_t Q4CLeft_GetVal(void)
 146:../Generated_Code/Q4CLeft.c **** {
 144              		.loc 1 146 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 98B5     		push	{r3, r4, r7, lr}
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 3, -16
 151              		.cfi_offset 4, -12
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 147:../Generated_Code/Q4CLeft.c **** #if Q4CLeft_SWAP_PINS_AT_RUNTIME
 148:../Generated_Code/Q4CLeft.c ****   if (Q4CLeft_swappedPins) {
 156              		.loc 1 148 0
 157 0004 1E4B     		ldr	r3, .L15
 158 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 0008 002B     		cmp	r3, #0
 160 000a 1BD0     		beq	.L9
 149:../Generated_Code/Q4CLeft.c ****     return Q4CLeft_GET_C1_C2_PINS();
 161              		.loc 1 149 0
 162 000c 1D4B     		ldr	r3, .L15+4
 163 000e 1B6B     		ldr	r3, [r3, #48]
 164 0010 1846     		mov	r0, r3
 165 0012 FFF7FEFF 		bl	BitIoLdd16_GetVal
 166 0016 0346     		mov	r3, r0
 167 0018 002B     		cmp	r3, #0
 168 001a 01D0     		beq	.L10
 169              		.loc 1 149 0 is_stmt 0 discriminator 1
 170 001c 0224     		movs	r4, #2
 171 001e 00E0     		b	.L11
 172              	.L10:
 173              		.loc 1 149 0 discriminator 2
 174 0020 0024     		movs	r4, #0
 175              	.L11:
 176              		.loc 1 149 0 discriminator 3
 177 0022 184B     		ldr	r3, .L15+4
 178 0024 5B6B     		ldr	r3, [r3, #52]
 179 0026 1846     		mov	r0, r3
 180 0028 FFF7FEFF 		bl	BitIoLdd17_GetVal
 181 002c 0346     		mov	r3, r0
 182 002e 002B     		cmp	r3, #0
 183 0030 0CBF     		ite	eq
 184 0032 0023     		moveq	r3, #0
 185 0034 0123     		movne	r3, #1
 186 0036 DBB2     		uxtb	r3, r3
 187 0038 DBB2     		uxtb	r3, r3
 188 003a 2246     		mov	r2, r4
 189 003c 1343     		orrs	r3, r3, r2
 190 003e DBB2     		uxtb	r3, r3
 191 0040 DBB2     		uxtb	r3, r3
 192 0042 1AE0     		b	.L12
 193              	.L9:
 150:../Generated_Code/Q4CLeft.c ****   } else {
 151:../Generated_Code/Q4CLeft.c ****     return Q4CLeft_GET_C1_C2_PINS_SWAPPED();
 194              		.loc 1 151 0 is_stmt 1
 195 0044 0F4B     		ldr	r3, .L15+4
 196 0046 5B6B     		ldr	r3, [r3, #52]
 197 0048 1846     		mov	r0, r3
 198 004a FFF7FEFF 		bl	BitIoLdd17_GetVal
 199 004e 0346     		mov	r3, r0
 200 0050 002B     		cmp	r3, #0
 201 0052 01D0     		beq	.L13
 202              		.loc 1 151 0 is_stmt 0 discriminator 1
 203 0054 0224     		movs	r4, #2
 204 0056 00E0     		b	.L14
 205              	.L13:
 206              		.loc 1 151 0 discriminator 2
 207 0058 0024     		movs	r4, #0
 208              	.L14:
 209              		.loc 1 151 0 discriminator 3
 210 005a 0A4B     		ldr	r3, .L15+4
 211 005c 1B6B     		ldr	r3, [r3, #48]
 212 005e 1846     		mov	r0, r3
 213 0060 FFF7FEFF 		bl	BitIoLdd16_GetVal
 214 0064 0346     		mov	r3, r0
 215 0066 002B     		cmp	r3, #0
 216 0068 0CBF     		ite	eq
 217 006a 0023     		moveq	r3, #0
 218 006c 0123     		movne	r3, #1
 219 006e DBB2     		uxtb	r3, r3
 220 0070 DBB2     		uxtb	r3, r3
 221 0072 2246     		mov	r2, r4
 222 0074 1343     		orrs	r3, r3, r2
 223 0076 DBB2     		uxtb	r3, r3
 224 0078 DBB2     		uxtb	r3, r3
 225              	.L12:
 152:../Generated_Code/Q4CLeft.c ****   }
 153:../Generated_Code/Q4CLeft.c **** #else
 154:../Generated_Code/Q4CLeft.c ****   return Q4CLeft_GET_C1_C2_PINS();
 155:../Generated_Code/Q4CLeft.c **** #endif
 156:../Generated_Code/Q4CLeft.c **** }
 226              		.loc 1 156 0 is_stmt 1
 227 007a 1846     		mov	r0, r3
 228 007c 98BD     		pop	{r3, r4, r7, pc}
 229              	.L16:
 230 007e 00BF     		.align	2
 231              	.L15:
 232 0080 00000000 		.word	Q4CLeft_swappedPins
 233 0084 00000000 		.word	PE_LDD_DeviceDataList
 234              		.cfi_endproc
 235              	.LFE2:
 237              		.section	.text.Q4CLeft_Sample,"ax",%progbits
 238              		.align	2
 239              		.global	Q4CLeft_Sample
 240              		.thumb
 241              		.thumb_func
 243              	Q4CLeft_Sample:
 244              	.LFB3:
 157:../Generated_Code/Q4CLeft.c **** 
 158:../Generated_Code/Q4CLeft.c **** /*
 159:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 160:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_Sample (component QuadCounter)
 161:../Generated_Code/Q4CLeft.c **** **     Description :
 162:../Generated_Code/Q4CLeft.c **** **         Call this method to periodically sample the signals.
 163:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 164:../Generated_Code/Q4CLeft.c **** **     Returns     : Nothing
 165:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 166:../Generated_Code/Q4CLeft.c **** */
 167:../Generated_Code/Q4CLeft.c **** void Q4CLeft_Sample(void)
 168:../Generated_Code/Q4CLeft.c **** {
 245              		.loc 1 168 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 169:../Generated_Code/Q4CLeft.c ****   signed char new_step;
 170:../Generated_Code/Q4CLeft.c ****   uint8_t c12; /* value of the two sensor input */
 171:../Generated_Code/Q4CLeft.c **** 
 172:../Generated_Code/Q4CLeft.c ****   c12 = Q4CLeft_GetVal();
 257              		.loc 1 172 0
 258 0006 FFF7FEFF 		bl	Q4CLeft_GetVal
 259 000a 0346     		mov	r3, r0
 260 000c FB71     		strb	r3, [r7, #7]
 173:../Generated_Code/Q4CLeft.c ****   new_step = Q4CLeft_Quad_Table[Q4CLeft_last_quadrature_value][c12];
 261              		.loc 1 173 0
 262 000e 134B     		ldr	r3, .L20
 263 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 0012 1946     		mov	r1, r3
 265 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 266 0016 124A     		ldr	r2, .L20+4
 267 0018 8900     		lsls	r1, r1, #2
 268 001a 0B44     		add	r3, r3, r1
 269 001c 1344     		add	r3, r3, r2
 270 001e 1B78     		ldrb	r3, [r3]
 271 0020 BB71     		strb	r3, [r7, #6]
 174:../Generated_Code/Q4CLeft.c ****   Q4CLeft_last_quadrature_value = c12;
 272              		.loc 1 174 0
 273 0022 0E4B     		ldr	r3, .L20
 274 0024 FA79     		ldrb	r2, [r7, #7]
 275 0026 1A70     		strb	r2, [r3]
 175:../Generated_Code/Q4CLeft.c ****   if (new_step == QUAD_ERROR) {
 276              		.loc 1 175 0
 277 0028 97F90630 		ldrsb	r3, [r7, #6]
 278 002c 032B     		cmp	r3, #3
 279 002e 06D1     		bne	.L18
 176:../Generated_Code/Q4CLeft.c ****     Q4CLeft_nofErrors++;
 280              		.loc 1 176 0
 281 0030 0C4B     		ldr	r3, .L20+8
 282 0032 1B88     		ldrh	r3, [r3]
 283 0034 0133     		adds	r3, r3, #1
 284 0036 9AB2     		uxth	r2, r3
 285 0038 0A4B     		ldr	r3, .L20+8
 286 003a 1A80     		strh	r2, [r3]	@ movhi
 287 003c 0AE0     		b	.L17
 288              	.L18:
 177:../Generated_Code/Q4CLeft.c ****   } else if (new_step != 0) {
 289              		.loc 1 177 0
 290 003e 97F90630 		ldrsb	r3, [r7, #6]
 291 0042 002B     		cmp	r3, #0
 292 0044 06D0     		beq	.L17
 178:../Generated_Code/Q4CLeft.c ****     Q4CLeft_currPos += new_step;
 293              		.loc 1 178 0
 294 0046 97F90620 		ldrsb	r2, [r7, #6]
 295 004a 074B     		ldr	r3, .L20+12
 296 004c 1B68     		ldr	r3, [r3]
 297 004e 1A44     		add	r2, r2, r3
 298 0050 054B     		ldr	r3, .L20+12
 299 0052 1A60     		str	r2, [r3]
 300              	.L17:
 179:../Generated_Code/Q4CLeft.c ****   }
 180:../Generated_Code/Q4CLeft.c **** }
 301              		.loc 1 180 0
 302 0054 0837     		adds	r7, r7, #8
 303 0056 BD46     		mov	sp, r7
 304              		@ sp needed
 305 0058 80BD     		pop	{r7, pc}
 306              	.L21:
 307 005a 00BF     		.align	2
 308              	.L20:
 309 005c 00000000 		.word	Q4CLeft_last_quadrature_value
 310 0060 00000000 		.word	Q4CLeft_Quad_Table
 311 0064 00000000 		.word	Q4CLeft_nofErrors
 312 0068 00000000 		.word	Q4CLeft_currPos
 313              		.cfi_endproc
 314              	.LFE3:
 316              		.section	.text.Q4CLeft_NofErrors,"ax",%progbits
 317              		.align	2
 318              		.global	Q4CLeft_NofErrors
 319              		.thumb
 320              		.thumb_func
 322              	Q4CLeft_NofErrors:
 323              	.LFB4:
 181:../Generated_Code/Q4CLeft.c **** 
 182:../Generated_Code/Q4CLeft.c **** /*
 183:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 184:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_NofErrors (component QuadCounter)
 185:../Generated_Code/Q4CLeft.c **** **     Description :
 186:../Generated_Code/Q4CLeft.c **** **         Returns the number of decoding errors
 187:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 188:../Generated_Code/Q4CLeft.c **** **     Returns     :
 189:../Generated_Code/Q4CLeft.c **** **         ---             - Error code
 190:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 191:../Generated_Code/Q4CLeft.c **** */
 192:../Generated_Code/Q4CLeft.c **** uint16_t Q4CLeft_NofErrors(void)
 193:../Generated_Code/Q4CLeft.c **** {
 324              		.loc 1 193 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329 0000 80B4     		push	{r7}
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 194:../Generated_Code/Q4CLeft.c ****   return Q4CLeft_nofErrors;
 334              		.loc 1 194 0
 335 0004 034B     		ldr	r3, .L24
 336 0006 1B88     		ldrh	r3, [r3]
 195:../Generated_Code/Q4CLeft.c **** }
 337              		.loc 1 195 0
 338 0008 1846     		mov	r0, r3
 339 000a BD46     		mov	sp, r7
 340              		@ sp needed
 341 000c 5DF8047B 		ldr	r7, [sp], #4
 342 0010 7047     		bx	lr
 343              	.L25:
 344 0012 00BF     		.align	2
 345              	.L24:
 346 0014 00000000 		.word	Q4CLeft_nofErrors
 347              		.cfi_endproc
 348              	.LFE4:
 350              		.section	.text.Q4CLeft_Deinit,"ax",%progbits
 351              		.align	2
 352              		.global	Q4CLeft_Deinit
 353              		.thumb
 354              		.thumb_func
 356              	Q4CLeft_Deinit:
 357              	.LFB5:
 196:../Generated_Code/Q4CLeft.c **** 
 197:../Generated_Code/Q4CLeft.c **** /*
 198:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 199:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_Deinit (component QuadCounter)
 200:../Generated_Code/Q4CLeft.c **** **     Description :
 201:../Generated_Code/Q4CLeft.c **** **         Module de-initialization method
 202:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 203:../Generated_Code/Q4CLeft.c **** **     Returns     : Nothing
 204:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 205:../Generated_Code/Q4CLeft.c **** */
 206:../Generated_Code/Q4CLeft.c **** void Q4CLeft_Deinit(void)
 207:../Generated_Code/Q4CLeft.c **** {
 358              		.loc 1 207 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 208:../Generated_Code/Q4CLeft.c ****   /* nothing needed */
 209:../Generated_Code/Q4CLeft.c **** }
 368              		.loc 1 209 0
 369 0004 BD46     		mov	sp, r7
 370              		@ sp needed
 371 0006 5DF8047B 		ldr	r7, [sp], #4
 372 000a 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE5:
 376              		.section	.text.Q4CLeft_Init,"ax",%progbits
 377              		.align	2
 378              		.global	Q4CLeft_Init
 379              		.thumb
 380              		.thumb_func
 382              	Q4CLeft_Init:
 383              	.LFB6:
 210:../Generated_Code/Q4CLeft.c **** 
 211:../Generated_Code/Q4CLeft.c **** /*
 212:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 213:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_Init (component QuadCounter)
 214:../Generated_Code/Q4CLeft.c **** **     Description :
 215:../Generated_Code/Q4CLeft.c **** **         Module initialization method
 216:../Generated_Code/Q4CLeft.c **** **     Parameters  : None
 217:../Generated_Code/Q4CLeft.c **** **     Returns     : Nothing
 218:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 219:../Generated_Code/Q4CLeft.c **** */
 220:../Generated_Code/Q4CLeft.c **** void Q4CLeft_Init(void)
 221:../Generated_Code/Q4CLeft.c **** {
 384              		.loc 1 221 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 98B5     		push	{r3, r4, r7, lr}
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 3, -16
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 222:../Generated_Code/Q4CLeft.c ****   Q4CLeft_currPos = 0;
 396              		.loc 1 222 0
 397 0004 134B     		ldr	r3, .L30
 398 0006 0022     		movs	r2, #0
 399 0008 1A60     		str	r2, [r3]
 223:../Generated_Code/Q4CLeft.c ****   Q4CLeft_last_quadrature_value = Q4CLeft_GET_C1_C2_PINS();
 400              		.loc 1 223 0
 401 000a 134B     		ldr	r3, .L30+4
 402 000c 1B6B     		ldr	r3, [r3, #48]
 403 000e 1846     		mov	r0, r3
 404 0010 FFF7FEFF 		bl	BitIoLdd16_GetVal
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 01D0     		beq	.L28
 408              		.loc 1 223 0 is_stmt 0 discriminator 1
 409 001a 0224     		movs	r4, #2
 410 001c 00E0     		b	.L29
 411              	.L28:
 412              		.loc 1 223 0 discriminator 2
 413 001e 0024     		movs	r4, #0
 414              	.L29:
 415              		.loc 1 223 0 discriminator 3
 416 0020 0D4B     		ldr	r3, .L30+4
 417 0022 5B6B     		ldr	r3, [r3, #52]
 418 0024 1846     		mov	r0, r3
 419 0026 FFF7FEFF 		bl	BitIoLdd17_GetVal
 420 002a 0346     		mov	r3, r0
 421 002c 002B     		cmp	r3, #0
 422 002e 0CBF     		ite	eq
 423 0030 0023     		moveq	r3, #0
 424 0032 0123     		movne	r3, #1
 425 0034 DBB2     		uxtb	r3, r3
 426 0036 DBB2     		uxtb	r3, r3
 427 0038 2246     		mov	r2, r4
 428 003a 1343     		orrs	r3, r3, r2
 429 003c DBB2     		uxtb	r3, r3
 430 003e DAB2     		uxtb	r2, r3
 431 0040 064B     		ldr	r3, .L30+8
 432 0042 1A70     		strb	r2, [r3]
 224:../Generated_Code/Q4CLeft.c ****   Q4CLeft_nofErrors = 0;
 433              		.loc 1 224 0 is_stmt 1 discriminator 3
 434 0044 064B     		ldr	r3, .L30+12
 435 0046 0022     		movs	r2, #0
 436 0048 1A80     		strh	r2, [r3]	@ movhi
 225:../Generated_Code/Q4CLeft.c **** #if Q4CLeft_SWAP_PINS_AT_RUNTIME
 226:../Generated_Code/Q4CLeft.c ****   Q4CLeft_swappedPins = FALSE;
 437              		.loc 1 226 0 discriminator 3
 438 004a 064B     		ldr	r3, .L30+16
 439 004c 0022     		movs	r2, #0
 440 004e 1A70     		strb	r2, [r3]
 227:../Generated_Code/Q4CLeft.c **** #endif
 228:../Generated_Code/Q4CLeft.c **** }
 441              		.loc 1 228 0 discriminator 3
 442 0050 98BD     		pop	{r3, r4, r7, pc}
 443              	.L31:
 444 0052 00BF     		.align	2
 445              	.L30:
 446 0054 00000000 		.word	Q4CLeft_currPos
 447 0058 00000000 		.word	PE_LDD_DeviceDataList
 448 005c 00000000 		.word	Q4CLeft_last_quadrature_value
 449 0060 00000000 		.word	Q4CLeft_nofErrors
 450 0064 00000000 		.word	Q4CLeft_swappedPins
 451              		.cfi_endproc
 452              	.LFE6:
 454              		.section	.rodata
 455              		.align	2
 456              	.LC0:
 457 0000 68656C70 		.ascii	"help\000"
 457      00
 458 0005 000000   		.align	2
 459              	.LC1:
 460 0008 5134434C 		.ascii	"Q4CLeft help\000"
 460      65667420 
 460      68656C70 
 460      00
 461 0015 000000   		.align	2
 462              	.LC2:
 463 0018 5134434C 		.ascii	"Q4CLeft\000"
 463      65667400 
 464              		.align	2
 465              	.LC3:
 466 0020 5134434C 		.ascii	"Q4CLeft command group\015\012\000"
 466      65667420 
 466      636F6D6D 
 466      616E6420 
 466      67726F75 
 467              		.align	2
 468              	.LC4:
 469 0038 20206865 		.ascii	"  help|status\000"
 469      6C707C73 
 469      74617475 
 469      7300
 470 0046 0000     		.align	2
 471              	.LC5:
 472 0048 5072696E 		.ascii	"Print help or status information\015\012\000"
 472      74206865 
 472      6C70206F 
 472      72207374 
 472      61747573 
 473 006b 00       		.align	2
 474              	.LC6:
 475 006c 20207265 		.ascii	"  reset\000"
 475      73657400 
 476              		.align	2
 477              	.LC7:
 478 0074 52657365 		.ascii	"Reset the current position counter\015\012\000"
 478      74207468 
 478      65206375 
 478      7272656E 
 478      7420706F 
 479 0099 000000   		.align	2
 480              	.LC8:
 481 009c 73746174 		.ascii	"status\000"
 481      757300
 482 00a3 00       		.align	2
 483              	.LC9:
 484 00a4 5134434C 		.ascii	"Q4CLeft status\000"
 484      65667420 
 484      73746174 
 484      757300
 485 00b3 00       		.align	2
 486              	.LC10:
 487 00b4 5134434C 		.ascii	"Q4CLeft:\015\012\000"
 487      6566743A 
 487      0D0A00
 488 00bf 00       		.align	2
 489              	.LC11:
 490 00c0 2020706F 		.ascii	"  pos\000"
 490      7300
 491 00c6 0000     		.align	2
 492              	.LC12:
 493 00c8 00       		.ascii	"\000"
 494 00c9 000000   		.align	2
 495              	.LC13:
 496 00cc 2C2000   		.ascii	", \000"
 497 00cf 00       		.align	2
 498              	.LC14:
 499 00d0 0D0A00   		.ascii	"\015\012\000"
 500 00d3 00       		.align	2
 501              	.LC15:
 502 00d4 20204331 		.ascii	"  C1 C2\000"
 502      20433200 
 503              		.align	2
 504              	.LC16:
 505 00dc 312000   		.ascii	"1 \000"
 506 00df 00       		.align	2
 507              	.LC17:
 508 00e0 302000   		.ascii	"0 \000"
 509 00e3 00       		.align	2
 510              	.LC18:
 511 00e4 310D0A00 		.ascii	"1\015\012\000"
 512              		.align	2
 513              	.LC19:
 514 00e8 300D0A00 		.ascii	"0\015\012\000"
 515              		.align	2
 516              	.LC20:
 517 00ec 20206572 		.ascii	"  errors\000"
 517      726F7273 
 517      00
 518 00f5 000000   		.align	2
 519              	.LC21:
 520 00f8 5134434C 		.ascii	"Q4CLeft reset\000"
 520      65667420 
 520      72657365 
 520      7400
 521 0106 0000     		.section	.text.Q4CLeft_ParseCommand,"ax",%progbits
 522              		.align	2
 523              		.global	Q4CLeft_ParseCommand
 524              		.thumb
 525              		.thumb_func
 527              	Q4CLeft_ParseCommand:
 528              	.LFB7:
 229:../Generated_Code/Q4CLeft.c **** 
 230:../Generated_Code/Q4CLeft.c **** /*
 231:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 232:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_ParseCommand (component QuadCounter)
 233:../Generated_Code/Q4CLeft.c **** **     Description :
 234:../Generated_Code/Q4CLeft.c **** **         Handler to process shell commands
 235:../Generated_Code/Q4CLeft.c **** **     Parameters  :
 236:../Generated_Code/Q4CLeft.c **** **         NAME            - DESCRIPTION
 237:../Generated_Code/Q4CLeft.c **** **         cmd             - Command string to be parsed
 238:../Generated_Code/Q4CLeft.c **** **       * handled         - Pointer to boolean. The handler
 239:../Generated_Code/Q4CLeft.c **** **                           sets this variable to TRUE if command was
 240:../Generated_Code/Q4CLeft.c **** **                           handled, otherwise let it untouched.
 241:../Generated_Code/Q4CLeft.c **** **         io              - Pointer to I/O structure
 242:../Generated_Code/Q4CLeft.c **** **     Returns     :
 243:../Generated_Code/Q4CLeft.c **** **         ---             - Error code
 244:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 245:../Generated_Code/Q4CLeft.c **** */
 246:../Generated_Code/Q4CLeft.c **** /*!
 247:../Generated_Code/Q4CLeft.c ****  * \brief Parses a command
 248:../Generated_Code/Q4CLeft.c ****  * \param cmd Command string to be parsed
 249:../Generated_Code/Q4CLeft.c ****  * \param handled Sets this variable to TRUE if command was handled
 250:../Generated_Code/Q4CLeft.c ****  * \param io I/O stream to be used for input/output
 251:../Generated_Code/Q4CLeft.c ****  * \return Error code, ERR_OK if everything was fine
 252:../Generated_Code/Q4CLeft.c ****  */
 253:../Generated_Code/Q4CLeft.c **** uint8_t Q4CLeft_ParseCommand(const unsigned char *cmd, bool *handled, const CLS1_StdIOType *io)
 254:../Generated_Code/Q4CLeft.c **** {
 529              		.loc 1 254 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 24
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 86B0     		sub	sp, sp, #24
 538              		.cfi_def_cfa_offset 32
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 541 0006 F860     		str	r0, [r7, #12]
 542 0008 B960     		str	r1, [r7, #8]
 543 000a 7A60     		str	r2, [r7, #4]
 255:../Generated_Code/Q4CLeft.c ****   uint8_t res=ERR_OK;
 544              		.loc 1 255 0
 545 000c 0023     		movs	r3, #0
 546 000e FB75     		strb	r3, [r7, #23]
 256:../Generated_Code/Q4CLeft.c **** 
 257:../Generated_Code/Q4CLeft.c ****   if (UTIL1_strcmp((const char*)cmd, CLS1_CMD_HELP)==0 || UTIL1_strcmp((const char *)cmd, "Q4CLeft 
 547              		.loc 1 257 0
 548 0010 F868     		ldr	r0, [r7, #12]
 549 0012 5E49     		ldr	r1, .L43
 550 0014 FFF7FEFF 		bl	strcmp
 551 0018 0346     		mov	r3, r0
 552 001a 002B     		cmp	r3, #0
 553 001c 06D0     		beq	.L33
 554              		.loc 1 257 0 is_stmt 0 discriminator 1
 555 001e F868     		ldr	r0, [r7, #12]
 556 0020 5B49     		ldr	r1, .L43+4
 557 0022 FFF7FEFF 		bl	strcmp
 558 0026 0346     		mov	r3, r0
 559 0028 002B     		cmp	r3, #0
 560 002a 18D1     		bne	.L34
 561              	.L33:
 258:../Generated_Code/Q4CLeft.c ****     CLS1_SendHelpStr((const unsigned char*)"Q4CLeft", (const unsigned char*)"Q4CLeft command group\
 562              		.loc 1 258 0 is_stmt 1
 563 002c 7B68     		ldr	r3, [r7, #4]
 564 002e 5B68     		ldr	r3, [r3, #4]
 565 0030 5848     		ldr	r0, .L43+8
 566 0032 5949     		ldr	r1, .L43+12
 567 0034 1A46     		mov	r2, r3
 568 0036 FFF7FEFF 		bl	CLS1_SendHelpStr
 259:../Generated_Code/Q4CLeft.c ****     CLS1_SendHelpStr((const unsigned char*)"  help|status", (const unsigned char*)"Print help or st
 569              		.loc 1 259 0
 570 003a 7B68     		ldr	r3, [r7, #4]
 571 003c 5B68     		ldr	r3, [r3, #4]
 572 003e 5748     		ldr	r0, .L43+16
 573 0040 5749     		ldr	r1, .L43+20
 574 0042 1A46     		mov	r2, r3
 575 0044 FFF7FEFF 		bl	CLS1_SendHelpStr
 260:../Generated_Code/Q4CLeft.c ****     CLS1_SendHelpStr((const unsigned char*)"  reset", (const unsigned char*)"Reset the current posi
 576              		.loc 1 260 0
 577 0048 7B68     		ldr	r3, [r7, #4]
 578 004a 5B68     		ldr	r3, [r3, #4]
 579 004c 5548     		ldr	r0, .L43+24
 580 004e 5649     		ldr	r1, .L43+28
 581 0050 1A46     		mov	r2, r3
 582 0052 FFF7FEFF 		bl	CLS1_SendHelpStr
 261:../Generated_Code/Q4CLeft.c ****     *handled = TRUE;
 583              		.loc 1 261 0
 584 0056 BB68     		ldr	r3, [r7, #8]
 585 0058 0122     		movs	r2, #1
 586 005a 1A70     		strb	r2, [r3]
 587 005c 91E0     		b	.L35
 588              	.L34:
 262:../Generated_Code/Q4CLeft.c ****   } else if (UTIL1_strcmp((const char*)cmd, CLS1_CMD_STATUS)==0 || UTIL1_strcmp((const char*)cmd, "
 589              		.loc 1 262 0
 590 005e F868     		ldr	r0, [r7, #12]
 591 0060 5249     		ldr	r1, .L43+32
 592 0062 FFF7FEFF 		bl	strcmp
 593 0066 0346     		mov	r3, r0
 594 0068 002B     		cmp	r3, #0
 595 006a 06D0     		beq	.L36
 596              		.loc 1 262 0 is_stmt 0 discriminator 1
 597 006c F868     		ldr	r0, [r7, #12]
 598 006e 5049     		ldr	r1, .L43+36
 599 0070 FFF7FEFF 		bl	strcmp
 600 0074 0346     		mov	r3, r0
 601 0076 002B     		cmp	r3, #0
 602 0078 73D1     		bne	.L37
 603              	.L36:
 263:../Generated_Code/Q4CLeft.c ****     CLS1_SendStr((const unsigned char*)"Q4CLeft:\r\n", io->stdOut);
 604              		.loc 1 263 0 is_stmt 1
 605 007a 7B68     		ldr	r3, [r7, #4]
 606 007c 5B68     		ldr	r3, [r3, #4]
 607 007e 4D48     		ldr	r0, .L43+40
 608 0080 1946     		mov	r1, r3
 609 0082 FFF7FEFF 		bl	CLS1_SendStr
 264:../Generated_Code/Q4CLeft.c ****     CLS1_SendStatusStr((const unsigned char*)"  pos", (const unsigned char*)"", io->stdOut);
 610              		.loc 1 264 0
 611 0086 7B68     		ldr	r3, [r7, #4]
 612 0088 5B68     		ldr	r3, [r3, #4]
 613 008a 4B48     		ldr	r0, .L43+44
 614 008c 4B49     		ldr	r1, .L43+48
 615 008e 1A46     		mov	r2, r3
 616 0090 FFF7FEFF 		bl	CLS1_SendStatusStr
 265:../Generated_Code/Q4CLeft.c ****   #if Q4CLeft_CNTR_BITS==16
 266:../Generated_Code/Q4CLeft.c ****     CLS1_SendNum16u(Q4CLeft_currPos, io->stdOut);
 267:../Generated_Code/Q4CLeft.c ****   #elif Q4CLeft_CNTR_BITS==32
 268:../Generated_Code/Q4CLeft.c ****     CLS1_SendNum32u(Q4CLeft_currPos, io->stdOut);
 617              		.loc 1 268 0
 618 0094 4A4B     		ldr	r3, .L43+52
 619 0096 1A68     		ldr	r2, [r3]
 620 0098 7B68     		ldr	r3, [r7, #4]
 621 009a 5B68     		ldr	r3, [r3, #4]
 622 009c 1046     		mov	r0, r2
 623 009e 1946     		mov	r1, r3
 624 00a0 FFF7FEFF 		bl	CLS1_SendNum32u
 269:../Generated_Code/Q4CLeft.c ****   #else
 270:../Generated_Code/Q4CLeft.c ****     #error "unknown counter size!"
 271:../Generated_Code/Q4CLeft.c ****   #endif
 272:../Generated_Code/Q4CLeft.c ****     CLS1_SendStr((const unsigned char*)", ", io->stdOut);
 625              		.loc 1 272 0
 626 00a4 7B68     		ldr	r3, [r7, #4]
 627 00a6 5B68     		ldr	r3, [r3, #4]
 628 00a8 4648     		ldr	r0, .L43+56
 629 00aa 1946     		mov	r1, r3
 630 00ac FFF7FEFF 		bl	CLS1_SendStr
 273:../Generated_Code/Q4CLeft.c ****   #if Q4CLeft_CNTR_BITS==16
 274:../Generated_Code/Q4CLeft.c ****     CLS1_SendNum16s((int16_t)Q4CLeft_currPos, io->stdOut);
 275:../Generated_Code/Q4CLeft.c ****   #elif Q4CLeft_CNTR_BITS==32
 276:../Generated_Code/Q4CLeft.c ****     CLS1_SendNum32s((int32_t)Q4CLeft_currPos, io->stdOut);
 631              		.loc 1 276 0
 632 00b0 434B     		ldr	r3, .L43+52
 633 00b2 1B68     		ldr	r3, [r3]
 634 00b4 1A46     		mov	r2, r3
 635 00b6 7B68     		ldr	r3, [r7, #4]
 636 00b8 5B68     		ldr	r3, [r3, #4]
 637 00ba 1046     		mov	r0, r2
 638 00bc 1946     		mov	r1, r3
 639 00be FFF7FEFF 		bl	CLS1_SendNum32s
 277:../Generated_Code/Q4CLeft.c ****   #else
 278:../Generated_Code/Q4CLeft.c ****     #error "unknown counter size!"
 279:../Generated_Code/Q4CLeft.c ****   #endif
 280:../Generated_Code/Q4CLeft.c ****     CLS1_SendStr((const unsigned char*)"\r\n", io->stdOut);
 640              		.loc 1 280 0
 641 00c2 7B68     		ldr	r3, [r7, #4]
 642 00c4 5B68     		ldr	r3, [r3, #4]
 643 00c6 4048     		ldr	r0, .L43+60
 644 00c8 1946     		mov	r1, r3
 645 00ca FFF7FEFF 		bl	CLS1_SendStr
 281:../Generated_Code/Q4CLeft.c ****     CLS1_SendStatusStr((const unsigned char*)"  C1 C2", (const unsigned char*)"", io->stdOut);
 646              		.loc 1 281 0
 647 00ce 7B68     		ldr	r3, [r7, #4]
 648 00d0 5B68     		ldr	r3, [r3, #4]
 649 00d2 3E48     		ldr	r0, .L43+64
 650 00d4 3949     		ldr	r1, .L43+48
 651 00d6 1A46     		mov	r2, r3
 652 00d8 FFF7FEFF 		bl	CLS1_SendStatusStr
 282:../Generated_Code/Q4CLeft.c ****     if (Q4CLeft_GET_C1_PIN()!=0) {
 653              		.loc 1 282 0
 654 00dc 3C4B     		ldr	r3, .L43+68
 655 00de 1B6B     		ldr	r3, [r3, #48]
 656 00e0 1846     		mov	r0, r3
 657 00e2 FFF7FEFF 		bl	BitIoLdd16_GetVal
 658 00e6 0346     		mov	r3, r0
 659 00e8 002B     		cmp	r3, #0
 660 00ea 06D0     		beq	.L38
 283:../Generated_Code/Q4CLeft.c ****       CLS1_SendStr((const unsigned char*)"1 ", io->stdOut);
 661              		.loc 1 283 0
 662 00ec 7B68     		ldr	r3, [r7, #4]
 663 00ee 5B68     		ldr	r3, [r3, #4]
 664 00f0 3848     		ldr	r0, .L43+72
 665 00f2 1946     		mov	r1, r3
 666 00f4 FFF7FEFF 		bl	CLS1_SendStr
 667 00f8 05E0     		b	.L39
 668              	.L38:
 284:../Generated_Code/Q4CLeft.c ****     } else {
 285:../Generated_Code/Q4CLeft.c ****       CLS1_SendStr((const unsigned char*)"0 ", io->stdOut);
 669              		.loc 1 285 0
 670 00fa 7B68     		ldr	r3, [r7, #4]
 671 00fc 5B68     		ldr	r3, [r3, #4]
 672 00fe 3648     		ldr	r0, .L43+76
 673 0100 1946     		mov	r1, r3
 674 0102 FFF7FEFF 		bl	CLS1_SendStr
 675              	.L39:
 286:../Generated_Code/Q4CLeft.c ****     }
 287:../Generated_Code/Q4CLeft.c ****     if (Q4CLeft_GET_C2_PIN()!=0) {
 676              		.loc 1 287 0
 677 0106 324B     		ldr	r3, .L43+68
 678 0108 5B6B     		ldr	r3, [r3, #52]
 679 010a 1846     		mov	r0, r3
 680 010c FFF7FEFF 		bl	BitIoLdd17_GetVal
 681 0110 0346     		mov	r3, r0
 682 0112 002B     		cmp	r3, #0
 683 0114 06D0     		beq	.L40
 288:../Generated_Code/Q4CLeft.c ****       CLS1_SendStr((const unsigned char*)"1\r\n", io->stdOut);
 684              		.loc 1 288 0
 685 0116 7B68     		ldr	r3, [r7, #4]
 686 0118 5B68     		ldr	r3, [r3, #4]
 687 011a 3048     		ldr	r0, .L43+80
 688 011c 1946     		mov	r1, r3
 689 011e FFF7FEFF 		bl	CLS1_SendStr
 690 0122 05E0     		b	.L41
 691              	.L40:
 289:../Generated_Code/Q4CLeft.c ****     } else {
 290:../Generated_Code/Q4CLeft.c ****       CLS1_SendStr((const unsigned char*)"0\r\n", io->stdOut);
 692              		.loc 1 290 0
 693 0124 7B68     		ldr	r3, [r7, #4]
 694 0126 5B68     		ldr	r3, [r3, #4]
 695 0128 2D48     		ldr	r0, .L43+84
 696 012a 1946     		mov	r1, r3
 697 012c FFF7FEFF 		bl	CLS1_SendStr
 698              	.L41:
 291:../Generated_Code/Q4CLeft.c ****     }
 292:../Generated_Code/Q4CLeft.c ****     CLS1_SendStatusStr((const unsigned char*)"  errors", (const unsigned char*)"", io->stdOut);
 699              		.loc 1 292 0
 700 0130 7B68     		ldr	r3, [r7, #4]
 701 0132 5B68     		ldr	r3, [r3, #4]
 702 0134 2B48     		ldr	r0, .L43+88
 703 0136 2149     		ldr	r1, .L43+48
 704 0138 1A46     		mov	r2, r3
 705 013a FFF7FEFF 		bl	CLS1_SendStatusStr
 293:../Generated_Code/Q4CLeft.c ****     CLS1_SendNum16u(Q4CLeft_nofErrors, io->stdOut);
 706              		.loc 1 293 0
 707 013e 2A4B     		ldr	r3, .L43+92
 708 0140 1A88     		ldrh	r2, [r3]
 709 0142 7B68     		ldr	r3, [r7, #4]
 710 0144 5B68     		ldr	r3, [r3, #4]
 711 0146 1046     		mov	r0, r2
 712 0148 1946     		mov	r1, r3
 713 014a FFF7FEFF 		bl	CLS1_SendNum16u
 294:../Generated_Code/Q4CLeft.c ****     CLS1_SendStr((const unsigned char*)"\r\n", io->stdOut);
 714              		.loc 1 294 0
 715 014e 7B68     		ldr	r3, [r7, #4]
 716 0150 5B68     		ldr	r3, [r3, #4]
 717 0152 1D48     		ldr	r0, .L43+60
 718 0154 1946     		mov	r1, r3
 719 0156 FFF7FEFF 		bl	CLS1_SendStr
 295:../Generated_Code/Q4CLeft.c ****     *handled = TRUE;
 720              		.loc 1 295 0
 721 015a BB68     		ldr	r3, [r7, #8]
 722 015c 0122     		movs	r2, #1
 723 015e 1A70     		strb	r2, [r3]
 724 0160 0FE0     		b	.L35
 725              	.L37:
 296:../Generated_Code/Q4CLeft.c ****   } else if (UTIL1_strcmp((const char*)cmd, "Q4CLeft reset")==0) {
 726              		.loc 1 296 0
 727 0162 F868     		ldr	r0, [r7, #12]
 728 0164 2149     		ldr	r1, .L43+96
 729 0166 FFF7FEFF 		bl	strcmp
 730 016a 0346     		mov	r3, r0
 731 016c 002B     		cmp	r3, #0
 732 016e 08D1     		bne	.L35
 297:../Generated_Code/Q4CLeft.c ****     Q4CLeft_SetPos(0);
 733              		.loc 1 297 0
 734 0170 0020     		movs	r0, #0
 735 0172 FFF7FEFF 		bl	Q4CLeft_SetPos
 298:../Generated_Code/Q4CLeft.c ****     Q4CLeft_nofErrors = 0;
 736              		.loc 1 298 0
 737 0176 1C4B     		ldr	r3, .L43+92
 738 0178 0022     		movs	r2, #0
 739 017a 1A80     		strh	r2, [r3]	@ movhi
 299:../Generated_Code/Q4CLeft.c ****     *handled = TRUE;
 740              		.loc 1 299 0
 741 017c BB68     		ldr	r3, [r7, #8]
 742 017e 0122     		movs	r2, #1
 743 0180 1A70     		strb	r2, [r3]
 744              	.L35:
 300:../Generated_Code/Q4CLeft.c ****   }
 301:../Generated_Code/Q4CLeft.c ****   return res;
 745              		.loc 1 301 0
 746 0182 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 302:../Generated_Code/Q4CLeft.c **** }
 747              		.loc 1 302 0
 748 0184 1846     		mov	r0, r3
 749 0186 1837     		adds	r7, r7, #24
 750 0188 BD46     		mov	sp, r7
 751              		@ sp needed
 752 018a 80BD     		pop	{r7, pc}
 753              	.L44:
 754              		.align	2
 755              	.L43:
 756 018c 00000000 		.word	.LC0
 757 0190 08000000 		.word	.LC1
 758 0194 18000000 		.word	.LC2
 759 0198 20000000 		.word	.LC3
 760 019c 38000000 		.word	.LC4
 761 01a0 48000000 		.word	.LC5
 762 01a4 6C000000 		.word	.LC6
 763 01a8 74000000 		.word	.LC7
 764 01ac 9C000000 		.word	.LC8
 765 01b0 A4000000 		.word	.LC9
 766 01b4 B4000000 		.word	.LC10
 767 01b8 C0000000 		.word	.LC11
 768 01bc C8000000 		.word	.LC12
 769 01c0 00000000 		.word	Q4CLeft_currPos
 770 01c4 CC000000 		.word	.LC13
 771 01c8 D0000000 		.word	.LC14
 772 01cc D4000000 		.word	.LC15
 773 01d0 00000000 		.word	PE_LDD_DeviceDataList
 774 01d4 DC000000 		.word	.LC16
 775 01d8 E0000000 		.word	.LC17
 776 01dc E4000000 		.word	.LC18
 777 01e0 E8000000 		.word	.LC19
 778 01e4 EC000000 		.word	.LC20
 779 01e8 00000000 		.word	Q4CLeft_nofErrors
 780 01ec F8000000 		.word	.LC21
 781              		.cfi_endproc
 782              	.LFE7:
 784              		.section	.text.Q4CLeft_SwapPins,"ax",%progbits
 785              		.align	2
 786              		.global	Q4CLeft_SwapPins
 787              		.thumb
 788              		.thumb_func
 790              	Q4CLeft_SwapPins:
 791              	.LFB8:
 303:../Generated_Code/Q4CLeft.c **** 
 304:../Generated_Code/Q4CLeft.c **** /*
 305:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 306:../Generated_Code/Q4CLeft.c **** **     Method      :  Q4CLeft_SwapPins (component QuadCounter)
 307:../Generated_Code/Q4CLeft.c **** **     Description :
 308:../Generated_Code/Q4CLeft.c **** **         Swap the two pins
 309:../Generated_Code/Q4CLeft.c **** **     Parameters  :
 310:../Generated_Code/Q4CLeft.c **** **         NAME            - DESCRIPTION
 311:../Generated_Code/Q4CLeft.c **** **         swap            - if C1 and C2 pins shall be swapped.
 312:../Generated_Code/Q4CLeft.c **** **     Returns     :
 313:../Generated_Code/Q4CLeft.c **** **         ---             - Error code
 314:../Generated_Code/Q4CLeft.c **** ** ===================================================================
 315:../Generated_Code/Q4CLeft.c **** */
 316:../Generated_Code/Q4CLeft.c **** uint8_t Q4CLeft_SwapPins(bool swap)
 317:../Generated_Code/Q4CLeft.c **** {
 792              		.loc 1 317 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 804 0006 0346     		mov	r3, r0
 805 0008 FB71     		strb	r3, [r7, #7]
 318:../Generated_Code/Q4CLeft.c ****   Q4CLeft_swappedPins = swap;
 806              		.loc 1 318 0
 807 000a 054B     		ldr	r3, .L47
 808 000c FA79     		ldrb	r2, [r7, #7]
 809 000e 1A70     		strb	r2, [r3]
 319:../Generated_Code/Q4CLeft.c ****   return ERR_OK;
 810              		.loc 1 319 0
 811 0010 0023     		movs	r3, #0
 320:../Generated_Code/Q4CLeft.c **** }
 812              		.loc 1 320 0
 813 0012 1846     		mov	r0, r3
 814 0014 0C37     		adds	r7, r7, #12
 815 0016 BD46     		mov	sp, r7
 816              		@ sp needed
 817 0018 5DF8047B 		ldr	r7, [sp], #4
 818 001c 7047     		bx	lr
 819              	.L48:
 820 001e 00BF     		.align	2
 821              	.L47:
 822 0020 00000000 		.word	Q4CLeft_swappedPins
 823              		.cfi_endproc
 824              	.LFE8:
 826              		.text
 827              	.Letext0:
 828              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 829              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 830              		.file 4 "../Generated_Code/PE_Types.h"
 831              		.file 5 "../Generated_Code/CLS1.h"
 832              		.file 6 "../Generated_Code/Q4CLeft.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Q4CLeft.c
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:23     .bss.Q4CLeft_swappedPins:00000000 Q4CLeft_swappedPins
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:24     .bss.Q4CLeft_swappedPins:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:26     .rodata.Q4CLeft_Quad_Table:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:29     .rodata.Q4CLeft_Quad_Table:00000000 Q4CLeft_Quad_Table
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:49     .bss.Q4CLeft_last_quadrature_value:00000000 Q4CLeft_last_quadrature_value
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:50     .bss.Q4CLeft_last_quadrature_value:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:52     .bss.Q4CLeft_currPos:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:55     .bss.Q4CLeft_currPos:00000000 Q4CLeft_currPos
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:58     .bss.Q4CLeft_nofErrors:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:61     .bss.Q4CLeft_nofErrors:00000000 Q4CLeft_nofErrors
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:64     .text.Q4CLeft_SetPos:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:69     .text.Q4CLeft_SetPos:00000000 Q4CLeft_SetPos
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:98     .text.Q4CLeft_SetPos:00000018 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:103    .text.Q4CLeft_GetPos:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:108    .text.Q4CLeft_GetPos:00000000 Q4CLeft_GetPos
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:132    .text.Q4CLeft_GetPos:00000014 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:137    .text.Q4CLeft_GetVal:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:142    .text.Q4CLeft_GetVal:00000000 Q4CLeft_GetVal
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:232    .text.Q4CLeft_GetVal:00000080 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:238    .text.Q4CLeft_Sample:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:243    .text.Q4CLeft_Sample:00000000 Q4CLeft_Sample
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:309    .text.Q4CLeft_Sample:0000005c $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:317    .text.Q4CLeft_NofErrors:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:322    .text.Q4CLeft_NofErrors:00000000 Q4CLeft_NofErrors
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:346    .text.Q4CLeft_NofErrors:00000014 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:351    .text.Q4CLeft_Deinit:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:356    .text.Q4CLeft_Deinit:00000000 Q4CLeft_Deinit
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:377    .text.Q4CLeft_Init:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:382    .text.Q4CLeft_Init:00000000 Q4CLeft_Init
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:446    .text.Q4CLeft_Init:00000054 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:455    .rodata:00000000 $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:522    .text.Q4CLeft_ParseCommand:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:527    .text.Q4CLeft_ParseCommand:00000000 Q4CLeft_ParseCommand
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:756    .text.Q4CLeft_ParseCommand:0000018c $d
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:785    .text.Q4CLeft_SwapPins:00000000 $t
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:790    .text.Q4CLeft_SwapPins:00000000 Q4CLeft_SwapPins
C:\Users\Aron\AppData\Local\Temp\cctyM4Ee.s:822    .text.Q4CLeft_SwapPins:00000020 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.PDD_Types.h.5.e0b4125fe5201c5e1f688b067f4f0d54
                           .group:00000000 wm4.GPIO_PDD.h.123.0d360e6978ec29f76970d5d88d4be5fd
                           .group:00000000 wm4.BitIoLdd16.h.102.c809e1fb6935b1f8e8e82ca82b1b1633
                           .group:00000000 wm4.BitIoLdd17.h.80.4955ec09d8ba6218b2155bd2806c47ef
                           .group:00000000 wm4.CLS1config.h.2.854bb35357facad932898800d8509913
                           .group:00000000 wm4.CLS1.h.122.6dfe00e3ccac8c27c20e405bc6b8e609
                           .group:00000000 wm4.WAIT1config.h.9.10dc563fdcbcf1b71ae6cd3c0d22fd32
                           .group:00000000 wm4.WAIT1.h.93.af9b975f9a6d5eb80ff72ca188861d18
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.UTIL1.h.779.3f4da336bf693064cf78522cb140d5f7
                           .group:00000000 wm4.XF1config.h.2.019525ef4bf64d9e3cd792a651ed2fc0
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.CS1config.h.2.e5153cf58e5fe0ee6ea0dc776d94aafd
                           .group:00000000 wm4.CS1.h.86.71773cc9f7a1189b60d5af00334fca8e
                           .group:00000000 wm4.CLS1.h.172.83b9daee286b58c7d453522f7dba0b4f
                           .group:00000000 wm4.Q4CLeft.h.95.e8e289488260c59685bbedea33440786

UNDEFINED SYMBOLS
BitIoLdd16_GetVal
BitIoLdd17_GetVal
PE_LDD_DeviceDataList
strcmp
CLS1_SendHelpStr
CLS1_SendStr
CLS1_SendStatusStr
CLS1_SendNum32u
CLS1_SendNum32s
CLS1_SendNum16u
