   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"SEGGER_RTT_printf.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text._StoreChar,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	_StoreChar:
  26              	.LFB0:
  27              		.file 1 "../Generated_Code/SEGGER_RTT_printf.c"
   1:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
   2:../Generated_Code/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:../Generated_Code/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
   5:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
   6:../Generated_Code/SEGGER_RTT_printf.c **** *            (c) 1995 - 2018 SEGGER Microcontroller GmbH             *
   7:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
   8:../Generated_Code/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  10:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  11:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  12:../Generated_Code/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  14:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  15:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  16:../Generated_Code/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  18:../Generated_Code/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:../Generated_Code/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:../Generated_Code/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  22:../Generated_Code/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:../Generated_Code/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:../Generated_Code/SEGGER_RTT_printf.c **** * conditions are met:                                                *
  25:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  26:../Generated_Code/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:../Generated_Code/SEGGER_RTT_printf.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  29:../Generated_Code/SEGGER_RTT_printf.c **** * o Redistributions in binary form must reproduce the above          *
  30:../Generated_Code/SEGGER_RTT_printf.c **** *   copyright notice, this list of conditions and the following      *
  31:../Generated_Code/SEGGER_RTT_printf.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:../Generated_Code/SEGGER_RTT_printf.c **** *   with the distribution.                                           *
  33:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  34:../Generated_Code/SEGGER_RTT_printf.c **** * o Neither the name of SEGGER Microcontroller GmbH         *
  35:../Generated_Code/SEGGER_RTT_printf.c **** *   nor the names of its contributors may be used to endorse or      *
  36:../Generated_Code/SEGGER_RTT_printf.c **** *   promote products derived from this software without specific     *
  37:../Generated_Code/SEGGER_RTT_printf.c **** *   prior written permission.                                        *
  38:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  39:../Generated_Code/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:../Generated_Code/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  41:../Generated_Code/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:../Generated_Code/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:../Generated_Code/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:../Generated_Code/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:../Generated_Code/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:../Generated_Code/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:../Generated_Code/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:../Generated_Code/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:../Generated_Code/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:../Generated_Code/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:../Generated_Code/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  52:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  53:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  54:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  55:../Generated_Code/SEGGER_RTT_printf.c **** *       RTT version: 6.32b                                           *
  56:../Generated_Code/SEGGER_RTT_printf.c **** *                                                                    *
  57:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  58:../Generated_Code/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  59:../Generated_Code/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  60:../Generated_Code/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  61:../Generated_Code/SEGGER_RTT_printf.c **** Revision: $Rev: 9599 $
  62:../Generated_Code/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  63:../Generated_Code/SEGGER_RTT_printf.c **** */
  64:../Generated_Code/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  65:../Generated_Code/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  66:../Generated_Code/SEGGER_RTT_printf.c **** 
  67:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
  68:../Generated_Code/SEGGER_RTT_printf.c **** *
  69:../Generated_Code/SEGGER_RTT_printf.c **** *       Defines, configurable
  70:../Generated_Code/SEGGER_RTT_printf.c **** *
  71:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  72:../Generated_Code/SEGGER_RTT_printf.c **** */
  73:../Generated_Code/SEGGER_RTT_printf.c **** 
  74:../Generated_Code/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  75:../Generated_Code/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  76:../Generated_Code/SEGGER_RTT_printf.c **** #endif
  77:../Generated_Code/SEGGER_RTT_printf.c **** 
  78:../Generated_Code/SEGGER_RTT_printf.c **** #include <stdlib.h>
  79:../Generated_Code/SEGGER_RTT_printf.c **** #include <stdarg.h>
  80:../Generated_Code/SEGGER_RTT_printf.c **** 
  81:../Generated_Code/SEGGER_RTT_printf.c **** 
  82:../Generated_Code/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  83:../Generated_Code/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  84:../Generated_Code/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  85:../Generated_Code/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  86:../Generated_Code/SEGGER_RTT_printf.c **** 
  87:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
  88:../Generated_Code/SEGGER_RTT_printf.c **** *
  89:../Generated_Code/SEGGER_RTT_printf.c **** *       Types
  90:../Generated_Code/SEGGER_RTT_printf.c **** *
  91:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
  92:../Generated_Code/SEGGER_RTT_printf.c **** */
  93:../Generated_Code/SEGGER_RTT_printf.c **** 
  94:../Generated_Code/SEGGER_RTT_printf.c **** typedef struct {
  95:../Generated_Code/SEGGER_RTT_printf.c ****   char*     pBuffer;
  96:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  97:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  98:../Generated_Code/SEGGER_RTT_printf.c **** 
  99:../Generated_Code/SEGGER_RTT_printf.c ****   int   ReturnValue;
 100:../Generated_Code/SEGGER_RTT_printf.c **** 
 101:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
 102:../Generated_Code/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
 103:../Generated_Code/SEGGER_RTT_printf.c **** 
 104:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 105:../Generated_Code/SEGGER_RTT_printf.c **** *
 106:../Generated_Code/SEGGER_RTT_printf.c **** *       Function prototypes
 107:../Generated_Code/SEGGER_RTT_printf.c **** *
 108:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
 109:../Generated_Code/SEGGER_RTT_printf.c **** */
 110:../Generated_Code/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList);
 111:../Generated_Code/SEGGER_RTT_printf.c **** 
 112:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 113:../Generated_Code/SEGGER_RTT_printf.c **** *
 114:../Generated_Code/SEGGER_RTT_printf.c **** *       Static code
 115:../Generated_Code/SEGGER_RTT_printf.c **** *
 116:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
 117:../Generated_Code/SEGGER_RTT_printf.c **** */
 118:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 119:../Generated_Code/SEGGER_RTT_printf.c **** *
 120:../Generated_Code/SEGGER_RTT_printf.c **** *       _StoreChar
 121:../Generated_Code/SEGGER_RTT_printf.c **** */
 122:../Generated_Code/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  28              		.loc 1 122 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 0B46     		mov	r3, r1
  42 000a FB70     		strb	r3, [r7, #3]
 123:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Cnt;
 124:../Generated_Code/SEGGER_RTT_printf.c **** 
 125:../Generated_Code/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  43              		.loc 1 125 0
  44 000c 7B68     		ldr	r3, [r7, #4]
  45 000e 9B68     		ldr	r3, [r3, #8]
  46 0010 FB60     		str	r3, [r7, #12]
 126:../Generated_Code/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  47              		.loc 1 126 0
  48 0012 FB68     		ldr	r3, [r7, #12]
  49 0014 5A1C     		adds	r2, r3, #1
  50 0016 7B68     		ldr	r3, [r7, #4]
  51 0018 5B68     		ldr	r3, [r3, #4]
  52 001a 9A42     		cmp	r2, r3
  53 001c 0ED8     		bhi	.L2
 127:../Generated_Code/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  54              		.loc 1 127 0
  55 001e 7B68     		ldr	r3, [r7, #4]
  56 0020 1A68     		ldr	r2, [r3]
  57 0022 FB68     		ldr	r3, [r7, #12]
  58 0024 1344     		add	r3, r3, r2
  59 0026 FA78     		ldrb	r2, [r7, #3]
  60 0028 1A70     		strb	r2, [r3]
 128:../Generated_Code/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  61              		.loc 1 128 0
  62 002a FB68     		ldr	r3, [r7, #12]
  63 002c 5A1C     		adds	r2, r3, #1
  64 002e 7B68     		ldr	r3, [r7, #4]
  65 0030 9A60     		str	r2, [r3, #8]
 129:../Generated_Code/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  66              		.loc 1 129 0
  67 0032 7B68     		ldr	r3, [r7, #4]
  68 0034 DB68     		ldr	r3, [r3, #12]
  69 0036 5A1C     		adds	r2, r3, #1
  70 0038 7B68     		ldr	r3, [r7, #4]
  71 003a DA60     		str	r2, [r3, #12]
  72              	.L2:
 130:../Generated_Code/SEGGER_RTT_printf.c ****   }
 131:../Generated_Code/SEGGER_RTT_printf.c ****   //
 132:../Generated_Code/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 133:../Generated_Code/SEGGER_RTT_printf.c ****   //
 134:../Generated_Code/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  73              		.loc 1 134 0
  74 003c 7B68     		ldr	r3, [r7, #4]
  75 003e 9A68     		ldr	r2, [r3, #8]
  76 0040 7B68     		ldr	r3, [r7, #4]
  77 0042 5B68     		ldr	r3, [r3, #4]
  78 0044 9A42     		cmp	r2, r3
  79 0046 17D1     		bne	.L1
 135:../Generated_Code/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  80              		.loc 1 135 0
  81 0048 7B68     		ldr	r3, [r7, #4]
  82 004a 1969     		ldr	r1, [r3, #16]
  83 004c 7B68     		ldr	r3, [r7, #4]
  84 004e 1A68     		ldr	r2, [r3]
  85 0050 7B68     		ldr	r3, [r7, #4]
  86 0052 9B68     		ldr	r3, [r3, #8]
  87 0054 0846     		mov	r0, r1
  88 0056 1146     		mov	r1, r2
  89 0058 1A46     		mov	r2, r3
  90 005a FFF7FEFF 		bl	SEGGER_RTT_Write
  91 005e 0246     		mov	r2, r0
  92 0060 7B68     		ldr	r3, [r7, #4]
  93 0062 9B68     		ldr	r3, [r3, #8]
  94 0064 9A42     		cmp	r2, r3
  95 0066 04D0     		beq	.L4
 136:../Generated_Code/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
  96              		.loc 1 136 0
  97 0068 7B68     		ldr	r3, [r7, #4]
  98 006a 4FF0FF32 		mov	r2, #-1
  99 006e DA60     		str	r2, [r3, #12]
 100 0070 02E0     		b	.L1
 101              	.L4:
 137:../Generated_Code/SEGGER_RTT_printf.c ****     } else {
 138:../Generated_Code/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 102              		.loc 1 138 0
 103 0072 7B68     		ldr	r3, [r7, #4]
 104 0074 0022     		movs	r2, #0
 105 0076 9A60     		str	r2, [r3, #8]
 106              	.L1:
 139:../Generated_Code/SEGGER_RTT_printf.c ****     }
 140:../Generated_Code/SEGGER_RTT_printf.c ****   }
 141:../Generated_Code/SEGGER_RTT_printf.c **** }
 107              		.loc 1 141 0
 108 0078 1037     		adds	r7, r7, #16
 109 007a BD46     		mov	sp, r7
 110              		@ sp needed
 111 007c 80BD     		pop	{r7, pc}
 112              		.cfi_endproc
 113              	.LFE0:
 115 007e 00BF     		.section	.text._PrintUnsigned,"ax",%progbits
 116              		.align	2
 117              		.thumb
 118              		.thumb_func
 120              	_PrintUnsigned:
 121              	.LFB1:
 142:../Generated_Code/SEGGER_RTT_printf.c **** 
 143:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 144:../Generated_Code/SEGGER_RTT_printf.c **** *
 145:../Generated_Code/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 146:../Generated_Code/SEGGER_RTT_printf.c **** */
 147:../Generated_Code/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 122              		.loc 1 147 0
 123              		.cfi_startproc
 124              		@ args = 8, pretend = 0, frame = 40
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 8AB0     		sub	sp, sp, #40
 131              		.cfi_def_cfa_offset 48
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 134 0006 F860     		str	r0, [r7, #12]
 135 0008 B960     		str	r1, [r7, #8]
 136 000a 7A60     		str	r2, [r7, #4]
 137 000c 3B60     		str	r3, [r7]
 148:../Generated_Code/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 149:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Div;
 150:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Digit;
 151:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Number;
 152:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Width;
 153:../Generated_Code/SEGGER_RTT_printf.c ****   char c;
 154:../Generated_Code/SEGGER_RTT_printf.c **** 
 155:../Generated_Code/SEGGER_RTT_printf.c ****   Number = v;
 138              		.loc 1 155 0
 139 000e BB68     		ldr	r3, [r7, #8]
 140 0010 3B62     		str	r3, [r7, #32]
 156:../Generated_Code/SEGGER_RTT_printf.c ****   Digit = 1u;
 141              		.loc 1 156 0
 142 0012 0123     		movs	r3, #1
 143 0014 7B62     		str	r3, [r7, #36]
 157:../Generated_Code/SEGGER_RTT_printf.c ****   //
 158:../Generated_Code/SEGGER_RTT_printf.c ****   // Get actual field width
 159:../Generated_Code/SEGGER_RTT_printf.c ****   //
 160:../Generated_Code/SEGGER_RTT_printf.c ****   Width = 1u;
 144              		.loc 1 160 0
 145 0016 0123     		movs	r3, #1
 146 0018 FB61     		str	r3, [r7, #28]
 161:../Generated_Code/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 147              		.loc 1 161 0
 148 001a 07E0     		b	.L6
 149              	.L7:
 162:../Generated_Code/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 150              		.loc 1 162 0
 151 001c 3A6A     		ldr	r2, [r7, #32]
 152 001e 7B68     		ldr	r3, [r7, #4]
 153 0020 B2FBF3F3 		udiv	r3, r2, r3
 154 0024 3B62     		str	r3, [r7, #32]
 163:../Generated_Code/SEGGER_RTT_printf.c ****     Width++;
 155              		.loc 1 163 0
 156 0026 FB69     		ldr	r3, [r7, #28]
 157 0028 0133     		adds	r3, r3, #1
 158 002a FB61     		str	r3, [r7, #28]
 159              	.L6:
 161:../Generated_Code/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 160              		.loc 1 161 0 discriminator 1
 161 002c 3A6A     		ldr	r2, [r7, #32]
 162 002e 7B68     		ldr	r3, [r7, #4]
 163 0030 9A42     		cmp	r2, r3
 164 0032 F3D2     		bcs	.L7
 164:../Generated_Code/SEGGER_RTT_printf.c ****   }
 165:../Generated_Code/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 165              		.loc 1 165 0
 166 0034 3A68     		ldr	r2, [r7]
 167 0036 FB69     		ldr	r3, [r7, #28]
 168 0038 9A42     		cmp	r2, r3
 169 003a 01D9     		bls	.L8
 166:../Generated_Code/SEGGER_RTT_printf.c ****     Width = NumDigits;
 170              		.loc 1 166 0
 171 003c 3B68     		ldr	r3, [r7]
 172 003e FB61     		str	r3, [r7, #28]
 173              	.L8:
 167:../Generated_Code/SEGGER_RTT_printf.c ****   }
 168:../Generated_Code/SEGGER_RTT_printf.c ****   //
 169:../Generated_Code/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 170:../Generated_Code/SEGGER_RTT_printf.c ****   //
 171:../Generated_Code/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 174              		.loc 1 171 0
 175 0040 7B6B     		ldr	r3, [r7, #52]
 176 0042 03F00103 		and	r3, r3, #1
 177 0046 002B     		cmp	r3, #0
 178 0048 25D1     		bne	.L9
 172:../Generated_Code/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 179              		.loc 1 172 0
 180 004a 3B6B     		ldr	r3, [r7, #48]
 181 004c 002B     		cmp	r3, #0
 182 004e 22D0     		beq	.L9
 173:../Generated_Code/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 183              		.loc 1 173 0
 184 0050 7B6B     		ldr	r3, [r7, #52]
 185 0052 03F00203 		and	r3, r3, #2
 186 0056 002B     		cmp	r3, #0
 187 0058 05D0     		beq	.L10
 188              		.loc 1 173 0 is_stmt 0 discriminator 1
 189 005a 3B68     		ldr	r3, [r7]
 190 005c 002B     		cmp	r3, #0
 191 005e 02D1     		bne	.L10
 174:../Generated_Code/SEGGER_RTT_printf.c ****         c = '0';
 192              		.loc 1 174 0 is_stmt 1
 193 0060 3023     		movs	r3, #48
 194 0062 FB76     		strb	r3, [r7, #27]
 175:../Generated_Code/SEGGER_RTT_printf.c ****       } else {
 176:../Generated_Code/SEGGER_RTT_printf.c ****         c = ' ';
 177:../Generated_Code/SEGGER_RTT_printf.c ****       }
 178:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 195              		.loc 1 178 0
 196 0064 10E0     		b	.L12
 197              	.L10:
 176:../Generated_Code/SEGGER_RTT_printf.c ****         c = ' ';
 198              		.loc 1 176 0
 199 0066 2023     		movs	r3, #32
 200 0068 FB76     		strb	r3, [r7, #27]
 201              		.loc 1 178 0
 202 006a 0DE0     		b	.L12
 203              	.L13:
 179:../Generated_Code/SEGGER_RTT_printf.c ****         FieldWidth--;
 204              		.loc 1 179 0
 205 006c 3B6B     		ldr	r3, [r7, #48]
 206 006e 013B     		subs	r3, r3, #1
 207 0070 3B63     		str	r3, [r7, #48]
 180:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 208              		.loc 1 180 0
 209 0072 97F91B30 		ldrsb	r3, [r7, #27]
 210 0076 F868     		ldr	r0, [r7, #12]
 211 0078 1946     		mov	r1, r3
 212 007a FFF7FEFF 		bl	_StoreChar
 181:../Generated_Code/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 213              		.loc 1 181 0
 214 007e FB68     		ldr	r3, [r7, #12]
 215 0080 DB68     		ldr	r3, [r3, #12]
 216 0082 002B     		cmp	r3, #0
 217 0084 00DA     		bge	.L12
 182:../Generated_Code/SEGGER_RTT_printf.c ****           break;
 218              		.loc 1 182 0
 219 0086 06E0     		b	.L9
 220              	.L12:
 178:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 221              		.loc 1 178 0 discriminator 1
 222 0088 3B6B     		ldr	r3, [r7, #48]
 223 008a 002B     		cmp	r3, #0
 224 008c 03D0     		beq	.L9
 178:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 225              		.loc 1 178 0 is_stmt 0 discriminator 2
 226 008e FA69     		ldr	r2, [r7, #28]
 227 0090 3B6B     		ldr	r3, [r7, #48]
 228 0092 9A42     		cmp	r2, r3
 229 0094 EAD3     		bcc	.L13
 230              	.L9:
 183:../Generated_Code/SEGGER_RTT_printf.c ****         }
 184:../Generated_Code/SEGGER_RTT_printf.c ****       }
 185:../Generated_Code/SEGGER_RTT_printf.c ****     }
 186:../Generated_Code/SEGGER_RTT_printf.c ****   }
 187:../Generated_Code/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 231              		.loc 1 187 0 is_stmt 1
 232 0096 FB68     		ldr	r3, [r7, #12]
 233 0098 DB68     		ldr	r3, [r3, #12]
 234 009a 002B     		cmp	r3, #0
 235 009c 54DB     		blt	.L5
 236              	.L18:
 188:../Generated_Code/SEGGER_RTT_printf.c ****     //
 189:../Generated_Code/SEGGER_RTT_printf.c ****     // Compute Digit.
 190:../Generated_Code/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 191:../Generated_Code/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 192:../Generated_Code/SEGGER_RTT_printf.c ****     //
 193:../Generated_Code/SEGGER_RTT_printf.c ****     while (1) {
 194:../Generated_Code/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 237              		.loc 1 194 0
 238 009e 3B68     		ldr	r3, [r7]
 239 00a0 012B     		cmp	r3, #1
 240 00a2 03D9     		bls	.L15
 195:../Generated_Code/SEGGER_RTT_printf.c ****         NumDigits--;
 241              		.loc 1 195 0
 242 00a4 3B68     		ldr	r3, [r7]
 243 00a6 013B     		subs	r3, r3, #1
 244 00a8 3B60     		str	r3, [r7]
 245 00aa 09E0     		b	.L16
 246              	.L15:
 196:../Generated_Code/SEGGER_RTT_printf.c ****       } else {
 197:../Generated_Code/SEGGER_RTT_printf.c ****         Div = v / Digit;
 247              		.loc 1 197 0
 248 00ac BA68     		ldr	r2, [r7, #8]
 249 00ae 7B6A     		ldr	r3, [r7, #36]
 250 00b0 B2FBF3F3 		udiv	r3, r2, r3
 251 00b4 7B61     		str	r3, [r7, #20]
 198:../Generated_Code/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 252              		.loc 1 198 0
 253 00b6 7A69     		ldr	r2, [r7, #20]
 254 00b8 7B68     		ldr	r3, [r7, #4]
 255 00ba 9A42     		cmp	r2, r3
 256 00bc 00D2     		bcs	.L16
 199:../Generated_Code/SEGGER_RTT_printf.c ****           break;
 257              		.loc 1 199 0
 258 00be 05E0     		b	.L17
 259              	.L16:
 200:../Generated_Code/SEGGER_RTT_printf.c ****         }
 201:../Generated_Code/SEGGER_RTT_printf.c ****       }
 202:../Generated_Code/SEGGER_RTT_printf.c ****       Digit *= Base;
 260              		.loc 1 202 0
 261 00c0 7B6A     		ldr	r3, [r7, #36]
 262 00c2 7A68     		ldr	r2, [r7, #4]
 263 00c4 02FB03F3 		mul	r3, r2, r3
 264 00c8 7B62     		str	r3, [r7, #36]
 203:../Generated_Code/SEGGER_RTT_printf.c ****     }
 265              		.loc 1 203 0
 266 00ca E8E7     		b	.L18
 267              	.L17:
 204:../Generated_Code/SEGGER_RTT_printf.c ****     //
 205:../Generated_Code/SEGGER_RTT_printf.c ****     // Output digits
 206:../Generated_Code/SEGGER_RTT_printf.c ****     //
 207:../Generated_Code/SEGGER_RTT_printf.c ****     do {
 208:../Generated_Code/SEGGER_RTT_printf.c ****       Div = v / Digit;
 268              		.loc 1 208 0
 269 00cc BA68     		ldr	r2, [r7, #8]
 270 00ce 7B6A     		ldr	r3, [r7, #36]
 271 00d0 B2FBF3F3 		udiv	r3, r2, r3
 272 00d4 7B61     		str	r3, [r7, #20]
 209:../Generated_Code/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 273              		.loc 1 209 0
 274 00d6 7B69     		ldr	r3, [r7, #20]
 275 00d8 7A6A     		ldr	r2, [r7, #36]
 276 00da 02FB03F3 		mul	r3, r2, r3
 277 00de BA68     		ldr	r2, [r7, #8]
 278 00e0 D31A     		subs	r3, r2, r3
 279 00e2 BB60     		str	r3, [r7, #8]
 210:../Generated_Code/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 280              		.loc 1 210 0
 281 00e4 1A4A     		ldr	r2, .L23
 282 00e6 7B69     		ldr	r3, [r7, #20]
 283 00e8 1344     		add	r3, r3, r2
 284 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285 00ec 5BB2     		sxtb	r3, r3
 286 00ee F868     		ldr	r0, [r7, #12]
 287 00f0 1946     		mov	r1, r3
 288 00f2 FFF7FEFF 		bl	_StoreChar
 211:../Generated_Code/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 289              		.loc 1 211 0
 290 00f6 FB68     		ldr	r3, [r7, #12]
 291 00f8 DB68     		ldr	r3, [r3, #12]
 292 00fa 002B     		cmp	r3, #0
 293 00fc 00DA     		bge	.L19
 212:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 294              		.loc 1 212 0
 295 00fe 07E0     		b	.L20
 296              	.L19:
 213:../Generated_Code/SEGGER_RTT_printf.c ****       }
 214:../Generated_Code/SEGGER_RTT_printf.c ****       Digit /= Base;
 297              		.loc 1 214 0
 298 0100 7A6A     		ldr	r2, [r7, #36]
 299 0102 7B68     		ldr	r3, [r7, #4]
 300 0104 B2FBF3F3 		udiv	r3, r2, r3
 301 0108 7B62     		str	r3, [r7, #36]
 215:../Generated_Code/SEGGER_RTT_printf.c ****     } while (Digit);
 302              		.loc 1 215 0
 303 010a 7B6A     		ldr	r3, [r7, #36]
 304 010c 002B     		cmp	r3, #0
 305 010e DDD1     		bne	.L17
 306              	.L20:
 216:../Generated_Code/SEGGER_RTT_printf.c ****     //
 217:../Generated_Code/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 218:../Generated_Code/SEGGER_RTT_printf.c ****     //
 219:../Generated_Code/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 307              		.loc 1 219 0
 308 0110 7B6B     		ldr	r3, [r7, #52]
 309 0112 03F00103 		and	r3, r3, #1
 310 0116 002B     		cmp	r3, #0
 311 0118 16D0     		beq	.L5
 220:../Generated_Code/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 312              		.loc 1 220 0
 313 011a 3B6B     		ldr	r3, [r7, #48]
 314 011c 002B     		cmp	r3, #0
 315 011e 13D0     		beq	.L5
 221:../Generated_Code/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 316              		.loc 1 221 0
 317 0120 0BE0     		b	.L21
 318              	.L22:
 222:../Generated_Code/SEGGER_RTT_printf.c ****           FieldWidth--;
 319              		.loc 1 222 0
 320 0122 3B6B     		ldr	r3, [r7, #48]
 321 0124 013B     		subs	r3, r3, #1
 322 0126 3B63     		str	r3, [r7, #48]
 223:../Generated_Code/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 323              		.loc 1 223 0
 324 0128 F868     		ldr	r0, [r7, #12]
 325 012a 2021     		movs	r1, #32
 326 012c FFF7FEFF 		bl	_StoreChar
 224:../Generated_Code/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 327              		.loc 1 224 0
 328 0130 FB68     		ldr	r3, [r7, #12]
 329 0132 DB68     		ldr	r3, [r3, #12]
 330 0134 002B     		cmp	r3, #0
 331 0136 00DA     		bge	.L21
 225:../Generated_Code/SEGGER_RTT_printf.c ****             break;
 332              		.loc 1 225 0
 333 0138 06E0     		b	.L5
 334              	.L21:
 221:../Generated_Code/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 335              		.loc 1 221 0 discriminator 1
 336 013a 3B6B     		ldr	r3, [r7, #48]
 337 013c 002B     		cmp	r3, #0
 338 013e 03D0     		beq	.L5
 221:../Generated_Code/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 339              		.loc 1 221 0 is_stmt 0 discriminator 2
 340 0140 FA69     		ldr	r2, [r7, #28]
 341 0142 3B6B     		ldr	r3, [r7, #48]
 342 0144 9A42     		cmp	r2, r3
 343 0146 ECD3     		bcc	.L22
 344              	.L5:
 226:../Generated_Code/SEGGER_RTT_printf.c ****           }
 227:../Generated_Code/SEGGER_RTT_printf.c ****         }
 228:../Generated_Code/SEGGER_RTT_printf.c ****       }
 229:../Generated_Code/SEGGER_RTT_printf.c ****     }
 230:../Generated_Code/SEGGER_RTT_printf.c ****   }
 231:../Generated_Code/SEGGER_RTT_printf.c **** }
 345              		.loc 1 231 0 is_stmt 1
 346 0148 2837     		adds	r7, r7, #40
 347 014a BD46     		mov	sp, r7
 348              		@ sp needed
 349 014c 80BD     		pop	{r7, pc}
 350              	.L24:
 351 014e 00BF     		.align	2
 352              	.L23:
 353 0150 00000000 		.word	_aV2C.6725
 354              		.cfi_endproc
 355              	.LFE1:
 357              		.section	.text._PrintInt,"ax",%progbits
 358              		.align	2
 359              		.thumb
 360              		.thumb_func
 362              	_PrintInt:
 363              	.LFB2:
 232:../Generated_Code/SEGGER_RTT_printf.c **** 
 233:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 234:../Generated_Code/SEGGER_RTT_printf.c **** *
 235:../Generated_Code/SEGGER_RTT_printf.c **** *       _PrintInt
 236:../Generated_Code/SEGGER_RTT_printf.c **** */
 237:../Generated_Code/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 364              		.loc 1 237 0
 365              		.cfi_startproc
 366              		@ args = 8, pretend = 0, frame = 24
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 88B0     		sub	sp, sp, #32
 373              		.cfi_def_cfa_offset 40
 374 0004 02AF     		add	r7, sp, #8
 375              		.cfi_def_cfa 7, 32
 376 0006 F860     		str	r0, [r7, #12]
 377 0008 B960     		str	r1, [r7, #8]
 378 000a 7A60     		str	r2, [r7, #4]
 379 000c 3B60     		str	r3, [r7]
 238:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned Width;
 239:../Generated_Code/SEGGER_RTT_printf.c ****   int Number;
 240:../Generated_Code/SEGGER_RTT_printf.c **** 
 241:../Generated_Code/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 380              		.loc 1 241 0
 381 000e BB68     		ldr	r3, [r7, #8]
 382 0010 002B     		cmp	r3, #0
 383 0012 B8BF     		it	lt
 384 0014 5B42     		rsblt	r3, r3, #0
 385 0016 3B61     		str	r3, [r7, #16]
 242:../Generated_Code/SEGGER_RTT_printf.c **** 
 243:../Generated_Code/SEGGER_RTT_printf.c ****   //
 244:../Generated_Code/SEGGER_RTT_printf.c ****   // Get actual field width
 245:../Generated_Code/SEGGER_RTT_printf.c ****   //
 246:../Generated_Code/SEGGER_RTT_printf.c ****   Width = 1u;
 386              		.loc 1 246 0
 387 0018 0123     		movs	r3, #1
 388 001a 7B61     		str	r3, [r7, #20]
 247:../Generated_Code/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 389              		.loc 1 247 0
 390 001c 07E0     		b	.L26
 391              	.L27:
 248:../Generated_Code/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 392              		.loc 1 248 0
 393 001e 7B68     		ldr	r3, [r7, #4]
 394 0020 3A69     		ldr	r2, [r7, #16]
 395 0022 92FBF3F3 		sdiv	r3, r2, r3
 396 0026 3B61     		str	r3, [r7, #16]
 249:../Generated_Code/SEGGER_RTT_printf.c ****     Width++;
 397              		.loc 1 249 0
 398 0028 7B69     		ldr	r3, [r7, #20]
 399 002a 0133     		adds	r3, r3, #1
 400 002c 7B61     		str	r3, [r7, #20]
 401              	.L26:
 247:../Generated_Code/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 402              		.loc 1 247 0 discriminator 1
 403 002e 7A68     		ldr	r2, [r7, #4]
 404 0030 3B69     		ldr	r3, [r7, #16]
 405 0032 9A42     		cmp	r2, r3
 406 0034 F3DD     		ble	.L27
 250:../Generated_Code/SEGGER_RTT_printf.c ****   }
 251:../Generated_Code/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 407              		.loc 1 251 0
 408 0036 3A68     		ldr	r2, [r7]
 409 0038 7B69     		ldr	r3, [r7, #20]
 410 003a 9A42     		cmp	r2, r3
 411 003c 01D9     		bls	.L28
 252:../Generated_Code/SEGGER_RTT_printf.c ****     Width = NumDigits;
 412              		.loc 1 252 0
 413 003e 3B68     		ldr	r3, [r7]
 414 0040 7B61     		str	r3, [r7, #20]
 415              	.L28:
 253:../Generated_Code/SEGGER_RTT_printf.c ****   }
 254:../Generated_Code/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 416              		.loc 1 254 0
 417 0042 3B6A     		ldr	r3, [r7, #32]
 418 0044 002B     		cmp	r3, #0
 419 0046 0AD0     		beq	.L29
 420              		.loc 1 254 0 is_stmt 0 discriminator 1
 421 0048 BB68     		ldr	r3, [r7, #8]
 422 004a 002B     		cmp	r3, #0
 423 004c 04DB     		blt	.L30
 424 004e 7B6A     		ldr	r3, [r7, #36]
 425 0050 03F00403 		and	r3, r3, #4
 426 0054 002B     		cmp	r3, #0
 427 0056 02D0     		beq	.L29
 428              	.L30:
 255:../Generated_Code/SEGGER_RTT_printf.c ****     FieldWidth--;
 429              		.loc 1 255 0 is_stmt 1
 430 0058 3B6A     		ldr	r3, [r7, #32]
 431 005a 013B     		subs	r3, r3, #1
 432 005c 3B62     		str	r3, [r7, #32]
 433              	.L29:
 256:../Generated_Code/SEGGER_RTT_printf.c ****   }
 257:../Generated_Code/SEGGER_RTT_printf.c **** 
 258:../Generated_Code/SEGGER_RTT_printf.c ****   //
 259:../Generated_Code/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 260:../Generated_Code/SEGGER_RTT_printf.c ****   //
 261:../Generated_Code/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 434              		.loc 1 261 0
 435 005e 7B6A     		ldr	r3, [r7, #36]
 436 0060 03F00203 		and	r3, r3, #2
 437 0064 002B     		cmp	r3, #0
 438 0066 02D0     		beq	.L31
 439              		.loc 1 261 0 is_stmt 0 discriminator 2
 440 0068 3B68     		ldr	r3, [r7]
 441 006a 002B     		cmp	r3, #0
 442 006c 1BD0     		beq	.L32
 443              	.L31:
 444              		.loc 1 261 0 discriminator 1
 445 006e 7B6A     		ldr	r3, [r7, #36]
 446 0070 03F00103 		and	r3, r3, #1
 447 0074 002B     		cmp	r3, #0
 448 0076 16D1     		bne	.L32
 262:../Generated_Code/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 449              		.loc 1 262 0 is_stmt 1
 450 0078 3B6A     		ldr	r3, [r7, #32]
 451 007a 002B     		cmp	r3, #0
 452 007c 13D0     		beq	.L32
 263:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 453              		.loc 1 263 0
 454 007e 0BE0     		b	.L33
 455              	.L34:
 264:../Generated_Code/SEGGER_RTT_printf.c ****         FieldWidth--;
 456              		.loc 1 264 0
 457 0080 3B6A     		ldr	r3, [r7, #32]
 458 0082 013B     		subs	r3, r3, #1
 459 0084 3B62     		str	r3, [r7, #32]
 265:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 460              		.loc 1 265 0
 461 0086 F868     		ldr	r0, [r7, #12]
 462 0088 2021     		movs	r1, #32
 463 008a FFF7FEFF 		bl	_StoreChar
 266:../Generated_Code/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 464              		.loc 1 266 0
 465 008e FB68     		ldr	r3, [r7, #12]
 466 0090 DB68     		ldr	r3, [r3, #12]
 467 0092 002B     		cmp	r3, #0
 468 0094 00DA     		bge	.L33
 267:../Generated_Code/SEGGER_RTT_printf.c ****           break;
 469              		.loc 1 267 0
 470 0096 06E0     		b	.L32
 471              	.L33:
 263:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 472              		.loc 1 263 0 discriminator 1
 473 0098 3B6A     		ldr	r3, [r7, #32]
 474 009a 002B     		cmp	r3, #0
 475 009c 03D0     		beq	.L32
 263:../Generated_Code/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 476              		.loc 1 263 0 is_stmt 0 discriminator 2
 477 009e 7A69     		ldr	r2, [r7, #20]
 478 00a0 3B6A     		ldr	r3, [r7, #32]
 479 00a2 9A42     		cmp	r2, r3
 480 00a4 ECD3     		bcc	.L34
 481              	.L32:
 268:../Generated_Code/SEGGER_RTT_printf.c ****         }
 269:../Generated_Code/SEGGER_RTT_printf.c ****       }
 270:../Generated_Code/SEGGER_RTT_printf.c ****     }
 271:../Generated_Code/SEGGER_RTT_printf.c ****   }
 272:../Generated_Code/SEGGER_RTT_printf.c ****   //
 273:../Generated_Code/SEGGER_RTT_printf.c ****   // Print sign if necessary
 274:../Generated_Code/SEGGER_RTT_printf.c ****   //
 275:../Generated_Code/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 482              		.loc 1 275 0 is_stmt 1
 483 00a6 FB68     		ldr	r3, [r7, #12]
 484 00a8 DB68     		ldr	r3, [r3, #12]
 485 00aa 002B     		cmp	r3, #0
 486 00ac 4ADB     		blt	.L25
 276:../Generated_Code/SEGGER_RTT_printf.c ****     if (v < 0) {
 487              		.loc 1 276 0
 488 00ae BB68     		ldr	r3, [r7, #8]
 489 00b0 002B     		cmp	r3, #0
 490 00b2 07DA     		bge	.L36
 277:../Generated_Code/SEGGER_RTT_printf.c ****       v = -v;
 491              		.loc 1 277 0
 492 00b4 BB68     		ldr	r3, [r7, #8]
 493 00b6 5B42     		negs	r3, r3
 494 00b8 BB60     		str	r3, [r7, #8]
 278:../Generated_Code/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 495              		.loc 1 278 0
 496 00ba F868     		ldr	r0, [r7, #12]
 497 00bc 2D21     		movs	r1, #45
 498 00be FFF7FEFF 		bl	_StoreChar
 499 00c2 08E0     		b	.L37
 500              	.L36:
 279:../Generated_Code/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 501              		.loc 1 279 0
 502 00c4 7B6A     		ldr	r3, [r7, #36]
 503 00c6 03F00403 		and	r3, r3, #4
 504 00ca 002B     		cmp	r3, #0
 505 00cc 03D0     		beq	.L37
 280:../Generated_Code/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 506              		.loc 1 280 0
 507 00ce F868     		ldr	r0, [r7, #12]
 508 00d0 2B21     		movs	r1, #43
 509 00d2 FFF7FEFF 		bl	_StoreChar
 510              	.L37:
 281:../Generated_Code/SEGGER_RTT_printf.c ****     } else {
 282:../Generated_Code/SEGGER_RTT_printf.c **** 
 283:../Generated_Code/SEGGER_RTT_printf.c ****     }
 284:../Generated_Code/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 511              		.loc 1 284 0
 512 00d6 FB68     		ldr	r3, [r7, #12]
 513 00d8 DB68     		ldr	r3, [r3, #12]
 514 00da 002B     		cmp	r3, #0
 515 00dc 32DB     		blt	.L25
 285:../Generated_Code/SEGGER_RTT_printf.c ****       //
 286:../Generated_Code/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 287:../Generated_Code/SEGGER_RTT_printf.c ****       //
 288:../Generated_Code/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 516              		.loc 1 288 0
 517 00de 7B6A     		ldr	r3, [r7, #36]
 518 00e0 03F00203 		and	r3, r3, #2
 519 00e4 002B     		cmp	r3, #0
 520 00e6 1ED0     		beq	.L38
 521              		.loc 1 288 0 is_stmt 0 discriminator 1
 522 00e8 7B6A     		ldr	r3, [r7, #36]
 523 00ea 03F00103 		and	r3, r3, #1
 524 00ee 002B     		cmp	r3, #0
 525 00f0 19D1     		bne	.L38
 526 00f2 3B68     		ldr	r3, [r7]
 527 00f4 002B     		cmp	r3, #0
 528 00f6 16D1     		bne	.L38
 289:../Generated_Code/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 529              		.loc 1 289 0 is_stmt 1
 530 00f8 3B6A     		ldr	r3, [r7, #32]
 531 00fa 002B     		cmp	r3, #0
 532 00fc 13D0     		beq	.L38
 290:../Generated_Code/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 533              		.loc 1 290 0
 534 00fe 0BE0     		b	.L39
 535              	.L40:
 291:../Generated_Code/SEGGER_RTT_printf.c ****             FieldWidth--;
 536              		.loc 1 291 0
 537 0100 3B6A     		ldr	r3, [r7, #32]
 538 0102 013B     		subs	r3, r3, #1
 539 0104 3B62     		str	r3, [r7, #32]
 292:../Generated_Code/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 540              		.loc 1 292 0
 541 0106 F868     		ldr	r0, [r7, #12]
 542 0108 3021     		movs	r1, #48
 543 010a FFF7FEFF 		bl	_StoreChar
 293:../Generated_Code/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 544              		.loc 1 293 0
 545 010e FB68     		ldr	r3, [r7, #12]
 546 0110 DB68     		ldr	r3, [r3, #12]
 547 0112 002B     		cmp	r3, #0
 548 0114 00DA     		bge	.L39
 294:../Generated_Code/SEGGER_RTT_printf.c ****               break;
 549              		.loc 1 294 0
 550 0116 06E0     		b	.L38
 551              	.L39:
 290:../Generated_Code/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 552              		.loc 1 290 0 discriminator 1
 553 0118 3B6A     		ldr	r3, [r7, #32]
 554 011a 002B     		cmp	r3, #0
 555 011c 03D0     		beq	.L38
 290:../Generated_Code/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 556              		.loc 1 290 0 is_stmt 0 discriminator 2
 557 011e 7A69     		ldr	r2, [r7, #20]
 558 0120 3B6A     		ldr	r3, [r7, #32]
 559 0122 9A42     		cmp	r2, r3
 560 0124 ECD3     		bcc	.L40
 561              	.L38:
 295:../Generated_Code/SEGGER_RTT_printf.c ****             }
 296:../Generated_Code/SEGGER_RTT_printf.c ****           }
 297:../Generated_Code/SEGGER_RTT_printf.c ****         }
 298:../Generated_Code/SEGGER_RTT_printf.c ****       }
 299:../Generated_Code/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 562              		.loc 1 299 0 is_stmt 1
 563 0126 FB68     		ldr	r3, [r7, #12]
 564 0128 DB68     		ldr	r3, [r3, #12]
 565 012a 002B     		cmp	r3, #0
 566 012c 0ADB     		blt	.L25
 300:../Generated_Code/SEGGER_RTT_printf.c ****         //
 301:../Generated_Code/SEGGER_RTT_printf.c ****         // Print number without sign
 302:../Generated_Code/SEGGER_RTT_printf.c ****         //
 303:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 567              		.loc 1 303 0
 568 012e BB68     		ldr	r3, [r7, #8]
 569 0130 3A6A     		ldr	r2, [r7, #32]
 570 0132 0092     		str	r2, [sp]
 571 0134 7A6A     		ldr	r2, [r7, #36]
 572 0136 0192     		str	r2, [sp, #4]
 573 0138 F868     		ldr	r0, [r7, #12]
 574 013a 1946     		mov	r1, r3
 575 013c 7A68     		ldr	r2, [r7, #4]
 576 013e 3B68     		ldr	r3, [r7]
 577 0140 FFF7FEFF 		bl	_PrintUnsigned
 578              	.L25:
 304:../Generated_Code/SEGGER_RTT_printf.c ****       }
 305:../Generated_Code/SEGGER_RTT_printf.c ****     }
 306:../Generated_Code/SEGGER_RTT_printf.c ****   }
 307:../Generated_Code/SEGGER_RTT_printf.c **** }
 579              		.loc 1 307 0
 580 0144 1837     		adds	r7, r7, #24
 581 0146 BD46     		mov	sp, r7
 582              		@ sp needed
 583 0148 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE2:
 587 014a 00BF     		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 588              		.align	2
 589              		.global	SEGGER_RTT_vprintf
 590              		.thumb
 591              		.thumb_func
 593              	SEGGER_RTT_vprintf:
 594              	.LFB3:
 308:../Generated_Code/SEGGER_RTT_printf.c **** 
 309:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 310:../Generated_Code/SEGGER_RTT_printf.c **** *
 311:../Generated_Code/SEGGER_RTT_printf.c **** *       Public code
 312:../Generated_Code/SEGGER_RTT_printf.c **** *
 313:../Generated_Code/SEGGER_RTT_printf.c **** **********************************************************************
 314:../Generated_Code/SEGGER_RTT_printf.c **** */
 315:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 316:../Generated_Code/SEGGER_RTT_printf.c **** *
 317:../Generated_Code/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 318:../Generated_Code/SEGGER_RTT_printf.c **** *
 319:../Generated_Code/SEGGER_RTT_printf.c **** *  Function description
 320:../Generated_Code/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 321:../Generated_Code/SEGGER_RTT_printf.c **** *    This data is read by the host.
 322:../Generated_Code/SEGGER_RTT_printf.c **** *
 323:../Generated_Code/SEGGER_RTT_printf.c **** *  Parameters
 324:../Generated_Code/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 325:../Generated_Code/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 326:../Generated_Code/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 327:../Generated_Code/SEGGER_RTT_printf.c **** *
 328:../Generated_Code/SEGGER_RTT_printf.c **** *  Return values
 329:../Generated_Code/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 330:../Generated_Code/SEGGER_RTT_printf.c **** *     < 0:  Error
 331:../Generated_Code/SEGGER_RTT_printf.c **** */
 332:../Generated_Code/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 595              		.loc 1 332 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 128
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 80B5     		push	{r7, lr}
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 A2B0     		sub	sp, sp, #136
 604              		.cfi_def_cfa_offset 144
 605 0004 02AF     		add	r7, sp, #8
 606              		.cfi_def_cfa 7, 136
 607 0006 F860     		str	r0, [r7, #12]
 608 0008 B960     		str	r1, [r7, #8]
 609 000a 7A60     		str	r2, [r7, #4]
 333:../Generated_Code/SEGGER_RTT_printf.c ****   char c;
 334:../Generated_Code/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 335:../Generated_Code/SEGGER_RTT_printf.c ****   int v;
 336:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 337:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 338:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 339:../Generated_Code/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 340:../Generated_Code/SEGGER_RTT_printf.c **** 
 341:../Generated_Code/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 610              		.loc 1 341 0
 611 000c 07F11003 		add	r3, r7, #16
 612 0010 3B65     		str	r3, [r7, #80]
 342:../Generated_Code/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 613              		.loc 1 342 0
 614 0012 4023     		movs	r3, #64
 615 0014 7B65     		str	r3, [r7, #84]
 343:../Generated_Code/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 616              		.loc 1 343 0
 617 0016 0023     		movs	r3, #0
 618 0018 BB65     		str	r3, [r7, #88]
 344:../Generated_Code/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 619              		.loc 1 344 0
 620 001a FB68     		ldr	r3, [r7, #12]
 621 001c 3B66     		str	r3, [r7, #96]
 345:../Generated_Code/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 622              		.loc 1 345 0
 623 001e 0023     		movs	r3, #0
 624 0020 FB65     		str	r3, [r7, #92]
 625              	.L75:
 346:../Generated_Code/SEGGER_RTT_printf.c **** 
 347:../Generated_Code/SEGGER_RTT_printf.c ****   do {
 348:../Generated_Code/SEGGER_RTT_printf.c ****     c = *sFormat;
 626              		.loc 1 348 0
 627 0022 BB68     		ldr	r3, [r7, #8]
 628 0024 1B78     		ldrb	r3, [r3]
 629 0026 87F87F30 		strb	r3, [r7, #127]
 349:../Generated_Code/SEGGER_RTT_printf.c ****     sFormat++;
 630              		.loc 1 349 0
 631 002a BB68     		ldr	r3, [r7, #8]
 632 002c 0133     		adds	r3, r3, #1
 633 002e BB60     		str	r3, [r7, #8]
 350:../Generated_Code/SEGGER_RTT_printf.c ****     if (c == 0u) {
 634              		.loc 1 350 0
 635 0030 97F97F30 		ldrsb	r3, [r7, #127]
 636 0034 002B     		cmp	r3, #0
 637 0036 00D1     		bne	.L42
 351:../Generated_Code/SEGGER_RTT_printf.c ****       break;
 638              		.loc 1 351 0
 639 0038 65E1     		b	.L43
 640              	.L42:
 352:../Generated_Code/SEGGER_RTT_printf.c ****     }
 353:../Generated_Code/SEGGER_RTT_printf.c ****     if (c == '%') {
 641              		.loc 1 353 0
 642 003a 97F97F30 		ldrsb	r3, [r7, #127]
 643 003e 252B     		cmp	r3, #37
 644 0040 40F05581 		bne	.L44
 354:../Generated_Code/SEGGER_RTT_printf.c ****       //
 355:../Generated_Code/SEGGER_RTT_printf.c ****       // Filter out flags
 356:../Generated_Code/SEGGER_RTT_printf.c ****       //
 357:../Generated_Code/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 645              		.loc 1 357 0
 646 0044 0023     		movs	r3, #0
 647 0046 3B67     		str	r3, [r7, #112]
 358:../Generated_Code/SEGGER_RTT_printf.c ****       v = 1;
 648              		.loc 1 358 0
 649 0048 0123     		movs	r3, #1
 650 004a BB67     		str	r3, [r7, #120]
 651              	.L52:
 359:../Generated_Code/SEGGER_RTT_printf.c ****       do {
 360:../Generated_Code/SEGGER_RTT_printf.c ****         c = *sFormat;
 652              		.loc 1 360 0
 653 004c BB68     		ldr	r3, [r7, #8]
 654 004e 1B78     		ldrb	r3, [r3]
 655 0050 87F87F30 		strb	r3, [r7, #127]
 361:../Generated_Code/SEGGER_RTT_printf.c ****         switch (c) {
 656              		.loc 1 361 0
 657 0054 97F97F30 		ldrsb	r3, [r7, #127]
 658 0058 233B     		subs	r3, r3, #35
 659 005a 0D2B     		cmp	r3, #13
 660 005c 3ED8     		bhi	.L45
 661 005e 01A2     		adr	r2, .L47
 662 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 663              		.p2align 2
 664              	.L47:
 665 0064 CD000000 		.word	.L46+1
 666 0068 DD000000 		.word	.L45+1
 667 006c DD000000 		.word	.L45+1
 668 0070 DD000000 		.word	.L45+1
 669 0074 DD000000 		.word	.L45+1
 670 0078 DD000000 		.word	.L45+1
 671 007c DD000000 		.word	.L45+1
 672 0080 DD000000 		.word	.L45+1
 673 0084 BD000000 		.word	.L48+1
 674 0088 DD000000 		.word	.L45+1
 675 008c 9D000000 		.word	.L49+1
 676 0090 DD000000 		.word	.L45+1
 677 0094 DD000000 		.word	.L45+1
 678 0098 AD000000 		.word	.L50+1
 679              		.p2align 1
 680              	.L49:
 362:../Generated_Code/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 681              		.loc 1 362 0
 682 009c 3B6F     		ldr	r3, [r7, #112]
 683 009e 43F00103 		orr	r3, r3, #1
 684 00a2 3B67     		str	r3, [r7, #112]
 685 00a4 BB68     		ldr	r3, [r7, #8]
 686 00a6 0133     		adds	r3, r3, #1
 687 00a8 BB60     		str	r3, [r7, #8]
 688 00aa 1AE0     		b	.L51
 689              	.L50:
 363:../Generated_Code/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 690              		.loc 1 363 0
 691 00ac 3B6F     		ldr	r3, [r7, #112]
 692 00ae 43F00203 		orr	r3, r3, #2
 693 00b2 3B67     		str	r3, [r7, #112]
 694 00b4 BB68     		ldr	r3, [r7, #8]
 695 00b6 0133     		adds	r3, r3, #1
 696 00b8 BB60     		str	r3, [r7, #8]
 697 00ba 12E0     		b	.L51
 698              	.L48:
 364:../Generated_Code/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 699              		.loc 1 364 0
 700 00bc 3B6F     		ldr	r3, [r7, #112]
 701 00be 43F00403 		orr	r3, r3, #4
 702 00c2 3B67     		str	r3, [r7, #112]
 703 00c4 BB68     		ldr	r3, [r7, #8]
 704 00c6 0133     		adds	r3, r3, #1
 705 00c8 BB60     		str	r3, [r7, #8]
 706 00ca 0AE0     		b	.L51
 707              	.L46:
 365:../Generated_Code/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 708              		.loc 1 365 0
 709 00cc 3B6F     		ldr	r3, [r7, #112]
 710 00ce 43F00803 		orr	r3, r3, #8
 711 00d2 3B67     		str	r3, [r7, #112]
 712 00d4 BB68     		ldr	r3, [r7, #8]
 713 00d6 0133     		adds	r3, r3, #1
 714 00d8 BB60     		str	r3, [r7, #8]
 715 00da 02E0     		b	.L51
 716              	.L45:
 366:../Generated_Code/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 717              		.loc 1 366 0
 718 00dc 0023     		movs	r3, #0
 719 00de BB67     		str	r3, [r7, #120]
 720 00e0 00BF     		nop
 721              	.L51:
 367:../Generated_Code/SEGGER_RTT_printf.c ****         }
 368:../Generated_Code/SEGGER_RTT_printf.c ****       } while (v);
 722              		.loc 1 368 0
 723 00e2 BB6F     		ldr	r3, [r7, #120]
 724 00e4 002B     		cmp	r3, #0
 725 00e6 B1D1     		bne	.L52
 369:../Generated_Code/SEGGER_RTT_printf.c ****       //
 370:../Generated_Code/SEGGER_RTT_printf.c ****       // filter out field with
 371:../Generated_Code/SEGGER_RTT_printf.c ****       //
 372:../Generated_Code/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 726              		.loc 1 372 0
 727 00e8 0023     		movs	r3, #0
 728 00ea FB66     		str	r3, [r7, #108]
 729              	.L54:
 373:../Generated_Code/SEGGER_RTT_printf.c ****       do {
 374:../Generated_Code/SEGGER_RTT_printf.c ****         c = *sFormat;
 730              		.loc 1 374 0
 731 00ec BB68     		ldr	r3, [r7, #8]
 732 00ee 1B78     		ldrb	r3, [r3]
 733 00f0 87F87F30 		strb	r3, [r7, #127]
 375:../Generated_Code/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 734              		.loc 1 375 0
 735 00f4 97F97F30 		ldrsb	r3, [r7, #127]
 736 00f8 2F2B     		cmp	r3, #47
 737 00fa 12DD     		ble	.L53
 738              		.loc 1 375 0 is_stmt 0 discriminator 1
 739 00fc 97F97F30 		ldrsb	r3, [r7, #127]
 740 0100 392B     		cmp	r3, #57
 741 0102 0EDC     		bgt	.L53
 376:../Generated_Code/SEGGER_RTT_printf.c ****           break;
 377:../Generated_Code/SEGGER_RTT_printf.c ****         }
 378:../Generated_Code/SEGGER_RTT_printf.c ****         sFormat++;
 742              		.loc 1 378 0 is_stmt 1
 743 0104 BB68     		ldr	r3, [r7, #8]
 744 0106 0133     		adds	r3, r3, #1
 745 0108 BB60     		str	r3, [r7, #8]
 379:../Generated_Code/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 746              		.loc 1 379 0
 747 010a FA6E     		ldr	r2, [r7, #108]
 748 010c 1346     		mov	r3, r2
 749 010e 9B00     		lsls	r3, r3, #2
 750 0110 1344     		add	r3, r3, r2
 751 0112 5B00     		lsls	r3, r3, #1
 752 0114 1A46     		mov	r2, r3
 753 0116 97F97F30 		ldrsb	r3, [r7, #127]
 754 011a 1344     		add	r3, r3, r2
 755 011c 303B     		subs	r3, r3, #48
 756 011e FB66     		str	r3, [r7, #108]
 380:../Generated_Code/SEGGER_RTT_printf.c ****       } while (1);
 757              		.loc 1 380 0
 758 0120 E4E7     		b	.L54
 759              	.L53:
 381:../Generated_Code/SEGGER_RTT_printf.c **** 
 382:../Generated_Code/SEGGER_RTT_printf.c ****       //
 383:../Generated_Code/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 384:../Generated_Code/SEGGER_RTT_printf.c ****       //
 385:../Generated_Code/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 760              		.loc 1 385 0
 761 0122 0023     		movs	r3, #0
 762 0124 7B67     		str	r3, [r7, #116]
 386:../Generated_Code/SEGGER_RTT_printf.c ****       c = *sFormat;
 763              		.loc 1 386 0
 764 0126 BB68     		ldr	r3, [r7, #8]
 765 0128 1B78     		ldrb	r3, [r3]
 766 012a 87F87F30 		strb	r3, [r7, #127]
 387:../Generated_Code/SEGGER_RTT_printf.c ****       if (c == '.') {
 767              		.loc 1 387 0
 768 012e 97F97F30 		ldrsb	r3, [r7, #127]
 769 0132 2E2B     		cmp	r3, #46
 770 0134 1DD1     		bne	.L55
 388:../Generated_Code/SEGGER_RTT_printf.c ****         sFormat++;
 771              		.loc 1 388 0
 772 0136 BB68     		ldr	r3, [r7, #8]
 773 0138 0133     		adds	r3, r3, #1
 774 013a BB60     		str	r3, [r7, #8]
 775              	.L56:
 389:../Generated_Code/SEGGER_RTT_printf.c ****         do {
 390:../Generated_Code/SEGGER_RTT_printf.c ****           c = *sFormat;
 776              		.loc 1 390 0
 777 013c BB68     		ldr	r3, [r7, #8]
 778 013e 1B78     		ldrb	r3, [r3]
 779 0140 87F87F30 		strb	r3, [r7, #127]
 391:../Generated_Code/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 780              		.loc 1 391 0
 781 0144 97F97F30 		ldrsb	r3, [r7, #127]
 782 0148 2F2B     		cmp	r3, #47
 783 014a 12DD     		ble	.L55
 784              		.loc 1 391 0 is_stmt 0 discriminator 1
 785 014c 97F97F30 		ldrsb	r3, [r7, #127]
 786 0150 392B     		cmp	r3, #57
 787 0152 0EDC     		bgt	.L55
 392:../Generated_Code/SEGGER_RTT_printf.c ****             break;
 393:../Generated_Code/SEGGER_RTT_printf.c ****           }
 394:../Generated_Code/SEGGER_RTT_printf.c ****           sFormat++;
 788              		.loc 1 394 0 is_stmt 1
 789 0154 BB68     		ldr	r3, [r7, #8]
 790 0156 0133     		adds	r3, r3, #1
 791 0158 BB60     		str	r3, [r7, #8]
 395:../Generated_Code/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 792              		.loc 1 395 0
 793 015a 7A6F     		ldr	r2, [r7, #116]
 794 015c 1346     		mov	r3, r2
 795 015e 9B00     		lsls	r3, r3, #2
 796 0160 1344     		add	r3, r3, r2
 797 0162 5B00     		lsls	r3, r3, #1
 798 0164 1A46     		mov	r2, r3
 799 0166 97F97F30 		ldrsb	r3, [r7, #127]
 800 016a 1344     		add	r3, r3, r2
 801 016c 303B     		subs	r3, r3, #48
 802 016e 7B67     		str	r3, [r7, #116]
 396:../Generated_Code/SEGGER_RTT_printf.c ****         } while (1);
 803              		.loc 1 396 0
 804 0170 E4E7     		b	.L56
 805              	.L55:
 397:../Generated_Code/SEGGER_RTT_printf.c ****       }
 398:../Generated_Code/SEGGER_RTT_printf.c ****       //
 399:../Generated_Code/SEGGER_RTT_printf.c ****       // Filter out length modifier
 400:../Generated_Code/SEGGER_RTT_printf.c ****       //
 401:../Generated_Code/SEGGER_RTT_printf.c ****       c = *sFormat;
 806              		.loc 1 401 0
 807 0172 BB68     		ldr	r3, [r7, #8]
 808 0174 1B78     		ldrb	r3, [r3]
 809 0176 87F87F30 		strb	r3, [r7, #127]
 810              	.L59:
 402:../Generated_Code/SEGGER_RTT_printf.c ****       do {
 403:../Generated_Code/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 811              		.loc 1 403 0
 812 017a 97F97F30 		ldrsb	r3, [r7, #127]
 813 017e 6C2B     		cmp	r3, #108
 814 0180 03D0     		beq	.L57
 815              		.loc 1 403 0 is_stmt 0 discriminator 1
 816 0182 97F97F30 		ldrsb	r3, [r7, #127]
 817 0186 682B     		cmp	r3, #104
 818 0188 07D1     		bne	.L58
 819              	.L57:
 404:../Generated_Code/SEGGER_RTT_printf.c ****           sFormat++;
 820              		.loc 1 404 0 is_stmt 1
 821 018a BB68     		ldr	r3, [r7, #8]
 822 018c 0133     		adds	r3, r3, #1
 823 018e BB60     		str	r3, [r7, #8]
 405:../Generated_Code/SEGGER_RTT_printf.c ****           c = *sFormat;
 824              		.loc 1 405 0
 825 0190 BB68     		ldr	r3, [r7, #8]
 826 0192 1B78     		ldrb	r3, [r3]
 827 0194 87F87F30 		strb	r3, [r7, #127]
 406:../Generated_Code/SEGGER_RTT_printf.c ****         } else {
 407:../Generated_Code/SEGGER_RTT_printf.c ****           break;
 408:../Generated_Code/SEGGER_RTT_printf.c ****         }
 409:../Generated_Code/SEGGER_RTT_printf.c ****       } while (1);
 828              		.loc 1 409 0
 829 0198 EFE7     		b	.L59
 830              	.L58:
 410:../Generated_Code/SEGGER_RTT_printf.c ****       //
 411:../Generated_Code/SEGGER_RTT_printf.c ****       // Handle specifiers
 412:../Generated_Code/SEGGER_RTT_printf.c ****       //
 413:../Generated_Code/SEGGER_RTT_printf.c ****       switch (c) {
 831              		.loc 1 413 0
 832 019a 97F97F30 		ldrsb	r3, [r7, #127]
 833 019e 642B     		cmp	r3, #100
 834 01a0 28D0     		beq	.L61
 835 01a2 642B     		cmp	r3, #100
 836 01a4 07DC     		bgt	.L62
 837 01a6 582B     		cmp	r3, #88
 838 01a8 4DD0     		beq	.L63
 839 01aa 632B     		cmp	r3, #99
 840 01ac 0FD0     		beq	.L64
 841 01ae 252B     		cmp	r3, #37
 842 01b0 00F09280 		beq	.L65
 414:../Generated_Code/SEGGER_RTT_printf.c ****       case 'c': {
 415:../Generated_Code/SEGGER_RTT_printf.c ****         char c0;
 416:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 417:../Generated_Code/SEGGER_RTT_printf.c ****         c0 = (char)v;
 418:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 419:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 420:../Generated_Code/SEGGER_RTT_printf.c ****       }
 421:../Generated_Code/SEGGER_RTT_printf.c ****       case 'd':
 422:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 423:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 424:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 425:../Generated_Code/SEGGER_RTT_printf.c ****       case 'u':
 426:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 427:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 428:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 429:../Generated_Code/SEGGER_RTT_printf.c ****       case 'x':
 430:../Generated_Code/SEGGER_RTT_printf.c ****       case 'X':
 431:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 432:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 433:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 434:../Generated_Code/SEGGER_RTT_printf.c ****       case 's':
 435:../Generated_Code/SEGGER_RTT_printf.c ****         {
 436:../Generated_Code/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 437:../Generated_Code/SEGGER_RTT_printf.c ****           do {
 438:../Generated_Code/SEGGER_RTT_printf.c ****             c = *s;
 439:../Generated_Code/SEGGER_RTT_printf.c ****             s++;
 440:../Generated_Code/SEGGER_RTT_printf.c ****             if (c == '\0') {
 441:../Generated_Code/SEGGER_RTT_printf.c ****               break;
 442:../Generated_Code/SEGGER_RTT_printf.c ****             }
 443:../Generated_Code/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 444:../Generated_Code/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 445:../Generated_Code/SEGGER_RTT_printf.c ****         }
 446:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 447:../Generated_Code/SEGGER_RTT_printf.c ****       case 'p':
 448:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 449:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 450:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 451:../Generated_Code/SEGGER_RTT_printf.c ****       case '%':
 452:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 453:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 454:../Generated_Code/SEGGER_RTT_printf.c ****       default:
 455:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 843              		.loc 1 455 0
 844 01b4 97E0     		b	.L70
 845              	.L62:
 413:../Generated_Code/SEGGER_RTT_printf.c ****       switch (c) {
 846              		.loc 1 413 0
 847 01b6 732B     		cmp	r3, #115
 848 01b8 5AD0     		beq	.L66
 849 01ba 732B     		cmp	r3, #115
 850 01bc 02DC     		bgt	.L67
 851 01be 702B     		cmp	r3, #112
 852 01c0 75D0     		beq	.L68
 853              		.loc 1 455 0
 854 01c2 90E0     		b	.L70
 855              	.L67:
 413:../Generated_Code/SEGGER_RTT_printf.c ****       switch (c) {
 856              		.loc 1 413 0
 857 01c4 752B     		cmp	r3, #117
 858 01c6 29D0     		beq	.L69
 859 01c8 782B     		cmp	r3, #120
 860 01ca 3CD0     		beq	.L63
 861              		.loc 1 455 0
 862 01cc 8BE0     		b	.L70
 863              	.L64:
 864              	.LBB2:
 416:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 865              		.loc 1 416 0
 866 01ce 7B68     		ldr	r3, [r7, #4]
 867 01d0 1B68     		ldr	r3, [r3]
 868 01d2 191D     		adds	r1, r3, #4
 869 01d4 7A68     		ldr	r2, [r7, #4]
 870 01d6 1160     		str	r1, [r2]
 871 01d8 1B68     		ldr	r3, [r3]
 872 01da BB67     		str	r3, [r7, #120]
 417:../Generated_Code/SEGGER_RTT_printf.c ****         c0 = (char)v;
 873              		.loc 1 417 0
 874 01dc BB6F     		ldr	r3, [r7, #120]
 875 01de 87F86730 		strb	r3, [r7, #103]
 418:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 876              		.loc 1 418 0
 877 01e2 07F15002 		add	r2, r7, #80
 878 01e6 97F96730 		ldrsb	r3, [r7, #103]
 879 01ea 1046     		mov	r0, r2
 880 01ec 1946     		mov	r1, r3
 881 01ee FFF7FEFF 		bl	_StoreChar
 419:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 882              		.loc 1 419 0
 883 01f2 78E0     		b	.L70
 884              	.L61:
 885              	.LBE2:
 422:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 886              		.loc 1 422 0
 887 01f4 7B68     		ldr	r3, [r7, #4]
 888 01f6 1B68     		ldr	r3, [r3]
 889 01f8 191D     		adds	r1, r3, #4
 890 01fa 7A68     		ldr	r2, [r7, #4]
 891 01fc 1160     		str	r1, [r2]
 892 01fe 1B68     		ldr	r3, [r3]
 893 0200 BB67     		str	r3, [r7, #120]
 423:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 894              		.loc 1 423 0
 895 0202 07F15003 		add	r3, r7, #80
 896 0206 FA6E     		ldr	r2, [r7, #108]
 897 0208 0092     		str	r2, [sp]
 898 020a 3A6F     		ldr	r2, [r7, #112]
 899 020c 0192     		str	r2, [sp, #4]
 900 020e 1846     		mov	r0, r3
 901 0210 B96F     		ldr	r1, [r7, #120]
 902 0212 0A22     		movs	r2, #10
 903 0214 7B6F     		ldr	r3, [r7, #116]
 904 0216 FFF7FEFF 		bl	_PrintInt
 424:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 905              		.loc 1 424 0
 906 021a 64E0     		b	.L70
 907              	.L69:
 426:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 908              		.loc 1 426 0
 909 021c 7B68     		ldr	r3, [r7, #4]
 910 021e 1B68     		ldr	r3, [r3]
 911 0220 191D     		adds	r1, r3, #4
 912 0222 7A68     		ldr	r2, [r7, #4]
 913 0224 1160     		str	r1, [r2]
 914 0226 1B68     		ldr	r3, [r3]
 915 0228 BB67     		str	r3, [r7, #120]
 427:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 916              		.loc 1 427 0
 917 022a BB6F     		ldr	r3, [r7, #120]
 918 022c 07F15002 		add	r2, r7, #80
 919 0230 F96E     		ldr	r1, [r7, #108]
 920 0232 0091     		str	r1, [sp]
 921 0234 396F     		ldr	r1, [r7, #112]
 922 0236 0191     		str	r1, [sp, #4]
 923 0238 1046     		mov	r0, r2
 924 023a 1946     		mov	r1, r3
 925 023c 0A22     		movs	r2, #10
 926 023e 7B6F     		ldr	r3, [r7, #116]
 927 0240 FFF7FEFF 		bl	_PrintUnsigned
 428:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 928              		.loc 1 428 0
 929 0244 4FE0     		b	.L70
 930              	.L63:
 431:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 931              		.loc 1 431 0
 932 0246 7B68     		ldr	r3, [r7, #4]
 933 0248 1B68     		ldr	r3, [r3]
 934 024a 191D     		adds	r1, r3, #4
 935 024c 7A68     		ldr	r2, [r7, #4]
 936 024e 1160     		str	r1, [r2]
 937 0250 1B68     		ldr	r3, [r3]
 938 0252 BB67     		str	r3, [r7, #120]
 432:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 939              		.loc 1 432 0
 940 0254 BB6F     		ldr	r3, [r7, #120]
 941 0256 07F15002 		add	r2, r7, #80
 942 025a F96E     		ldr	r1, [r7, #108]
 943 025c 0091     		str	r1, [sp]
 944 025e 396F     		ldr	r1, [r7, #112]
 945 0260 0191     		str	r1, [sp, #4]
 946 0262 1046     		mov	r0, r2
 947 0264 1946     		mov	r1, r3
 948 0266 1022     		movs	r2, #16
 949 0268 7B6F     		ldr	r3, [r7, #116]
 950 026a FFF7FEFF 		bl	_PrintUnsigned
 433:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 951              		.loc 1 433 0
 952 026e 3AE0     		b	.L70
 953              	.L66:
 954              	.LBB3:
 436:../Generated_Code/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 955              		.loc 1 436 0
 956 0270 7B68     		ldr	r3, [r7, #4]
 957 0272 1B68     		ldr	r3, [r3]
 958 0274 191D     		adds	r1, r3, #4
 959 0276 7A68     		ldr	r2, [r7, #4]
 960 0278 1160     		str	r1, [r2]
 961 027a 1B68     		ldr	r3, [r3]
 962 027c BB66     		str	r3, [r7, #104]
 963              	.L73:
 438:../Generated_Code/SEGGER_RTT_printf.c ****             c = *s;
 964              		.loc 1 438 0
 965 027e BB6E     		ldr	r3, [r7, #104]
 966 0280 1B78     		ldrb	r3, [r3]
 967 0282 87F87F30 		strb	r3, [r7, #127]
 439:../Generated_Code/SEGGER_RTT_printf.c ****             s++;
 968              		.loc 1 439 0
 969 0286 BB6E     		ldr	r3, [r7, #104]
 970 0288 0133     		adds	r3, r3, #1
 971 028a BB66     		str	r3, [r7, #104]
 440:../Generated_Code/SEGGER_RTT_printf.c ****             if (c == '\0') {
 972              		.loc 1 440 0
 973 028c 97F97F30 		ldrsb	r3, [r7, #127]
 974 0290 002B     		cmp	r3, #0
 975 0292 00D1     		bne	.L71
 441:../Generated_Code/SEGGER_RTT_printf.c ****               break;
 976              		.loc 1 441 0
 977 0294 0AE0     		b	.L72
 978              	.L71:
 443:../Generated_Code/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 979              		.loc 1 443 0
 980 0296 07F15002 		add	r2, r7, #80
 981 029a 97F97F30 		ldrsb	r3, [r7, #127]
 982 029e 1046     		mov	r0, r2
 983 02a0 1946     		mov	r1, r3
 984 02a2 FFF7FEFF 		bl	_StoreChar
 444:../Generated_Code/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 985              		.loc 1 444 0
 986 02a6 FB6D     		ldr	r3, [r7, #92]
 987 02a8 002B     		cmp	r3, #0
 988 02aa E8DA     		bge	.L73
 989              	.L72:
 990              	.LBE3:
 446:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 991              		.loc 1 446 0
 992 02ac 1BE0     		b	.L70
 993              	.L68:
 448:../Generated_Code/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 994              		.loc 1 448 0
 995 02ae 7B68     		ldr	r3, [r7, #4]
 996 02b0 1B68     		ldr	r3, [r3]
 997 02b2 191D     		adds	r1, r3, #4
 998 02b4 7A68     		ldr	r2, [r7, #4]
 999 02b6 1160     		str	r1, [r2]
 1000 02b8 1B68     		ldr	r3, [r3]
 1001 02ba BB67     		str	r3, [r7, #120]
 449:../Generated_Code/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1002              		.loc 1 449 0
 1003 02bc BB6F     		ldr	r3, [r7, #120]
 1004 02be 07F15002 		add	r2, r7, #80
 1005 02c2 0821     		movs	r1, #8
 1006 02c4 0091     		str	r1, [sp]
 1007 02c6 0021     		movs	r1, #0
 1008 02c8 0191     		str	r1, [sp, #4]
 1009 02ca 1046     		mov	r0, r2
 1010 02cc 1946     		mov	r1, r3
 1011 02ce 1022     		movs	r2, #16
 1012 02d0 0823     		movs	r3, #8
 1013 02d2 FFF7FEFF 		bl	_PrintUnsigned
 450:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 1014              		.loc 1 450 0
 1015 02d6 06E0     		b	.L70
 1016              	.L65:
 452:../Generated_Code/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 1017              		.loc 1 452 0
 1018 02d8 07F15003 		add	r3, r7, #80
 1019 02dc 1846     		mov	r0, r3
 1020 02de 2521     		movs	r1, #37
 1021 02e0 FFF7FEFF 		bl	_StoreChar
 453:../Generated_Code/SEGGER_RTT_printf.c ****         break;
 1022              		.loc 1 453 0
 1023 02e4 00BF     		nop
 1024              	.L70:
 456:../Generated_Code/SEGGER_RTT_printf.c ****       }
 457:../Generated_Code/SEGGER_RTT_printf.c ****       sFormat++;
 1025              		.loc 1 457 0
 1026 02e6 BB68     		ldr	r3, [r7, #8]
 1027 02e8 0133     		adds	r3, r3, #1
 1028 02ea BB60     		str	r3, [r7, #8]
 1029 02ec 07E0     		b	.L74
 1030              	.L44:
 458:../Generated_Code/SEGGER_RTT_printf.c ****     } else {
 459:../Generated_Code/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 1031              		.loc 1 459 0
 1032 02ee 07F15002 		add	r2, r7, #80
 1033 02f2 97F97F30 		ldrsb	r3, [r7, #127]
 1034 02f6 1046     		mov	r0, r2
 1035 02f8 1946     		mov	r1, r3
 1036 02fa FFF7FEFF 		bl	_StoreChar
 1037              	.L74:
 460:../Generated_Code/SEGGER_RTT_printf.c ****     }
 461:../Generated_Code/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 1038              		.loc 1 461 0
 1039 02fe FB6D     		ldr	r3, [r7, #92]
 1040 0300 002B     		cmp	r3, #0
 1041 0302 BFF68EAE 		bge	.L75
 1042              	.L43:
 462:../Generated_Code/SEGGER_RTT_printf.c **** 
 463:../Generated_Code/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1043              		.loc 1 463 0
 1044 0306 FB6D     		ldr	r3, [r7, #92]
 1045 0308 002B     		cmp	r3, #0
 1046 030a 0CDD     		ble	.L76
 464:../Generated_Code/SEGGER_RTT_printf.c ****     //
 465:../Generated_Code/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 466:../Generated_Code/SEGGER_RTT_printf.c ****     //
 467:../Generated_Code/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1047              		.loc 1 467 0
 1048 030c BB6D     		ldr	r3, [r7, #88]
 1049 030e 002B     		cmp	r3, #0
 1050 0310 07D0     		beq	.L77
 468:../Generated_Code/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1051              		.loc 1 468 0
 1052 0312 BB6D     		ldr	r3, [r7, #88]
 1053 0314 07F11002 		add	r2, r7, #16
 1054 0318 F868     		ldr	r0, [r7, #12]
 1055 031a 1146     		mov	r1, r2
 1056 031c 1A46     		mov	r2, r3
 1057 031e FFF7FEFF 		bl	SEGGER_RTT_Write
 1058              	.L77:
 469:../Generated_Code/SEGGER_RTT_printf.c ****     }
 470:../Generated_Code/SEGGER_RTT_printf.c **** #if 0
 471:../Generated_Code/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 472:../Generated_Code/SEGGER_RTT_printf.c **** #else /* << EST: Do not count the characters twice! */
 473:../Generated_Code/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue = (int)BufferDesc.Cnt;
 1059              		.loc 1 473 0
 1060 0322 BB6D     		ldr	r3, [r7, #88]
 1061 0324 FB65     		str	r3, [r7, #92]
 1062              	.L76:
 474:../Generated_Code/SEGGER_RTT_printf.c **** #endif
 475:../Generated_Code/SEGGER_RTT_printf.c ****   }
 476:../Generated_Code/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1063              		.loc 1 476 0
 1064 0326 FB6D     		ldr	r3, [r7, #92]
 477:../Generated_Code/SEGGER_RTT_printf.c **** }
 1065              		.loc 1 477 0
 1066 0328 1846     		mov	r0, r3
 1067 032a 8037     		adds	r7, r7, #128
 1068 032c BD46     		mov	sp, r7
 1069              		@ sp needed
 1070 032e 80BD     		pop	{r7, pc}
 1071              		.cfi_endproc
 1072              	.LFE3:
 1074              		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1075              		.align	2
 1076              		.global	SEGGER_RTT_printf
 1077              		.thumb
 1078              		.thumb_func
 1080              	SEGGER_RTT_printf:
 1081              	.LFB4:
 478:../Generated_Code/SEGGER_RTT_printf.c **** 
 479:../Generated_Code/SEGGER_RTT_printf.c **** /*********************************************************************
 480:../Generated_Code/SEGGER_RTT_printf.c **** *
 481:../Generated_Code/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 482:../Generated_Code/SEGGER_RTT_printf.c **** *
 483:../Generated_Code/SEGGER_RTT_printf.c **** *  Function description
 484:../Generated_Code/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 485:../Generated_Code/SEGGER_RTT_printf.c **** *    This data is read by the host.
 486:../Generated_Code/SEGGER_RTT_printf.c **** *
 487:../Generated_Code/SEGGER_RTT_printf.c **** *  Parameters
 488:../Generated_Code/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 489:../Generated_Code/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 490:../Generated_Code/SEGGER_RTT_printf.c **** *
 491:../Generated_Code/SEGGER_RTT_printf.c **** *  Return values
 492:../Generated_Code/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 493:../Generated_Code/SEGGER_RTT_printf.c **** *     < 0:  Error
 494:../Generated_Code/SEGGER_RTT_printf.c **** *
 495:../Generated_Code/SEGGER_RTT_printf.c **** *  Notes
 496:../Generated_Code/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 497:../Generated_Code/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 498:../Generated_Code/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 499:../Generated_Code/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 500:../Generated_Code/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 501:../Generated_Code/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 502:../Generated_Code/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 503:../Generated_Code/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 504:../Generated_Code/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 505:../Generated_Code/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 506:../Generated_Code/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 507:../Generated_Code/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 508:../Generated_Code/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 509:../Generated_Code/SEGGER_RTT_printf.c **** */
 510:../Generated_Code/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1082              		.loc 1 510 0
 1083              		.cfi_startproc
 1084              		@ args = 4, pretend = 12, frame = 16
 1085              		@ frame_needed = 1, uses_anonymous_args = 1
 1086 0000 0EB4     		push	{r1, r2, r3}
 1087              		.cfi_def_cfa_offset 12
 1088              		.cfi_offset 1, -12
 1089              		.cfi_offset 2, -8
 1090              		.cfi_offset 3, -4
 1091 0002 80B5     		push	{r7, lr}
 1092              		.cfi_def_cfa_offset 20
 1093              		.cfi_offset 7, -20
 1094              		.cfi_offset 14, -16
 1095 0004 85B0     		sub	sp, sp, #20
 1096              		.cfi_def_cfa_offset 40
 1097 0006 00AF     		add	r7, sp, #0
 1098              		.cfi_def_cfa_register 7
 1099 0008 7860     		str	r0, [r7, #4]
 511:../Generated_Code/SEGGER_RTT_printf.c ****   int r;
 512:../Generated_Code/SEGGER_RTT_printf.c ****   va_list ParamList;
 513:../Generated_Code/SEGGER_RTT_printf.c **** 
 514:../Generated_Code/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1100              		.loc 1 514 0
 1101 000a 07F12003 		add	r3, r7, #32
 1102 000e BB60     		str	r3, [r7, #8]
 515:../Generated_Code/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1103              		.loc 1 515 0
 1104 0010 07F10803 		add	r3, r7, #8
 1105 0014 7868     		ldr	r0, [r7, #4]
 1106 0016 F969     		ldr	r1, [r7, #28]
 1107 0018 1A46     		mov	r2, r3
 1108 001a FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1109 001e F860     		str	r0, [r7, #12]
 516:../Generated_Code/SEGGER_RTT_printf.c ****   va_end(ParamList);
 517:../Generated_Code/SEGGER_RTT_printf.c ****   return r;
 1110              		.loc 1 517 0
 1111 0020 FB68     		ldr	r3, [r7, #12]
 518:../Generated_Code/SEGGER_RTT_printf.c **** }
 1112              		.loc 1 518 0
 1113 0022 1846     		mov	r0, r3
 1114 0024 1437     		adds	r7, r7, #20
 1115 0026 BD46     		mov	sp, r7
 1116              		@ sp needed
 1117 0028 BDE88040 		pop	{r7, lr}
 1118 002c 03B0     		add	sp, sp, #12
 1119 002e 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE4:
 1123              		.section	.text.SEGGER_printf,"ax",%progbits
 1124              		.align	2
 1125              		.global	SEGGER_printf
 1126              		.thumb
 1127              		.thumb_func
 1129              	SEGGER_printf:
 1130              	.LFB5:
 519:../Generated_Code/SEGGER_RTT_printf.c **** 
 520:../Generated_Code/SEGGER_RTT_printf.c **** #if 0 /* << EST extension to support extra format characters like %f */
 521:../Generated_Code/SEGGER_RTT_printf.c **** #include "McuXFormat.h"
 522:../Generated_Code/SEGGER_RTT_printf.c **** #include "McuWait.h"
 523:../Generated_Code/SEGGER_RTT_printf.c **** 
 524:../Generated_Code/SEGGER_RTT_printf.c **** int SEGGER_printf(const char * sFormat, ...) {
 525:../Generated_Code/SEGGER_RTT_printf.c ****   static char buffer[256]; /* NOT reentrant! */
 526:../Generated_Code/SEGGER_RTT_printf.c ****   va_list args;
 527:../Generated_Code/SEGGER_RTT_printf.c ****   int res;
 528:../Generated_Code/SEGGER_RTT_printf.c ****   unsigned int avail;
 529:../Generated_Code/SEGGER_RTT_printf.c **** 
 530:../Generated_Code/SEGGER_RTT_printf.c ****   va_start(args, sFormat);
 531:../Generated_Code/SEGGER_RTT_printf.c ****   res = xsnprintf(buffer, sizeof(buffer), sFormat, args);
 532:../Generated_Code/SEGGER_RTT_printf.c ****   va_end(args);
 533:../Generated_Code/SEGGER_RTT_printf.c ****   if (res > 0) {
 534:../Generated_Code/SEGGER_RTT_printf.c ****     int retry = 5;
 535:../Generated_Code/SEGGER_RTT_printf.c **** 
 536:../Generated_Code/SEGGER_RTT_printf.c ****     do {
 537:../Generated_Code/SEGGER_RTT_printf.c ****       /* res is the number of characters written */
 538:../Generated_Code/SEGGER_RTT_printf.c ****       avail = SEGGER_RTT_GetUpBufferFreeSize(0);
 539:../Generated_Code/SEGGER_RTT_printf.c ****       if (avail>res) {
 540:../Generated_Code/SEGGER_RTT_printf.c ****           break; /* enough space available */
 541:../Generated_Code/SEGGER_RTT_printf.c ****       } else {
 542:../Generated_Code/SEGGER_RTT_printf.c ****         McuWait_Waitms(50);
 543:../Generated_Code/SEGGER_RTT_printf.c ****         retry--;
 544:../Generated_Code/SEGGER_RTT_printf.c ****       }
 545:../Generated_Code/SEGGER_RTT_printf.c ****     } while(retry>0);
 546:../Generated_Code/SEGGER_RTT_printf.c ****     return SEGGER_RTT_printf(0, "%s", buffer);
 547:../Generated_Code/SEGGER_RTT_printf.c ****   }
 548:../Generated_Code/SEGGER_RTT_printf.c ****   return -1; /* failed */
 549:../Generated_Code/SEGGER_RTT_printf.c **** }
 550:../Generated_Code/SEGGER_RTT_printf.c **** #else
 551:../Generated_Code/SEGGER_RTT_printf.c **** int SEGGER_printf(const char * sFormat, ...) {
 1131              		.loc 1 551 0
 1132              		.cfi_startproc
 1133              		@ args = 4, pretend = 16, frame = 8
 1134              		@ frame_needed = 1, uses_anonymous_args = 1
 1135 0000 0FB4     		push	{r0, r1, r2, r3}
 1136              		.cfi_def_cfa_offset 16
 1137              		.cfi_offset 0, -16
 1138              		.cfi_offset 1, -12
 1139              		.cfi_offset 2, -8
 1140              		.cfi_offset 3, -4
 1141 0002 80B5     		push	{r7, lr}
 1142              		.cfi_def_cfa_offset 24
 1143              		.cfi_offset 7, -24
 1144              		.cfi_offset 14, -20
 1145 0004 82B0     		sub	sp, sp, #8
 1146              		.cfi_def_cfa_offset 32
 1147 0006 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 552:../Generated_Code/SEGGER_RTT_printf.c ****   va_list ParamList;
 553:../Generated_Code/SEGGER_RTT_printf.c ****   int res;
 554:../Generated_Code/SEGGER_RTT_printf.c **** 
 555:../Generated_Code/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1149              		.loc 1 555 0
 1150 0008 07F11403 		add	r3, r7, #20
 1151 000c 3B60     		str	r3, [r7]
 556:../Generated_Code/SEGGER_RTT_printf.c ****   res = SEGGER_RTT_vprintf(0, sFormat, &ParamList);
 1152              		.loc 1 556 0
 1153 000e 3B46     		mov	r3, r7
 1154 0010 0020     		movs	r0, #0
 1155 0012 3969     		ldr	r1, [r7, #16]
 1156 0014 1A46     		mov	r2, r3
 1157 0016 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1158 001a 7860     		str	r0, [r7, #4]
 557:../Generated_Code/SEGGER_RTT_printf.c ****   va_end(ParamList);
 558:../Generated_Code/SEGGER_RTT_printf.c ****   return res;
 1159              		.loc 1 558 0
 1160 001c 7B68     		ldr	r3, [r7, #4]
 559:../Generated_Code/SEGGER_RTT_printf.c **** }
 1161              		.loc 1 559 0
 1162 001e 1846     		mov	r0, r3
 1163 0020 0837     		adds	r7, r7, #8
 1164 0022 BD46     		mov	sp, r7
 1165              		@ sp needed
 1166 0024 BDE88040 		pop	{r7, lr}
 1167 0028 04B0     		add	sp, sp, #16
 1168 002a 7047     		bx	lr
 1169              		.cfi_endproc
 1170              	.LFE5:
 1172              		.section	.rodata._aV2C.6725,"a",%progbits
 1173              		.align	2
 1176              	_aV2C.6725:
 1177 0000 30       		.byte	48
 1178 0001 31       		.byte	49
 1179 0002 32       		.byte	50
 1180 0003 33       		.byte	51
 1181 0004 34       		.byte	52
 1182 0005 35       		.byte	53
 1183 0006 36       		.byte	54
 1184 0007 37       		.byte	55
 1185 0008 38       		.byte	56
 1186 0009 39       		.byte	57
 1187 000a 41       		.byte	65
 1188 000b 42       		.byte	66
 1189 000c 43       		.byte	67
 1190 000d 44       		.byte	68
 1191 000e 45       		.byte	69
 1192 000f 46       		.byte	70
 1193              		.text
 1194              	.Letext0:
 1195              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stdarg.h"
 1196              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:21     .text._StoreChar:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:25     .text._StoreChar:00000000 _StoreChar
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:116    .text._PrintUnsigned:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:120    .text._PrintUnsigned:00000000 _PrintUnsigned
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:353    .text._PrintUnsigned:00000150 $d
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1176   .rodata._aV2C.6725:00000000 _aV2C.6725
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:358    .text._PrintInt:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:362    .text._PrintInt:00000000 _PrintInt
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:588    .text.SEGGER_RTT_vprintf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:593    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:665    .text.SEGGER_RTT_vprintf:00000064 $d
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:679    .text.SEGGER_RTT_vprintf:0000009c $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1075   .text.SEGGER_RTT_printf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1080   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1124   .text.SEGGER_printf:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1129   .text.SEGGER_printf:00000000 SEGGER_printf
C:\Users\Aron\AppData\Local\Temp\ccRNuHcc.s:1173   .rodata._aV2C.6725:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.MCUC1config.h.9.0bb8fec22d828f19e34a4cdf9951d555
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.PE_Types.h.68.de7a315b6e4c635a9a7a45ae6ec20b08
                           .group:00000000 wm4.PE_Error.h.60.6ccf96637e85421388d147a5dcbc3621
                           .group:00000000 wm4.PE_Const.h.60.44eca2ca2a72148441f11b3e43b344a9
                           .group:00000000 wm4.MK22F12.h.59.83dcc0895f45d7d67f2182a38aa7f04f
                           .group:00000000 wm4.Cpu.h.66.9574a96471c5a4e92ddf5418cbdcf9a5
                           .group:00000000 wm4.RTT1config.h.9.558b8e72f87fd463160ae39e042c41f1
                           .group:00000000 wm4.SEGGER_RTT_Conf.h.89.1297b7334cc7c3f82a26ff405afddf8b
                           .group:00000000 wm4.SEGGER_RTT.h.170.7440a65c6e414fb2a8040073a0d6a958
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7

UNDEFINED SYMBOLS
SEGGER_RTT_Write
