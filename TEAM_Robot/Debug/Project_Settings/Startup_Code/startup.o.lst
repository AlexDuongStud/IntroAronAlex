   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"startup.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.__copy_rom_section,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	__copy_rom_section:
  26              	.LFB0:
  27              		.file 1 "../Project_Settings/Startup_Code/startup.c"
   1:../Project_Settings/Startup_Code/startup.c **** /* GNUC Startup library
   2:../Project_Settings/Startup_Code/startup.c ****  *    Copyright © 2005 Freescale semiConductor Inc. All Rights Reserved.
   3:../Project_Settings/Startup_Code/startup.c ****  *
   4:../Project_Settings/Startup_Code/startup.c ****  * $Date: 2011/09/21 06:41:34 $
   5:../Project_Settings/Startup_Code/startup.c ****  * $Revision: 1.4 $
   6:../Project_Settings/Startup_Code/startup.c ****  */
   7:../Project_Settings/Startup_Code/startup.c **** 
   8:../Project_Settings/Startup_Code/startup.c **** 
   9:../Project_Settings/Startup_Code/startup.c **** /*
  10:../Project_Settings/Startup_Code/startup.c ****  *	startup.c	-	entry-point for ARM programs
  11:../Project_Settings/Startup_Code/startup.c ****  *
  12:../Project_Settings/Startup_Code/startup.c ****  */
  13:../Project_Settings/Startup_Code/startup.c **** #include <string.h>
  14:../Project_Settings/Startup_Code/startup.c **** #include <stdlib.h>
  15:../Project_Settings/Startup_Code/startup.c **** #include "IO_Map.h"
  16:../Project_Settings/Startup_Code/startup.c **** 
  17:../Project_Settings/Startup_Code/startup.c **** #ifndef __ATOLLIC__
  18:../Project_Settings/Startup_Code/startup.c **** extern void _start(void);
  19:../Project_Settings/Startup_Code/startup.c **** #else
  20:../Project_Settings/Startup_Code/startup.c **** extern void __libc_init_array();
  21:../Project_Settings/Startup_Code/startup.c **** extern void main();
  22:../Project_Settings/Startup_Code/startup.c **** #endif
  23:../Project_Settings/Startup_Code/startup.c **** extern char __SP_INIT[];
  24:../Project_Settings/Startup_Code/startup.c **** 
  25:../Project_Settings/Startup_Code/startup.c **** extern void __init_registers();
  26:../Project_Settings/Startup_Code/startup.c **** extern void __init_hardware();
  27:../Project_Settings/Startup_Code/startup.c **** extern void __init_user();
  28:../Project_Settings/Startup_Code/startup.c **** 
  29:../Project_Settings/Startup_Code/startup.c **** /* format of the ROM table info entry ... */
  30:../Project_Settings/Startup_Code/startup.c **** typedef struct RomInfo {
  31:../Project_Settings/Startup_Code/startup.c ****   unsigned long	Source;
  32:../Project_Settings/Startup_Code/startup.c ****   unsigned long	Target;
  33:../Project_Settings/Startup_Code/startup.c ****   unsigned long Size;
  34:../Project_Settings/Startup_Code/startup.c **** } RomInfo;
  35:../Project_Settings/Startup_Code/startup.c **** 
  36:../Project_Settings/Startup_Code/startup.c **** extern RomInfo __S_romp[] __attribute__((weak));    /* linker defined symbol */
  37:../Project_Settings/Startup_Code/startup.c **** 
  38:../Project_Settings/Startup_Code/startup.c **** /*
  39:../Project_Settings/Startup_Code/startup.c ****  *	Routine to copy a single section from ROM to RAM ...
  40:../Project_Settings/Startup_Code/startup.c ****  */
  41:../Project_Settings/Startup_Code/startup.c **** static void __copy_rom_section(unsigned long dst, unsigned long src, unsigned long size)
  42:../Project_Settings/Startup_Code/startup.c **** {
  28              		.loc 1 42 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              		.cfi_def_cfa_offset 48
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  43:../Project_Settings/Startup_Code/startup.c **** 	unsigned long len = size;
  43              		.loc 1 43 0
  44 000c 7B68     		ldr	r3, [r7, #4]
  45 000e 7B62     		str	r3, [r7, #36]
  44:../Project_Settings/Startup_Code/startup.c **** 
  45:../Project_Settings/Startup_Code/startup.c **** 	const unsigned int size_int = sizeof(int);
  46              		.loc 1 45 0
  47 0010 0423     		movs	r3, #4
  48 0012 3B62     		str	r3, [r7, #32]
  46:../Project_Settings/Startup_Code/startup.c **** 	const unsigned int mask_int = sizeof(int)-1;
  49              		.loc 1 46 0
  50 0014 0323     		movs	r3, #3
  51 0016 FB61     		str	r3, [r7, #28]
  47:../Project_Settings/Startup_Code/startup.c **** 
  48:../Project_Settings/Startup_Code/startup.c **** 	const unsigned int size_short = sizeof(short);
  52              		.loc 1 48 0
  53 0018 0223     		movs	r3, #2
  54 001a BB61     		str	r3, [r7, #24]
  49:../Project_Settings/Startup_Code/startup.c **** 	const unsigned int mask_short = sizeof(short)-1;
  55              		.loc 1 49 0
  56 001c 0123     		movs	r3, #1
  57 001e 7B61     		str	r3, [r7, #20]
  50:../Project_Settings/Startup_Code/startup.c **** 
  51:../Project_Settings/Startup_Code/startup.c **** 	const unsigned int size_char = sizeof(char);
  58              		.loc 1 51 0
  59 0020 0123     		movs	r3, #1
  60 0022 3B61     		str	r3, [r7, #16]
  52:../Project_Settings/Startup_Code/startup.c **** 
  53:../Project_Settings/Startup_Code/startup.c **** 	if( dst == src || size == 0)
  61              		.loc 1 53 0
  62 0024 FA68     		ldr	r2, [r7, #12]
  63 0026 BB68     		ldr	r3, [r7, #8]
  64 0028 9A42     		cmp	r2, r3
  65 002a 02D0     		beq	.L2
  66              		.loc 1 53 0 is_stmt 0 discriminator 1
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 002B     		cmp	r3, #0
  69 0030 00D1     		bne	.L3
  70              	.L2:
  54:../Project_Settings/Startup_Code/startup.c **** 	{
  55:../Project_Settings/Startup_Code/startup.c **** 		return;
  71              		.loc 1 55 0 is_stmt 1
  72 0032 51E0     		b	.L1
  73              	.L3:
  56:../Project_Settings/Startup_Code/startup.c **** 	}
  57:../Project_Settings/Startup_Code/startup.c **** 
  58:../Project_Settings/Startup_Code/startup.c **** 
  59:../Project_Settings/Startup_Code/startup.c **** 	while( len > 0)
  74              		.loc 1 59 0
  75 0034 4DE0     		b	.L5
  76              	.L8:
  60:../Project_Settings/Startup_Code/startup.c **** 	{
  61:../Project_Settings/Startup_Code/startup.c **** 
  62:../Project_Settings/Startup_Code/startup.c **** 		if( !(src & mask_int) && !(dst & mask_int) && len >= size_int)
  77              		.loc 1 62 0
  78 0036 BA68     		ldr	r2, [r7, #8]
  79 0038 FB69     		ldr	r3, [r7, #28]
  80 003a 1340     		ands	r3, r3, r2
  81 003c 002B     		cmp	r3, #0
  82 003e 19D1     		bne	.L6
  83              		.loc 1 62 0 is_stmt 0 discriminator 1
  84 0040 FA68     		ldr	r2, [r7, #12]
  85 0042 FB69     		ldr	r3, [r7, #28]
  86 0044 1340     		ands	r3, r3, r2
  87 0046 002B     		cmp	r3, #0
  88 0048 14D1     		bne	.L6
  89 004a 7A6A     		ldr	r2, [r7, #36]
  90 004c 3B6A     		ldr	r3, [r7, #32]
  91 004e 9A42     		cmp	r2, r3
  92 0050 10D3     		bcc	.L6
  63:../Project_Settings/Startup_Code/startup.c **** 		{
  64:../Project_Settings/Startup_Code/startup.c **** 			*((int *)dst)  = *((int*)src);
  93              		.loc 1 64 0 is_stmt 1
  94 0052 FB68     		ldr	r3, [r7, #12]
  95 0054 BA68     		ldr	r2, [r7, #8]
  96 0056 1268     		ldr	r2, [r2]
  97 0058 1A60     		str	r2, [r3]
  65:../Project_Settings/Startup_Code/startup.c **** 			dst += size_int;
  98              		.loc 1 65 0
  99 005a FA68     		ldr	r2, [r7, #12]
 100 005c 3B6A     		ldr	r3, [r7, #32]
 101 005e 1344     		add	r3, r3, r2
 102 0060 FB60     		str	r3, [r7, #12]
  66:../Project_Settings/Startup_Code/startup.c **** 			src += size_int;
 103              		.loc 1 66 0
 104 0062 BA68     		ldr	r2, [r7, #8]
 105 0064 3B6A     		ldr	r3, [r7, #32]
 106 0066 1344     		add	r3, r3, r2
 107 0068 BB60     		str	r3, [r7, #8]
  67:../Project_Settings/Startup_Code/startup.c **** 			len -= size_int;
 108              		.loc 1 67 0
 109 006a 7A6A     		ldr	r2, [r7, #36]
 110 006c 3B6A     		ldr	r3, [r7, #32]
 111 006e D31A     		subs	r3, r2, r3
 112 0070 7B62     		str	r3, [r7, #36]
 113 0072 2EE0     		b	.L5
 114              	.L6:
  68:../Project_Settings/Startup_Code/startup.c **** 		}
  69:../Project_Settings/Startup_Code/startup.c **** 		else if( !(src & mask_short) && !(dst & mask_short) && len >= size_short)
 115              		.loc 1 69 0
 116 0074 BA68     		ldr	r2, [r7, #8]
 117 0076 7B69     		ldr	r3, [r7, #20]
 118 0078 1340     		ands	r3, r3, r2
 119 007a 002B     		cmp	r3, #0
 120 007c 19D1     		bne	.L7
 121              		.loc 1 69 0 is_stmt 0 discriminator 1
 122 007e FA68     		ldr	r2, [r7, #12]
 123 0080 7B69     		ldr	r3, [r7, #20]
 124 0082 1340     		ands	r3, r3, r2
 125 0084 002B     		cmp	r3, #0
 126 0086 14D1     		bne	.L7
 127 0088 7A6A     		ldr	r2, [r7, #36]
 128 008a BB69     		ldr	r3, [r7, #24]
 129 008c 9A42     		cmp	r2, r3
 130 008e 10D3     		bcc	.L7
  70:../Project_Settings/Startup_Code/startup.c **** 		{
  71:../Project_Settings/Startup_Code/startup.c **** 			*((short *)dst)  = *((short*)src);
 131              		.loc 1 71 0 is_stmt 1
 132 0090 FB68     		ldr	r3, [r7, #12]
 133 0092 BA68     		ldr	r2, [r7, #8]
 134 0094 1288     		ldrh	r2, [r2]
 135 0096 1A80     		strh	r2, [r3]	@ movhi
  72:../Project_Settings/Startup_Code/startup.c **** 			dst += size_short;
 136              		.loc 1 72 0
 137 0098 FA68     		ldr	r2, [r7, #12]
 138 009a BB69     		ldr	r3, [r7, #24]
 139 009c 1344     		add	r3, r3, r2
 140 009e FB60     		str	r3, [r7, #12]
  73:../Project_Settings/Startup_Code/startup.c **** 			src += size_short;
 141              		.loc 1 73 0
 142 00a0 BA68     		ldr	r2, [r7, #8]
 143 00a2 BB69     		ldr	r3, [r7, #24]
 144 00a4 1344     		add	r3, r3, r2
 145 00a6 BB60     		str	r3, [r7, #8]
  74:../Project_Settings/Startup_Code/startup.c **** 			len -= size_short;
 146              		.loc 1 74 0
 147 00a8 7A6A     		ldr	r2, [r7, #36]
 148 00aa BB69     		ldr	r3, [r7, #24]
 149 00ac D31A     		subs	r3, r2, r3
 150 00ae 7B62     		str	r3, [r7, #36]
 151 00b0 0FE0     		b	.L5
 152              	.L7:
  75:../Project_Settings/Startup_Code/startup.c **** 		}
  76:../Project_Settings/Startup_Code/startup.c **** 		else
  77:../Project_Settings/Startup_Code/startup.c **** 		{
  78:../Project_Settings/Startup_Code/startup.c **** 			*((char *)dst)  = *((char*)src);
 153              		.loc 1 78 0
 154 00b2 FB68     		ldr	r3, [r7, #12]
 155 00b4 BA68     		ldr	r2, [r7, #8]
 156 00b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 157 00b8 1A70     		strb	r2, [r3]
  79:../Project_Settings/Startup_Code/startup.c **** 			dst += size_char;
 158              		.loc 1 79 0
 159 00ba FA68     		ldr	r2, [r7, #12]
 160 00bc 3B69     		ldr	r3, [r7, #16]
 161 00be 1344     		add	r3, r3, r2
 162 00c0 FB60     		str	r3, [r7, #12]
  80:../Project_Settings/Startup_Code/startup.c **** 			src += size_char;
 163              		.loc 1 80 0
 164 00c2 BA68     		ldr	r2, [r7, #8]
 165 00c4 3B69     		ldr	r3, [r7, #16]
 166 00c6 1344     		add	r3, r3, r2
 167 00c8 BB60     		str	r3, [r7, #8]
  81:../Project_Settings/Startup_Code/startup.c **** 			len -= size_char;
 168              		.loc 1 81 0
 169 00ca 7A6A     		ldr	r2, [r7, #36]
 170 00cc 3B69     		ldr	r3, [r7, #16]
 171 00ce D31A     		subs	r3, r2, r3
 172 00d0 7B62     		str	r3, [r7, #36]
 173              	.L5:
  59:../Project_Settings/Startup_Code/startup.c **** 	while( len > 0)
 174              		.loc 1 59 0 discriminator 1
 175 00d2 7B6A     		ldr	r3, [r7, #36]
 176 00d4 002B     		cmp	r3, #0
 177 00d6 AED1     		bne	.L8
 178              	.L1:
  82:../Project_Settings/Startup_Code/startup.c **** 		}
  83:../Project_Settings/Startup_Code/startup.c **** 	}
  84:../Project_Settings/Startup_Code/startup.c **** }
 179              		.loc 1 84 0
 180 00d8 2C37     		adds	r7, r7, #44
 181 00da BD46     		mov	sp, r7
 182              		@ sp needed
 183 00dc 5DF8047B 		ldr	r7, [sp], #4
 184 00e0 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE0:
 188 00e2 00BF     		.section	.text.__copy_rom_sections_to_ram,"ax",%progbits
 189              		.align	2
 190              		.thumb
 191              		.thumb_func
 193              	__copy_rom_sections_to_ram:
 194              	.LFB1:
  85:../Project_Settings/Startup_Code/startup.c **** 
  86:../Project_Settings/Startup_Code/startup.c **** /*
  87:../Project_Settings/Startup_Code/startup.c ****  *	Routine that copies all sections the user marked as ROM into
  88:../Project_Settings/Startup_Code/startup.c ****  *	their target RAM addresses ...
  89:../Project_Settings/Startup_Code/startup.c ****  *
  90:../Project_Settings/Startup_Code/startup.c ****  *	__S_romp is defined in the linker command file
  91:../Project_Settings/Startup_Code/startup.c ****  *  It is a table of RomInfo
  92:../Project_Settings/Startup_Code/startup.c ****  *	structures.  The final entry in the table has all-zero
  93:../Project_Settings/Startup_Code/startup.c ****  *	fields.
  94:../Project_Settings/Startup_Code/startup.c ****  */
  95:../Project_Settings/Startup_Code/startup.c **** static void __copy_rom_sections_to_ram(void)
  96:../Project_Settings/Startup_Code/startup.c **** {
 195              		.loc 1 96 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 90B5     		push	{r4, r7, lr}
 200              		.cfi_def_cfa_offset 12
 201              		.cfi_offset 4, -12
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              		.cfi_def_cfa_offset 24
 206 0004 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
  97:../Project_Settings/Startup_Code/startup.c **** 
  98:../Project_Settings/Startup_Code/startup.c **** 	int				index;
  99:../Project_Settings/Startup_Code/startup.c **** 
 100:../Project_Settings/Startup_Code/startup.c **** 	if (__S_romp == 0L) return;
 208              		.loc 1 100 0
 209 0006 244B     		ldr	r3, .L14
 210 0008 002B     		cmp	r3, #0
 211 000a 00D1     		bne	.L10
 212              		.loc 1 100 0 is_stmt 0 discriminator 1
 213 000c 40E0     		b	.L9
 214              	.L10:
 101:../Project_Settings/Startup_Code/startup.c **** 
 102:../Project_Settings/Startup_Code/startup.c **** 	/*
 103:../Project_Settings/Startup_Code/startup.c **** 	 *	Go through the entire table, copying sections from ROM to RAM.
 104:../Project_Settings/Startup_Code/startup.c **** 	 */
 105:../Project_Settings/Startup_Code/startup.c **** 	for (index = 0;
 215              		.loc 1 105 0 is_stmt 1
 216 000e 0023     		movs	r3, #0
 217 0010 7B60     		str	r3, [r7, #4]
 218 0012 1EE0     		b	.L12
 219              	.L13:
 106:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Source != 0 ||
 107:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Target != 0 ||
 108:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Size != 0;
 109:../Project_Settings/Startup_Code/startup.c **** 		 ++index)
 110:../Project_Settings/Startup_Code/startup.c **** 	{
 111:../Project_Settings/Startup_Code/startup.c **** 		__copy_rom_section( __S_romp[index].Target,
 220              		.loc 1 111 0
 221 0014 2049     		ldr	r1, .L14
 222 0016 7A68     		ldr	r2, [r7, #4]
 223 0018 1346     		mov	r3, r2
 224 001a 5B00     		lsls	r3, r3, #1
 225 001c 1344     		add	r3, r3, r2
 226 001e 9B00     		lsls	r3, r3, #2
 227 0020 0B44     		add	r3, r3, r1
 228 0022 5868     		ldr	r0, [r3, #4]
 229 0024 1C49     		ldr	r1, .L14
 230 0026 7A68     		ldr	r2, [r7, #4]
 231 0028 1346     		mov	r3, r2
 232 002a 5B00     		lsls	r3, r3, #1
 233 002c 1344     		add	r3, r3, r2
 234 002e 9B00     		lsls	r3, r3, #2
 235 0030 0B44     		add	r3, r3, r1
 236 0032 1968     		ldr	r1, [r3]
 237 0034 184C     		ldr	r4, .L14
 238 0036 7A68     		ldr	r2, [r7, #4]
 239 0038 1346     		mov	r3, r2
 240 003a 5B00     		lsls	r3, r3, #1
 241 003c 1344     		add	r3, r3, r2
 242 003e 9B00     		lsls	r3, r3, #2
 243 0040 2344     		add	r3, r3, r4
 244 0042 0833     		adds	r3, r3, #8
 245 0044 1B68     		ldr	r3, [r3]
 246 0046 1A46     		mov	r2, r3
 247 0048 FFF7FEFF 		bl	__copy_rom_section
 109:../Project_Settings/Startup_Code/startup.c **** 		 ++index)
 248              		.loc 1 109 0
 249 004c 7B68     		ldr	r3, [r7, #4]
 250 004e 0133     		adds	r3, r3, #1
 251 0050 7B60     		str	r3, [r7, #4]
 252              	.L12:
 106:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Source != 0 ||
 253              		.loc 1 106 0 discriminator 1
 254 0052 1149     		ldr	r1, .L14
 255 0054 7A68     		ldr	r2, [r7, #4]
 256 0056 1346     		mov	r3, r2
 257 0058 5B00     		lsls	r3, r3, #1
 258 005a 1344     		add	r3, r3, r2
 259 005c 9B00     		lsls	r3, r3, #2
 260 005e 0B44     		add	r3, r3, r1
 261 0060 1B68     		ldr	r3, [r3]
 105:../Project_Settings/Startup_Code/startup.c **** 	for (index = 0;
 262              		.loc 1 105 0 discriminator 1
 263 0062 002B     		cmp	r3, #0
 264 0064 D6D1     		bne	.L13
 107:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Target != 0 ||
 265              		.loc 1 107 0
 266 0066 0C49     		ldr	r1, .L14
 267 0068 7A68     		ldr	r2, [r7, #4]
 268 006a 1346     		mov	r3, r2
 269 006c 5B00     		lsls	r3, r3, #1
 270 006e 1344     		add	r3, r3, r2
 271 0070 9B00     		lsls	r3, r3, #2
 272 0072 0B44     		add	r3, r3, r1
 273 0074 5B68     		ldr	r3, [r3, #4]
 106:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Source != 0 ||
 274              		.loc 1 106 0
 275 0076 002B     		cmp	r3, #0
 276 0078 CCD1     		bne	.L13
 108:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Size != 0;
 277              		.loc 1 108 0
 278 007a 0749     		ldr	r1, .L14
 279 007c 7A68     		ldr	r2, [r7, #4]
 280 007e 1346     		mov	r3, r2
 281 0080 5B00     		lsls	r3, r3, #1
 282 0082 1344     		add	r3, r3, r2
 283 0084 9B00     		lsls	r3, r3, #2
 284 0086 0B44     		add	r3, r3, r1
 285 0088 0833     		adds	r3, r3, #8
 286 008a 1B68     		ldr	r3, [r3]
 107:../Project_Settings/Startup_Code/startup.c **** 		 __S_romp[index].Target != 0 ||
 287              		.loc 1 107 0
 288 008c 002B     		cmp	r3, #0
 289 008e C1D1     		bne	.L13
 290              	.L9:
 112:../Project_Settings/Startup_Code/startup.c **** 							__S_romp[index].Source,
 113:../Project_Settings/Startup_Code/startup.c **** 							__S_romp[index].Size );
 114:../Project_Settings/Startup_Code/startup.c **** 
 115:../Project_Settings/Startup_Code/startup.c **** 	}
 116:../Project_Settings/Startup_Code/startup.c **** }
 291              		.loc 1 116 0
 292 0090 0C37     		adds	r7, r7, #12
 293 0092 BD46     		mov	sp, r7
 294              		@ sp needed
 295 0094 90BD     		pop	{r4, r7, pc}
 296              	.L15:
 297 0096 00BF     		.align	2
 298              	.L14:
 299 0098 00000000 		.word	__S_romp
 300              		.cfi_endproc
 301              	.LFE1:
 303              		.section	.text.__init_registers,"ax",%progbits
 304              		.align	2
 305              		.weak	__init_registers
 306              		.thumb
 307              		.thumb_func
 309              	__init_registers:
 310              	.LFB2:
 117:../Project_Settings/Startup_Code/startup.c **** 
 118:../Project_Settings/Startup_Code/startup.c **** #ifdef __ATOLLIC__
 119:../Project_Settings/Startup_Code/startup.c **** static void zero_fill_bss(void)
 120:../Project_Settings/Startup_Code/startup.c **** {
 121:../Project_Settings/Startup_Code/startup.c ****   extern char __START_BSS[];
 122:../Project_Settings/Startup_Code/startup.c ****   extern char __END_BSS[];
 123:../Project_Settings/Startup_Code/startup.c ****   
 124:../Project_Settings/Startup_Code/startup.c ****   unsigned long len = __END_BSS - __START_BSS;
 125:../Project_Settings/Startup_Code/startup.c ****   unsigned long dst = (unsigned long) __START_BSS;
 126:../Project_Settings/Startup_Code/startup.c ****   
 127:../Project_Settings/Startup_Code/startup.c ****   const int size_int = sizeof(int);
 128:../Project_Settings/Startup_Code/startup.c ****   const int mask_int = sizeof(int)-1;
 129:../Project_Settings/Startup_Code/startup.c ****   
 130:../Project_Settings/Startup_Code/startup.c ****   const int size_short = sizeof(short);
 131:../Project_Settings/Startup_Code/startup.c ****   const int mask_short = sizeof(short)-1;
 132:../Project_Settings/Startup_Code/startup.c ****   
 133:../Project_Settings/Startup_Code/startup.c ****   const int size_char = sizeof(char);
 134:../Project_Settings/Startup_Code/startup.c ****   
 135:../Project_Settings/Startup_Code/startup.c ****   if( len == 0)
 136:../Project_Settings/Startup_Code/startup.c ****   {
 137:../Project_Settings/Startup_Code/startup.c ****     return;
 138:../Project_Settings/Startup_Code/startup.c ****   }
 139:../Project_Settings/Startup_Code/startup.c **** 
 140:../Project_Settings/Startup_Code/startup.c **** 
 141:../Project_Settings/Startup_Code/startup.c ****   while( len > 0)
 142:../Project_Settings/Startup_Code/startup.c ****   {
 143:../Project_Settings/Startup_Code/startup.c ****     if( !(dst & mask_int) && len >= size_int)
 144:../Project_Settings/Startup_Code/startup.c ****     {
 145:../Project_Settings/Startup_Code/startup.c ****       *((int *)dst)  = 0;
 146:../Project_Settings/Startup_Code/startup.c ****       dst += size_int;
 147:../Project_Settings/Startup_Code/startup.c ****       len -= size_int;
 148:../Project_Settings/Startup_Code/startup.c ****     }
 149:../Project_Settings/Startup_Code/startup.c ****     else if( !(dst & mask_short) && len >= size_short)
 150:../Project_Settings/Startup_Code/startup.c ****     {
 151:../Project_Settings/Startup_Code/startup.c ****       *((short *)dst)  = 0;
 152:../Project_Settings/Startup_Code/startup.c ****       dst += size_short;
 153:../Project_Settings/Startup_Code/startup.c ****       len -= size_short;
 154:../Project_Settings/Startup_Code/startup.c ****     }
 155:../Project_Settings/Startup_Code/startup.c ****     else
 156:../Project_Settings/Startup_Code/startup.c ****     {
 157:../Project_Settings/Startup_Code/startup.c ****       *((char *)dst)  = 0;
 158:../Project_Settings/Startup_Code/startup.c ****       dst += size_char;
 159:../Project_Settings/Startup_Code/startup.c ****       len -= size_char;
 160:../Project_Settings/Startup_Code/startup.c ****     }
 161:../Project_Settings/Startup_Code/startup.c ****   }
 162:../Project_Settings/Startup_Code/startup.c **** }
 163:../Project_Settings/Startup_Code/startup.c **** #endif
 164:../Project_Settings/Startup_Code/startup.c **** 
 165:../Project_Settings/Startup_Code/startup.c **** void __attribute__ ((weak)) __init_registers(void)
 166:../Project_Settings/Startup_Code/startup.c **** {
 311              		.loc 1 166 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316 0000 80B4     		push	{r7}
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 7, -4
 319 0002 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 167:../Project_Settings/Startup_Code/startup.c ****   #if defined(SCB_CPACR)
 168:../Project_Settings/Startup_Code/startup.c ****   /* Initialize FPU */
 169:../Project_Settings/Startup_Code/startup.c ****   SCB_CPACR |= SCB_CPACR_CP10(3U) | SCB_CPACR_CP11(3U); 
 321              		.loc 1 169 0
 322 0004 4FF0E023 		mov	r3, #-536813568
 323 0008 4FF0E022 		mov	r2, #-536813568
 324 000c D2F8882D 		ldr	r2, [r2, #3464]
 325 0010 42F47002 		orr	r2, r2, #15728640
 326 0014 C3F8882D 		str	r2, [r3, #3464]
 170:../Project_Settings/Startup_Code/startup.c ****   #endif
 171:../Project_Settings/Startup_Code/startup.c **** 
 172:../Project_Settings/Startup_Code/startup.c **** }
 327              		.loc 1 172 0
 328 0018 BD46     		mov	sp, r7
 329              		@ sp needed
 330 001a 5DF8047B 		ldr	r7, [sp], #4
 331 001e 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE2:
 335              		.section	.text.__init_hardware,"ax",%progbits
 336              		.align	2
 337              		.weak	__init_hardware
 338              		.thumb
 339              		.thumb_func
 341              	__init_hardware:
 342              	.LFB3:
 173:../Project_Settings/Startup_Code/startup.c **** 
 174:../Project_Settings/Startup_Code/startup.c **** void __attribute__ ((weak)) __init_hardware(void)
 175:../Project_Settings/Startup_Code/startup.c **** {
 343              		.loc 1 175 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348 0000 80B4     		push	{r7}
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 7, -4
 351 0002 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 176:../Project_Settings/Startup_Code/startup.c **** 
 177:../Project_Settings/Startup_Code/startup.c **** }
 353              		.loc 1 177 0
 354 0004 BD46     		mov	sp, r7
 355              		@ sp needed
 356 0006 5DF8047B 		ldr	r7, [sp], #4
 357 000a 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE3:
 361              		.section	.text.__init_user,"ax",%progbits
 362              		.align	2
 363              		.weak	__init_user
 364              		.thumb
 365              		.thumb_func
 367              	__init_user:
 368              	.LFB4:
 178:../Project_Settings/Startup_Code/startup.c **** 
 179:../Project_Settings/Startup_Code/startup.c **** void __attribute__ ((weak)) __init_user(void)
 180:../Project_Settings/Startup_Code/startup.c **** {
 369              		.loc 1 180 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 181:../Project_Settings/Startup_Code/startup.c **** 
 182:../Project_Settings/Startup_Code/startup.c **** }
 379              		.loc 1 182 0
 380 0004 BD46     		mov	sp, r7
 381              		@ sp needed
 382 0006 5DF8047B 		ldr	r7, [sp], #4
 383 000a 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE4:
 387              		.section	.text.__iar_program_start,"ax",%progbits
 388              		.align	2
 389              		.global	__iar_program_start
 390              		.thumb
 391              		.thumb_func
 393              	__iar_program_start:
 394              	.LFB5:
 183:../Project_Settings/Startup_Code/startup.c **** 
 184:../Project_Settings/Startup_Code/startup.c **** 
 185:../Project_Settings/Startup_Code/startup.c **** /* To match iar debugger expectation */
 186:../Project_Settings/Startup_Code/startup.c **** void __iar_program_start(void);
 187:../Project_Settings/Startup_Code/startup.c **** void __thumb_startup(void);
 188:../Project_Settings/Startup_Code/startup.c **** void __iar_program_start()
 189:../Project_Settings/Startup_Code/startup.c **** {
 395              		.loc 1 189 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 190:../Project_Settings/Startup_Code/startup.c **** 	__thumb_startup();
 405              		.loc 1 190 0
 406 0004 FFF7FEFF 		bl	__thumb_startup
 191:../Project_Settings/Startup_Code/startup.c **** }
 407              		.loc 1 191 0
 408 0008 80BD     		pop	{r7, pc}
 409              		.cfi_endproc
 410              	.LFE5:
 412 000a 00BF     		.section	.text.__thumb_startup,"ax",%progbits
 413              		.align	2
 414              		.global	__thumb_startup
 415              		.thumb
 416              		.thumb_func
 418              	__thumb_startup:
 419              	.LFB6:
 192:../Project_Settings/Startup_Code/startup.c **** 
 193:../Project_Settings/Startup_Code/startup.c **** __attribute__((naked)) void __thumb_startup(void)
 194:../Project_Settings/Startup_Code/startup.c **** {
 420              		.loc 1 194 0
 421              		.cfi_startproc
 422              		@ Naked Function: prologue and epilogue provided by programmer.
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 195:../Project_Settings/Startup_Code/startup.c **** int addr = (int)__SP_INIT;
 425              		.loc 1 195 0
 426 0000 0B4C     		ldr	r4, .L22
 196:../Project_Settings/Startup_Code/startup.c **** 
 197:../Project_Settings/Startup_Code/startup.c ****     /* setup the stack before we attempt anything else
 198:../Project_Settings/Startup_Code/startup.c ****        skip stack setup if __SP_INIT is 0
 199:../Project_Settings/Startup_Code/startup.c ****        assume sp is already setup. */
 200:../Project_Settings/Startup_Code/startup.c ****     __asm (
 427              		.loc 1 200 0
 428              	@ 200 "../Project_Settings/Startup_Code/startup.c" 1
 429 0002 2046     		mov  r0,r4
 430 0004 0028     		cmp  r0,#0
 431 0006 00F00880 		beq  skip_sp
 432 000a 8546     		mov  sp,r0
 433 000c 81B0     		sub  sp,#4
 434 000e 4FF00000 		mov  r0,#0
 435 0012 6FEA0000 		mvn  r0,r0
 436 0016 0090     		str  r0,[sp,#0]
 437 0018 01B0     		add  sp,#4
 438              		skip_sp:
 439              		
 440              	@ 0 "" 2
 201:../Project_Settings/Startup_Code/startup.c ****     "mov  r0,%0\n\t"
 202:../Project_Settings/Startup_Code/startup.c ****     "cmp  r0,#0\n\t"
 203:../Project_Settings/Startup_Code/startup.c ****     "beq  skip_sp\n\t"
 204:../Project_Settings/Startup_Code/startup.c ****     "mov  sp,r0\n\t"
 205:../Project_Settings/Startup_Code/startup.c ****     "sub  sp,#4\n\t"
 206:../Project_Settings/Startup_Code/startup.c ****     "mov  r0,#0\n\t"
 207:../Project_Settings/Startup_Code/startup.c ****     "mvn  r0,r0\n\t"
 208:../Project_Settings/Startup_Code/startup.c ****     "str  r0,[sp,#0]\n\t"
 209:../Project_Settings/Startup_Code/startup.c ****     "add  sp,#4\n\t"
 210:../Project_Settings/Startup_Code/startup.c ****     "skip_sp:\n\t"
 211:../Project_Settings/Startup_Code/startup.c ****     ::"r"(addr));
 212:../Project_Settings/Startup_Code/startup.c **** 
 213:../Project_Settings/Startup_Code/startup.c ****     /* Setup registers */
 214:../Project_Settings/Startup_Code/startup.c ****     __init_registers();
 441              		.loc 1 214 0
 442              		.thumb
 443 001a FFF7FEFF 		bl	__init_registers
 215:../Project_Settings/Startup_Code/startup.c ****     
 216:../Project_Settings/Startup_Code/startup.c ****     /* setup hardware */
 217:../Project_Settings/Startup_Code/startup.c ****     __init_hardware();
 444              		.loc 1 217 0
 445 001e FFF7FEFF 		bl	__init_hardware
 218:../Project_Settings/Startup_Code/startup.c ****     
 219:../Project_Settings/Startup_Code/startup.c ****     /* SUPPORT_ROM_TO_RAM */
 220:../Project_Settings/Startup_Code/startup.c ****     __copy_rom_sections_to_ram();
 446              		.loc 1 220 0
 447 0022 FFF7FEFF 		bl	__copy_rom_sections_to_ram
 221:../Project_Settings/Startup_Code/startup.c ****     
 222:../Project_Settings/Startup_Code/startup.c ****     /* initializations before main, user specific */
 223:../Project_Settings/Startup_Code/startup.c ****     __init_user();
 448              		.loc 1 223 0
 449 0026 FFF7FEFF 		bl	__init_user
 224:../Project_Settings/Startup_Code/startup.c **** 
 225:../Project_Settings/Startup_Code/startup.c **** #ifndef __ATOLLIC__
 226:../Project_Settings/Startup_Code/startup.c ****     _start();
 450              		.loc 1 226 0
 451 002a FFF7FEFF 		bl	_start
 452              	.L21:
 227:../Project_Settings/Startup_Code/startup.c **** #else
 228:../Project_Settings/Startup_Code/startup.c ****     /* zero-fill the .bss section */
 229:../Project_Settings/Startup_Code/startup.c ****     zero_fill_bss();
 230:../Project_Settings/Startup_Code/startup.c ****     /* Run static constructors */
 231:../Project_Settings/Startup_Code/startup.c ****     __libc_init_array();
 232:../Project_Settings/Startup_Code/startup.c ****     main();
 233:../Project_Settings/Startup_Code/startup.c **** #endif
 234:../Project_Settings/Startup_Code/startup.c **** 
 235:../Project_Settings/Startup_Code/startup.c ****     /*	should never get here */
 236:../Project_Settings/Startup_Code/startup.c ****     while (1);
 453              		.loc 1 236 0 discriminator 1
 454 002e FEE7     		b	.L21
 455              	.L23:
 456              		.align	2
 457              	.L22:
 458 0030 00000000 		.word	__SP_INIT
 459              		.cfi_endproc
 460              	.LFE6:
 462              		.weak	__S_romp
 463              		.text
 464              	.Letext0:
 465              		.file 2 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 466              		.file 3 "c:\\freescale\\kds_v3\\toolchain\\arm-none-eabi\\include\\stdint.h"
 467              		.file 4 "C:/INTRO_HS18/IntroAronAlex/TEAM_Robot/Static_Code/IO_Map/MK22F12.h"
DEFINED SYMBOLS
                            *ABS*:00000000 startup.c
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:21     .text.__copy_rom_section:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:25     .text.__copy_rom_section:00000000 __copy_rom_section
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:189    .text.__copy_rom_sections_to_ram:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:193    .text.__copy_rom_sections_to_ram:00000000 __copy_rom_sections_to_ram
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:299    .text.__copy_rom_sections_to_ram:00000098 $d
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:304    .text.__init_registers:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:309    .text.__init_registers:00000000 __init_registers
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:336    .text.__init_hardware:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:341    .text.__init_hardware:00000000 __init_hardware
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:362    .text.__init_user:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:367    .text.__init_user:00000000 __init_user
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:388    .text.__iar_program_start:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:393    .text.__iar_program_start:00000000 __iar_program_start
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:418    .text.__thumb_startup:00000000 __thumb_startup
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:413    .text.__thumb_startup:00000000 $t
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:438    .text.__thumb_startup:0000001a skip_sp
C:\Users\Aron\AppData\Local\Temp\ccnZfyYS.s:458    .text.__thumb_startup:00000030 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.22dcf9ce9babd46e5ea858ea4400d115
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.53.a73f7e963d962393b7f9086194931e4a
                           .group:00000000 wm4.MK22F12.h.59.586d012afb1f8a2dc667b235f0616ee6
                           .group:00000000 wm4.stdint.h.10.d0f8e374834fcfc2e296d5d5fe82f02a
                           .group:00000000 wm4.MK22F12.h.71.cfd37d29ae6cd26a2ee723bf2c0c4294

UNDEFINED SYMBOLS
__S_romp
_start
__SP_INIT
